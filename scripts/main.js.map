{"version":3,"sources":["src/_scripts/node_modules/browser-pack/_prelude.js","src/_scripts/node_modules/jquery/dist/jquery.js","src/_scripts/node_modules/three/three.js","src/_scripts/src/_scripts/main.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","global","factory","document","w","window","this","noGlobal","DOMEval","doc","script","createElement","text","head","appendChild","parentNode","removeChild","isArrayLike","obj","type","jQuery","isWindow","winnow","elements","qualifier","not","isFunction","grep","elem","nodeType","indexOf","risSimple","test","filter","sibling","cur","dir","createOptions","options","object","each","match","rnothtmlwhite","_","flag","Identity","v","Thrower","ex","adoptValue","value","resolve","reject","method","promise","done","fail","then","undefined","completed","removeEventListener","ready","Data","expando","uid","getData","data","rbrace","JSON","parse","dataAttr","key","name","replace","rmultiDash","toLowerCase","getAttribute","dataUser","set","adjustCSS","prop","valueParts","tween","adjusted","scale","maxIterations","currentValue","css","initial","unit","cssNumber","initialInUnit","rcssNum","exec","style","start","end","getDefaultDisplay","temp","ownerDocument","nodeName","display","defaultDisplayMap","body","showHide","show","values","index","dataPriv","get","isHiddenWithinTree","getAll","context","tag","ret","getElementsByTagName","querySelectorAll","merge","setGlobalEval","elems","refElements","l","buildFragment","scripts","selection","ignored","tmp","wrap","contains","j","fragment","createDocumentFragment","nodes","rhtml","rtagName","wrapMap","_default","innerHTML","htmlPrefilter","lastChild","childNodes","firstChild","textContent","push","createTextNode","inArray","rscriptType","returnTrue","returnFalse","safeActiveElement","activeElement","err","on","types","selector","fn","one","origFn","event","off","apply","arguments","guid","add","manipulationTarget","content","disableScript","restoreScript","rscriptTypeMasked","removeAttribute","cloneCopyEvent","src","dest","pdataOld","pdataCur","udataOld","udataCur","events","hasData","access","handle","extend","fixInput","rcheckableType","checked","defaultValue","domManip","collection","args","callback","concat","first","hasScripts","node","iNoClone","support","checkClone","rchecked","self","eq","html","map","clone","_evalUrl","rcleanScript","remove","keepData","cleanData","curCSS","computed","width","minWidth","maxWidth","getStyles","getPropertyValue","pixelMarginRight","rnumnonpx","rmargin","addGetHookIf","conditionFn","hookFn","vendorPropName","emptyStyle","capName","toUpperCase","slice","cssPrefixes","setPositiveNumber","subtract","matches","Math","max","augmentWidthOrHeight","extra","isBorderBox","styles","val","cssExpand","getWidthOrHeight","valueIsBorderBox","getClientRects","getBoundingClientRect","boxSizingReliable","parseFloat","Tween","easing","prototype","init","raf","timerId","requestAnimationFrame","fx","tick","createFxNow","setTimeout","fxNow","now","genFx","includeWidth","which","attrs","height","opacity","createTween","animation","Animation","tweeners","defaultPrefilter","props","opts","toggle","hooks","oldfire","propTween","restoreDisplay","isBox","anim","orig","hidden","dataShow","queue","_queueHooks","unqueued","empty","fire","always","rfxtypes","isEmptyObject","overflow","overflowX","overflowY","propFilter","specialEasing","camelCase","isArray","cssHooks","expand","properties","result","stopped","prefilters","deferred","Deferred","currentTime","remaining","startTime","duration","percent","tweens","run","notifyWith","resolveWith","originalProperties","originalOptions","stop","gotoEnd","rejectWith","proxy","timer","progress","complete","stripAndCollapse","tokens","join","getClass","buildParams","prefix","traditional","rbracket","addToPrefiltersOrTransports","structure","dataTypeExpression","func","dataType","dataTypes","unshift","inspectPrefiltersOrTransports","jqXHR","inspect","selected","inspected","prefilterOrFactory","dataTypeOrTransport","seekingTransport","transports","ajaxExtend","target","deep","flatOptions","ajaxSettings","ajaxHandleResponses","s","responses","ct","finalDataType","firstDataType","contents","shift","mimeType","getResponseHeader","converters","ajaxConvert","response","isSuccess","conv2","current","conv","prev","responseFields","dataFilter","split","throws","state","error","getWindow","defaultView","arr","getProto","Object","getPrototypeOf","class2type","toString","hasOwn","hasOwnProperty","fnToString","ObjectFunctionString","version","rtrim","rmsPrefix","rdashAlpha","fcamelCase","all","letter","jquery","constructor","toArray","num","pushStack","prevObject","last","len","sort","splice","copy","copyIsArray","isPlainObject","random","isReady","msg","noop","Array","isNumeric","isNaN","proto","Ctor","globalEval","string","trim","makeArray","results","second","invert","callbackInverse","callbackExpect","arg","Date","Symbol","iterator","Sizzle","seed","m","nid","groups","newSelector","newContext","preferredDoc","setDocument","documentIsHTML","rquickExpr","getElementById","id","getElementsByClassName","qsa","compilerCache","rbuggyQSA","rcssescape","fcssescape","setAttribute","tokenize","toSelector","rsibling","testContext","qsaError","select","createCache","cache","keys","Expr","cacheLength","markFunction","assert","el","addHandle","handler","attrHandle","siblingCheck","b","diff","sourceIndex","nextSibling","createInputPseudo","createButtonPseudo","createDisabledPseudo","disabled","isDisabled","disabledAncestor","createPositionalPseudo","argument","matchIndexes","setFilters","addCombinator","matcher","combinator","base","skip","next","checkNonElements","doneName","xml","oldCache","uniqueCache","outerCache","newCache","dirruns","uniqueID","elementMatcher","matchers","multipleContexts","contexts","condense","unmatched","newUnmatched","mapped","setMatcher","preFilter","postFilter","postFinder","postSelector","preMap","postMap","preexisting","matcherIn","matcherOut","matcherFromTokens","checkContext","leadingRelative","relative","implicitRelative","matchContext","matchAnyContext","outermostContext","matcherFromGroupMatchers","elementMatchers","setMatchers","bySet","byElement","superMatcher","outermost","matchedCount","setMatched","contextBackup","find","dirrunsUnique","pop","uniqueSort","getText","isXML","compile","sortInput","hasDuplicate","docElem","rbuggyMatches","classCache","tokenCache","sortOrder","push_native","list","booleans","whitespace","identifier","attributes","pseudos","rwhitespace","RegExp","rcomma","rcombinators","rattributeQuotes","rpseudo","ridentifier","matchExpr","ID","CLASS","TAG","ATTR","PSEUDO","CHILD","bool","needsContext","rinputs","rheader","rnative","runescape","funescape","escaped","escapedWhitespace","high","String","fromCharCode","ch","asCodePoint","charCodeAt","unloadHandler","els","documentElement","hasCompare","subWindow","top","addEventListener","attachEvent","className","createComment","getById","getElementsByName","attrId","getAttributeNode","input","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","msMatchesSelector","disconnectedMatch","compareDocumentPosition","adown","bup","compare","sortDetached","aup","ap","bp","expr","attr","specified","escape","sel","duplicates","detectDuplicates","sortStable","nodeValue","selectors","createPseudo",">"," ","+","~","excess","unquoted","nodeNameSelector","pattern","operator","check","what","simple","forward","ofType","nodeIndex","parent","useCache","pseudo","idx","matched","has","innerText","lang","elemLang","hash","location","root","focus","hasFocus","href","tabIndex","enabled","selectedIndex","header","button","even","odd","lt","gt","radio","checkbox","file","password","image","submit","reset","filters","parseOnly","soFar","preFilters","cached","token","compiled","unique","isXMLDoc","escapeSelector","until","truncate","is","siblings","rneedsContext","rsingleTag","rootjQuery","parseHTML","rparentsprev","guaranteedUnique","children","targets","closest","prevAll","addBack","parents","parentsUntil","nextAll","nextUntil","prevUntil","contentDocument","reverse","Callbacks","firing","memory","fired","locked","firingIndex","once","stopOnFalse","disable","lock","fireWith","tuples","catch","pipe","fns","newDefer","tuple","returned","notify","onFulfilled","onRejected","onProgress","depth","special","that","mightThrow","maxDepth","TypeError","process","exceptionHook","stackTrace","getStackHook","stateString","when","singleValue","resolveContexts","resolveValues","master","updateFunc","rerrorNames","stack","console","warn","message","readyException","readyList","readyWait","holdReady","hold","wait","readyState","doScroll","chainable","emptyGet","raw","bulk","acceptData","owner","defineProperty","configurable","removeData","_data","_removeData","dequeue","startLength","setter","clearQueue","count","defer","pnum","source","swap","old","hide","option","thead","col","tr","td","optgroup","tbody","tfoot","colgroup","caption","th","div","cloneNode","noCloneChecked","rkeyEvent","rmouseEvent","rtypenamespace","handleObjIn","eventHandle","handleObj","handlers","namespaces","origType","elemData","triggered","dispatch","delegateType","bindType","namespace","delegateCount","setup","mappedTypes","origCount","teardown","removeEvent","nativeEvent","handlerQueue","fix","delegateTarget","preDispatch","isPropagationStopped","currentTarget","isImmediatePropagationStopped","rnamespace","preventDefault","stopPropagation","postDispatch","matchedHandlers","matchedSelectors","addProp","hook","Event","enumerable","originalEvent","writable","load","noBubble","trigger","blur","click","beforeunload","returnValue","isDefaultPrevented","defaultPrevented","relatedTarget","timeStamp","isSimulated","stopImmediatePropagation","altKey","bubbles","cancelable","changedTouches","ctrlKey","detail","eventPhase","metaKey","pageX","pageY","shiftKey","view","char","charCode","keyCode","buttons","clientX","clientY","offsetX","offsetY","pointerId","pointerType","screenX","screenY","targetTouches","toElement","touches","mouseenter","mouseleave","pointerenter","pointerleave","related","rxhtmlTag","rnoInnerhtml","dataAndEvents","deepDataAndEvents","srcElements","destElements","inPage","detach","append","prepend","insertBefore","before","after","replaceWith","replaceChild","appendTo","prependTo","insertAfter","replaceAll","original","insert","opener","getComputedStyle","computeStyleTests","cssText","container","divStyle","pixelPositionVal","reliableMarginLeftVal","marginLeft","boxSizingReliableVal","marginRight","pixelMarginRightVal","backgroundClip","clearCloneStyle","pixelPosition","reliableMarginLeft","rdisplayswap","cssShow","position","visibility","cssNormalTransform","letterSpacing","fontWeight","animationIterationCount","columnCount","fillOpacity","flexGrow","flexShrink","lineHeight","order","orphans","widows","zIndex","zoom","cssProps","float","origName","isFinite","left","margin","padding","border","suffix","expanded","parts","propHooks","eased","pos","step","scrollTop","scrollLeft","linear","swing","cos","PI","rrun","*","tweener","prefilter","speed","opt","speeds","fadeTo","to","animate","optall","doAnimation","finish","stopQueue","timers","cssFn","slideDown","slideUp","slideToggle","fadeIn","fadeOut","fadeToggle","interval","setInterval","cancelAnimationFrame","clearInterval","slow","fast","delay","time","timeout","clearTimeout","checkOn","optSelected","radioValue","boolHook","removeAttr","nType","attrHooks","attrNames","getter","lowercaseName","rfocusable","rclickable","removeProp","propFix","tabindex","parseInt","for","class","addClass","classes","curValue","clazz","finalValue","removeClass","toggleClass","stateVal","classNames","hasClass","rreturn","valHooks","optionSet","rfocusMorph","onlyHandlers","bubbleType","ontype","eventPath","isTrigger","parentWindow","simulate","triggerHandler","hover","fnOver","fnOut","focusin","attaches","nonce","rquery","parseXML","DOMParser","parseFromString","rCRLF","rsubmitterTypes","rsubmittable","param","valueOrFunction","encodeURIComponent","serialize","serializeArray","r20","rhash","rantiCache","rheaders","rlocalProtocol","rnoContent","rprotocol","allTypes","originAnchor","active","lastModified","etag","url","isLocal","protocol","processData","async","contentType","accepts","json","* text","text html","text json","text xml","ajaxSetup","settings","ajaxPrefilter","ajaxTransport","ajax","status","nativeStatusText","headers","success","modified","statusText","timeoutTimer","transport","responseHeadersString","ifModified","cacheURL","callbackContext","statusCode","fireGlobals","globalEventContext","completeDeferred","responseHeaders","urlAnchor","uncached","requestHeaders","requestHeadersNames","strAbort","getAllResponseHeaders","setRequestHeader","overrideMimeType","abort","finalText","crossDomain","host","hasContent","beforeSend","send","getJSON","getScript","wrapAll","firstElementChild","wrapInner","unwrap","visible","offsetWidth","offsetHeight","xhr","XMLHttpRequest","xhrSuccessStatus","0","1223","xhrSupported","cors","errorCallback","open","username","xhrFields","onload","onerror","onabort","onreadystatechange","responseType","responseText","binary","text script","charset","scriptCharset","evt","oldCallbacks","rjsonp","jsonp","jsonpCallback","originalSettings","callbackName","overwritten","responseContainer","jsonProp","createHTMLDocument","implementation","keepScripts","parsed","params","animated","offset","setOffset","curPosition","curLeft","curCSSTop","curTop","curOffset","curCSSLeft","calculatePosition","curElem","using","win","rect","pageYOffset","clientTop","pageXOffset","clientLeft","offsetParent","parentOffset","scrollTo","Height","Width","","defaultExtra","funcName","bind","unbind","delegate","undelegate","parseJSON","define","amd","_jQuery","_$","$","noConflict","THREE","REVISION","sign","x","log","MOUSE","LEFT","MIDDLE","RIGHT","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","FrontFaceDirectionCW","FrontFaceDirectionCCW","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","FrontSide","BackSide","DoubleSide","NoShading","FlatShading","SmoothShading","NoColors","FaceColors","VertexColors","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","MultiplyOperation","MixOperation","AddOperation","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipMapNearestFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","RGBEFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","Projector","projectVector","vector","camera","project","unprojectVector","unproject","pickingRay","CanvasRenderer","domElement","clear","render","setClearColor","setSize","Color","color","setRGB","g","setHex","setStyle","hex","floor","setHSL","h","hue2rgb","q","min","ColorKeywords","copyGammaToLinear","gammaFactor","pow","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","sqrt","getHex","getHexString","getHSL","optionalTarget","hue","saturation","hsl","lightness","delta","getStyle","offsetHSL","addColors","color1","color2","addScalar","multiply","multiplyScalar","lerp","alpha","equals","fromArray","array","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","Quaternion","y","z","_x","_y","_z","_w","onChangeCallback","quaternion","setFromEuler","euler","update","Euler","c1","c2","c3","s1","sin","s2","s3","setFromAxisAngle","axis","angle","halfAngle","setFromRotationMatrix","te","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","setFromUnitVectors","v1","EPS","vFrom","vTo","Vector3","dot","abs","crossVectors","normalize","inverse","conjugate","lengthSq","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","multiplyVector3","applyQuaternion","slerp","qb","cosHalfTheta","halfTheta","acos","sinHalfTheta","ratioA","ratioB","onChange","qa","qm","Vector2","setX","setY","setComponent","getComponent","addVectors","sub","subVectors","subScalar","divide","divideScalar","scalar","invScalar","clamp","clampScalar","minVal","maxVal","ceil","round","roundToZero","negate","distanceTo","distanceToSquared","dx","dy","setLength","oldLength","lerpVectors","v2","fromAttribute","attribute","itemSize","setZ","multiplyVectors","applyEuler","applyAxisAngle","applyMatrix3","applyMatrix4","applyProjection","d","qx","qy","qz","qw","ix","iy","iz","iw","matrix","Matrix4","multiplyMatrices","projectionMatrix","getInverse","matrixWorld","transformDirection","lengthManhattan","cross","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","reflect","normal","angleTo","theta","dz","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","setFromMatrixPosition","getScaleFromMatrix","setFromMatrixScale","getColumnFromMatrix","setFromMatrixColumn","sx","sy","sz","me","Vector4","setW","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","xx","yy","zz","xy","xz","yz","_order","DefaultOrder","RotationOrders","asin","atan2","setFromQuaternion","makeRotationFromQuaternion","setFromVector3","reorder","newOrder","toVector3","optionalResult","Line3","line","center","distanceSq","distance","at","closestPointToPointParameter","startP","startEnd","point","clampToLine","startEnd2","startEnd_startP","closestPointToPoint","Box2","Infinity","setFromPoints","points","makeEmpty","il","expandByPoint","setFromCenterAndSize","size","halfSize","box","expandByVector","expandByScalar","containsPoint","containsBox","getParameter","isIntersectionBox","clampPoint","distanceToPoint","clampedPoint","intersect","union","translate","Box3","setFromObject","scope","updateMatrixWorld","traverse","geometry","Geometry","vertices","BufferGeometry","positions","getBoundingSphere","Sphere","radius","Matrix3","Float32Array","n11","n12","n13","n21","n22","n23","n31","n32","n33","identity","multiplyVector3Array","applyToVector3Array","determinant","throwOnInvertible","det","transpose","flattenToArrayOffset","getNormalMatrix","transposeIntoArray","n14","n24","n34","n41","n42","n43","n44","extractPosition","copyPosition","extractBasis","xAxis","yAxis","zAxis","makeBasis","extractRotation","scaleX","scaleY","scaleZ","makeRotationFromEuler","ae","af","be","bf","ce","cf","de","df","ac","ad","bc","bd","setRotationFromQuaternion","x2","y2","z2","wx","wy","wz","lookAt","eye","up","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","multiplyToArray","multiplyVector4","rotateAxis","crossVector","getPosition","setPosition","rotateX","rotateY","rotateZ","rotateByAxis","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","tx","ty","makeScale","compose","decompose","invSX","invSY","invSZ","makeFrustum","right","bottom","near","far","makePerspective","fov","aspect","ymax","degToRad","ymin","xmin","xmax","makeOrthographic","Ray","origin","direction","ray","recast","directionDistance","distanceSqToSegment","segCenter","segDir","v0","optionalPointOnRay","optionalPointOnSegment","s0","sqrDist","extDet","segExtent","a01","b0","b1","invDet","isIntersectionSphere","sphere","intersectSphere","tca","d2","radius2","thc","t0","t1","isIntersectionPlane","plane","distToPoint","denominator","distanceToPlane","constant","intersectPlane","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","edge1","edge2","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","matrix4","optionalCenter","maxRadiusSq","intersectsSphere","radiusSum","deltaLengthSq","getBoundingBox","Frustum","p0","p1","p2","p3","p4","p5","planes","Plane","frustum","setFromMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","setComponents","intersectsObject","boundingSphere","computeBoundingSphere","negRadius","intersectsBox","d1","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","orthoPoint","perpendicularMagnitude","isIntersectionLine","startSign","endSign","intersectLine","coplanarPoint","m1","optionalNormalMatrix","normalMatrix","newNormal","newCoplanarPoint","generateUUID","chars","uuid","rnd","clampBottom","mapLinear","a1","a2","b2","smoothstep","smootherstep","random16","randInt","low","randFloat","randFloatSpread","range","degreeToRadiansFactor","degrees","radToDeg","radianToDegreesFactor","radians","isPowerOfTwo","nextPowerOfTwo","Spline","interpolate","t2","t3","intPoint","weight","w2","w3","pa","pb","pc","pd","v3","initFromArray","getPoint","k","getControlPointsArray","coords","getLength","nSubDivisions","nSamples","oldIntPoint","oldPosition","tmpVec","chunkLengths","totalLength","chunks","total","reparametrizeByArcLength","samplingCoef","indexCurrent","indexNext","realDistance","sampling","newpoints","sl","Triangle","resultLengthSq","barycoordFromPoint","dot00","dot01","dot02","dot11","dot12","denom","invDenom","setFromPointsAndIndices","i0","i1","i2","triangle","area","midpoint","Clock","autoStart","oldTime","elapsedTime","running","performance","getElapsedTime","getDelta","newTime","EventDispatcher","hasEventListener","dispatchEvent","listener","_listeners","listeners","listenerArray","Raycaster","Sprite","Mesh","PointCloud","threshold","LOD","Line","descSort","intersectObject","raycaster","intersects","recursive","raycast","precision","linePrecision","setFromCamera","PerspectiveCamera","OrthographicCamera","intersectObjects","objects","Object3D","Object3DIdCount","DefaultUp","rotation","onRotationChange","onQuaternionChange","defineProperties","rotationAutoUpdate","matrixAutoUpdate","matrixWorldNeedsUpdate","castShadow","receiveShadow","frustumCulled","renderOrder","userData","eulerOrder","useQuaternion","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","rotateOnAxis","q1","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","getChildByName","getObjectByName","getObjectById","getObjectByProperty","child","getWorldPosition","getWorldQuaternion","getWorldRotation","getWorldScale","getWorldDirection","traverseVisible","traverseAncestors","updateMatrix","force","toJSON","output","metadata","generator","geometries","parseGeometry","materials","parseMaterial","material","parseObject","stringify","AmbientLight","DirectionalLight","intensity","PointLight","decay","SpotLight","exponent","HemisphereLight","groundColor","mode","Face3","materialIndex","vertexNormals","vertexColors","vertexTangents","face","Face4","BufferAttribute","needsUpdate","copyAt","index1","index2","setXY","setXYZ","setXYZW","Int8Attribute","Uint8Attribute","Uint8ClampedAttribute","Int16Attribute","Uint16Attribute","Int32Attribute","Uint32Attribute","Float32Attribute","Float64Attribute","DynamicBufferAttribute","updateRange","create","GeometryIdCount","attributesKeys","drawcalls","offsets","boundingBox","addAttribute","addDrawCall","indexOffset","computeBoundingBox","fromGeometry","faces","faceVertexUvs","hasFaceVertexUv","hasFaceVertexNormals","normals","colors","uvs","i3","na","nb","nc","fc","vca","vcb","vcc","uva","uvb","uvc","bb","computeFaceNormals","computeVertexNormals","vA","vB","vC","pA","pB","pC","cb","ab","indices","jl","normalizeNormals","computeTangents","handleTriangle","uvA","uvB","uvC","x1","y1","z1","sdir","tdir","tan1","tan2","handleVertex","n2","tmp2","tangents","uv","nVertices","tangent","iA","iB","iC","computeOffsets","facesCount","sortedIndices","Uint16Array","indexPtr","vertexPtr","duplicatedVertices","newVerticeMaps","faceVertices","Int32Array","vertexMap","revVertexMap","findex","vo","vid","faceMax","new_offset","new_vid","reorderBuffers","attribute1","attributeArray1","attribute2","attributeArray2","attributeSize","indexBuffer","indexMap","vertexCount","sortedAttributes","sourceArray","attrArray","attrSize","sortedAttr","numItems","sourceAttr","dispose","morphTargets","morphColors","morphNormals","skinWeights","skinIndices","lineDistances","hasTangents","dynamic","verticesNeedUpdate","elementsNeedUpdate","uvsNeedUpdate","normalsNeedUpdate","tangentsNeedUpdate","colorsNeedUpdate","lineDistancesNeedUpdate","groupsNeedUpdate","vertex","fromBufferGeometry","tempNormals","tempUVs","addFace","drawcall","fl","areaWeighted","vl","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","faceNormal","dstNormalsFace","dstNormalsVertex","ua","ub","uc","vertexIndex","faceIndex","computeLineDistances","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","uvs1","uvs2","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","uvCopy","mergeMesh","mesh","mergeVertices","verticesMap","changes","precisionPoints","faceIndicesToRemove","dupIndex","setBit","getNormalIndex","normalsHash","getColorIndex","colorsHash","getUvIndex","uvsHash","parameters","hasMaterial","hasFaceUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","uvsCopy","kl","Camera","matrixWorldInverse","CubeCamera","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","renderTarget","WebGLRenderTargetCube","format","magFilter","minFilter","updateCubeMap","renderer","scene","generateMipmaps","activeCubeFace","updateProjectionMatrix","cx","cy","setLens","focalLength","frameHeight","atan","setViewOffset","fullWidth","fullHeight","Light","light","AreaLight","constantAttenuation","linearAttenuation","quadraticAttenuation","onlyShadow","shadowCameraNear","shadowCameraFar","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowBias","shadowDarkness","shadowMapWidth","shadowMapHeight","shadowCascade","shadowCascadeOffset","shadowCascadeCount","shadowCascadeBias","shadowCascadeWidth","shadowCascadeHeight","shadowCascadeNearZ","shadowCascadeFarZ","shadowCascadeArray","shadowMap","shadowMapSize","shadowCamera","shadowMatrix","skyColor","shadowCameraFov","Cache","files","Loader","showStatus","statusDomElement","addStatusElement","imageLoader","ImageLoader","onLoadStart","onLoadProgress","onLoadComplete","crossOrigin","fontSize","textAlign","background","updateProgress","loaded","toFixed","extractUrlBase","initMaterials","texturePath","createMaterial","needsTangents","ShaderMaterial","nearest_pow2","LN2","create_texture","where","sourceFile","repeat","anisotropy","texture","fullPath","loader","Handlers","Texture","canvas","getContext","drawImage","wrapS","wrapT","mirror","rgb2hex","rgb","mtype","mpars","lightMap","normalMap","bumpMap","wireframe","shading","blending","transparent","depthTest","depthWrite","flipSided","side","doubleSided","colorDiffuse","DbgColor","colorSpecular","specular","colorEmissive","emissive","transparency","specularCoef","shininess","mapDiffuse","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","mapLight","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","mapBump","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","mapNormal","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","mapSpecular","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","mapAlpha","mapAlphaRepeat","mapAlphaOffset","mapAlphaWrap","mapAlphaAnisotropy","mapBumpScale","bumpScale","mapNormalFactor","normalScale","DbgName","regex","XHRLoader","manager","DefaultLoadingManager","onLoad","onError","request","itemEnd","itemStart","setResponseType","setCrossOrigin","JSONLoader","withCredentials","loadAjaxJSON","callbackProgress","DONE","LOADING","HEADERS_RECEIVED","parseModel","isBitSet","fi","zLength","colorIndex","normalIndex","uvIndex","isQuad","faceA","faceB","uvLayer","nUvLayers","parseSkin","influencesPerVertex","bones","animations","parseMorphing","dstVertices","srcVertices","cl","dstColors","srcColors","LoadingManager","BufferGeometryLoader","typedArray","MaterialLoader","uniforms","vertexShader","fragmentShader","sizeAttenuation","ObjectLoader","substring","lastIndexOf","setTexturePath","parseGeometries","images","parseImages","textures","parseTextures","parseMaterials","geometryLoader","bufferGeometryLoader","widthSegments","heightSegments","BoxGeometry","depthSegments","CircleGeometry","segments","CylinderGeometry","radiusTop","radiusBottom","radialSegments","openEnded","SphereGeometry","phiStart","phiLength","thetaStart","thetaLength","IcosahedronGeometry","TorusGeometry","tube","tubularSegments","arc","TorusKnotGeometry","heightScale","getTexture","alphaMap","envMap","specularMap","loadImage","path","getGeometry","getMaterial","Scene","Group","TextureLoader","DataTextureLoader","BinaryTextureLoader","_parser","DataTexture","buffer","texData","mipmaps","mipmapCount","CompressedTextureLoader","CompressedTexture","loadTexture","texDatas","isCubemap","Material","MaterialIdCount","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","colorWrite","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","alphaTest","overdraw","_needsUpdate","setValues","newValue","Number","MeshBasicMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshNormalMaterial","MeshDepthMaterial","PointCloudMaterial","SpriteMaterial","LineBasicMaterial","linewidth","linecap","linejoin","fog","LineDashedMaterial","dashSize","gapSize","combine","reflectivity","refractionRatio","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","skinning","wrapAround","wrapRGB","metal","MeshFaceMaterial","ParticleBasicMaterial","ParticleSystemMaterial","defines","lights","defaultAttributeValues","uv2","index0AttributeName","UniformsUtils","RawShaderMaterial","mapping","TextureIdCount","DEFAULT_IMAGE","DEFAULT_MAPPING","premultiplyAlpha","flipY","unpackAlignment","onUpdate","CubeTexture","VideoTexture","video","HAVE_ENOUGH_DATA","inverseMatrix","localThreshold","testPoint","rayPointDistance","intersectPoint","distanceToRay","oi","ol","pointCount","ParticleSystem","LineStrip","LinePieces","precisionSq","vStart","vEnd","interSegment","interRay","distSq","offsetIndex","nbVertices","updateMorphTargets","morphTargetBase","morphTargetForcedOrder","morphTargetInfluences","morphTargetDictionary","ml","getMorphTargetIndexByName","intersectionPoint","isFaceMaterial","objectMaterials","morphInfluences","tl","influence","Bone","skin","Skeleton","boneInverses","useVertexTexture","identityMatrix","boneTextureWidth","boneTextureHeight","boneMatrices","boneTexture","calculateInverses","bl","pose","bone","offsetMatrix","SkinnedMesh","bindMode","bindMatrix","bindMatrixInverse","gbone","rotq","scl","normalizeSkinWeights","skeleton","sw","MorphAnimMesh","mirroredLoop","lastKeyframe","currentKeyframe","directionBackwards","setFrameRange","startKeyframe","endKeyframe","setDirectionForward","setDirectionBackward","parseAnimations","firstAnimation","morph","label","setAnimationLabel","playAnimation","fps","updateAnimation","frameTime","keyframe","mix","interpolateTargets","influences","addLevel","getObjectForDistance","matrixPosition","Particle","LensFlare","lensFlares","positionScreen","customUpdateCallback","updateLensFlares","flare","vecX","vecY","wantedRotation","overrideMaterial","autoUpdate","Fog","FogExp2","density","ShaderChunk","merged","uniforms_src","uniforms_dst","parameter_src","UniformsLib","common","diffuse","offsetRepeat","flipEnvMap","bump","normalmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","directionalLightDirection","directionalLightColor","hemisphereLightDirection","hemisphereLightSkyColor","hemisphereLightGroundColor","pointLightColor","pointLightPosition","pointLightDistance","pointLightDecay","spotLightColor","spotLightPosition","spotLightDirection","spotLightDistance","spotLightAngleCos","spotLightExponent","spotLightDecay","particle","psColor","shadowmap","ShaderLib","basic","lambert","phong","particle_basic","dashed","totalSize","mNear","mFar","cube","tCube","tFlip","equirect","tEquirect","depthRGBA","WebGLRenderer","createParticleBuffers","__webglVertexBuffer","_gl","createBuffer","__webglColorBuffer","_this","info","createLineBuffers","__webglLineDistanceBuffer","createMeshBuffers","geometryGroup","__webglNormalBuffer","__webglTangentBuffer","__webglUVBuffer","__webglUV2Buffer","__webglSkinIndicesBuffer","__webglSkinWeightsBuffer","__webglFaceBuffer","__webglLineBuffer","numMorphTargets","__webglMorphTargetsBuffers","numMorphNormals","__webglMorphNormalsBuffers","initCustomAttributes","nvertices","__webglCustomAttributesList","__webglInitialized","createUniqueBuffers","belongsToAttribute","initParticleBuffers","__vertexArray","__colorArray","__webglParticleCount","initLineBuffers","__lineDistanceArray","__webglLineCount","initMeshBuffers","faces3","ntris","nlines","getBufferMaterial","__normalArray","__uvArray","__uv2Array","__tangentArray","__skinIndexArray","__skinWeightArray","UintArray","extensions","Uint32Array","__typeArray","__faceArray","__lineArray","__morphTargetsArrays","__morphNormalsArrays","__webglFaceCount","originalAttribute","property","__original","__inittedArrays","materialNeedsFaceNormals","setParticleBuffers","hint","ca","cal","customAttribute","vertexArray","colorArray","dirtyVertices","dirtyColors","customAttributes","bindBuffer","ARRAY_BUFFER","bufferData","boundTo","setLineBuffers","dl","lineDistanceArray","dirtyLineDistances","setMeshBuffers","faceColor","n1","n3","sw1","sw2","sw3","si1","si2","si3","vn","uvi","uv2i","vk","vkl","vka","nka","chf","needsFaceNormals","offset_uv","offset_uv2","offset_face","offset_normal","offset_tangent","offset_line","offset_color","offset_skin","offset_morphTarget","offset_custom","uvArray","uv2Array","normalArray","tangentArray","skinIndexArray","skinWeightArray","morphTargetsArrays","morphNormalsArrays","faceArray","lineArray","dirtyElements","dirtyUvs","dirtyNormals","dirtyTangents","dirtyMorphTargets","morphTargetsNeedUpdate","chunk_faces3","obj_faces","obj_uvs","obj_uvs2","obj_skinIndices","obj_skinWeights","ELEMENT_ARRAY_BUFFER","pp","setupVertexAttributes","program","startIndex","geometryAttributes","programAttributes","programAttributesKeys","programAttribute","geometryAttribute","enableAttribute","vertexAttribPointer","FLOAT","vertexAttrib2fv","vertexAttrib3fv","disableUnusedAttributes","setupMorphTargets","numSupportedMorphTargets","__webglMorphTargetInfluences","activeInfluenceIndices","numericalSort","numSupportedMorphNormals","influenceIndex","uniform1fv","painterSortStable","reversePainterSortStable","projectObject","initObject","sprites","webglObjects","_webglObjects","_frustum","webglObject","unrollBufferMaterial","sortObjects","_vector3","_projScreenMatrix","renderObjects","renderList","setupMatrices","setMaterial","setMaterialFaces","renderBufferDirect","renderBuffer","renderObjectsImmediate","materialType","renderImmediateObject","unrollImmediateBufferMaterial","globject","opaque","transparentObjects","opaqueObjects","__webglInit","_modelViewMatrix","_normalMatrix","onObjectRemoved","onGeometryDispose","initGeometryGroups","__webglActive","addBuffer","geometryGroupsList","geometryGroups","ImmediateRenderObject","immediateRenderCallback","addBufferImmediate","_webglObjectsImmediate","makeGroups","usesFaceMaterial","groupHash","group","maxVerticesInGroup","hash_map","groupsList","counter","geometryGroupCounter","addBuffers","objlist","updateObject","bufferType","DYNAMIC_DRAW","STATIC_DRAW","bufferSubData","BYTES_PER_ELEMENT","subarray","customAttributesDirty","areCustomAttributesDirty","clearCustomAttributes","removeObject","removeInstances","initMaterial","onMaterialDispose","shaderID","shaderIDs","shader","__webglShader","maxLightCount","allocateLights","maxShadows","allocateShadows","maxBones","allocateBones","_precision","supportsVertexTextures","_supportsVertexTextures","envMapMode","useFog","fogExp","flatShading","logarithmicDepthBuffer","_logarithmicDepthBuffer","_supportsBoneTextures","maxMorphTargets","maxMorphNormals","maxDirLights","directional","maxPointLights","maxSpotLights","spot","maxHemiLights","hemi","shadowMapEnabled","shadowMapType","shadowMapDebug","shadowMapCascade","pl","_programs","programInfo","usedTimes","WebGLProgram","programs","uniformsList","setBlending","setDepthTest","setDepthWrite","setColorWrite","setPolygonOffset","setProgram","_usedTextureUnits","deallocateMaterial","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","_currentProgram","useProgram","_currentMaterialId","_currentCamera","uniformMatrix4fv","uniform1f","logDepthBufFC","cameraPosition","uniform3f","viewMatrix","textureUnit","getTextureUnit","uniform1i","setTexture","boneGlobalMatrices","refreshUniformsFog","_lightsNeedUpdate","setupLights","refreshUniformsLights","_lights","markUniformsLightsNeedsUpdate","refreshUniformsCommon","refreshUniformsLine","refreshUniformsDash","refreshUniformsParticle","refreshUniformsPhong","refreshUniformsLambert","_shadowPass","refreshUniformsShadow","loadUniformsGeneric","loadUniformsMatrices","modelMatrix","uvScaleMap","_canvas","ambient","distances","decays","directions","anglesCos","exponents","skyColors","groundColors","modelViewMatrix","uniformMatrix3fv","_maxTextures","uniform","uniform2f","uniform4f","uniform1iv","uniform3iv","uniform2fv","uniform3fv","uniform4fv","_array","setCubeTexture","setCubeTextureDynamic","setColorLinear","ll","zlights","dirColors","dirPositions","pointColors","pointPositions","pointDistances","pointDecays","spotColors","spotPositions","spotDistances","spotDirections","spotAnglesCos","spotExponents","spotDecays","hemiSkyColors","hemiGroundColors","hemiPositions","dirLength","pointLength","spotLength","hemiLength","dirCount","spotCount","hemiCount","dirOffset","pointOffset","spotOffset","hemiOffset","_direction","setTextureParameters","textureType","isImagePowerOfTwo","extension","texParameteri","TEXTURE_WRAP_S","paramThreeToGL","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","CLAMP_TO_EDGE","filterFallback","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","getMaxAnisotropy","clampToMaxSize","maxSize","slot","__webglTextureCube","onTextureDispose","createTexture","activeTexture","TEXTURE0","bindTexture","TEXTURE_CUBE_MAP","pixelStorei","UNPACK_FLIP_Y_WEBGL","isCompressed","isDataTexture","cubeImage","autoScaleCubemaps","_maxCubemapSize","glFormat","glType","mipmap","getCompressedTextureFormats","compressedTexImage2D","TEXTURE_CUBE_MAP_POSITIVE_X","texImage2D","generateMipmap","__webglTexture","setupFrameBuffer","framebuffer","textureTarget","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","setupRenderBuffer","renderbuffer","bindRenderbuffer","RENDERBUFFER","depthBuffer","stencilBuffer","renderbufferStorage","DEPTH_COMPONENT16","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL","DEPTH_STENCIL_ATTACHMENT","RGBA4","updateRenderTargetMipmap","TEXTURE_2D","NEAREST","LINEAR","REPEAT","MIRRORED_REPEAT","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","UNSIGNED_BYTE","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","BYTE","SHORT","UNSIGNED_SHORT","INT","UNSIGNED_INT","HALF_FLOAT_OES","ALPHA","RGB","RGBA","LUMINANCE","LUMINANCE_ALPHA","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","ZERO","ONE","SRC_COLOR","ONE_MINUS_SRC_COLOR","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","DST_ALPHA","ONE_MINUS_DST_ALPHA","DST_COLOR","ONE_MINUS_DST_COLOR","SRC_ALPHA_SATURATE","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","MIN_EXT","MAX_EXT","nVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","nVertexMatrices","dirLights","pointLights","spotLights","hemiLights","_context","pixelRatio","_alpha","_depth","_stencil","stencil","_antialias","antialias","_premultipliedAlpha","premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_clearColor","_clearAlpha","autoClear","autoClearColor","autoClearDepth","autoClearStencil","gammaInput","gammaOutput","shadowMapCullFace","calls","_currentFramebuffer","_currentGeometryProgram","_viewportX","_viewportY","_viewportWidth","_viewportHeight","_currentWidth","_currentHeight","resetGLState","setDefaultGLState","WebGLState","getShaderPrecisionFormat","rangeMin","rangeMax","WebGLExtensions","glClearColor","clearColor","clearDepth","clearStencil","enable","DEPTH_TEST","depthFunc","LEQUAL","frontFace","CCW","cullFace","BACK","CULL_FACE","BLEND","blendFunc","viewport","MAX_TEXTURE_IMAGE_UNITS","_maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","_maxTextureSize","MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","_vertexShaderPrecisionHighpFloat","VERTEX_SHADER","HIGH_FLOAT","_vertexShaderPrecisionMediumpFloat","MEDIUM_FLOAT","_fragmentShaderPrecisionHighpFloat","FRAGMENT_SHADER","_fragmentShaderPrecisionMediumpFloat","formats","COMPRESSED_TEXTURE_FORMATS","highpAvailable","mediumpAvailable","shadowMapPlugin","ShadowMapPlugin","spritePlugin","SpritePlugin","lensFlarePlugin","LensFlarePlugin","forceContextLoss","loseContext","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getPrecision","getPixelRatio","setPixelRatio","updateStyle","setViewport","setScissor","scissor","enableScissorTest","SCISSOR_TEST","getClearColor","getClearAlpha","setClearAlpha","bits","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","clearTarget","setRenderTarget","deallocateGeometry","deallocateTexture","onRenderTargetDispose","deallocateRenderTarget","deleteBuffers","buffers","deleteBuffer","deleteTexture","deleteFramebuffer","__webglFramebuffer","deleteRenderbuffer","__webglRenderbuffer","deleteProgram","newPrograms","renderBufferImmediate","initAttributes","hasPositions","hasNormals","hasUvs","__webglUvBuffer","hasColors","positionArray","nx","ny","nz","nax","nbx","ncx","nay","nby","ncy","naz","nbz","ncz","drawArrays","TRIANGLES","updateBuffers","wireframeBit","geometryProgram","LINES","drawElements","POINTS","LINE_STRIP","setLineWidth","skinIndex","skinWeight","lineDistance","forceClear","setFaceCulling","frontFaceDirection","CW","FRONT","FRONT_AND_BACK","setDoubleSided","setFlipSided","uploadTexture","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","isCube","isTargetPowerOfTwo","createFramebuffer","createRenderbuffer","shareDepthFrom","vx","vy","readRenderTargetPixels","WebGLRenderTarget","restore","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","addPrePlugin","addPostPlugin","updateShadowMap","gl","getExtension","programIdCount","generateDefines","chunk","cacheUniformLocations","identifiers","getUniformLocation","cacheAttributeLocations","getAttribLocation","shadowMapTypeDefine","envMapTypeDefine","envMapModeDefine","envMapBlendingDefine","prefix_vertex","prefix_fragment","gammaFactorDefine","customDefines","createProgram","glVertexShader","WebGLShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","programLogInfo","getProgramInfoLog","getProgramParameter","LINK_STATUS","getError","VALIDATE_STATUS","deleteShader","addLineNumbers","lines","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","newAttributes","Uint8Array","enabledAttributes","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentDepthTest","currentDepthWrite","currentColorWrite","currentDoubleSided","currentFlipSided","currentLineWidth","currentPolygonOffset","currentPolygonOffsetFactor","currentPolygonOffsetUnits","enableVertexAttribArray","disableVertexAttribArray","blendEquationSeparate","blendFuncSeparate","depthMask","colorMask","lineWidth","polygonoffset","factor","units","POLYGON_OFFSET_FILL","flares","vertexBuffer","elementBuffer","hasVertexTexture","tempTexture","occlusionTexture","renderType","occlusionMap","screenPosition","viewportWidth","viewportHeight","tempPosition","invAspect","halfViewportWidth","halfViewportHeight","screenPositionPixels","TEXTURE1","copyTexImage2D","sprite","_renderer","_renderList","createVirtualLight","cascade","virtualLight","isVirtual","pointsWorld","pointsFrustum","nearZ","farZ","updateVirtualLight","updateShadowCamera","_min","_max","getObjectMaterial","_depthMaterial","_depthMaterialMorph","_depthMaterialSkin","_depthMaterialMorphSkin","_matrixPosition","depthShader","depthUniforms","originalCamera","gyro","Gyroscope","shadowFilter","pars","cameraHelper","CameraHelper","objectMaterial","useMorphing","useSkinning","customDepthMaterial","clearAlpha","spritePosition","spriteRotation","spriteScale","uvOffset","uvScale","fogType","fillStyle","fillRect","oldFogType","sceneFogType","GeometryUtils","geometry1","geometry2","ImageUtils","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","getNormalMap","getImageData","imageData","createImageData","ly","uy","lx","ux","num_points","putImageData","generateDataTexture","SceneUtils","createMultiMaterialObject","attach","FontUtils","divisions","getFace","loadFace","family","familyName","ThreeFont","cssFontWeight","cssFontStyle","drawText","resolution","fontPaths","Path","extractGlyphPoints","paths","outline","action","cpx","cpy","cpx0","cpy0","cpx1","cpy1","cpx2","cpy2","laste","pts","glyph","glyphs","_cachedOutline","moveTo","lineTo","quadraticCurveTo","Shape","Utils","bezierCurveTo","b3","ha","generateShapes","curveSegments","font","shapes","toShapes","EPSILON","contour","verts","vertIndices","nv","snip","px","py","aX","aY","bX","bY","cX","cY","apx","apy","bpx","bpy","cCROSSap","bCROSScp","aCROSSbp","Triangulate","_typeface_js","typeface_js","Audio","createBufferSource","onended","onEnded","gain","createGain","connect","destination","panner","createPanner","autoplay","isPlaying","decodeAudioData","play","loop","pause","setLoop","setRefDistance","refDistance","setRolloffFactor","rolloffFactor","setVolume","AudioListener","AudioContext","webkitAudioContext","orientation","velocity","positionPrev","setOrientation","setVelocity","Curve","getPointAt","getUtoTmapping","getPoints","getSpacedPoints","lengths","getLengths","cacheArcLengths","sum","updateArcLengths","targetArcLength","arcLengths","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","pt1","pt2","vec","getTangentAt","tangentQuadraticBezier","tangentCubicBezier","tangentSpline","h00","h10","h01","h11","getPointFunc","CurvePath","curves","bends","autoClose","curve","checkConnection","closePath","startPoint","endPoint","LineCurve","curveLengths","getCurveLengths","lens","cacheLengths","sums","maxX","maxY","maxZ","minX","minY","minZ","NEGATIVE_INFINITY","POSITIVE_INFINITY","createPointsGeometry","createGeometry","createSpacedPointsGeometry","addWrapPath","bendpath","getTransformedPoints","oldPts","getWrapPoints","getTransformedSpacedPoints","oldX","oldY","xNorm","bounds","pathPt","translationObject","quaternionObject","scaleObject","translationWorld","quaternionWorld","scaleWorld","actions","fromPoints","PathActions","MOVE_TO","LINE_TO","QUADRATIC_CURVE_TO","BEZIER_CURVE_TO","CSPLINE_THRU","ARC","ELLIPSE","vectors","vlen","lastargs","x0","y0","aCPx","aCPy","QuadraticBezierCurve","aCP1x","aCP1y","aCP2x","aCP2y","CubicBezierCurve","splineThru","npts","SplineCurve","aRadius","aStartAngle","aEndAngle","aClockwise","absarc","absellipse","ellipse","xRadius","yRadius","EllipseCurve","lastPoint","closedPath","useSpacedPoints","item","spts","spline","deltaAngle","tdivisions","isCCW","noHoles","extractSubpaths","inActions","subPaths","lastPath","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPt","inPolygon","polyLen","inside","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","isClockWise","tmpPoints","betterShapeHoles","newShapes","newShapeHoles","mainIdx","ambigious","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","froms","tos","hole","tmpHoles","holes","extrude","extruded","ExtrudeGeometry","makeGeometry","ShapeGeometry","getPointsHoles","holesPts","getSpacedPointsHoles","extractAllPoints","shape","extractPoints","extractAllSpacedPoints","triangulateShape","point_in_segment_2D_colin","inSegPt1","inSegPt2","inOtherPt","intersect_segments_2D","inSeg1Pt1","inSeg1Pt2","inSeg2Pt1","inSeg2Pt2","inExcludeAdjacentSegs","seg1dx","seg1dy","seg2dx","seg2dy","seg1seg2dx","seg1seg2dy","limit","perpSeg1","perpSeg2","factorSeg1","seg1Pt","seg2Pt","seg1min","seg1max","seg1minVal","seg1maxVal","seg2min","seg2max","seg2minVal","seg2maxVal","isPointInsideAngle","inVertex","inLegFromPt","inLegToPt","legFromPtX","legFromPtY","legToPtX","legToPtY","otherPtX","otherPtY","from2toAngle","from2otherAngle","other2toAngle","removeHoles","isCutLineInsideAngles","inShapeIdx","inHoleIdx","lastShapeIdx","prevShapeIdx","nextShapeIdx","insideAngle","lastHoleIdx","prevHoleIdx","nextHoleIdx","intersectsShapeEdge","inShapePt","inHolePt","nextIdx","intersection","intersectsHoleEdge","ihIdx","chkHole","indepHoles","holeIndex","shapeIndex","shapePt","holePt","holeIdx","cutKey","tmpShape1","tmpShape2","tmpHole1","tmpHole2","failedCuts","hl","minShapeIndex","h2","allPointsMap","allpoints","shapeWithoutHoles","triangles","b2p0","b2p1","b2p2","b3p0","b3p1","b3p2","b3p3","point0","point1","point2","point3","ArcCurve","LineCurve3","QuadraticBezierCurve3","CubicBezierCurve3","SplineCurve3","ClosedSplineCurve3","AnimationHandler","CATMULLROM","CATMULLROM_FORWARD","initialized","hierarchy","rot","quat","usedMorphTargets","morphTargetName","morphTargetsInfluences","parseRecurseHierarchy","deltaTimeMS","resetBlendWeights","timeScale","interpolationType","keyTypes","animationCache","positionWeight","quaternionWeight","scaleWeight","prevKey","nextKey","originalMatrix","getNextKeyWith","newVector","newQuat","interpolateCatmullRom","prevXYZ","nextXYZ","proportionalWeight","getPrevKeyWith","currentPoint","forwardPoint","KeyFrameAnimation","isPaused","sids","sid","endTime","hasTarget","MorphAnimation","frames","lastFrame","currentFrame","interpolation","frame","buildPlane","udir","vdir","gridX","gridY","width_half","height_half","gridX1","gridY1","segment_width","segment_height","uvd","depth_half","centerUV","segment","CubeGeometry","heightHalf","verticesRow","uvsRow","tanTheta","v4","n4","uv1","uv3","uv4","addShapeList","addShape","scalePt2","pt","getBevelVec","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","colinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","buildLidFaces","bevelEnabled","layer","flen","f3","steps","bevelSegments","buildSideFaces","layeroffset","sidewalls","ahole","slen1","slen2","f4","shapesOffset","uvgen","generateTopUV","wallContour","stepIndex","stepsLength","contourIndex1","contourIndex2","extrudeMaterial","generateSideWallUV","extrudePts","splineTube","binormal","position2","amount","bevelThickness","bevelSize","extrudePath","extrudeByPath","UVGenerator","WorldUVGenerator","TubeGeometry","FrenetFrames","shapePoints","bs","vert","contourMovements","oneHoleMovements","holesMovements","verticesMovements","binormals","indexA","indexB","indexC","indexD","LatheGeometry","inversePointLength","inverseSegments","phi","np","u0","u1","PlaneGeometry","PlaneBufferGeometry","offset2","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","radiusStep","thetaSegment","TextGeometry","textShapes","getPos","in_q","in_p","cu","su","quOverP","cs","tz","grid","tang","bitan","ip","jp","closed","taper","NoTaper","numpoints","pos2","SinusoidalTaper","initialNormal3","smallest","MAX_VALUE","mat","PolyhedronGeometry","prepare","azimuth","inclination","make","centroid","azi","correctUV","subdivide","cols","aj","bj","rows","DodecahedronGeometry","OctahedronGeometry","TetrahedronGeometry","ParametricGeometry","slices","stacks","sliceCount","AxisHelper","ArrowHelper","lineGeometry","coneGeometry","headLength","headWidth","cone","setDirection","setColor","BoxHelper","BoundingBoxHelper","addLine","addPoint","pointMap","hexFrustum","hexCone","hexUp","hexTarget","hexCross","setPoint","DirectionalLightHelper","lightPlane","targetLine","EdgesHelper","thresholdAngle","thresholdDot","edge","sortFunction","numEdges","vert1","vert2","face1","face2","FaceNormalsHelper","objectVertices","objectFaces","objectWorldMatrix","GridHelper","setColors","colorCenterLine","colorGrid","HemisphereLightHelper","sphereSize","lightSphere","PointLightHelper","SkeletonHelper","getBoneList","boneList","matrixWorldInv","boneMatrix","SpotLightHelper","vector2","coneLength","coneWidth","VertexNormalsHelper","worldMatrix","vertexId","VertexTangentsHelper","WireframeHelper","edges","numTris","renderCallback","MorphBlendMesh","animationsMap","animationsList","numFrames","startFrame","endFrame","createAnimation","setAnimationWeight","autoCreateAnimations","frameRanges","setAnimationDirectionForward","setAnimationDirectionBackward","setAnimationFPS","setAnimationDuration","setAnimationTime","getAnimationTime","getAnimationDuration","stopAnimation","sceneRenderTarget","cameraOrtho","SCREEN_WIDTH","SCREEN_HEIGHT","xOffset","yOffset","zOffset","controls","OrbitControls","rotateSpeed","zoomSpeed","panSpeed","noZoom","noPan","directionalLight","pointLight","element","textGeometry","textMaterial","accum","compound","coal","cylinder","normalShader","NormalMapShader","rx","ry","LinearMipmapLinearFilter","heightMap","uniformsNoise","uniformsNormal","diffuseTexture1","loadTextures","applyShader","LuminosityShader","diffuseTexture2","detailTexture","terrainShader","ShaderTerrain","uniformsTerrain","mlib","quadTarget","geometryTerrain","terrain","devicePixelRatio","stats","Stats","onWindowResize","onKeyDown","renderTargetParameters","effectBleach","BloomPass","ShaderPass","BleachBypassShader","hblur","HorizontalTiltShiftShader","vblur","VerticalTiltShiftShader","bluriness","composer","EffectComposer","renderModel","RenderPass","renderToScreen","addPass","innerWidth","innerHeight","animDeltaDir","shaderMaterial","sceneTmp","meshTmp","textureCounter","clock","fLow","fHigh","lightVal","lightDir","valNorm","updateNoise","animDelta","tDiffuse","ConvolutionShader","KERNEL_SIZE_FLOAT","KERNEL_SIZE_INT","uImageIncrement","cKernel","buildKernel","sigma","gauss","exp","halfWidth","kMaxKernelSize","kernelSize","CopyShader","renderTarget1","renderTarget2","writeBuffer","readBuffer","passes","copyPass","swapBuffers","pass","insertPass","maskActive","needsSwap","stencilFunc","NOTEQUAL","EQUAL","MaskPass","ClearMaskPass","oldClearColor","oldClearAlpha","strength","renderTargetX","renderTargetY","copyShader","copyUniforms","materialCopy","convolutionShader","convolutionUniforms","blurX","materialConvolution","quad","STENCIL_TEST","blurY","textureID","writeValue","clearValue","stencilOp","REPLACE","ALWAYS","KEEP","SavePass","enableDiffuse1","enableDiffuse2","enableSpecular","enableReflection","tDiffuse1","tDiffuse2","tDetail","tNormal","tSpecular","tDisplacement","uNormalScale","uDisplacementBias","uDisplacementScale","uRepeatBase","uRepeatOverlay","uOffset","Detector","CanvasRenderingContext2D","webgl","WebGLRenderingContext","workers","Worker","fileapi","File","FileReader","FileList","Blob","getWebGLErrorMessage","fontFamily","addGetWebGLMessage","setMode","begin","getAutoRotationAngle","autoRotateSpeed","getZoomScale","onMouseDown","mouseButtons","ORBIT","noRotate","STATE","ROTATE","rotateStart","ZOOM","DOLLY","dollyStart","PAN","panStart","NONE","onMouseMove","onMouseUp","startEvent","rotateEnd","rotateDelta","rotateLeft","clientWidth","rotateUp","clientHeight","dollyEnd","dollyDelta","dollyIn","dollyOut","panEnd","panDelta","pan","endEvent","onMouseWheel","wheelDelta","noKeys","keyPanSpeed","touchstart","TOUCH_ROTATE","TOUCH_DOLLY","TOUCH_PAN","touchmove","touchend","minDistance","maxDistance","minZoom","maxZoom","autoRotate","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","panOffset","phiDelta","thetaDelta","lastPosition","lastQuaternion","target0","position0","zoom0","quatInverse","changeEvent","panLeft","panUp","deltaX","deltaY","targetDistance","dollyScale","getPolarAngle","getAzimuthalAngle","ο","x_min","x_max","S","¦","/","Τ","Π","ΐ","²","–","Κ","ƒ","ό","J","»","©","ώ","^","«","D","∙","ÿ","\\","µ","Ι","Ύ","’","Ν","-","Q","ς","M","Ψ","C","!","{","X","#","ι","Ά",")","ε","Δ","}","‰","—","=","N","ρ","2","¯","Z","Η","Α","B","…","?","H","ν","¶","β","Μ","Ό","Ή","•","¥","(","U","γ","α","F","­",":","Χ","†","°","V","Ξ","Ϋ","”","@","Ί","Β","υ","]","χ","8","ί","Ζ","R","5","7","K",",","¨","E","Y","\"","‹","„","δ","έ","ω","´","±","|","ϋ","§","Ω","ύ","™","ή","Θ","®","Ε","³","[","L","σ","ζ","θ","Ο","Γ","%","P","Έ","Ώ","Ϊ","½","Ρ","'","ª","΅","T","Φ","⁋","Σ","›","<","£","¬","λ","W","τ","ξ","&","Λ","I","G","ΰ","`","·","Υ","μ",".","φ",";","“","A","6","‘","ϊ","π","ά","O","3","9","¤","κ","4","‡","ψ","η","ascender","underlinePosition","yMin","xMin","yMax","xMax","original_font_information","postscript_name","version_string","vendor_url","full_font_name","font_family_name","copyright","description","trademark","designer","designer_url","unique_font_identifier","license_url","license_description","manufacturer_name","font_sub_family_name","descender","underlineThickness"],"mappings":"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AA,mBACApjD,EAAAojD,YAAA,gBACApjD,EAAAojD,YAAA,eACApjD,EAAAojD,YAAA,mBAEApjD,EAAAojD,YAAA,gBACApjD,EAAAojD,YAAA,cACApjD,EAAAojD,YAAA,iBAEA,KAEA/4E,KAAA,MAEA8qE,gBAEA,wBACA,yBAEAn1C,EAAAojD,YAAA,OACApjD,EAAAojD,YAAA,oBACApjD,EAAAojD,YAAA,kBACApjD,EAAAojD,YAAA,uBACApjD,EAAAojD,YAAA,uBACApjD,EAAAojD,YAAA,qBACApjD,EAAAojD,YAAA,kBACApjD,EAAAojD,YAAA,wBACApjD,EAAAojD,YAAA,0BACApjD,EAAAojD,YAAA,0BAEA,gBAEA,sCACA,kDAEApjD,EAAAojD,YAAA,qBACApjD,EAAAojD,YAAA,aACApjD,EAAAojD,YAAA,eACApjD,EAAAojD,YAAA,kBACApjD,EAAAojD,YAAA,mBACApjD,EAAAojD,YAAA,qBAEA,sCAEApjD,EAAAojD,YAAA,kBACApjD,EAAAojD,YAAA,gBACApjD,EAAAojD,YAAA,mBAEApjD,EAAAojD,YAAA,yBAEApjD,EAAAojD,YAAA,aAEA,0DAEA,KAEA/4E,KAAA,OAIAq7E,SAEAzQ,SAAAj1C,EAAAm8C,cAAA5+E,OAEAyiC,EAAAyjD,YAAA,OACAzjD,EAAAyjD,YAAA,IACAzjD,EAAAyjD,YAAA,OACAzjD,EAAAyjD,YAAA,WAGA3T,UAAAz4E,KAAA,IAAA+B,MAAA,GAAA4mC,GAAA0G,MAAA,IACA+0C,SAAApkF,KAAA,KAAA+B,MAAA,GAAA4mC,GAAAkV,QAAA,EAAA,EAAA,OAKAggC,cAEA,kBAEA,4BAEA,sBAEA,6BAEA,SAEAl1C,EAAAojD,YAAA,OACApjD,EAAAojD,YAAA,gBACApjD,EAAAojD,YAAA,qBACApjD,EAAAojD,YAAA,mBACApjD,EAAAojD,YAAA,2BACApjD,EAAAojD,YAAA,kBACApjD,EAAAojD,YAAA,wBACApjD,EAAAojD,YAAA,qBACApjD,EAAAojD,YAAA,sBACApjD,EAAAojD,YAAA,wBAEA,gBAEApjD,EAAAojD,YAAA,WACApjD,EAAAojD,YAAA,gBACApjD,EAAAojD,YAAA,aAEApjD,EAAAojD,YAAA,mBACApjD,EAAAojD,YAAA,gBACApjD,EAAAojD,YAAA,kBACApjD,EAAAojD,YAAA,qBAEApjD,EAAAojD,YAAA,mBACApjD,EAAAojD,YAAA,gBACApjD,EAAAojD,YAAA,eACApjD,EAAAojD,YAAA,mBAEApjD,EAAAojD,YAAA,gBACApjD,EAAAojD,YAAA,cACApjD,EAAAojD,YAAA,sBACApjD,EAAAojD,YAAA,iBAEA,KAEA/4E,KAAA,MAEA8qE,gBAEA,wBACA,yBACA,yBAEA,4BAEA,sBAEA,6BAEA,SAEAn1C,EAAAojD,YAAA,OACApjD,EAAAojD,YAAA,oBACApjD,EAAAojD,YAAA,kBACApjD,EAAAojD,YAAA,uBACApjD,EAAAojD,YAAA,uBACApjD,EAAAojD,YAAA,qBACApjD,EAAAojD,YAAA,kBACApjD,EAAAojD,YAAA,wBACApjD,EAAAojD,YAAA,0BACApjD,EAAAojD,YAAA,0BAEA,gBAEA,sCACA,kDAEApjD,EAAAojD,YAAA,qBACApjD,EAAAojD,YAAA,aACApjD,EAAAojD,YAAA,eACApjD,EAAAojD,YAAA,kBACApjD,EAAAojD,YAAA,mBACApjD,EAAAojD,YAAA,qBAEA,wBAKA,4BACA,oEACA,WACA,mEAEA,UAEA,kEAEA,WAEApjD,EAAAojD,YAAA,kBACApjD,EAAAojD,YAAA,gBACApjD,EAAAojD,YAAA,mBAEApjD,EAAAojD,YAAA,yBAEApjD,EAAAojD,YAAA,aAEA,0DAEA,KAEA/4E,KAAA,OAIAs7E,OAEA1Q,SAAAj1C,EAAAm8C,cAAA5+E,OAEAyiC,EAAAyjD,YAAA,OACAzjD,EAAAyjD,YAAA,KACAzjD,EAAAyjD,YAAA,UACAzjD,EAAAyjD,YAAA,IACAzjD,EAAAyjD,YAAA,OACAzjD,EAAAyjD,YAAA,WAGA3T,UAAAz4E,KAAA,IAAA+B,MAAA,GAAA4mC,GAAA0G,MAAA,IACAkpC,UAAAv4E,KAAA,IAAA+B,MAAA,GAAA4mC,GAAA0G,MAAA,UACAupC,WAAA54E,KAAA,IAAA+B,MAAA,IACAqiF,SAAApkF,KAAA,KAAA+B,MAAA,GAAA4mC,GAAAkV,QAAA,EAAA,EAAA,OAKAggC,cAEA,gBAEA,8BAEA,sBAEA,0BAEA,SAEAl1C,EAAAojD,YAAA,OACApjD,EAAAojD,YAAA,gBACApjD,EAAAojD,YAAA,qBACApjD,EAAAojD,YAAA,mBACApjD,EAAAojD,YAAA,yBACApjD,EAAAojD,YAAA,kBACApjD,EAAAojD,YAAA,wBACApjD,EAAAojD,YAAA,qBACApjD,EAAAojD,YAAA,sBACApjD,EAAAojD,YAAA,wBAEA,gBAEApjD,EAAAojD,YAAA,WACApjD,EAAAojD,YAAA,gBACApjD,EAAAojD,YAAA,aAEApjD,EAAAojD,YAAA,mBACApjD,EAAAojD,YAAA,gBACApjD,EAAAojD,YAAA,kBACApjD,EAAAojD,YAAA,qBAEA,sBAEA,8CAEA,SAEApjD,EAAAojD,YAAA,mBACApjD,EAAAojD,YAAA,gBACApjD,EAAAojD,YAAA,eACApjD,EAAAojD,YAAA,mBAEA,qCAEApjD,EAAAojD,YAAA,gBACApjD,EAAAojD,YAAA,cACApjD,EAAAojD,YAAA,oBACApjD,EAAAojD,YAAA,iBAEA,KAEA/4E,KAAA,MAEA8qE,gBAEA,gBAEA,wBACA,yBACA,yBACA,2BACA,yBAEAn1C,EAAAojD,YAAA,OACApjD,EAAAojD,YAAA,oBACApjD,EAAAojD,YAAA,kBACApjD,EAAAojD,YAAA,uBACApjD,EAAAojD,YAAA,uBACApjD,EAAAojD,YAAA,qBACApjD,EAAAojD,YAAA,kBACApjD,EAAAojD,YAAA,2BACApjD,EAAAojD,YAAA,wBACApjD,EAAAojD,YAAA,sBACApjD,EAAAojD,YAAA,wBACApjD,EAAAojD,YAAA,0BACApjD,EAAAojD,YAAA,0BAEA,gBAEA,sCACA,kDAEApjD,EAAAojD,YAAA,qBACApjD,EAAAojD,YAAA,aACApjD,EAAAojD,YAAA,eACApjD,EAAAojD,YAAA,kBACApjD,EAAAojD,YAAA,mBACApjD,EAAAojD,YAAA,qBAEApjD,E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","file":"main.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/*!\n * jQuery JavaScript Library v3.1.1\n * https://jquery.com/\n *\n * Includes Sizzle.js\n * https://sizzlejs.com/\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license\n * https://jquery.org/license\n *\n * Date: 2016-09-22T22:30Z\n */\n( function( global, factory ) {\n\n\t\"use strict\";\n\n\tif ( typeof module === \"object\" && typeof module.exports === \"object\" ) {\n\n\t\t// For CommonJS and CommonJS-like environments where a proper `window`\n\t\t// is present, execute the factory and get jQuery.\n\t\t// For environments that do not have a `window` with a `document`\n\t\t// (such as Node.js), expose a factory as module.exports.\n\t\t// This accentuates the need for the creation of a real `window`.\n\t\t// e.g. var jQuery = require(\"jquery\")(window);\n\t\t// See ticket #14549 for more info.\n\t\tmodule.exports = global.document ?\n\t\t\tfactory( global, true ) :\n\t\t\tfunction( w ) {\n\t\t\t\tif ( !w.document ) {\n\t\t\t\t\tthrow new Error( \"jQuery requires a window with a document\" );\n\t\t\t\t}\n\t\t\t\treturn factory( w );\n\t\t\t};\n\t} else {\n\t\tfactory( global );\n\t}\n\n// Pass this if window is not defined yet\n} )( typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\n\n// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1\n// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode\n// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common\n// enough that all such attempts are guarded in a try block.\n\"use strict\";\n\nvar arr = [];\n\nvar document = window.document;\n\nvar getProto = Object.getPrototypeOf;\n\nvar slice = arr.slice;\n\nvar concat = arr.concat;\n\nvar push = arr.push;\n\nvar indexOf = arr.indexOf;\n\nvar class2type = {};\n\nvar toString = class2type.toString;\n\nvar hasOwn = class2type.hasOwnProperty;\n\nvar fnToString = hasOwn.toString;\n\nvar ObjectFunctionString = fnToString.call( Object );\n\nvar support = {};\n\n\n\n\tfunction DOMEval( code, doc ) {\n\t\tdoc = doc || document;\n\n\t\tvar script = doc.createElement( \"script\" );\n\n\t\tscript.text = code;\n\t\tdoc.head.appendChild( script ).parentNode.removeChild( script );\n\t}\n/* global Symbol */\n// Defining this global in .eslintrc.json would create a danger of using the global\n// unguarded in another place, it seems safer to define global only for this module\n\n\n\nvar\n\tversion = \"3.1.1\",\n\n\t// Define a local copy of jQuery\n\tjQuery = function( selector, context ) {\n\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\n\t\t// Need init if jQuery is called (just allow error to be thrown if not included)\n\t\treturn new jQuery.fn.init( selector, context );\n\t},\n\n\t// Support: Android <=4.0 only\n\t// Make sure we trim BOM and NBSP\n\trtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\n\n\t// Matches dashed string for camelizing\n\trmsPrefix = /^-ms-/,\n\trdashAlpha = /-([a-z])/g,\n\n\t// Used by jQuery.camelCase as callback to replace()\n\tfcamelCase = function( all, letter ) {\n\t\treturn letter.toUpperCase();\n\t};\n\njQuery.fn = jQuery.prototype = {\n\n\t// The current version of jQuery being used\n\tjquery: version,\n\n\tconstructor: jQuery,\n\n\t// The default length of a jQuery object is 0\n\tlength: 0,\n\n\ttoArray: function() {\n\t\treturn slice.call( this );\n\t},\n\n\t// Get the Nth element in the matched element set OR\n\t// Get the whole matched element set as a clean array\n\tget: function( num ) {\n\n\t\t// Return all the elements in a clean array\n\t\tif ( num == null ) {\n\t\t\treturn slice.call( this );\n\t\t}\n\n\t\t// Return just the one element from the set\n\t\treturn num < 0 ? this[ num + this.length ] : this[ num ];\n\t},\n\n\t// Take an array of elements and push it onto the stack\n\t// (returning the new matched element set)\n\tpushStack: function( elems ) {\n\n\t\t// Build a new jQuery matched element set\n\t\tvar ret = jQuery.merge( this.constructor(), elems );\n\n\t\t// Add the old object onto the stack (as a reference)\n\t\tret.prevObject = this;\n\n\t\t// Return the newly-formed element set\n\t\treturn ret;\n\t},\n\n\t// Execute a callback for every element in the matched set.\n\teach: function( callback ) {\n\t\treturn jQuery.each( this, callback );\n\t},\n\n\tmap: function( callback ) {\n\t\treturn this.pushStack( jQuery.map( this, function( elem, i ) {\n\t\t\treturn callback.call( elem, i, elem );\n\t\t} ) );\n\t},\n\n\tslice: function() {\n\t\treturn this.pushStack( slice.apply( this, arguments ) );\n\t},\n\n\tfirst: function() {\n\t\treturn this.eq( 0 );\n\t},\n\n\tlast: function() {\n\t\treturn this.eq( -1 );\n\t},\n\n\teq: function( i ) {\n\t\tvar len = this.length,\n\t\t\tj = +i + ( i < 0 ? len : 0 );\n\t\treturn this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );\n\t},\n\n\tend: function() {\n\t\treturn this.prevObject || this.constructor();\n\t},\n\n\t// For internal use only.\n\t// Behaves like an Array's method, not like a jQuery method.\n\tpush: push,\n\tsort: arr.sort,\n\tsplice: arr.splice\n};\n\njQuery.extend = jQuery.fn.extend = function() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[ 0 ] || {},\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif ( typeof target === \"boolean\" ) {\n\t\tdeep = target;\n\n\t\t// Skip the boolean and the target\n\t\ttarget = arguments[ i ] || {};\n\t\ti++;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target !== \"object\" && !jQuery.isFunction( target ) ) {\n\t\ttarget = {};\n\t}\n\n\t// Extend jQuery itself if only one argument is passed\n\tif ( i === length ) {\n\t\ttarget = this;\n\t\ti--;\n\t}\n\n\tfor ( ; i < length; i++ ) {\n\n\t\t// Only deal with non-null/undefined values\n\t\tif ( ( options = arguments[ i ] ) != null ) {\n\n\t\t\t// Extend the base object\n\t\t\tfor ( name in options ) {\n\t\t\t\tsrc = target[ name ];\n\t\t\t\tcopy = options[ name ];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif ( target === copy ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject( copy ) ||\n\t\t\t\t\t( copyIsArray = jQuery.isArray( copy ) ) ) ) {\n\n\t\t\t\t\tif ( copyIsArray ) {\n\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\tclone = src && jQuery.isArray( src ) ? src : [];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src && jQuery.isPlainObject( src ) ? src : {};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if ( copy !== undefined ) {\n\t\t\t\t\ttarget[ name ] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\njQuery.extend( {\n\n\t// Unique for each copy of jQuery on the page\n\texpando: \"jQuery\" + ( version + Math.random() ).replace( /\\D/g, \"\" ),\n\n\t// Assume jQuery is ready without the ready module\n\tisReady: true,\n\n\terror: function( msg ) {\n\t\tthrow new Error( msg );\n\t},\n\n\tnoop: function() {},\n\n\tisFunction: function( obj ) {\n\t\treturn jQuery.type( obj ) === \"function\";\n\t},\n\n\tisArray: Array.isArray,\n\n\tisWindow: function( obj ) {\n\t\treturn obj != null && obj === obj.window;\n\t},\n\n\tisNumeric: function( obj ) {\n\n\t\t// As of jQuery 3.0, isNumeric is limited to\n\t\t// strings and numbers (primitives or objects)\n\t\t// that can be coerced to finite numbers (gh-2662)\n\t\tvar type = jQuery.type( obj );\n\t\treturn ( type === \"number\" || type === \"string\" ) &&\n\n\t\t\t// parseFloat NaNs numeric-cast false positives (\"\")\n\t\t\t// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n\t\t\t// subtraction forces infinities to NaN\n\t\t\t!isNaN( obj - parseFloat( obj ) );\n\t},\n\n\tisPlainObject: function( obj ) {\n\t\tvar proto, Ctor;\n\n\t\t// Detect obvious negatives\n\t\t// Use toString instead of jQuery.type to catch host objects\n\t\tif ( !obj || toString.call( obj ) !== \"[object Object]\" ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tproto = getProto( obj );\n\n\t\t// Objects with no prototype (e.g., `Object.create( null )`) are plain\n\t\tif ( !proto ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Objects with prototype are plain iff they were constructed by a global Object function\n\t\tCtor = hasOwn.call( proto, \"constructor\" ) && proto.constructor;\n\t\treturn typeof Ctor === \"function\" && fnToString.call( Ctor ) === ObjectFunctionString;\n\t},\n\n\tisEmptyObject: function( obj ) {\n\n\t\t/* eslint-disable no-unused-vars */\n\t\t// See https://github.com/eslint/eslint/issues/6125\n\t\tvar name;\n\n\t\tfor ( name in obj ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\ttype: function( obj ) {\n\t\tif ( obj == null ) {\n\t\t\treturn obj + \"\";\n\t\t}\n\n\t\t// Support: Android <=2.3 only (functionish RegExp)\n\t\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\n\t\t\tclass2type[ toString.call( obj ) ] || \"object\" :\n\t\t\ttypeof obj;\n\t},\n\n\t// Evaluates a script in a global context\n\tglobalEval: function( code ) {\n\t\tDOMEval( code );\n\t},\n\n\t// Convert dashed to camelCase; used by the css and data modules\n\t// Support: IE <=9 - 11, Edge 12 - 13\n\t// Microsoft forgot to hump their vendor prefix (#9572)\n\tcamelCase: function( string ) {\n\t\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\n\t},\n\n\tnodeName: function( elem, name ) {\n\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n\t},\n\n\teach: function( obj, callback ) {\n\t\tvar length, i = 0;\n\n\t\tif ( isArrayLike( obj ) ) {\n\t\t\tlength = obj.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( i in obj ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t},\n\n\t// Support: Android <=4.0 only\n\ttrim: function( text ) {\n\t\treturn text == null ?\n\t\t\t\"\" :\n\t\t\t( text + \"\" ).replace( rtrim, \"\" );\n\t},\n\n\t// results is for internal usage only\n\tmakeArray: function( arr, results ) {\n\t\tvar ret = results || [];\n\n\t\tif ( arr != null ) {\n\t\t\tif ( isArrayLike( Object( arr ) ) ) {\n\t\t\t\tjQuery.merge( ret,\n\t\t\t\t\ttypeof arr === \"string\" ?\n\t\t\t\t\t[ arr ] : arr\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tpush.call( ret, arr );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tinArray: function( elem, arr, i ) {\n\t\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\n\t},\n\n\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t// push.apply(_, arraylike) throws on ancient WebKit\n\tmerge: function( first, second ) {\n\t\tvar len = +second.length,\n\t\t\tj = 0,\n\t\t\ti = first.length;\n\n\t\tfor ( ; j < len; j++ ) {\n\t\t\tfirst[ i++ ] = second[ j ];\n\t\t}\n\n\t\tfirst.length = i;\n\n\t\treturn first;\n\t},\n\n\tgrep: function( elems, callback, invert ) {\n\t\tvar callbackInverse,\n\t\t\tmatches = [],\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\tcallbackExpect = !invert;\n\n\t\t// Go through the array, only saving the items\n\t\t// that pass the validator function\n\t\tfor ( ; i < length; i++ ) {\n\t\t\tcallbackInverse = !callback( elems[ i ], i );\n\t\t\tif ( callbackInverse !== callbackExpect ) {\n\t\t\t\tmatches.push( elems[ i ] );\n\t\t\t}\n\t\t}\n\n\t\treturn matches;\n\t},\n\n\t// arg is for internal usage only\n\tmap: function( elems, callback, arg ) {\n\t\tvar length, value,\n\t\t\ti = 0,\n\t\t\tret = [];\n\n\t\t// Go through the array, translating each of the items to their new values\n\t\tif ( isArrayLike( elems ) ) {\n\t\t\tlength = elems.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Go through every key on the object,\n\t\t} else {\n\t\t\tfor ( i in elems ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Flatten any nested arrays\n\t\treturn concat.apply( [], ret );\n\t},\n\n\t// A global GUID counter for objects\n\tguid: 1,\n\n\t// Bind a function to a context, optionally partially applying any\n\t// arguments.\n\tproxy: function( fn, context ) {\n\t\tvar tmp, args, proxy;\n\n\t\tif ( typeof context === \"string\" ) {\n\t\t\ttmp = fn[ context ];\n\t\t\tcontext = fn;\n\t\t\tfn = tmp;\n\t\t}\n\n\t\t// Quick check to determine if target is callable, in the spec\n\t\t// this throws a TypeError, but we will just return undefined.\n\t\tif ( !jQuery.isFunction( fn ) ) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Simulated bind\n\t\targs = slice.call( arguments, 2 );\n\t\tproxy = function() {\n\t\t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\n\t\t};\n\n\t\t// Set the guid of unique handler to the same of original handler, so it can be removed\n\t\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\n\n\t\treturn proxy;\n\t},\n\n\tnow: Date.now,\n\n\t// jQuery.support is not used in Core but other projects attach their\n\t// properties to it so it needs to exist.\n\tsupport: support\n} );\n\nif ( typeof Symbol === \"function\" ) {\n\tjQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];\n}\n\n// Populate the class2type map\njQuery.each( \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split( \" \" ),\nfunction( i, name ) {\n\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n} );\n\nfunction isArrayLike( obj ) {\n\n\t// Support: real iOS 8.2 only (not reproducible in simulator)\n\t// `in` check used to prevent JIT error (gh-2145)\n\t// hasOwn isn't used here due to false negatives\n\t// regarding Nodelist length in IE\n\tvar length = !!obj && \"length\" in obj && obj.length,\n\t\ttype = jQuery.type( obj );\n\n\tif ( type === \"function\" || jQuery.isWindow( obj ) ) {\n\t\treturn false;\n\t}\n\n\treturn type === \"array\" || length === 0 ||\n\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj;\n}\nvar Sizzle =\n/*!\n * Sizzle CSS Selector Engine v2.3.3\n * https://sizzlejs.com/\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2016-08-08\n */\n(function( window ) {\n\nvar i,\n\tsupport,\n\tExpr,\n\tgetText,\n\tisXML,\n\ttokenize,\n\tcompile,\n\tselect,\n\toutermostContext,\n\tsortInput,\n\thasDuplicate,\n\n\t// Local document vars\n\tsetDocument,\n\tdocument,\n\tdocElem,\n\tdocumentIsHTML,\n\trbuggyQSA,\n\trbuggyMatches,\n\tmatches,\n\tcontains,\n\n\t// Instance-specific data\n\texpando = \"sizzle\" + 1 * new Date(),\n\tpreferredDoc = window.document,\n\tdirruns = 0,\n\tdone = 0,\n\tclassCache = createCache(),\n\ttokenCache = createCache(),\n\tcompilerCache = createCache(),\n\tsortOrder = function( a, b ) {\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// Instance methods\n\thasOwn = ({}).hasOwnProperty,\n\tarr = [],\n\tpop = arr.pop,\n\tpush_native = arr.push,\n\tpush = arr.push,\n\tslice = arr.slice,\n\t// Use a stripped-down indexOf as it's faster than native\n\t// https://jsperf.com/thor-indexof-vs-for/5\n\tindexOf = function( list, elem ) {\n\t\tvar i = 0,\n\t\t\tlen = list.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( list[i] === elem ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\n\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\n\n\t// Regular expressions\n\n\t// http://www.w3.org/TR/css3-selectors/#whitespace\n\twhitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n\n\t// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\n\tidentifier = \"(?:\\\\\\\\.|[\\\\w-]|[^\\0-\\\\xa0])+\",\n\n\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n\tattributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace +\n\t\t// Operator (capture 2)\n\t\t\"*([*^$|!~]?=)\" + whitespace +\n\t\t// \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\n\t\t\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace +\n\t\t\"*\\\\]\",\n\n\tpseudos = \":(\" + identifier + \")(?:\\\\((\" +\n\t\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n\t\t// 1. quoted (capture 3; capture 4 or capture 5)\n\t\t\"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +\n\t\t// 2. simple (capture 6)\n\t\t\"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +\n\t\t// 3. anything else (capture 2)\n\t\t\".*\" +\n\t\t\")\\\\)|)\",\n\n\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n\trwhitespace = new RegExp( whitespace + \"+\", \"g\" ),\n\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\" ),\n\n\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\n\trcombinators = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\" ),\n\n\trattributeQuotes = new RegExp( \"=\" + whitespace + \"*([^\\\\]'\\\"]*?)\" + whitespace + \"*\\\\]\", \"g\" ),\n\n\trpseudo = new RegExp( pseudos ),\n\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\n\n\tmatchExpr = {\n\t\t\"ID\": new RegExp( \"^#(\" + identifier + \")\" ),\n\t\t\"CLASS\": new RegExp( \"^\\\\.(\" + identifier + \")\" ),\n\t\t\"TAG\": new RegExp( \"^(\" + identifier + \"|[*])\" ),\n\t\t\"ATTR\": new RegExp( \"^\" + attributes ),\n\t\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\n\t\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace +\n\t\t\t\"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace +\n\t\t\t\"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\n\t\t\"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\n\t\t// For use in libraries implementing .is()\n\t\t// We use this for POS matching in `select`\n\t\t\"needsContext\": new RegExp( \"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" +\n\t\t\twhitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\n\t},\n\n\trinputs = /^(?:input|select|textarea|button)$/i,\n\trheader = /^h\\d$/i,\n\n\trnative = /^[^{]+\\{\\s*\\[native \\w/,\n\n\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\n\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n\n\trsibling = /[+~]/,\n\n\t// CSS escapes\n\t// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n\trunescape = new RegExp( \"\\\\\\\\([\\\\da-f]{1,6}\" + whitespace + \"?|(\" + whitespace + \")|.)\", \"ig\" ),\n\tfunescape = function( _, escaped, escapedWhitespace ) {\n\t\tvar high = \"0x\" + escaped - 0x10000;\n\t\t// NaN means non-codepoint\n\t\t// Support: Firefox<24\n\t\t// Workaround erroneous numeric interpretation of +\"0x\"\n\t\treturn high !== high || escapedWhitespace ?\n\t\t\tescaped :\n\t\t\thigh < 0 ?\n\t\t\t\t// BMP codepoint\n\t\t\t\tString.fromCharCode( high + 0x10000 ) :\n\t\t\t\t// Supplemental Plane codepoint (surrogate pair)\n\t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\n\t},\n\n\t// CSS string/identifier serialization\n\t// https://drafts.csswg.org/cssom/#common-serializing-idioms\n\trcssescape = /([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,\n\tfcssescape = function( ch, asCodePoint ) {\n\t\tif ( asCodePoint ) {\n\n\t\t\t// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\n\t\t\tif ( ch === \"\\0\" ) {\n\t\t\t\treturn \"\\uFFFD\";\n\t\t\t}\n\n\t\t\t// Control characters and (dependent upon position) numbers get escaped as code points\n\t\t\treturn ch.slice( 0, -1 ) + \"\\\\\" + ch.charCodeAt( ch.length - 1 ).toString( 16 ) + \" \";\n\t\t}\n\n\t\t// Other potentially-special ASCII characters get backslash-escaped\n\t\treturn \"\\\\\" + ch;\n\t},\n\n\t// Used for iframes\n\t// See setDocument()\n\t// Removing the function wrapper causes a \"Permission Denied\"\n\t// error in IE\n\tunloadHandler = function() {\n\t\tsetDocument();\n\t},\n\n\tdisabledAncestor = addCombinator(\n\t\tfunction( elem ) {\n\t\t\treturn elem.disabled === true && (\"form\" in elem || \"label\" in elem);\n\t\t},\n\t\t{ dir: \"parentNode\", next: \"legend\" }\n\t);\n\n// Optimize for push.apply( _, NodeList )\ntry {\n\tpush.apply(\n\t\t(arr = slice.call( preferredDoc.childNodes )),\n\t\tpreferredDoc.childNodes\n\t);\n\t// Support: Android<4.0\n\t// Detect silently failing push.apply\n\tarr[ preferredDoc.childNodes.length ].nodeType;\n} catch ( e ) {\n\tpush = { apply: arr.length ?\n\n\t\t// Leverage slice if possible\n\t\tfunction( target, els ) {\n\t\t\tpush_native.apply( target, slice.call(els) );\n\t\t} :\n\n\t\t// Support: IE<9\n\t\t// Otherwise append directly\n\t\tfunction( target, els ) {\n\t\t\tvar j = target.length,\n\t\t\t\ti = 0;\n\t\t\t// Can't trust NodeList.length\n\t\t\twhile ( (target[j++] = els[i++]) ) {}\n\t\t\ttarget.length = j - 1;\n\t\t}\n\t};\n}\n\nfunction Sizzle( selector, context, results, seed ) {\n\tvar m, i, elem, nid, match, groups, newSelector,\n\t\tnewContext = context && context.ownerDocument,\n\n\t\t// nodeType defaults to 9, since context defaults to document\n\t\tnodeType = context ? context.nodeType : 9;\n\n\tresults = results || [];\n\n\t// Return early from calls with invalid selector or context\n\tif ( typeof selector !== \"string\" || !selector ||\n\t\tnodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\n\n\t\treturn results;\n\t}\n\n\t// Try to shortcut find operations (as opposed to filters) in HTML documents\n\tif ( !seed ) {\n\n\t\tif ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {\n\t\t\tsetDocument( context );\n\t\t}\n\t\tcontext = context || document;\n\n\t\tif ( documentIsHTML ) {\n\n\t\t\t// If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n\t\t\t// (excepting DocumentFragment context, where the methods don't exist)\n\t\t\tif ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {\n\n\t\t\t\t// ID selector\n\t\t\t\tif ( (m = match[1]) ) {\n\n\t\t\t\t\t// Document context\n\t\t\t\t\tif ( nodeType === 9 ) {\n\t\t\t\t\t\tif ( (elem = context.getElementById( m )) ) {\n\n\t\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\t\tif ( elem.id === m ) {\n\t\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t// Element context\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\tif ( newContext && (elem = newContext.getElementById( m )) &&\n\t\t\t\t\t\t\tcontains( context, elem ) &&\n\t\t\t\t\t\t\telem.id === m ) {\n\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t// Type selector\n\t\t\t\t} else if ( match[2] ) {\n\t\t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\n\t\t\t\t\treturn results;\n\n\t\t\t\t// Class selector\n\t\t\t\t} else if ( (m = match[3]) && support.getElementsByClassName &&\n\t\t\t\t\tcontext.getElementsByClassName ) {\n\n\t\t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\n\t\t\t\t\treturn results;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Take advantage of querySelectorAll\n\t\t\tif ( support.qsa &&\n\t\t\t\t!compilerCache[ selector + \" \" ] &&\n\t\t\t\t(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {\n\n\t\t\t\tif ( nodeType !== 1 ) {\n\t\t\t\t\tnewContext = context;\n\t\t\t\t\tnewSelector = selector;\n\n\t\t\t\t// qSA looks outside Element context, which is not what we want\n\t\t\t\t// Thanks to Andrew Dupont for this workaround technique\n\t\t\t\t// Support: IE <=8\n\t\t\t\t// Exclude object elements\n\t\t\t\t} else if ( context.nodeName.toLowerCase() !== \"object\" ) {\n\n\t\t\t\t\t// Capture the context ID, setting it first if necessary\n\t\t\t\t\tif ( (nid = context.getAttribute( \"id\" )) ) {\n\t\t\t\t\t\tnid = nid.replace( rcssescape, fcssescape );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext.setAttribute( \"id\", (nid = expando) );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prefix every selector in the list\n\t\t\t\t\tgroups = tokenize( selector );\n\t\t\t\t\ti = groups.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tgroups[i] = \"#\" + nid + \" \" + toSelector( groups[i] );\n\t\t\t\t\t}\n\t\t\t\t\tnewSelector = groups.join( \",\" );\n\n\t\t\t\t\t// Expand context for sibling selectors\n\t\t\t\t\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) ||\n\t\t\t\t\t\tcontext;\n\t\t\t\t}\n\n\t\t\t\tif ( newSelector ) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tpush.apply( results,\n\t\t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t} catch ( qsaError ) {\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif ( nid === expando ) {\n\t\t\t\t\t\t\tcontext.removeAttribute( \"id\" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// All others\n\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\n}\n\n/**\n * Create key-value caches of limited size\n * @returns {function(string, object)} Returns the Object data after storing it on itself with\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n *\tdeleting the oldest entry\n */\nfunction createCache() {\n\tvar keys = [];\n\n\tfunction cache( key, value ) {\n\t\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n\t\tif ( keys.push( key + \" \" ) > Expr.cacheLength ) {\n\t\t\t// Only keep the most recent entries\n\t\t\tdelete cache[ keys.shift() ];\n\t\t}\n\t\treturn (cache[ key + \" \" ] = value);\n\t}\n\treturn cache;\n}\n\n/**\n * Mark a function for special use by Sizzle\n * @param {Function} fn The function to mark\n */\nfunction markFunction( fn ) {\n\tfn[ expando ] = true;\n\treturn fn;\n}\n\n/**\n * Support testing using an element\n * @param {Function} fn Passed the created element and returns a boolean result\n */\nfunction assert( fn ) {\n\tvar el = document.createElement(\"fieldset\");\n\n\ttry {\n\t\treturn !!fn( el );\n\t} catch (e) {\n\t\treturn false;\n\t} finally {\n\t\t// Remove from its parent by default\n\t\tif ( el.parentNode ) {\n\t\t\tel.parentNode.removeChild( el );\n\t\t}\n\t\t// release memory in IE\n\t\tel = null;\n\t}\n}\n\n/**\n * Adds the same handler for all of the specified attrs\n * @param {String} attrs Pipe-separated list of attributes\n * @param {Function} handler The method that will be applied\n */\nfunction addHandle( attrs, handler ) {\n\tvar arr = attrs.split(\"|\"),\n\t\ti = arr.length;\n\n\twhile ( i-- ) {\n\t\tExpr.attrHandle[ arr[i] ] = handler;\n\t}\n}\n\n/**\n * Checks document order of two siblings\n * @param {Element} a\n * @param {Element} b\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n */\nfunction siblingCheck( a, b ) {\n\tvar cur = b && a,\n\t\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\n\t\t\ta.sourceIndex - b.sourceIndex;\n\n\t// Use IE sourceIndex if available on both nodes\n\tif ( diff ) {\n\t\treturn diff;\n\t}\n\n\t// Check if b follows a\n\tif ( cur ) {\n\t\twhile ( (cur = cur.nextSibling) ) {\n\t\t\tif ( cur === b ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a ? 1 : -1;\n}\n\n/**\n * Returns a function to use in pseudos for input types\n * @param {String} type\n */\nfunction createInputPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn name === \"input\" && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for buttons\n * @param {String} type\n */\nfunction createButtonPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn (name === \"input\" || name === \"button\") && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for :enabled/:disabled\n * @param {Boolean} disabled true for :disabled; false for :enabled\n */\nfunction createDisabledPseudo( disabled ) {\n\n\t// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable\n\treturn function( elem ) {\n\n\t\t// Only certain elements can match :enabled or :disabled\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled\n\t\tif ( \"form\" in elem ) {\n\n\t\t\t// Check for inherited disabledness on relevant non-disabled elements:\n\t\t\t// * listed form-associated elements in a disabled fieldset\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#category-listed\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled\n\t\t\t// * option elements in a disabled optgroup\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled\n\t\t\t// All such elements have a \"form\" property.\n\t\t\tif ( elem.parentNode && elem.disabled === false ) {\n\n\t\t\t\t// Option elements defer to a parent optgroup if present\n\t\t\t\tif ( \"label\" in elem ) {\n\t\t\t\t\tif ( \"label\" in elem.parentNode ) {\n\t\t\t\t\t\treturn elem.parentNode.disabled === disabled;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn elem.disabled === disabled;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Support: IE 6 - 11\n\t\t\t\t// Use the isDisabled shortcut property to check for disabled fieldset ancestors\n\t\t\t\treturn elem.isDisabled === disabled ||\n\n\t\t\t\t\t// Where there is no isDisabled, check manually\n\t\t\t\t\t/* jshint -W018 */\n\t\t\t\t\telem.isDisabled !== !disabled &&\n\t\t\t\t\t\tdisabledAncestor( elem ) === disabled;\n\t\t\t}\n\n\t\t\treturn elem.disabled === disabled;\n\n\t\t// Try to winnow out elements that can't be disabled before trusting the disabled property.\n\t\t// Some victims get caught in our net (label, legend, menu, track), but it shouldn't\n\t\t// even exist on them, let alone have a boolean value.\n\t\t} else if ( \"label\" in elem ) {\n\t\t\treturn elem.disabled === disabled;\n\t\t}\n\n\t\t// Remaining elements are neither :enabled nor :disabled\n\t\treturn false;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for positionals\n * @param {Function} fn\n */\nfunction createPositionalPseudo( fn ) {\n\treturn markFunction(function( argument ) {\n\t\targument = +argument;\n\t\treturn markFunction(function( seed, matches ) {\n\t\t\tvar j,\n\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\n\t\t\t\ti = matchIndexes.length;\n\n\t\t\t// Match elements found at the specified indexes\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( seed[ (j = matchIndexes[i]) ] ) {\n\t\t\t\t\tseed[j] = !(matches[j] = seed[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Checks a node for validity as a Sizzle context\n * @param {Element|Object=} context\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n */\nfunction testContext( context ) {\n\treturn context && typeof context.getElementsByTagName !== \"undefined\" && context;\n}\n\n// Expose support vars for convenience\nsupport = Sizzle.support = {};\n\n/**\n * Detects XML nodes\n * @param {Element|Object} elem An element or a document\n * @returns {Boolean} True iff elem is a non-HTML XML node\n */\nisXML = Sizzle.isXML = function( elem ) {\n\t// documentElement is verified for cases where it doesn't yet exist\n\t// (such as loading iframes in IE - #4833)\n\tvar documentElement = elem && (elem.ownerDocument || elem).documentElement;\n\treturn documentElement ? documentElement.nodeName !== \"HTML\" : false;\n};\n\n/**\n * Sets document-related variables once based on the current document\n * @param {Element|Object} [doc] An element or document object to use to set the document\n * @returns {Object} Returns the current document\n */\nsetDocument = Sizzle.setDocument = function( node ) {\n\tvar hasCompare, subWindow,\n\t\tdoc = node ? node.ownerDocument || node : preferredDoc;\n\n\t// Return early if doc is invalid or already selected\n\tif ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {\n\t\treturn document;\n\t}\n\n\t// Update global variables\n\tdocument = doc;\n\tdocElem = document.documentElement;\n\tdocumentIsHTML = !isXML( document );\n\n\t// Support: IE 9-11, Edge\n\t// Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\n\tif ( preferredDoc !== document &&\n\t\t(subWindow = document.defaultView) && subWindow.top !== subWindow ) {\n\n\t\t// Support: IE 11, Edge\n\t\tif ( subWindow.addEventListener ) {\n\t\t\tsubWindow.addEventListener( \"unload\", unloadHandler, false );\n\n\t\t// Support: IE 9 - 10 only\n\t\t} else if ( subWindow.attachEvent ) {\n\t\t\tsubWindow.attachEvent( \"onunload\", unloadHandler );\n\t\t}\n\t}\n\n\t/* Attributes\n\t---------------------------------------------------------------------- */\n\n\t// Support: IE<8\n\t// Verify that getAttribute really returns attributes and not properties\n\t// (excepting IE8 booleans)\n\tsupport.attributes = assert(function( el ) {\n\t\tel.className = \"i\";\n\t\treturn !el.getAttribute(\"className\");\n\t});\n\n\t/* getElement(s)By*\n\t---------------------------------------------------------------------- */\n\n\t// Check if getElementsByTagName(\"*\") returns only elements\n\tsupport.getElementsByTagName = assert(function( el ) {\n\t\tel.appendChild( document.createComment(\"\") );\n\t\treturn !el.getElementsByTagName(\"*\").length;\n\t});\n\n\t// Support: IE<9\n\tsupport.getElementsByClassName = rnative.test( document.getElementsByClassName );\n\n\t// Support: IE<10\n\t// Check if getElementById returns elements by name\n\t// The broken getElementById methods don't pick up programmatically-set names,\n\t// so use a roundabout getElementsByName test\n\tsupport.getById = assert(function( el ) {\n\t\tdocElem.appendChild( el ).id = expando;\n\t\treturn !document.getElementsByName || !document.getElementsByName( expando ).length;\n\t});\n\n\t// ID filter and find\n\tif ( support.getById ) {\n\t\tExpr.filter[\"ID\"] = function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn elem.getAttribute(\"id\") === attrId;\n\t\t\t};\n\t\t};\n\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar elem = context.getElementById( id );\n\t\t\t\treturn elem ? [ elem ] : [];\n\t\t\t}\n\t\t};\n\t} else {\n\t\tExpr.filter[\"ID\"] =  function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\tvar node = typeof elem.getAttributeNode !== \"undefined\" &&\n\t\t\t\t\telem.getAttributeNode(\"id\");\n\t\t\t\treturn node && node.value === attrId;\n\t\t\t};\n\t\t};\n\n\t\t// Support: IE 6 - 7 only\n\t\t// getElementById is not reliable as a find shortcut\n\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar node, i, elems,\n\t\t\t\t\telem = context.getElementById( id );\n\n\t\t\t\tif ( elem ) {\n\n\t\t\t\t\t// Verify the id attribute\n\t\t\t\t\tnode = elem.getAttributeNode(\"id\");\n\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t}\n\n\t\t\t\t\t// Fall back on getElementsByName\n\t\t\t\t\telems = context.getElementsByName( id );\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile ( (elem = elems[i++]) ) {\n\t\t\t\t\t\tnode = elem.getAttributeNode(\"id\");\n\t\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn [];\n\t\t\t}\n\t\t};\n\t}\n\n\t// Tag\n\tExpr.find[\"TAG\"] = support.getElementsByTagName ?\n\t\tfunction( tag, context ) {\n\t\t\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\t\t\treturn context.getElementsByTagName( tag );\n\n\t\t\t// DocumentFragment nodes don't have gEBTN\n\t\t\t} else if ( support.qsa ) {\n\t\t\t\treturn context.querySelectorAll( tag );\n\t\t\t}\n\t\t} :\n\n\t\tfunction( tag, context ) {\n\t\t\tvar elem,\n\t\t\t\ttmp = [],\n\t\t\t\ti = 0,\n\t\t\t\t// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n\t\t\t\tresults = context.getElementsByTagName( tag );\n\n\t\t\t// Filter out possible comments\n\t\t\tif ( tag === \"*\" ) {\n\t\t\t\twhile ( (elem = results[i++]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\ttmp.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmp;\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t// Class\n\tExpr.find[\"CLASS\"] = support.getElementsByClassName && function( className, context ) {\n\t\tif ( typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML ) {\n\t\t\treturn context.getElementsByClassName( className );\n\t\t}\n\t};\n\n\t/* QSA/matchesSelector\n\t---------------------------------------------------------------------- */\n\n\t// QSA and matchesSelector support\n\n\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\trbuggyMatches = [];\n\n\t// qSa(:focus) reports false when true (Chrome 21)\n\t// We allow this because of a bug in IE8/9 that throws an error\n\t// whenever `document.activeElement` is accessed on an iframe\n\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\n\t// See https://bugs.jquery.com/ticket/13378\n\trbuggyQSA = [];\n\n\tif ( (support.qsa = rnative.test( document.querySelectorAll )) ) {\n\t\t// Build QSA regex\n\t\t// Regex strategy adopted from Diego Perini\n\t\tassert(function( el ) {\n\t\t\t// Select is set to empty string on purpose\n\t\t\t// This is to test IE's treatment of not explicitly\n\t\t\t// setting a boolean content attribute,\n\t\t\t// since its presence should be enough\n\t\t\t// https://bugs.jquery.com/ticket/12359\n\t\t\tdocElem.appendChild( el ).innerHTML = \"<a id='\" + expando + \"'></a>\" +\n\t\t\t\t\"<select id='\" + expando + \"-\\r\\\\' msallowcapture=''>\" +\n\t\t\t\t\"<option selected=''></option></select>\";\n\n\t\t\t// Support: IE8, Opera 11-12.16\n\t\t\t// Nothing should be selected when empty strings follow ^= or $= or *=\n\t\t\t// The test attribute must be unknown in Opera but \"safe\" for WinRT\n\t\t\t// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\t\t\tif ( el.querySelectorAll(\"[msallowcapture^='']\").length ) {\n\t\t\t\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// Support: IE8\n\t\t\t// Boolean attributes and \"value\" are not treated correctly\n\t\t\tif ( !el.querySelectorAll(\"[selected]\").length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\n\t\t\t}\n\n\t\t\t// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\n\t\t\tif ( !el.querySelectorAll( \"[id~=\" + expando + \"-]\" ).length ) {\n\t\t\t\trbuggyQSA.push(\"~=\");\n\t\t\t}\n\n\t\t\t// Webkit/Opera - :checked should return selected option elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !el.querySelectorAll(\":checked\").length ) {\n\t\t\t\trbuggyQSA.push(\":checked\");\n\t\t\t}\n\n\t\t\t// Support: Safari 8+, iOS 8+\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=136851\n\t\t\t// In-page `selector#id sibling-combinator selector` fails\n\t\t\tif ( !el.querySelectorAll( \"a#\" + expando + \"+*\" ).length ) {\n\t\t\t\trbuggyQSA.push(\".#.+[+~]\");\n\t\t\t}\n\t\t});\n\n\t\tassert(function( el ) {\n\t\t\tel.innerHTML = \"<a href='' disabled='disabled'></a>\" +\n\t\t\t\t\"<select disabled='disabled'><option/></select>\";\n\n\t\t\t// Support: Windows 8 Native Apps\n\t\t\t// The type and name attributes are restricted during .innerHTML assignment\n\t\t\tvar input = document.createElement(\"input\");\n\t\t\tinput.setAttribute( \"type\", \"hidden\" );\n\t\t\tel.appendChild( input ).setAttribute( \"name\", \"D\" );\n\n\t\t\t// Support: IE8\n\t\t\t// Enforce case-sensitivity of name attribute\n\t\t\tif ( el.querySelectorAll(\"[name=d]\").length ) {\n\t\t\t\trbuggyQSA.push( \"name\" + whitespace + \"*[*^$|!~]?=\" );\n\t\t\t}\n\n\t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( el.querySelectorAll(\":enabled\").length !== 2 ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Support: IE9-11+\n\t\t\t// IE's :disabled selector does not pick up the children of disabled fieldsets\n\t\t\tdocElem.appendChild( el ).disabled = true;\n\t\t\tif ( el.querySelectorAll(\":disabled\").length !== 2 ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\n\t\t\tel.querySelectorAll(\"*,:x\");\n\t\t\trbuggyQSA.push(\",.*:\");\n\t\t});\n\t}\n\n\tif ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||\n\t\tdocElem.webkitMatchesSelector ||\n\t\tdocElem.mozMatchesSelector ||\n\t\tdocElem.oMatchesSelector ||\n\t\tdocElem.msMatchesSelector) )) ) {\n\n\t\tassert(function( el ) {\n\t\t\t// Check to see if it's possible to do matchesSelector\n\t\t\t// on a disconnected node (IE 9)\n\t\t\tsupport.disconnectedMatch = matches.call( el, \"*\" );\n\n\t\t\t// This should fail with an exception\n\t\t\t// Gecko does not error, returns false instead\n\t\t\tmatches.call( el, \"[s!='']:x\" );\n\t\t\trbuggyMatches.push( \"!=\", pseudos );\n\t\t});\n\t}\n\n\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join(\"|\") );\n\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join(\"|\") );\n\n\t/* Contains\n\t---------------------------------------------------------------------- */\n\thasCompare = rnative.test( docElem.compareDocumentPosition );\n\n\t// Element contains another\n\t// Purposefully self-exclusive\n\t// As in, an element does not contain itself\n\tcontains = hasCompare || rnative.test( docElem.contains ) ?\n\t\tfunction( a, b ) {\n\t\t\tvar adown = a.nodeType === 9 ? a.documentElement : a,\n\t\t\t\tbup = b && b.parentNode;\n\t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\n\t\t\t\tadown.contains ?\n\t\t\t\t\tadown.contains( bup ) :\n\t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n\t\t\t));\n\t\t} :\n\t\tfunction( a, b ) {\n\t\t\tif ( b ) {\n\t\t\t\twhile ( (b = b.parentNode) ) {\n\t\t\t\t\tif ( b === a ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t/* Sorting\n\t---------------------------------------------------------------------- */\n\n\t// Document order sorting\n\tsortOrder = hasCompare ?\n\tfunction( a, b ) {\n\n\t\t// Flag for duplicate removal\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Sort on method existence if only one input has compareDocumentPosition\n\t\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\t\tif ( compare ) {\n\t\t\treturn compare;\n\t\t}\n\n\t\t// Calculate position if both inputs belong to the same document\n\t\tcompare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?\n\t\t\ta.compareDocumentPosition( b ) :\n\n\t\t\t// Otherwise we know they are disconnected\n\t\t\t1;\n\n\t\t// Disconnected nodes\n\t\tif ( compare & 1 ||\n\t\t\t(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {\n\n\t\t\t// Choose the first element that is related to our preferred document\n\t\t\tif ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\t// Maintain original order\n\t\t\treturn sortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\t\t}\n\n\t\treturn compare & 4 ? -1 : 1;\n\t} :\n\tfunction( a, b ) {\n\t\t// Exit early if the nodes are identical\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\taup = a.parentNode,\n\t\t\tbup = b.parentNode,\n\t\t\tap = [ a ],\n\t\t\tbp = [ b ];\n\n\t\t// Parentless nodes are either documents or disconnected\n\t\tif ( !aup || !bup ) {\n\t\t\treturn a === document ? -1 :\n\t\t\t\tb === document ? 1 :\n\t\t\t\taup ? -1 :\n\t\t\t\tbup ? 1 :\n\t\t\t\tsortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\n\t\t// If the nodes are siblings, we can do a quick check\n\t\t} else if ( aup === bup ) {\n\t\t\treturn siblingCheck( a, b );\n\t\t}\n\n\t\t// Otherwise we need full lists of their ancestors for comparison\n\t\tcur = a;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tap.unshift( cur );\n\t\t}\n\t\tcur = b;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tbp.unshift( cur );\n\t\t}\n\n\t\t// Walk down the tree looking for a discrepancy\n\t\twhile ( ap[i] === bp[i] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i ?\n\t\t\t// Do a sibling check if the nodes have a common ancestor\n\t\t\tsiblingCheck( ap[i], bp[i] ) :\n\n\t\t\t// Otherwise nodes in our document sort first\n\t\t\tap[i] === preferredDoc ? -1 :\n\t\t\tbp[i] === preferredDoc ? 1 :\n\t\t\t0;\n\t};\n\n\treturn document;\n};\n\nSizzle.matches = function( expr, elements ) {\n\treturn Sizzle( expr, null, null, elements );\n};\n\nSizzle.matchesSelector = function( elem, expr ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\t// Make sure that attribute selectors are quoted\n\texpr = expr.replace( rattributeQuotes, \"='$1']\" );\n\n\tif ( support.matchesSelector && documentIsHTML &&\n\t\t!compilerCache[ expr + \" \" ] &&\n\t\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\n\t\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\n\n\t\ttry {\n\t\t\tvar ret = matches.call( elem, expr );\n\n\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\n\t\t\tif ( ret || support.disconnectedMatch ||\n\t\t\t\t\t// As well, disconnected nodes are said to be in a document\n\t\t\t\t\t// fragment in IE 9\n\t\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t} catch (e) {}\n\t}\n\n\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\n};\n\nSizzle.contains = function( context, elem ) {\n\t// Set document vars if needed\n\tif ( ( context.ownerDocument || context ) !== document ) {\n\t\tsetDocument( context );\n\t}\n\treturn contains( context, elem );\n};\n\nSizzle.attr = function( elem, name ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\n\t\t// Don't get fooled by Object.prototype properties (jQuery #13807)\n\t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\n\t\t\tfn( elem, name, !documentIsHTML ) :\n\t\t\tundefined;\n\n\treturn val !== undefined ?\n\t\tval :\n\t\tsupport.attributes || !documentIsHTML ?\n\t\t\telem.getAttribute( name ) :\n\t\t\t(val = elem.getAttributeNode(name)) && val.specified ?\n\t\t\t\tval.value :\n\t\t\t\tnull;\n};\n\nSizzle.escape = function( sel ) {\n\treturn (sel + \"\").replace( rcssescape, fcssescape );\n};\n\nSizzle.error = function( msg ) {\n\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\n};\n\n/**\n * Document sorting and removing duplicates\n * @param {ArrayLike} results\n */\nSizzle.uniqueSort = function( results ) {\n\tvar elem,\n\t\tduplicates = [],\n\t\tj = 0,\n\t\ti = 0;\n\n\t// Unless we *know* we can detect duplicates, assume their presence\n\thasDuplicate = !support.detectDuplicates;\n\tsortInput = !support.sortStable && results.slice( 0 );\n\tresults.sort( sortOrder );\n\n\tif ( hasDuplicate ) {\n\t\twhile ( (elem = results[i++]) ) {\n\t\t\tif ( elem === results[ i ] ) {\n\t\t\t\tj = duplicates.push( i );\n\t\t\t}\n\t\t}\n\t\twhile ( j-- ) {\n\t\t\tresults.splice( duplicates[ j ], 1 );\n\t\t}\n\t}\n\n\t// Clear input after sorting to release objects\n\t// See https://github.com/jquery/sizzle/pull/225\n\tsortInput = null;\n\n\treturn results;\n};\n\n/**\n * Utility function for retrieving the text value of an array of DOM nodes\n * @param {Array|Element} elem\n */\ngetText = Sizzle.getText = function( elem ) {\n\tvar node,\n\t\tret = \"\",\n\t\ti = 0,\n\t\tnodeType = elem.nodeType;\n\n\tif ( !nodeType ) {\n\t\t// If no nodeType, this is expected to be an array\n\t\twhile ( (node = elem[i++]) ) {\n\t\t\t// Do not traverse comment nodes\n\t\t\tret += getText( node );\n\t\t}\n\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\n\t\t// Use textContent for elements\n\t\t// innerText usage removed for consistency of new lines (jQuery #11153)\n\t\tif ( typeof elem.textContent === \"string\" ) {\n\t\t\treturn elem.textContent;\n\t\t} else {\n\t\t\t// Traverse its children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tret += getText( elem );\n\t\t\t}\n\t\t}\n\t} else if ( nodeType === 3 || nodeType === 4 ) {\n\t\treturn elem.nodeValue;\n\t}\n\t// Do not include comment or processing instruction nodes\n\n\treturn ret;\n};\n\nExpr = Sizzle.selectors = {\n\n\t// Can be adjusted by the user\n\tcacheLength: 50,\n\n\tcreatePseudo: markFunction,\n\n\tmatch: matchExpr,\n\n\tattrHandle: {},\n\n\tfind: {},\n\n\trelative: {\n\t\t\">\": { dir: \"parentNode\", first: true },\n\t\t\" \": { dir: \"parentNode\" },\n\t\t\"+\": { dir: \"previousSibling\", first: true },\n\t\t\"~\": { dir: \"previousSibling\" }\n\t},\n\n\tpreFilter: {\n\t\t\"ATTR\": function( match ) {\n\t\t\tmatch[1] = match[1].replace( runescape, funescape );\n\n\t\t\t// Move the given value to match[3] whether quoted or unquoted\n\t\t\tmatch[3] = ( match[3] || match[4] || match[5] || \"\" ).replace( runescape, funescape );\n\n\t\t\tif ( match[2] === \"~=\" ) {\n\t\t\t\tmatch[3] = \" \" + match[3] + \" \";\n\t\t\t}\n\n\t\t\treturn match.slice( 0, 4 );\n\t\t},\n\n\t\t\"CHILD\": function( match ) {\n\t\t\t/* matches from matchExpr[\"CHILD\"]\n\t\t\t\t1 type (only|nth|...)\n\t\t\t\t2 what (child|of-type)\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t5 sign of xn-component\n\t\t\t\t6 x of xn-component\n\t\t\t\t7 sign of y-component\n\t\t\t\t8 y of y-component\n\t\t\t*/\n\t\t\tmatch[1] = match[1].toLowerCase();\n\n\t\t\tif ( match[1].slice( 0, 3 ) === \"nth\" ) {\n\t\t\t\t// nth-* requires argument\n\t\t\t\tif ( !match[3] ) {\n\t\t\t\t\tSizzle.error( match[0] );\n\t\t\t\t}\n\n\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\n\t\t\t\t// remember that false/true cast respectively to 0/1\n\t\t\t\tmatch[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === \"even\" || match[3] === \"odd\" ) );\n\t\t\t\tmatch[5] = +( ( match[7] + match[8] ) || match[3] === \"odd\" );\n\n\t\t\t// other types prohibit arguments\n\t\t\t} else if ( match[3] ) {\n\t\t\t\tSizzle.error( match[0] );\n\t\t\t}\n\n\t\t\treturn match;\n\t\t},\n\n\t\t\"PSEUDO\": function( match ) {\n\t\t\tvar excess,\n\t\t\t\tunquoted = !match[6] && match[2];\n\n\t\t\tif ( matchExpr[\"CHILD\"].test( match[0] ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Accept quoted arguments as-is\n\t\t\tif ( match[3] ) {\n\t\t\t\tmatch[2] = match[4] || match[5] || \"\";\n\n\t\t\t// Strip excess characters from unquoted arguments\n\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\n\t\t\t\t// Get excess from tokenize (recursively)\n\t\t\t\t(excess = tokenize( unquoted, true )) &&\n\t\t\t\t// advance to the next closing parenthesis\n\t\t\t\t(excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length) ) {\n\n\t\t\t\t// excess is a negative index\n\t\t\t\tmatch[0] = match[0].slice( 0, excess );\n\t\t\t\tmatch[2] = unquoted.slice( 0, excess );\n\t\t\t}\n\n\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\n\t\t\treturn match.slice( 0, 3 );\n\t\t}\n\t},\n\n\tfilter: {\n\n\t\t\"TAG\": function( nodeNameSelector ) {\n\t\t\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn nodeNameSelector === \"*\" ?\n\t\t\t\tfunction() { return true; } :\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n\t\t\t\t};\n\t\t},\n\n\t\t\"CLASS\": function( className ) {\n\t\t\tvar pattern = classCache[ className + \" \" ];\n\n\t\t\treturn pattern ||\n\t\t\t\t(pattern = new RegExp( \"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\" )) &&\n\t\t\t\tclassCache( className, function( elem ) {\n\t\t\t\t\treturn pattern.test( typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== \"undefined\" && elem.getAttribute(\"class\") || \"\" );\n\t\t\t\t});\n\t\t},\n\n\t\t\"ATTR\": function( name, operator, check ) {\n\t\t\treturn function( elem ) {\n\t\t\t\tvar result = Sizzle.attr( elem, name );\n\n\t\t\t\tif ( result == null ) {\n\t\t\t\t\treturn operator === \"!=\";\n\t\t\t\t}\n\t\t\t\tif ( !operator ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tresult += \"\";\n\n\t\t\t\treturn operator === \"=\" ? result === check :\n\t\t\t\t\toperator === \"!=\" ? result !== check :\n\t\t\t\t\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\n\t\t\t\t\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\n\t\t\t\t\toperator === \"~=\" ? ( \" \" + result.replace( rwhitespace, \" \" ) + \" \" ).indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\n\t\t\t\t\tfalse;\n\t\t\t};\n\t\t},\n\n\t\t\"CHILD\": function( type, what, argument, first, last ) {\n\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\n\t\t\t\tforward = type.slice( -4 ) !== \"last\",\n\t\t\t\tofType = what === \"of-type\";\n\n\t\t\treturn first === 1 && last === 0 ?\n\n\t\t\t\t// Shortcut for :nth-*(n)\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn !!elem.parentNode;\n\t\t\t\t} :\n\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tvar cache, uniqueCache, outerCache, node, nodeIndex, start,\n\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n\t\t\t\t\t\tparent = elem.parentNode,\n\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\n\t\t\t\t\t\tuseCache = !xml && !ofType,\n\t\t\t\t\t\tdiff = false;\n\n\t\t\t\t\tif ( parent ) {\n\n\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\n\t\t\t\t\t\tif ( simple ) {\n\t\t\t\t\t\t\twhile ( dir ) {\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\twhile ( (node = node[ dir ]) ) {\n\t\t\t\t\t\t\t\t\tif ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) {\n\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\n\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\n\n\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\n\t\t\t\t\t\tif ( forward && useCache ) {\n\n\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\n\n\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\tnode = parent;\n\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\tdiff = nodeIndex && cache[ 2 ];\n\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\n\n\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\n\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\n\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\n\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\n\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, nodeIndex, diff ];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Use previously-cached element index if available\n\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\t\tdiff = nodeIndex;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// xml :nth-child(...)\n\t\t\t\t\t\t\t// or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\t\t\t\t\t\t\tif ( diff === false ) {\n\t\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\n\t\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\t\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t\tif ( ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) &&\n\t\t\t\t\t\t\t\t\t\t++diff ) {\n\n\t\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\n\t\t\t\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, diff ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif ( node === elem ) {\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\n\t\t\t\t\t\tdiff -= last;\n\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t},\n\n\t\t\"PSEUDO\": function( pseudo, argument ) {\n\t\t\t// pseudo-class names are case-insensitive\n\t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\n\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n\t\t\t// Remember that setFilters inherits from pseudos\n\t\t\tvar args,\n\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\n\t\t\t\t\tSizzle.error( \"unsupported pseudo: \" + pseudo );\n\n\t\t\t// The user may use createPseudo to indicate that\n\t\t\t// arguments are needed to create the filter function\n\t\t\t// just as Sizzle does\n\t\t\tif ( fn[ expando ] ) {\n\t\t\t\treturn fn( argument );\n\t\t\t}\n\n\t\t\t// But maintain support for old signatures\n\t\t\tif ( fn.length > 1 ) {\n\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\n\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\n\t\t\t\t\tmarkFunction(function( seed, matches ) {\n\t\t\t\t\t\tvar idx,\n\t\t\t\t\t\t\tmatched = fn( seed, argument ),\n\t\t\t\t\t\t\ti = matched.length;\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tidx = indexOf( seed, matched[i] );\n\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[i] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}) :\n\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\treturn fn( elem, 0, args );\n\t\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn fn;\n\t\t}\n\t},\n\n\tpseudos: {\n\t\t// Potentially complex pseudos\n\t\t\"not\": markFunction(function( selector ) {\n\t\t\t// Trim the selector passed to compile\n\t\t\t// to avoid treating leading and trailing\n\t\t\t// spaces as combinators\n\t\t\tvar input = [],\n\t\t\t\tresults = [],\n\t\t\t\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\n\n\t\t\treturn matcher[ expando ] ?\n\t\t\t\tmarkFunction(function( seed, matches, context, xml ) {\n\t\t\t\t\tvar elem,\n\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\n\t\t\t\t\t\ti = seed.length;\n\n\t\t\t\t\t// Match elements unmatched by `matcher`\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = unmatched[i]) ) {\n\t\t\t\t\t\t\tseed[i] = !(matches[i] = elem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}) :\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tinput[0] = elem;\n\t\t\t\t\tmatcher( input, null, xml, results );\n\t\t\t\t\t// Don't keep the element (issue #299)\n\t\t\t\t\tinput[0] = null;\n\t\t\t\t\treturn !results.pop();\n\t\t\t\t};\n\t\t}),\n\n\t\t\"has\": markFunction(function( selector ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn Sizzle( selector, elem ).length > 0;\n\t\t\t};\n\t\t}),\n\n\t\t\"contains\": markFunction(function( text ) {\n\t\t\ttext = text.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;\n\t\t\t};\n\t\t}),\n\n\t\t// \"Whether an element is represented by a :lang() selector\n\t\t// is based solely on the element's language value\n\t\t// being equal to the identifier C,\n\t\t// or beginning with the identifier C immediately followed by \"-\".\n\t\t// The matching of C against the element's language value is performed case-insensitively.\n\t\t// The identifier C does not have to be a valid language name.\"\n\t\t// http://www.w3.org/TR/selectors/#lang-pseudo\n\t\t\"lang\": markFunction( function( lang ) {\n\t\t\t// lang value must be a valid identifier\n\t\t\tif ( !ridentifier.test(lang || \"\") ) {\n\t\t\t\tSizzle.error( \"unsupported lang: \" + lang );\n\t\t\t}\n\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn function( elem ) {\n\t\t\t\tvar elemLang;\n\t\t\t\tdo {\n\t\t\t\t\tif ( (elemLang = documentIsHTML ?\n\t\t\t\t\t\telem.lang :\n\t\t\t\t\t\telem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) ) {\n\n\t\t\t\t\t\telemLang = elemLang.toLowerCase();\n\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\n\t\t\t\t\t}\n\t\t\t\t} while ( (elem = elem.parentNode) && elem.nodeType === 1 );\n\t\t\t\treturn false;\n\t\t\t};\n\t\t}),\n\n\t\t// Miscellaneous\n\t\t\"target\": function( elem ) {\n\t\t\tvar hash = window.location && window.location.hash;\n\t\t\treturn hash && hash.slice( 1 ) === elem.id;\n\t\t},\n\n\t\t\"root\": function( elem ) {\n\t\t\treturn elem === docElem;\n\t\t},\n\n\t\t\"focus\": function( elem ) {\n\t\t\treturn elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n\t\t},\n\n\t\t// Boolean properties\n\t\t\"enabled\": createDisabledPseudo( false ),\n\t\t\"disabled\": createDisabledPseudo( true ),\n\n\t\t\"checked\": function( elem ) {\n\t\t\t// In CSS3, :checked should return both checked and selected elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\tvar nodeName = elem.nodeName.toLowerCase();\n\t\t\treturn (nodeName === \"input\" && !!elem.checked) || (nodeName === \"option\" && !!elem.selected);\n\t\t},\n\n\t\t\"selected\": function( elem ) {\n\t\t\t// Accessing this property makes selected-by-default\n\t\t\t// options in Safari work properly\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\telem.parentNode.selectedIndex;\n\t\t\t}\n\n\t\t\treturn elem.selected === true;\n\t\t},\n\n\t\t// Contents\n\t\t\"empty\": function( elem ) {\n\t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\n\t\t\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n\t\t\t//   but not by others (comment: 8; processing instruction: 7; etc.)\n\t\t\t// nodeType < 6 works because attributes (2) do not appear as children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tif ( elem.nodeType < 6 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t\"parent\": function( elem ) {\n\t\t\treturn !Expr.pseudos[\"empty\"]( elem );\n\t\t},\n\n\t\t// Element/input types\n\t\t\"header\": function( elem ) {\n\t\t\treturn rheader.test( elem.nodeName );\n\t\t},\n\n\t\t\"input\": function( elem ) {\n\t\t\treturn rinputs.test( elem.nodeName );\n\t\t},\n\n\t\t\"button\": function( elem ) {\n\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\n\t\t},\n\n\t\t\"text\": function( elem ) {\n\t\t\tvar attr;\n\t\t\treturn elem.nodeName.toLowerCase() === \"input\" &&\n\t\t\t\telem.type === \"text\" &&\n\n\t\t\t\t// Support: IE<8\n\t\t\t\t// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n\t\t\t\t( (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\" );\n\t\t},\n\n\t\t// Position-in-collection\n\t\t\"first\": createPositionalPseudo(function() {\n\t\t\treturn [ 0 ];\n\t\t}),\n\n\t\t\"last\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\treturn [ length - 1 ];\n\t\t}),\n\n\t\t\"eq\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\treturn [ argument < 0 ? argument + length : argument ];\n\t\t}),\n\n\t\t\"even\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"odd\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 1;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"lt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; --i >= 0; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"gt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; ++i < length; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t})\n\t}\n};\n\nExpr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"];\n\n// Add button/input type pseudos\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\n\tExpr.pseudos[ i ] = createInputPseudo( i );\n}\nfor ( i in { submit: true, reset: true } ) {\n\tExpr.pseudos[ i ] = createButtonPseudo( i );\n}\n\n// Easy API for creating new setFilters\nfunction setFilters() {}\nsetFilters.prototype = Expr.filters = Expr.pseudos;\nExpr.setFilters = new setFilters();\n\ntokenize = Sizzle.tokenize = function( selector, parseOnly ) {\n\tvar matched, match, tokens, type,\n\t\tsoFar, groups, preFilters,\n\t\tcached = tokenCache[ selector + \" \" ];\n\n\tif ( cached ) {\n\t\treturn parseOnly ? 0 : cached.slice( 0 );\n\t}\n\n\tsoFar = selector;\n\tgroups = [];\n\tpreFilters = Expr.preFilter;\n\n\twhile ( soFar ) {\n\n\t\t// Comma and first run\n\t\tif ( !matched || (match = rcomma.exec( soFar )) ) {\n\t\t\tif ( match ) {\n\t\t\t\t// Don't consume trailing commas as valid\n\t\t\t\tsoFar = soFar.slice( match[0].length ) || soFar;\n\t\t\t}\n\t\t\tgroups.push( (tokens = []) );\n\t\t}\n\n\t\tmatched = false;\n\n\t\t// Combinators\n\t\tif ( (match = rcombinators.exec( soFar )) ) {\n\t\t\tmatched = match.shift();\n\t\t\ttokens.push({\n\t\t\t\tvalue: matched,\n\t\t\t\t// Cast descendant combinators to space\n\t\t\t\ttype: match[0].replace( rtrim, \" \" )\n\t\t\t});\n\t\t\tsoFar = soFar.slice( matched.length );\n\t\t}\n\n\t\t// Filters\n\t\tfor ( type in Expr.filter ) {\n\t\t\tif ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||\n\t\t\t\t(match = preFilters[ type ]( match ))) ) {\n\t\t\t\tmatched = match.shift();\n\t\t\t\ttokens.push({\n\t\t\t\t\tvalue: matched,\n\t\t\t\t\ttype: type,\n\t\t\t\t\tmatches: match\n\t\t\t\t});\n\t\t\t\tsoFar = soFar.slice( matched.length );\n\t\t\t}\n\t\t}\n\n\t\tif ( !matched ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Return the length of the invalid excess\n\t// if we're just parsing\n\t// Otherwise, throw an error or return tokens\n\treturn parseOnly ?\n\t\tsoFar.length :\n\t\tsoFar ?\n\t\t\tSizzle.error( selector ) :\n\t\t\t// Cache the tokens\n\t\t\ttokenCache( selector, groups ).slice( 0 );\n};\n\nfunction toSelector( tokens ) {\n\tvar i = 0,\n\t\tlen = tokens.length,\n\t\tselector = \"\";\n\tfor ( ; i < len; i++ ) {\n\t\tselector += tokens[i].value;\n\t}\n\treturn selector;\n}\n\nfunction addCombinator( matcher, combinator, base ) {\n\tvar dir = combinator.dir,\n\t\tskip = combinator.next,\n\t\tkey = skip || dir,\n\t\tcheckNonElements = base && key === \"parentNode\",\n\t\tdoneName = done++;\n\n\treturn combinator.first ?\n\t\t// Check against closest ancestor/preceding element\n\t\tfunction( elem, context, xml ) {\n\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\treturn matcher( elem, context, xml );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t} :\n\n\t\t// Check against all ancestor/preceding elements\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar oldCache, uniqueCache, outerCache,\n\t\t\t\tnewCache = [ dirruns, doneName ];\n\n\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n\t\t\tif ( xml ) {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\touterCache = elem[ expando ] || (elem[ expando ] = {});\n\n\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\tuniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});\n\n\t\t\t\t\t\tif ( skip && skip === elem.nodeName.toLowerCase() ) {\n\t\t\t\t\t\t\telem = elem[ dir ] || elem;\n\t\t\t\t\t\t} else if ( (oldCache = uniqueCache[ key ]) &&\n\t\t\t\t\t\t\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\n\n\t\t\t\t\t\t\t// Assign to newCache so results back-propagate to previous elements\n\t\t\t\t\t\t\treturn (newCache[ 2 ] = oldCache[ 2 ]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Reuse newcache so results back-propagate to previous elements\n\t\t\t\t\t\t\tuniqueCache[ key ] = newCache;\n\n\t\t\t\t\t\t\t// A match means we're done; a fail means we have to keep checking\n\t\t\t\t\t\t\tif ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n}\n\nfunction elementMatcher( matchers ) {\n\treturn matchers.length > 1 ?\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar i = matchers.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( !matchers[i]( elem, context, xml ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} :\n\t\tmatchers[0];\n}\n\nfunction multipleContexts( selector, contexts, results ) {\n\tvar i = 0,\n\t\tlen = contexts.length;\n\tfor ( ; i < len; i++ ) {\n\t\tSizzle( selector, contexts[i], results );\n\t}\n\treturn results;\n}\n\nfunction condense( unmatched, map, filter, context, xml ) {\n\tvar elem,\n\t\tnewUnmatched = [],\n\t\ti = 0,\n\t\tlen = unmatched.length,\n\t\tmapped = map != null;\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (elem = unmatched[i]) ) {\n\t\t\tif ( !filter || filter( elem, context, xml ) ) {\n\t\t\t\tnewUnmatched.push( elem );\n\t\t\t\tif ( mapped ) {\n\t\t\t\t\tmap.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn newUnmatched;\n}\n\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\n\tif ( postFilter && !postFilter[ expando ] ) {\n\t\tpostFilter = setMatcher( postFilter );\n\t}\n\tif ( postFinder && !postFinder[ expando ] ) {\n\t\tpostFinder = setMatcher( postFinder, postSelector );\n\t}\n\treturn markFunction(function( seed, results, context, xml ) {\n\t\tvar temp, i, elem,\n\t\t\tpreMap = [],\n\t\t\tpostMap = [],\n\t\t\tpreexisting = results.length,\n\n\t\t\t// Get initial elements from seed or context\n\t\t\telems = seed || multipleContexts( selector || \"*\", context.nodeType ? [ context ] : context, [] ),\n\n\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\n\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\n\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\n\t\t\t\telems,\n\n\t\t\tmatcherOut = matcher ?\n\t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n\t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\n\n\t\t\t\t\t// ...intermediate processing is necessary\n\t\t\t\t\t[] :\n\n\t\t\t\t\t// ...otherwise use results directly\n\t\t\t\t\tresults :\n\t\t\t\tmatcherIn;\n\n\t\t// Find primary matches\n\t\tif ( matcher ) {\n\t\t\tmatcher( matcherIn, matcherOut, context, xml );\n\t\t}\n\n\t\t// Apply postFilter\n\t\tif ( postFilter ) {\n\t\t\ttemp = condense( matcherOut, postMap );\n\t\t\tpostFilter( temp, [], context, xml );\n\n\t\t\t// Un-match failing elements by moving them back to matcherIn\n\t\t\ti = temp.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( (elem = temp[i]) ) {\n\t\t\t\t\tmatcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( seed ) {\n\t\t\tif ( postFinder || preFilter ) {\n\t\t\t\tif ( postFinder ) {\n\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\n\t\t\t\t\ttemp = [];\n\t\t\t\t\ti = matcherOut.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = matcherOut[i]) ) {\n\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\n\t\t\t\t\t\t\ttemp.push( (matcherIn[i] = elem) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpostFinder( null, (matcherOut = []), temp, xml );\n\t\t\t\t}\n\n\t\t\t\t// Move matched elements from seed to results to keep them synchronized\n\t\t\t\ti = matcherOut.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( (elem = matcherOut[i]) &&\n\t\t\t\t\t\t(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {\n\n\t\t\t\t\t\tseed[temp] = !(results[temp] = elem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Add elements to results, through postFinder if defined\n\t\t} else {\n\t\t\tmatcherOut = condense(\n\t\t\t\tmatcherOut === results ?\n\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\n\t\t\t\t\tmatcherOut\n\t\t\t);\n\t\t\tif ( postFinder ) {\n\t\t\t\tpostFinder( null, results, matcherOut, xml );\n\t\t\t} else {\n\t\t\t\tpush.apply( results, matcherOut );\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction matcherFromTokens( tokens ) {\n\tvar checkContext, matcher, j,\n\t\tlen = tokens.length,\n\t\tleadingRelative = Expr.relative[ tokens[0].type ],\n\t\timplicitRelative = leadingRelative || Expr.relative[\" \"],\n\t\ti = leadingRelative ? 1 : 0,\n\n\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\n\t\tmatchContext = addCombinator( function( elem ) {\n\t\t\treturn elem === checkContext;\n\t\t}, implicitRelative, true ),\n\t\tmatchAnyContext = addCombinator( function( elem ) {\n\t\t\treturn indexOf( checkContext, elem ) > -1;\n\t\t}, implicitRelative, true ),\n\t\tmatchers = [ function( elem, context, xml ) {\n\t\t\tvar ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\n\t\t\t\t(checkContext = context).nodeType ?\n\t\t\t\t\tmatchContext( elem, context, xml ) :\n\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\n\t\t\t// Avoid hanging onto element (issue #299)\n\t\t\tcheckContext = null;\n\t\t\treturn ret;\n\t\t} ];\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (matcher = Expr.relative[ tokens[i].type ]) ) {\n\t\t\tmatchers = [ addCombinator(elementMatcher( matchers ), matcher) ];\n\t\t} else {\n\t\t\tmatcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );\n\n\t\t\t// Return special upon seeing a positional matcher\n\t\t\tif ( matcher[ expando ] ) {\n\t\t\t\t// Find the next relative operator (if any) for proper handling\n\t\t\t\tj = ++i;\n\t\t\t\tfor ( ; j < len; j++ ) {\n\t\t\t\t\tif ( Expr.relative[ tokens[j].type ] ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn setMatcher(\n\t\t\t\t\ti > 1 && elementMatcher( matchers ),\n\t\t\t\t\ti > 1 && toSelector(\n\t\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\n\t\t\t\t\t\ttokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" })\n\t\t\t\t\t).replace( rtrim, \"$1\" ),\n\t\t\t\t\tmatcher,\n\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\n\t\t\t\t\tj < len && matcherFromTokens( (tokens = tokens.slice( j )) ),\n\t\t\t\t\tj < len && toSelector( tokens )\n\t\t\t\t);\n\t\t\t}\n\t\t\tmatchers.push( matcher );\n\t\t}\n\t}\n\n\treturn elementMatcher( matchers );\n}\n\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\n\tvar bySet = setMatchers.length > 0,\n\t\tbyElement = elementMatchers.length > 0,\n\t\tsuperMatcher = function( seed, context, xml, results, outermost ) {\n\t\t\tvar elem, j, matcher,\n\t\t\t\tmatchedCount = 0,\n\t\t\t\ti = \"0\",\n\t\t\t\tunmatched = seed && [],\n\t\t\t\tsetMatched = [],\n\t\t\t\tcontextBackup = outermostContext,\n\t\t\t\t// We must always have either seed elements or outermost context\n\t\t\t\telems = seed || byElement && Expr.find[\"TAG\"]( \"*\", outermost ),\n\t\t\t\t// Use integer dirruns iff this is the outermost matcher\n\t\t\t\tdirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),\n\t\t\t\tlen = elems.length;\n\n\t\t\tif ( outermost ) {\n\t\t\t\toutermostContext = context === document || context || outermost;\n\t\t\t}\n\n\t\t\t// Add elements passing elementMatchers directly to results\n\t\t\t// Support: IE<9, Safari\n\t\t\t// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n\t\t\tfor ( ; i !== len && (elem = elems[i]) != null; i++ ) {\n\t\t\t\tif ( byElement && elem ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\tif ( !context && elem.ownerDocument !== document ) {\n\t\t\t\t\t\tsetDocument( elem );\n\t\t\t\t\t\txml = !documentIsHTML;\n\t\t\t\t\t}\n\t\t\t\t\twhile ( (matcher = elementMatchers[j++]) ) {\n\t\t\t\t\t\tif ( matcher( elem, context || document, xml) ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( outermost ) {\n\t\t\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Track unmatched elements for set filters\n\t\t\t\tif ( bySet ) {\n\t\t\t\t\t// They will have gone through all possible matchers\n\t\t\t\t\tif ( (elem = !matcher && elem) ) {\n\t\t\t\t\t\tmatchedCount--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Lengthen the array for every element, matched or not\n\t\t\t\t\tif ( seed ) {\n\t\t\t\t\t\tunmatched.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// `i` is now the count of elements visited above, and adding it to `matchedCount`\n\t\t\t// makes the latter nonnegative.\n\t\t\tmatchedCount += i;\n\n\t\t\t// Apply set filters to unmatched elements\n\t\t\t// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n\t\t\t// equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n\t\t\t// no element matchers and no seed.\n\t\t\t// Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n\t\t\t// case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n\t\t\t// numerically zero.\n\t\t\tif ( bySet && i !== matchedCount ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( (matcher = setMatchers[j++]) ) {\n\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\n\t\t\t\t}\n\n\t\t\t\tif ( seed ) {\n\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\n\t\t\t\t\tif ( matchedCount > 0 ) {\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tif ( !(unmatched[i] || setMatched[i]) ) {\n\t\t\t\t\t\t\t\tsetMatched[i] = pop.call( results );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Discard index placeholder values to get only actual matches\n\t\t\t\t\tsetMatched = condense( setMatched );\n\t\t\t\t}\n\n\t\t\t\t// Add matches to results\n\t\t\t\tpush.apply( results, setMatched );\n\n\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\n\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\n\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\n\n\t\t\t\t\tSizzle.uniqueSort( results );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Override manipulation of globals by nested matchers\n\t\t\tif ( outermost ) {\n\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\toutermostContext = contextBackup;\n\t\t\t}\n\n\t\t\treturn unmatched;\n\t\t};\n\n\treturn bySet ?\n\t\tmarkFunction( superMatcher ) :\n\t\tsuperMatcher;\n}\n\ncompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\n\tvar i,\n\t\tsetMatchers = [],\n\t\telementMatchers = [],\n\t\tcached = compilerCache[ selector + \" \" ];\n\n\tif ( !cached ) {\n\t\t// Generate a function of recursive functions that can be used to check each element\n\t\tif ( !match ) {\n\t\t\tmatch = tokenize( selector );\n\t\t}\n\t\ti = match.length;\n\t\twhile ( i-- ) {\n\t\t\tcached = matcherFromTokens( match[i] );\n\t\t\tif ( cached[ expando ] ) {\n\t\t\t\tsetMatchers.push( cached );\n\t\t\t} else {\n\t\t\t\telementMatchers.push( cached );\n\t\t\t}\n\t\t}\n\n\t\t// Cache the compiled function\n\t\tcached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );\n\n\t\t// Save selector and tokenization\n\t\tcached.selector = selector;\n\t}\n\treturn cached;\n};\n\n/**\n * A low-level selection function that works with Sizzle's compiled\n *  selector functions\n * @param {String|Function} selector A selector or a pre-compiled\n *  selector function built with Sizzle.compile\n * @param {Element} context\n * @param {Array} [results]\n * @param {Array} [seed] A set of elements to match against\n */\nselect = Sizzle.select = function( selector, context, results, seed ) {\n\tvar i, tokens, token, type, find,\n\t\tcompiled = typeof selector === \"function\" && selector,\n\t\tmatch = !seed && tokenize( (selector = compiled.selector || selector) );\n\n\tresults = results || [];\n\n\t// Try to minimize operations if there is only one selector in the list and no seed\n\t// (the latter of which guarantees us context)\n\tif ( match.length === 1 ) {\n\n\t\t// Reduce context if the leading compound selector is an ID\n\t\ttokens = match[0] = match[0].slice( 0 );\n\t\tif ( tokens.length > 2 && (token = tokens[0]).type === \"ID\" &&\n\t\t\t\tcontext.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[1].type ] ) {\n\n\t\t\tcontext = ( Expr.find[\"ID\"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];\n\t\t\tif ( !context ) {\n\t\t\t\treturn results;\n\n\t\t\t// Precompiled matchers will still verify ancestry, so step up a level\n\t\t\t} else if ( compiled ) {\n\t\t\t\tcontext = context.parentNode;\n\t\t\t}\n\n\t\t\tselector = selector.slice( tokens.shift().value.length );\n\t\t}\n\n\t\t// Fetch a seed set for right-to-left matching\n\t\ti = matchExpr[\"needsContext\"].test( selector ) ? 0 : tokens.length;\n\t\twhile ( i-- ) {\n\t\t\ttoken = tokens[i];\n\n\t\t\t// Abort if we hit a combinator\n\t\t\tif ( Expr.relative[ (type = token.type) ] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( (find = Expr.find[ type ]) ) {\n\t\t\t\t// Search, expanding context for leading sibling combinators\n\t\t\t\tif ( (seed = find(\n\t\t\t\t\ttoken.matches[0].replace( runescape, funescape ),\n\t\t\t\t\trsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context\n\t\t\t\t)) ) {\n\n\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\n\t\t\t\t\ttokens.splice( i, 1 );\n\t\t\t\t\tselector = seed.length && toSelector( tokens );\n\t\t\t\t\tif ( !selector ) {\n\t\t\t\t\t\tpush.apply( results, seed );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Compile and execute a filtering function if one is not provided\n\t// Provide `match` to avoid retokenization if we modified the selector above\n\t( compiled || compile( selector, match ) )(\n\t\tseed,\n\t\tcontext,\n\t\t!documentIsHTML,\n\t\tresults,\n\t\t!context || rsibling.test( selector ) && testContext( context.parentNode ) || context\n\t);\n\treturn results;\n};\n\n// One-time assignments\n\n// Sort stability\nsupport.sortStable = expando.split(\"\").sort( sortOrder ).join(\"\") === expando;\n\n// Support: Chrome 14-35+\n// Always assume duplicates if they aren't passed to the comparison function\nsupport.detectDuplicates = !!hasDuplicate;\n\n// Initialize against the default document\nsetDocument();\n\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n// Detached nodes confoundingly follow *each other*\nsupport.sortDetached = assert(function( el ) {\n\t// Should return 1, but returns 4 (following)\n\treturn el.compareDocumentPosition( document.createElement(\"fieldset\") ) & 1;\n});\n\n// Support: IE<8\n// Prevent attribute/property \"interpolation\"\n// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\nif ( !assert(function( el ) {\n\tel.innerHTML = \"<a href='#'></a>\";\n\treturn el.firstChild.getAttribute(\"href\") === \"#\" ;\n}) ) {\n\taddHandle( \"type|href|height|width\", function( elem, name, isXML ) {\n\t\tif ( !isXML ) {\n\t\t\treturn elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use defaultValue in place of getAttribute(\"value\")\nif ( !support.attributes || !assert(function( el ) {\n\tel.innerHTML = \"<input/>\";\n\tel.firstChild.setAttribute( \"value\", \"\" );\n\treturn el.firstChild.getAttribute( \"value\" ) === \"\";\n}) ) {\n\taddHandle( \"value\", function( elem, name, isXML ) {\n\t\tif ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\n\t\t\treturn elem.defaultValue;\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use getAttributeNode to fetch booleans when getAttribute lies\nif ( !assert(function( el ) {\n\treturn el.getAttribute(\"disabled\") == null;\n}) ) {\n\taddHandle( booleans, function( elem, name, isXML ) {\n\t\tvar val;\n\t\tif ( !isXML ) {\n\t\t\treturn elem[ name ] === true ? name.toLowerCase() :\n\t\t\t\t\t(val = elem.getAttributeNode( name )) && val.specified ?\n\t\t\t\t\tval.value :\n\t\t\t\tnull;\n\t\t}\n\t});\n}\n\nreturn Sizzle;\n\n})( window );\n\n\n\njQuery.find = Sizzle;\njQuery.expr = Sizzle.selectors;\n\n// Deprecated\njQuery.expr[ \":\" ] = jQuery.expr.pseudos;\njQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\njQuery.text = Sizzle.getText;\njQuery.isXMLDoc = Sizzle.isXML;\njQuery.contains = Sizzle.contains;\njQuery.escapeSelector = Sizzle.escape;\n\n\n\n\nvar dir = function( elem, dir, until ) {\n\tvar matched = [],\n\t\ttruncate = until !== undefined;\n\n\twhile ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {\n\t\tif ( elem.nodeType === 1 ) {\n\t\t\tif ( truncate && jQuery( elem ).is( until ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tmatched.push( elem );\n\t\t}\n\t}\n\treturn matched;\n};\n\n\nvar siblings = function( n, elem ) {\n\tvar matched = [];\n\n\tfor ( ; n; n = n.nextSibling ) {\n\t\tif ( n.nodeType === 1 && n !== elem ) {\n\t\t\tmatched.push( n );\n\t\t}\n\t}\n\n\treturn matched;\n};\n\n\nvar rneedsContext = jQuery.expr.match.needsContext;\n\nvar rsingleTag = ( /^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i );\n\n\n\nvar risSimple = /^.[^:#\\[\\.,]*$/;\n\n// Implement the identical functionality for filter and not\nfunction winnow( elements, qualifier, not ) {\n\tif ( jQuery.isFunction( qualifier ) ) {\n\t\treturn jQuery.grep( elements, function( elem, i ) {\n\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\n\t\t} );\n\t}\n\n\t// Single element\n\tif ( qualifier.nodeType ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( elem === qualifier ) !== not;\n\t\t} );\n\t}\n\n\t// Arraylike of elements (jQuery, arguments, Array)\n\tif ( typeof qualifier !== \"string\" ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not;\n\t\t} );\n\t}\n\n\t// Simple selector that can be filtered directly, removing non-Elements\n\tif ( risSimple.test( qualifier ) ) {\n\t\treturn jQuery.filter( qualifier, elements, not );\n\t}\n\n\t// Complex selector, compare the two sets, removing non-Elements\n\tqualifier = jQuery.filter( qualifier, elements );\n\treturn jQuery.grep( elements, function( elem ) {\n\t\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not && elem.nodeType === 1;\n\t} );\n}\n\njQuery.filter = function( expr, elems, not ) {\n\tvar elem = elems[ 0 ];\n\n\tif ( not ) {\n\t\texpr = \":not(\" + expr + \")\";\n\t}\n\n\tif ( elems.length === 1 && elem.nodeType === 1 ) {\n\t\treturn jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];\n\t}\n\n\treturn jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\n\t\treturn elem.nodeType === 1;\n\t} ) );\n};\n\njQuery.fn.extend( {\n\tfind: function( selector ) {\n\t\tvar i, ret,\n\t\t\tlen = this.length,\n\t\t\tself = this;\n\n\t\tif ( typeof selector !== \"string\" ) {\n\t\t\treturn this.pushStack( jQuery( selector ).filter( function() {\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} ) );\n\t\t}\n\n\t\tret = this.pushStack( [] );\n\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tjQuery.find( selector, self[ i ], ret );\n\t\t}\n\n\t\treturn len > 1 ? jQuery.uniqueSort( ret ) : ret;\n\t},\n\tfilter: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], false ) );\n\t},\n\tnot: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], true ) );\n\t},\n\tis: function( selector ) {\n\t\treturn !!winnow(\n\t\t\tthis,\n\n\t\t\t// If this is a positional/relative selector, check membership in the returned set\n\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\n\t\t\t\tjQuery( selector ) :\n\t\t\t\tselector || [],\n\t\t\tfalse\n\t\t).length;\n\t}\n} );\n\n\n// Initialize a jQuery object\n\n\n// A central reference to the root jQuery(document)\nvar rootjQuery,\n\n\t// A simple way to check for HTML strings\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n\t// Strict HTML recognition (#11290: must start with <)\n\t// Shortcut simple #id case for speed\n\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/,\n\n\tinit = jQuery.fn.init = function( selector, context, root ) {\n\t\tvar match, elem;\n\n\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\t\tif ( !selector ) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// Method init() accepts an alternate rootjQuery\n\t\t// so migrate can support jQuery.sub (gh-2101)\n\t\troot = root || rootjQuery;\n\n\t\t// Handle HTML strings\n\t\tif ( typeof selector === \"string\" ) {\n\t\t\tif ( selector[ 0 ] === \"<\" &&\n\t\t\t\tselector[ selector.length - 1 ] === \">\" &&\n\t\t\t\tselector.length >= 3 ) {\n\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\n\t\t\t\tmatch = [ null, selector, null ];\n\n\t\t\t} else {\n\t\t\t\tmatch = rquickExpr.exec( selector );\n\t\t\t}\n\n\t\t\t// Match html or make sure no context is specified for #id\n\t\t\tif ( match && ( match[ 1 ] || !context ) ) {\n\n\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\tif ( match[ 1 ] ) {\n\t\t\t\t\tcontext = context instanceof jQuery ? context[ 0 ] : context;\n\n\t\t\t\t\t// Option to run scripts is true for back-compat\n\t\t\t\t\t// Intentionally let the error be thrown if parseHTML is not present\n\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\n\t\t\t\t\t\tmatch[ 1 ],\n\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t) );\n\n\t\t\t\t\t// HANDLE: $(html, props)\n\t\t\t\t\tif ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {\n\t\t\t\t\t\tfor ( match in context ) {\n\n\t\t\t\t\t\t\t// Properties of context are called as methods if possible\n\t\t\t\t\t\t\tif ( jQuery.isFunction( this[ match ] ) ) {\n\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\n\n\t\t\t\t\t\t\t// ...and otherwise set as attributes\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t// HANDLE: $(#id)\n\t\t\t\t} else {\n\t\t\t\t\telem = document.getElementById( match[ 2 ] );\n\n\t\t\t\t\tif ( elem ) {\n\n\t\t\t\t\t\t// Inject the element directly into the jQuery object\n\t\t\t\t\t\tthis[ 0 ] = elem;\n\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t// HANDLE: $(expr, $(...))\n\t\t\t} else if ( !context || context.jquery ) {\n\t\t\t\treturn ( context || root ).find( selector );\n\n\t\t\t// HANDLE: $(expr, context)\n\t\t\t// (which is just equivalent to: $(context).find(expr)\n\t\t\t} else {\n\t\t\t\treturn this.constructor( context ).find( selector );\n\t\t\t}\n\n\t\t// HANDLE: $(DOMElement)\n\t\t} else if ( selector.nodeType ) {\n\t\t\tthis[ 0 ] = selector;\n\t\t\tthis.length = 1;\n\t\t\treturn this;\n\n\t\t// HANDLE: $(function)\n\t\t// Shortcut for document ready\n\t\t} else if ( jQuery.isFunction( selector ) ) {\n\t\t\treturn root.ready !== undefined ?\n\t\t\t\troot.ready( selector ) :\n\n\t\t\t\t// Execute immediately if ready is not present\n\t\t\t\tselector( jQuery );\n\t\t}\n\n\t\treturn jQuery.makeArray( selector, this );\n\t};\n\n// Give the init function the jQuery prototype for later instantiation\ninit.prototype = jQuery.fn;\n\n// Initialize central reference\nrootjQuery = jQuery( document );\n\n\nvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\n\n\t// Methods guaranteed to produce a unique set when starting from a unique set\n\tguaranteedUnique = {\n\t\tchildren: true,\n\t\tcontents: true,\n\t\tnext: true,\n\t\tprev: true\n\t};\n\njQuery.fn.extend( {\n\thas: function( target ) {\n\t\tvar targets = jQuery( target, this ),\n\t\t\tl = targets.length;\n\n\t\treturn this.filter( function() {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tif ( jQuery.contains( this, targets[ i ] ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\tclosest: function( selectors, context ) {\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tmatched = [],\n\t\t\ttargets = typeof selectors !== \"string\" && jQuery( selectors );\n\n\t\t// Positional selectors never match, since there's no _selection_ context\n\t\tif ( !rneedsContext.test( selectors ) ) {\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tfor ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {\n\n\t\t\t\t\t// Always skip document fragments\n\t\t\t\t\tif ( cur.nodeType < 11 && ( targets ?\n\t\t\t\t\t\ttargets.index( cur ) > -1 :\n\n\t\t\t\t\t\t// Don't pass non-elements to Sizzle\n\t\t\t\t\t\tcur.nodeType === 1 &&\n\t\t\t\t\t\t\tjQuery.find.matchesSelector( cur, selectors ) ) ) {\n\n\t\t\t\t\t\tmatched.push( cur );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );\n\t},\n\n\t// Determine the position of an element within the set\n\tindex: function( elem ) {\n\n\t\t// No argument, return index in parent\n\t\tif ( !elem ) {\n\t\t\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\n\t\t}\n\n\t\t// Index in selector\n\t\tif ( typeof elem === \"string\" ) {\n\t\t\treturn indexOf.call( jQuery( elem ), this[ 0 ] );\n\t\t}\n\n\t\t// Locate the position of the desired element\n\t\treturn indexOf.call( this,\n\n\t\t\t// If it receives a jQuery object, the first element is used\n\t\t\telem.jquery ? elem[ 0 ] : elem\n\t\t);\n\t},\n\n\tadd: function( selector, context ) {\n\t\treturn this.pushStack(\n\t\t\tjQuery.uniqueSort(\n\t\t\t\tjQuery.merge( this.get(), jQuery( selector, context ) )\n\t\t\t)\n\t\t);\n\t},\n\n\taddBack: function( selector ) {\n\t\treturn this.add( selector == null ?\n\t\t\tthis.prevObject : this.prevObject.filter( selector )\n\t\t);\n\t}\n} );\n\nfunction sibling( cur, dir ) {\n\twhile ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}\n\treturn cur;\n}\n\njQuery.each( {\n\tparent: function( elem ) {\n\t\tvar parent = elem.parentNode;\n\t\treturn parent && parent.nodeType !== 11 ? parent : null;\n\t},\n\tparents: function( elem ) {\n\t\treturn dir( elem, \"parentNode\" );\n\t},\n\tparentsUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"parentNode\", until );\n\t},\n\tnext: function( elem ) {\n\t\treturn sibling( elem, \"nextSibling\" );\n\t},\n\tprev: function( elem ) {\n\t\treturn sibling( elem, \"previousSibling\" );\n\t},\n\tnextAll: function( elem ) {\n\t\treturn dir( elem, \"nextSibling\" );\n\t},\n\tprevAll: function( elem ) {\n\t\treturn dir( elem, \"previousSibling\" );\n\t},\n\tnextUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"nextSibling\", until );\n\t},\n\tprevUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"previousSibling\", until );\n\t},\n\tsiblings: function( elem ) {\n\t\treturn siblings( ( elem.parentNode || {} ).firstChild, elem );\n\t},\n\tchildren: function( elem ) {\n\t\treturn siblings( elem.firstChild );\n\t},\n\tcontents: function( elem ) {\n\t\treturn elem.contentDocument || jQuery.merge( [], elem.childNodes );\n\t}\n}, function( name, fn ) {\n\tjQuery.fn[ name ] = function( until, selector ) {\n\t\tvar matched = jQuery.map( this, fn, until );\n\n\t\tif ( name.slice( -5 ) !== \"Until\" ) {\n\t\t\tselector = until;\n\t\t}\n\n\t\tif ( selector && typeof selector === \"string\" ) {\n\t\t\tmatched = jQuery.filter( selector, matched );\n\t\t}\n\n\t\tif ( this.length > 1 ) {\n\n\t\t\t// Remove duplicates\n\t\t\tif ( !guaranteedUnique[ name ] ) {\n\t\t\t\tjQuery.uniqueSort( matched );\n\t\t\t}\n\n\t\t\t// Reverse order for parents* and prev-derivatives\n\t\t\tif ( rparentsprev.test( name ) ) {\n\t\t\t\tmatched.reverse();\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched );\n\t};\n} );\nvar rnothtmlwhite = ( /[^\\x20\\t\\r\\n\\f]+/g );\n\n\n\n// Convert String-formatted options into Object-formatted ones\nfunction createOptions( options ) {\n\tvar object = {};\n\tjQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {\n\t\tobject[ flag ] = true;\n\t} );\n\treturn object;\n}\n\n/*\n * Create a callback list using the following parameters:\n *\n *\toptions: an optional list of space-separated options that will change how\n *\t\t\tthe callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n *\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n *\t\t\t\t\tvalues (like a Deferred)\n *\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n *\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\n *\n */\njQuery.Callbacks = function( options ) {\n\n\t// Convert options from String-formatted to Object-formatted if needed\n\t// (we check in cache first)\n\toptions = typeof options === \"string\" ?\n\t\tcreateOptions( options ) :\n\t\tjQuery.extend( {}, options );\n\n\tvar // Flag to know if list is currently firing\n\t\tfiring,\n\n\t\t// Last fire value for non-forgettable lists\n\t\tmemory,\n\n\t\t// Flag to know if list was already fired\n\t\tfired,\n\n\t\t// Flag to prevent firing\n\t\tlocked,\n\n\t\t// Actual callback list\n\t\tlist = [],\n\n\t\t// Queue of execution data for repeatable lists\n\t\tqueue = [],\n\n\t\t// Index of currently firing callback (modified by add/remove as needed)\n\t\tfiringIndex = -1,\n\n\t\t// Fire callbacks\n\t\tfire = function() {\n\n\t\t\t// Enforce single-firing\n\t\t\tlocked = options.once;\n\n\t\t\t// Execute callbacks for all pending executions,\n\t\t\t// respecting firingIndex overrides and runtime changes\n\t\t\tfired = firing = true;\n\t\t\tfor ( ; queue.length; firingIndex = -1 ) {\n\t\t\t\tmemory = queue.shift();\n\t\t\t\twhile ( ++firingIndex < list.length ) {\n\n\t\t\t\t\t// Run callback and check for early termination\n\t\t\t\t\tif ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&\n\t\t\t\t\t\toptions.stopOnFalse ) {\n\n\t\t\t\t\t\t// Jump to end and forget the data so .add doesn't re-fire\n\t\t\t\t\t\tfiringIndex = list.length;\n\t\t\t\t\t\tmemory = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Forget the data if we're done with it\n\t\t\tif ( !options.memory ) {\n\t\t\t\tmemory = false;\n\t\t\t}\n\n\t\t\tfiring = false;\n\n\t\t\t// Clean up if we're done firing for good\n\t\t\tif ( locked ) {\n\n\t\t\t\t// Keep an empty list if we have data for future add calls\n\t\t\t\tif ( memory ) {\n\t\t\t\t\tlist = [];\n\n\t\t\t\t// Otherwise, this object is spent\n\t\t\t\t} else {\n\t\t\t\t\tlist = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t// Actual Callbacks object\n\t\tself = {\n\n\t\t\t// Add a callback or a collection of callbacks to the list\n\t\t\tadd: function() {\n\t\t\t\tif ( list ) {\n\n\t\t\t\t\t// If we have memory from a past run, we should fire after adding\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfiringIndex = list.length - 1;\n\t\t\t\t\t\tqueue.push( memory );\n\t\t\t\t\t}\n\n\t\t\t\t\t( function add( args ) {\n\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\n\t\t\t\t\t\t\tif ( jQuery.isFunction( arg ) ) {\n\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\n\t\t\t\t\t\t\t\t\tlist.push( arg );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if ( arg && arg.length && jQuery.type( arg ) !== \"string\" ) {\n\n\t\t\t\t\t\t\t\t// Inspect recursively\n\t\t\t\t\t\t\t\tadd( arg );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t} )( arguments );\n\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Remove a callback from the list\n\t\t\tremove: function() {\n\t\t\t\tjQuery.each( arguments, function( _, arg ) {\n\t\t\t\t\tvar index;\n\t\t\t\t\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\n\t\t\t\t\t\tlist.splice( index, 1 );\n\n\t\t\t\t\t\t// Handle firing indexes\n\t\t\t\t\t\tif ( index <= firingIndex ) {\n\t\t\t\t\t\t\tfiringIndex--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Check if a given callback is in the list.\n\t\t\t// If no argument is given, return whether or not list has callbacks attached.\n\t\t\thas: function( fn ) {\n\t\t\t\treturn fn ?\n\t\t\t\t\tjQuery.inArray( fn, list ) > -1 :\n\t\t\t\t\tlist.length > 0;\n\t\t\t},\n\n\t\t\t// Remove all callbacks from the list\n\t\t\tempty: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\tlist = [];\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Disable .fire and .add\n\t\t\t// Abort any current/pending executions\n\t\t\t// Clear all callbacks and values\n\t\t\tdisable: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tlist = memory = \"\";\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tdisabled: function() {\n\t\t\t\treturn !list;\n\t\t\t},\n\n\t\t\t// Disable .fire\n\t\t\t// Also disable .add unless we have memory (since it would have no effect)\n\t\t\t// Abort any pending executions\n\t\t\tlock: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tif ( !memory && !firing ) {\n\t\t\t\t\tlist = memory = \"\";\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tlocked: function() {\n\t\t\t\treturn !!locked;\n\t\t\t},\n\n\t\t\t// Call all callbacks with the given context and arguments\n\t\t\tfireWith: function( context, args ) {\n\t\t\t\tif ( !locked ) {\n\t\t\t\t\targs = args || [];\n\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\n\t\t\t\t\tqueue.push( args );\n\t\t\t\t\tif ( !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Call all the callbacks with the given arguments\n\t\t\tfire: function() {\n\t\t\t\tself.fireWith( this, arguments );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// To know if the callbacks have already been called at least once\n\t\t\tfired: function() {\n\t\t\t\treturn !!fired;\n\t\t\t}\n\t\t};\n\n\treturn self;\n};\n\n\nfunction Identity( v ) {\n\treturn v;\n}\nfunction Thrower( ex ) {\n\tthrow ex;\n}\n\nfunction adoptValue( value, resolve, reject ) {\n\tvar method;\n\n\ttry {\n\n\t\t// Check for promise aspect first to privilege synchronous behavior\n\t\tif ( value && jQuery.isFunction( ( method = value.promise ) ) ) {\n\t\t\tmethod.call( value ).done( resolve ).fail( reject );\n\n\t\t// Other thenables\n\t\t} else if ( value && jQuery.isFunction( ( method = value.then ) ) ) {\n\t\t\tmethod.call( value, resolve, reject );\n\n\t\t// Other non-thenables\n\t\t} else {\n\n\t\t\t// Support: Android 4.0 only\n\t\t\t// Strict mode functions invoked without .call/.apply get global-object context\n\t\t\tresolve.call( undefined, value );\n\t\t}\n\n\t// For Promises/A+, convert exceptions into rejections\n\t// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in\n\t// Deferred#then to conditionally suppress rejection.\n\t} catch ( value ) {\n\n\t\t// Support: Android 4.0 only\n\t\t// Strict mode functions invoked without .call/.apply get global-object context\n\t\treject.call( undefined, value );\n\t}\n}\n\njQuery.extend( {\n\n\tDeferred: function( func ) {\n\t\tvar tuples = [\n\n\t\t\t\t// action, add listener, callbacks,\n\t\t\t\t// ... .then handlers, argument index, [final state]\n\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks( \"memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"memory\" ), 2 ],\n\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 0, \"resolved\" ],\n\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 1, \"rejected\" ]\n\t\t\t],\n\t\t\tstate = \"pending\",\n\t\t\tpromise = {\n\t\t\t\tstate: function() {\n\t\t\t\t\treturn state;\n\t\t\t\t},\n\t\t\t\talways: function() {\n\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\t\"catch\": function( fn ) {\n\t\t\t\t\treturn promise.then( null, fn );\n\t\t\t\t},\n\n\t\t\t\t// Keep pipe for back-compat\n\t\t\t\tpipe: function( /* fnDone, fnFail, fnProgress */ ) {\n\t\t\t\t\tvar fns = arguments;\n\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\t\t\t\t\t\tjQuery.each( tuples, function( i, tuple ) {\n\n\t\t\t\t\t\t\t// Map tuples (progress, done, fail) to arguments (done, fail, progress)\n\t\t\t\t\t\t\tvar fn = jQuery.isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];\n\n\t\t\t\t\t\t\t// deferred.progress(function() { bind to newDefer or newDefer.notify })\n\t\t\t\t\t\t\t// deferred.done(function() { bind to newDefer or newDefer.resolve })\n\t\t\t\t\t\t\t// deferred.fail(function() { bind to newDefer or newDefer.reject })\n\t\t\t\t\t\t\tdeferred[ tuple[ 1 ] ]( function() {\n\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\n\t\t\t\t\t\t\t\tif ( returned && jQuery.isFunction( returned.promise ) ) {\n\t\t\t\t\t\t\t\t\treturned.promise()\n\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify )\n\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\n\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnewDefer[ tuple[ 0 ] + \"With\" ](\n\t\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t\tfn ? [ returned ] : arguments\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tfns = null;\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\t\t\t\tthen: function( onFulfilled, onRejected, onProgress ) {\n\t\t\t\t\tvar maxDepth = 0;\n\t\t\t\t\tfunction resolve( depth, deferred, handler, special ) {\n\t\t\t\t\t\treturn function() {\n\t\t\t\t\t\t\tvar that = this,\n\t\t\t\t\t\t\t\targs = arguments,\n\t\t\t\t\t\t\t\tmightThrow = function() {\n\t\t\t\t\t\t\t\t\tvar returned, then;\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.3\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-59\n\t\t\t\t\t\t\t\t\t// Ignore double-resolution attempts\n\t\t\t\t\t\t\t\t\tif ( depth < maxDepth ) {\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\treturned = handler.apply( that, args );\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.1\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-48\n\t\t\t\t\t\t\t\t\tif ( returned === deferred.promise() ) {\n\t\t\t\t\t\t\t\t\t\tthrow new TypeError( \"Thenable self-resolution\" );\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ sections 2.3.3.1, 3.5\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-54\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-75\n\t\t\t\t\t\t\t\t\t// Retrieve `then` only once\n\t\t\t\t\t\t\t\t\tthen = returned &&\n\n\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.4\n\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-64\n\t\t\t\t\t\t\t\t\t\t// Only check objects and functions for thenability\n\t\t\t\t\t\t\t\t\t\t( typeof returned === \"object\" ||\n\t\t\t\t\t\t\t\t\t\t\ttypeof returned === \"function\" ) &&\n\t\t\t\t\t\t\t\t\t\treturned.then;\n\n\t\t\t\t\t\t\t\t\t// Handle a returned thenable\n\t\t\t\t\t\t\t\t\tif ( jQuery.isFunction( then ) ) {\n\n\t\t\t\t\t\t\t\t\t\t// Special processors (notify) just wait for resolution\n\t\t\t\t\t\t\t\t\t\tif ( special ) {\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special )\n\t\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\t// Normal processors (resolve) also hook into progress\n\t\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t\t// ...and disregard older resolution values\n\t\t\t\t\t\t\t\t\t\t\tmaxDepth++;\n\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity,\n\t\t\t\t\t\t\t\t\t\t\t\t\tdeferred.notifyWith )\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Handle all other returned values\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\tif ( handler !== Identity ) {\n\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\targs = [ returned ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t// Process the value(s)\n\t\t\t\t\t\t\t\t\t\t// Default process is resolve\n\t\t\t\t\t\t\t\t\t\t( special || deferred.resolveWith )( that, args );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t// Only normal processors (resolve) catch and reject exceptions\n\t\t\t\t\t\t\t\tprocess = special ?\n\t\t\t\t\t\t\t\t\tmightThrow :\n\t\t\t\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\t\tmightThrow();\n\t\t\t\t\t\t\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t\t\t\t\t\t\tif ( jQuery.Deferred.exceptionHook ) {\n\t\t\t\t\t\t\t\t\t\t\t\tjQuery.Deferred.exceptionHook( e,\n\t\t\t\t\t\t\t\t\t\t\t\t\tprocess.stackTrace );\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.4.1\n\t\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-61\n\t\t\t\t\t\t\t\t\t\t\t// Ignore post-resolution exceptions\n\t\t\t\t\t\t\t\t\t\t\tif ( depth + 1 >= maxDepth ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\t\t\tif ( handler !== Thrower ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\t\t\targs = [ e ];\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\tdeferred.rejectWith( that, args );\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.1\n\t\t\t\t\t\t\t// https://promisesaplus.com/#point-57\n\t\t\t\t\t\t\t// Re-resolve promises immediately to dodge false rejection from\n\t\t\t\t\t\t\t// subsequent errors\n\t\t\t\t\t\t\tif ( depth ) {\n\t\t\t\t\t\t\t\tprocess();\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// Call an optional hook to record the stack, in case of exception\n\t\t\t\t\t\t\t\t// since it's otherwise lost when execution goes async\n\t\t\t\t\t\t\t\tif ( jQuery.Deferred.getStackHook ) {\n\t\t\t\t\t\t\t\t\tprocess.stackTrace = jQuery.Deferred.getStackHook();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\twindow.setTimeout( process );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\n\t\t\t\t\t\t// progress_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 0 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tjQuery.isFunction( onProgress ) ?\n\t\t\t\t\t\t\t\t\tonProgress :\n\t\t\t\t\t\t\t\t\tIdentity,\n\t\t\t\t\t\t\t\tnewDefer.notifyWith\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// fulfilled_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 1 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tjQuery.isFunction( onFulfilled ) ?\n\t\t\t\t\t\t\t\t\tonFulfilled :\n\t\t\t\t\t\t\t\t\tIdentity\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// rejected_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 2 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tjQuery.isFunction( onRejected ) ?\n\t\t\t\t\t\t\t\t\tonRejected :\n\t\t\t\t\t\t\t\t\tThrower\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\n\t\t\t\t// Get a promise for this deferred\n\t\t\t\t// If obj is provided, the promise aspect is added to the object\n\t\t\t\tpromise: function( obj ) {\n\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeferred = {};\n\n\t\t// Add list-specific methods\n\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\tvar list = tuple[ 2 ],\n\t\t\t\tstateString = tuple[ 5 ];\n\n\t\t\t// promise.progress = list.add\n\t\t\t// promise.done = list.add\n\t\t\t// promise.fail = list.add\n\t\t\tpromise[ tuple[ 1 ] ] = list.add;\n\n\t\t\t// Handle state\n\t\t\tif ( stateString ) {\n\t\t\t\tlist.add(\n\t\t\t\t\tfunction() {\n\n\t\t\t\t\t\t// state = \"resolved\" (i.e., fulfilled)\n\t\t\t\t\t\t// state = \"rejected\"\n\t\t\t\t\t\tstate = stateString;\n\t\t\t\t\t},\n\n\t\t\t\t\t// rejected_callbacks.disable\n\t\t\t\t\t// fulfilled_callbacks.disable\n\t\t\t\t\ttuples[ 3 - i ][ 2 ].disable,\n\n\t\t\t\t\t// progress_callbacks.lock\n\t\t\t\t\ttuples[ 0 ][ 2 ].lock\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// progress_handlers.fire\n\t\t\t// fulfilled_handlers.fire\n\t\t\t// rejected_handlers.fire\n\t\t\tlist.add( tuple[ 3 ].fire );\n\n\t\t\t// deferred.notify = function() { deferred.notifyWith(...) }\n\t\t\t// deferred.resolve = function() { deferred.resolveWith(...) }\n\t\t\t// deferred.reject = function() { deferred.rejectWith(...) }\n\t\t\tdeferred[ tuple[ 0 ] ] = function() {\n\t\t\t\tdeferred[ tuple[ 0 ] + \"With\" ]( this === deferred ? undefined : this, arguments );\n\t\t\t\treturn this;\n\t\t\t};\n\n\t\t\t// deferred.notifyWith = list.fireWith\n\t\t\t// deferred.resolveWith = list.fireWith\n\t\t\t// deferred.rejectWith = list.fireWith\n\t\t\tdeferred[ tuple[ 0 ] + \"With\" ] = list.fireWith;\n\t\t} );\n\n\t\t// Make the deferred a promise\n\t\tpromise.promise( deferred );\n\n\t\t// Call given func if any\n\t\tif ( func ) {\n\t\t\tfunc.call( deferred, deferred );\n\t\t}\n\n\t\t// All done!\n\t\treturn deferred;\n\t},\n\n\t// Deferred helper\n\twhen: function( singleValue ) {\n\t\tvar\n\n\t\t\t// count of uncompleted subordinates\n\t\t\tremaining = arguments.length,\n\n\t\t\t// count of unprocessed arguments\n\t\t\ti = remaining,\n\n\t\t\t// subordinate fulfillment data\n\t\t\tresolveContexts = Array( i ),\n\t\t\tresolveValues = slice.call( arguments ),\n\n\t\t\t// the master Deferred\n\t\t\tmaster = jQuery.Deferred(),\n\n\t\t\t// subordinate callback factory\n\t\t\tupdateFunc = function( i ) {\n\t\t\t\treturn function( value ) {\n\t\t\t\t\tresolveContexts[ i ] = this;\n\t\t\t\t\tresolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\n\t\t\t\t\tif ( !( --remaining ) ) {\n\t\t\t\t\t\tmaster.resolveWith( resolveContexts, resolveValues );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\n\t\t// Single- and empty arguments are adopted like Promise.resolve\n\t\tif ( remaining <= 1 ) {\n\t\t\tadoptValue( singleValue, master.done( updateFunc( i ) ).resolve, master.reject );\n\n\t\t\t// Use .then() to unwrap secondary thenables (cf. gh-3000)\n\t\t\tif ( master.state() === \"pending\" ||\n\t\t\t\tjQuery.isFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {\n\n\t\t\t\treturn master.then();\n\t\t\t}\n\t\t}\n\n\t\t// Multiple arguments are aggregated like Promise.all array elements\n\t\twhile ( i-- ) {\n\t\t\tadoptValue( resolveValues[ i ], updateFunc( i ), master.reject );\n\t\t}\n\n\t\treturn master.promise();\n\t}\n} );\n\n\n// These usually indicate a programmer mistake during development,\n// warn about them ASAP rather than swallowing them by default.\nvar rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\n\njQuery.Deferred.exceptionHook = function( error, stack ) {\n\n\t// Support: IE 8 - 9 only\n\t// Console exists when dev tools are open, which can happen at any time\n\tif ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {\n\t\twindow.console.warn( \"jQuery.Deferred exception: \" + error.message, error.stack, stack );\n\t}\n};\n\n\n\n\njQuery.readyException = function( error ) {\n\twindow.setTimeout( function() {\n\t\tthrow error;\n\t} );\n};\n\n\n\n\n// The deferred used on DOM ready\nvar readyList = jQuery.Deferred();\n\njQuery.fn.ready = function( fn ) {\n\n\treadyList\n\t\t.then( fn )\n\n\t\t// Wrap jQuery.readyException in a function so that the lookup\n\t\t// happens at the time of error handling instead of callback\n\t\t// registration.\n\t\t.catch( function( error ) {\n\t\t\tjQuery.readyException( error );\n\t\t} );\n\n\treturn this;\n};\n\njQuery.extend( {\n\n\t// Is the DOM ready to be used? Set to true once it occurs.\n\tisReady: false,\n\n\t// A counter to track how many items to wait for before\n\t// the ready event fires. See #6781\n\treadyWait: 1,\n\n\t// Hold (or release) the ready event\n\tholdReady: function( hold ) {\n\t\tif ( hold ) {\n\t\t\tjQuery.readyWait++;\n\t\t} else {\n\t\t\tjQuery.ready( true );\n\t\t}\n\t},\n\n\t// Handle when the DOM is ready\n\tready: function( wait ) {\n\n\t\t// Abort if there are pending holds or we're already ready\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remember that the DOM is ready\n\t\tjQuery.isReady = true;\n\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are functions bound, to execute\n\t\treadyList.resolveWith( document, [ jQuery ] );\n\t}\n} );\n\njQuery.ready.then = readyList.then;\n\n// The ready event handler and self cleanup method\nfunction completed() {\n\tdocument.removeEventListener( \"DOMContentLoaded\", completed );\n\twindow.removeEventListener( \"load\", completed );\n\tjQuery.ready();\n}\n\n// Catch cases where $(document).ready() is called\n// after the browser event has already occurred.\n// Support: IE <=9 - 10 only\n// Older IE sometimes signals \"interactive\" too soon\nif ( document.readyState === \"complete\" ||\n\t( document.readyState !== \"loading\" && !document.documentElement.doScroll ) ) {\n\n\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\twindow.setTimeout( jQuery.ready );\n\n} else {\n\n\t// Use the handy event callback\n\tdocument.addEventListener( \"DOMContentLoaded\", completed );\n\n\t// A fallback to window.onload, that will always work\n\twindow.addEventListener( \"load\", completed );\n}\n\n\n\n\n// Multifunctional method to get and set values of a collection\n// The value/s can optionally be executed if it's a function\nvar access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\n\tvar i = 0,\n\t\tlen = elems.length,\n\t\tbulk = key == null;\n\n\t// Sets many values\n\tif ( jQuery.type( key ) === \"object\" ) {\n\t\tchainable = true;\n\t\tfor ( i in key ) {\n\t\t\taccess( elems, fn, i, key[ i ], true, emptyGet, raw );\n\t\t}\n\n\t// Sets one value\n\t} else if ( value !== undefined ) {\n\t\tchainable = true;\n\n\t\tif ( !jQuery.isFunction( value ) ) {\n\t\t\traw = true;\n\t\t}\n\n\t\tif ( bulk ) {\n\n\t\t\t// Bulk operations run against the entire set\n\t\t\tif ( raw ) {\n\t\t\t\tfn.call( elems, value );\n\t\t\t\tfn = null;\n\n\t\t\t// ...except when executing function values\n\t\t\t} else {\n\t\t\t\tbulk = fn;\n\t\t\t\tfn = function( elem, key, value ) {\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif ( fn ) {\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\tfn(\n\t\t\t\t\telems[ i ], key, raw ?\n\t\t\t\t\tvalue :\n\t\t\t\t\tvalue.call( elems[ i ], i, fn( elems[ i ], key ) )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( chainable ) {\n\t\treturn elems;\n\t}\n\n\t// Gets\n\tif ( bulk ) {\n\t\treturn fn.call( elems );\n\t}\n\n\treturn len ? fn( elems[ 0 ], key ) : emptyGet;\n};\nvar acceptData = function( owner ) {\n\n\t// Accepts only:\n\t//  - Node\n\t//    - Node.ELEMENT_NODE\n\t//    - Node.DOCUMENT_NODE\n\t//  - Object\n\t//    - Any\n\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\n};\n\n\n\n\nfunction Data() {\n\tthis.expando = jQuery.expando + Data.uid++;\n}\n\nData.uid = 1;\n\nData.prototype = {\n\n\tcache: function( owner ) {\n\n\t\t// Check if the owner object already has a cache\n\t\tvar value = owner[ this.expando ];\n\n\t\t// If not, create one\n\t\tif ( !value ) {\n\t\t\tvalue = {};\n\n\t\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t\t// but we should not, see #8335.\n\t\t\t// Always return an empty object.\n\t\t\tif ( acceptData( owner ) ) {\n\n\t\t\t\t// If it is a node unlikely to be stringify-ed or looped over\n\t\t\t\t// use plain assignment\n\t\t\t\tif ( owner.nodeType ) {\n\t\t\t\t\towner[ this.expando ] = value;\n\n\t\t\t\t// Otherwise secure it in a non-enumerable property\n\t\t\t\t// configurable must be true to allow the property to be\n\t\t\t\t// deleted when data is removed\n\t\t\t\t} else {\n\t\t\t\t\tObject.defineProperty( owner, this.expando, {\n\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\tconfigurable: true\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t},\n\tset: function( owner, data, value ) {\n\t\tvar prop,\n\t\t\tcache = this.cache( owner );\n\n\t\t// Handle: [ owner, key, value ] args\n\t\t// Always use camelCase key (gh-2257)\n\t\tif ( typeof data === \"string\" ) {\n\t\t\tcache[ jQuery.camelCase( data ) ] = value;\n\n\t\t// Handle: [ owner, { properties } ] args\n\t\t} else {\n\n\t\t\t// Copy the properties one-by-one to the cache object\n\t\t\tfor ( prop in data ) {\n\t\t\t\tcache[ jQuery.camelCase( prop ) ] = data[ prop ];\n\t\t\t}\n\t\t}\n\t\treturn cache;\n\t},\n\tget: function( owner, key ) {\n\t\treturn key === undefined ?\n\t\t\tthis.cache( owner ) :\n\n\t\t\t// Always use camelCase key (gh-2257)\n\t\t\towner[ this.expando ] && owner[ this.expando ][ jQuery.camelCase( key ) ];\n\t},\n\taccess: function( owner, key, value ) {\n\n\t\t// In cases where either:\n\t\t//\n\t\t//   1. No key was specified\n\t\t//   2. A string key was specified, but no value provided\n\t\t//\n\t\t// Take the \"read\" path and allow the get method to determine\n\t\t// which value to return, respectively either:\n\t\t//\n\t\t//   1. The entire cache object\n\t\t//   2. The data stored at the key\n\t\t//\n\t\tif ( key === undefined ||\n\t\t\t\t( ( key && typeof key === \"string\" ) && value === undefined ) ) {\n\n\t\t\treturn this.get( owner, key );\n\t\t}\n\n\t\t// When the key is not a string, or both a key and value\n\t\t// are specified, set or extend (existing objects) with either:\n\t\t//\n\t\t//   1. An object of properties\n\t\t//   2. A key and value\n\t\t//\n\t\tthis.set( owner, key, value );\n\n\t\t// Since the \"set\" path can have two possible entry points\n\t\t// return the expected data based on which path was taken[*]\n\t\treturn value !== undefined ? value : key;\n\t},\n\tremove: function( owner, key ) {\n\t\tvar i,\n\t\t\tcache = owner[ this.expando ];\n\n\t\tif ( cache === undefined ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( key !== undefined ) {\n\n\t\t\t// Support array or space separated string of keys\n\t\t\tif ( jQuery.isArray( key ) ) {\n\n\t\t\t\t// If key is an array of keys...\n\t\t\t\t// We always set camelCase keys, so remove that.\n\t\t\t\tkey = key.map( jQuery.camelCase );\n\t\t\t} else {\n\t\t\t\tkey = jQuery.camelCase( key );\n\n\t\t\t\t// If a key with the spaces exists, use it.\n\t\t\t\t// Otherwise, create an array by matching non-whitespace\n\t\t\t\tkey = key in cache ?\n\t\t\t\t\t[ key ] :\n\t\t\t\t\t( key.match( rnothtmlwhite ) || [] );\n\t\t\t}\n\n\t\t\ti = key.length;\n\n\t\t\twhile ( i-- ) {\n\t\t\t\tdelete cache[ key[ i ] ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove the expando if there's no more data\n\t\tif ( key === undefined || jQuery.isEmptyObject( cache ) ) {\n\n\t\t\t// Support: Chrome <=35 - 45\n\t\t\t// Webkit & Blink performance suffers when deleting properties\n\t\t\t// from DOM nodes, so set to undefined instead\n\t\t\t// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\n\t\t\tif ( owner.nodeType ) {\n\t\t\t\towner[ this.expando ] = undefined;\n\t\t\t} else {\n\t\t\t\tdelete owner[ this.expando ];\n\t\t\t}\n\t\t}\n\t},\n\thasData: function( owner ) {\n\t\tvar cache = owner[ this.expando ];\n\t\treturn cache !== undefined && !jQuery.isEmptyObject( cache );\n\t}\n};\nvar dataPriv = new Data();\n\nvar dataUser = new Data();\n\n\n\n//\tImplementation Summary\n//\n//\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n//\t2. Improve the module's maintainability by reducing the storage\n//\t\tpaths to a single mechanism.\n//\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n//\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n//\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\nvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n\trmultiDash = /[A-Z]/g;\n\nfunction getData( data ) {\n\tif ( data === \"true\" ) {\n\t\treturn true;\n\t}\n\n\tif ( data === \"false\" ) {\n\t\treturn false;\n\t}\n\n\tif ( data === \"null\" ) {\n\t\treturn null;\n\t}\n\n\t// Only convert to a number if it doesn't change the string\n\tif ( data === +data + \"\" ) {\n\t\treturn +data;\n\t}\n\n\tif ( rbrace.test( data ) ) {\n\t\treturn JSON.parse( data );\n\t}\n\n\treturn data;\n}\n\nfunction dataAttr( elem, key, data ) {\n\tvar name;\n\n\t// If nothing was found internally, try to fetch any\n\t// data from the HTML5 data-* attribute\n\tif ( data === undefined && elem.nodeType === 1 ) {\n\t\tname = \"data-\" + key.replace( rmultiDash, \"-$&\" ).toLowerCase();\n\t\tdata = elem.getAttribute( name );\n\n\t\tif ( typeof data === \"string\" ) {\n\t\t\ttry {\n\t\t\t\tdata = getData( data );\n\t\t\t} catch ( e ) {}\n\n\t\t\t// Make sure we set the data so it isn't changed later\n\t\t\tdataUser.set( elem, key, data );\n\t\t} else {\n\t\t\tdata = undefined;\n\t\t}\n\t}\n\treturn data;\n}\n\njQuery.extend( {\n\thasData: function( elem ) {\n\t\treturn dataUser.hasData( elem ) || dataPriv.hasData( elem );\n\t},\n\n\tdata: function( elem, name, data ) {\n\t\treturn dataUser.access( elem, name, data );\n\t},\n\n\tremoveData: function( elem, name ) {\n\t\tdataUser.remove( elem, name );\n\t},\n\n\t// TODO: Now that all calls to _data and _removeData have been replaced\n\t// with direct calls to dataPriv methods, these can be deprecated.\n\t_data: function( elem, name, data ) {\n\t\treturn dataPriv.access( elem, name, data );\n\t},\n\n\t_removeData: function( elem, name ) {\n\t\tdataPriv.remove( elem, name );\n\t}\n} );\n\njQuery.fn.extend( {\n\tdata: function( key, value ) {\n\t\tvar i, name, data,\n\t\t\telem = this[ 0 ],\n\t\t\tattrs = elem && elem.attributes;\n\n\t\t// Gets all values\n\t\tif ( key === undefined ) {\n\t\t\tif ( this.length ) {\n\t\t\t\tdata = dataUser.get( elem );\n\n\t\t\t\tif ( elem.nodeType === 1 && !dataPriv.get( elem, \"hasDataAttrs\" ) ) {\n\t\t\t\t\ti = attrs.length;\n\t\t\t\t\twhile ( i-- ) {\n\n\t\t\t\t\t\t// Support: IE 11 only\n\t\t\t\t\t\t// The attrs elements can be null (#14894)\n\t\t\t\t\t\tif ( attrs[ i ] ) {\n\t\t\t\t\t\t\tname = attrs[ i ].name;\n\t\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\n\t\t\t\t\t\t\t\tname = jQuery.camelCase( name.slice( 5 ) );\n\t\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdataPriv.set( elem, \"hasDataAttrs\", true );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\t// Sets multiple values\n\t\tif ( typeof key === \"object\" ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tdataUser.set( this, key );\n\t\t\t} );\n\t\t}\n\n\t\treturn access( this, function( value ) {\n\t\t\tvar data;\n\n\t\t\t// The calling jQuery object (element matches) is not empty\n\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\n\t\t\t// `value` parameter was not undefined. An empty jQuery object\n\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\n\t\t\t// throw an exception if an attempt to read a data cache is made.\n\t\t\tif ( elem && value === undefined ) {\n\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// The key will always be camelCased in Data\n\t\t\t\tdata = dataUser.get( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Attempt to \"discover\" the data in\n\t\t\t\t// HTML5 custom data-* attrs\n\t\t\t\tdata = dataAttr( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// We tried really hard, but the data doesn't exist.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Set the data...\n\t\t\tthis.each( function() {\n\n\t\t\t\t// We always store the camelCased key\n\t\t\t\tdataUser.set( this, key, value );\n\t\t\t} );\n\t\t}, null, value, arguments.length > 1, null, true );\n\t},\n\n\tremoveData: function( key ) {\n\t\treturn this.each( function() {\n\t\t\tdataUser.remove( this, key );\n\t\t} );\n\t}\n} );\n\n\njQuery.extend( {\n\tqueue: function( elem, type, data ) {\n\t\tvar queue;\n\n\t\tif ( elem ) {\n\t\t\ttype = ( type || \"fx\" ) + \"queue\";\n\t\t\tqueue = dataPriv.get( elem, type );\n\n\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\n\t\t\tif ( data ) {\n\t\t\t\tif ( !queue || jQuery.isArray( data ) ) {\n\t\t\t\t\tqueue = dataPriv.access( elem, type, jQuery.makeArray( data ) );\n\t\t\t\t} else {\n\t\t\t\t\tqueue.push( data );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn queue || [];\n\t\t}\n\t},\n\n\tdequeue: function( elem, type ) {\n\t\ttype = type || \"fx\";\n\n\t\tvar queue = jQuery.queue( elem, type ),\n\t\t\tstartLength = queue.length,\n\t\t\tfn = queue.shift(),\n\t\t\thooks = jQuery._queueHooks( elem, type ),\n\t\t\tnext = function() {\n\t\t\t\tjQuery.dequeue( elem, type );\n\t\t\t};\n\n\t\t// If the fx queue is dequeued, always remove the progress sentinel\n\t\tif ( fn === \"inprogress\" ) {\n\t\t\tfn = queue.shift();\n\t\t\tstartLength--;\n\t\t}\n\n\t\tif ( fn ) {\n\n\t\t\t// Add a progress sentinel to prevent the fx queue from being\n\t\t\t// automatically dequeued\n\t\t\tif ( type === \"fx\" ) {\n\t\t\t\tqueue.unshift( \"inprogress\" );\n\t\t\t}\n\n\t\t\t// Clear up the last queue stop function\n\t\t\tdelete hooks.stop;\n\t\t\tfn.call( elem, next, hooks );\n\t\t}\n\n\t\tif ( !startLength && hooks ) {\n\t\t\thooks.empty.fire();\n\t\t}\n\t},\n\n\t// Not public - generate a queueHooks object, or return the current one\n\t_queueHooks: function( elem, type ) {\n\t\tvar key = type + \"queueHooks\";\n\t\treturn dataPriv.get( elem, key ) || dataPriv.access( elem, key, {\n\t\t\tempty: jQuery.Callbacks( \"once memory\" ).add( function() {\n\t\t\t\tdataPriv.remove( elem, [ type + \"queue\", key ] );\n\t\t\t} )\n\t\t} );\n\t}\n} );\n\njQuery.fn.extend( {\n\tqueue: function( type, data ) {\n\t\tvar setter = 2;\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tdata = type;\n\t\t\ttype = \"fx\";\n\t\t\tsetter--;\n\t\t}\n\n\t\tif ( arguments.length < setter ) {\n\t\t\treturn jQuery.queue( this[ 0 ], type );\n\t\t}\n\n\t\treturn data === undefined ?\n\t\t\tthis :\n\t\t\tthis.each( function() {\n\t\t\t\tvar queue = jQuery.queue( this, type, data );\n\n\t\t\t\t// Ensure a hooks for this queue\n\t\t\t\tjQuery._queueHooks( this, type );\n\n\t\t\t\tif ( type === \"fx\" && queue[ 0 ] !== \"inprogress\" ) {\n\t\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t\t}\n\t\t\t} );\n\t},\n\tdequeue: function( type ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.dequeue( this, type );\n\t\t} );\n\t},\n\tclearQueue: function( type ) {\n\t\treturn this.queue( type || \"fx\", [] );\n\t},\n\n\t// Get a promise resolved when queues of a certain type\n\t// are emptied (fx is the type by default)\n\tpromise: function( type, obj ) {\n\t\tvar tmp,\n\t\t\tcount = 1,\n\t\t\tdefer = jQuery.Deferred(),\n\t\t\telements = this,\n\t\t\ti = this.length,\n\t\t\tresolve = function() {\n\t\t\t\tif ( !( --count ) ) {\n\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\n\t\t\t\t}\n\t\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tobj = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\ttype = type || \"fx\";\n\n\t\twhile ( i-- ) {\n\t\t\ttmp = dataPriv.get( elements[ i ], type + \"queueHooks\" );\n\t\t\tif ( tmp && tmp.empty ) {\n\t\t\t\tcount++;\n\t\t\t\ttmp.empty.add( resolve );\n\t\t\t}\n\t\t}\n\t\tresolve();\n\t\treturn defer.promise( obj );\n\t}\n} );\nvar pnum = ( /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/ ).source;\n\nvar rcssNum = new RegExp( \"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\" );\n\n\nvar cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ];\n\nvar isHiddenWithinTree = function( elem, el ) {\n\n\t\t// isHiddenWithinTree might be called from jQuery#filter function;\n\t\t// in that case, element will be second argument\n\t\telem = el || elem;\n\n\t\t// Inline style trumps all\n\t\treturn elem.style.display === \"none\" ||\n\t\t\telem.style.display === \"\" &&\n\n\t\t\t// Otherwise, check computed style\n\t\t\t// Support: Firefox <=43 - 45\n\t\t\t// Disconnected elements can have computed display: none, so first confirm that elem is\n\t\t\t// in the document.\n\t\t\tjQuery.contains( elem.ownerDocument, elem ) &&\n\n\t\t\tjQuery.css( elem, \"display\" ) === \"none\";\n\t};\n\nvar swap = function( elem, options, callback, args ) {\n\tvar ret, name,\n\t\told = {};\n\n\t// Remember the old values, and insert the new ones\n\tfor ( name in options ) {\n\t\told[ name ] = elem.style[ name ];\n\t\telem.style[ name ] = options[ name ];\n\t}\n\n\tret = callback.apply( elem, args || [] );\n\n\t// Revert the old values\n\tfor ( name in options ) {\n\t\telem.style[ name ] = old[ name ];\n\t}\n\n\treturn ret;\n};\n\n\n\n\nfunction adjustCSS( elem, prop, valueParts, tween ) {\n\tvar adjusted,\n\t\tscale = 1,\n\t\tmaxIterations = 20,\n\t\tcurrentValue = tween ?\n\t\t\tfunction() {\n\t\t\t\treturn tween.cur();\n\t\t\t} :\n\t\t\tfunction() {\n\t\t\t\treturn jQuery.css( elem, prop, \"\" );\n\t\t\t},\n\t\tinitial = currentValue(),\n\t\tunit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\n\n\t\t// Starting value computation is required for potential unit mismatches\n\t\tinitialInUnit = ( jQuery.cssNumber[ prop ] || unit !== \"px\" && +initial ) &&\n\t\t\trcssNum.exec( jQuery.css( elem, prop ) );\n\n\tif ( initialInUnit && initialInUnit[ 3 ] !== unit ) {\n\n\t\t// Trust units reported by jQuery.css\n\t\tunit = unit || initialInUnit[ 3 ];\n\n\t\t// Make sure we update the tween properties later on\n\t\tvalueParts = valueParts || [];\n\n\t\t// Iteratively approximate from a nonzero starting point\n\t\tinitialInUnit = +initial || 1;\n\n\t\tdo {\n\n\t\t\t// If previous iteration zeroed out, double until we get *something*.\n\t\t\t// Use string for doubling so we don't accidentally see scale as unchanged below\n\t\t\tscale = scale || \".5\";\n\n\t\t\t// Adjust and apply\n\t\t\tinitialInUnit = initialInUnit / scale;\n\t\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\n\t\t// Update scale, tolerating zero or NaN from tween.cur()\n\t\t// Break the loop if scale is unchanged or perfect, or if we've just had enough.\n\t\t} while (\n\t\t\tscale !== ( scale = currentValue() / initial ) && scale !== 1 && --maxIterations\n\t\t);\n\t}\n\n\tif ( valueParts ) {\n\t\tinitialInUnit = +initialInUnit || +initial || 0;\n\n\t\t// Apply relative offset (+=/-=) if specified\n\t\tadjusted = valueParts[ 1 ] ?\n\t\t\tinitialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :\n\t\t\t+valueParts[ 2 ];\n\t\tif ( tween ) {\n\t\t\ttween.unit = unit;\n\t\t\ttween.start = initialInUnit;\n\t\t\ttween.end = adjusted;\n\t\t}\n\t}\n\treturn adjusted;\n}\n\n\nvar defaultDisplayMap = {};\n\nfunction getDefaultDisplay( elem ) {\n\tvar temp,\n\t\tdoc = elem.ownerDocument,\n\t\tnodeName = elem.nodeName,\n\t\tdisplay = defaultDisplayMap[ nodeName ];\n\n\tif ( display ) {\n\t\treturn display;\n\t}\n\n\ttemp = doc.body.appendChild( doc.createElement( nodeName ) );\n\tdisplay = jQuery.css( temp, \"display\" );\n\n\ttemp.parentNode.removeChild( temp );\n\n\tif ( display === \"none\" ) {\n\t\tdisplay = \"block\";\n\t}\n\tdefaultDisplayMap[ nodeName ] = display;\n\n\treturn display;\n}\n\nfunction showHide( elements, show ) {\n\tvar display, elem,\n\t\tvalues = [],\n\t\tindex = 0,\n\t\tlength = elements.length;\n\n\t// Determine new display value for elements that need to change\n\tfor ( ; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdisplay = elem.style.display;\n\t\tif ( show ) {\n\n\t\t\t// Since we force visibility upon cascade-hidden elements, an immediate (and slow)\n\t\t\t// check is required in this first loop unless we have a nonempty display value (either\n\t\t\t// inline or about-to-be-restored)\n\t\t\tif ( display === \"none\" ) {\n\t\t\t\tvalues[ index ] = dataPriv.get( elem, \"display\" ) || null;\n\t\t\t\tif ( !values[ index ] ) {\n\t\t\t\t\telem.style.display = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( elem.style.display === \"\" && isHiddenWithinTree( elem ) ) {\n\t\t\t\tvalues[ index ] = getDefaultDisplay( elem );\n\t\t\t}\n\t\t} else {\n\t\t\tif ( display !== \"none\" ) {\n\t\t\t\tvalues[ index ] = \"none\";\n\n\t\t\t\t// Remember what we're overwriting\n\t\t\t\tdataPriv.set( elem, \"display\", display );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Set the display of the elements in a second loop to avoid constant reflow\n\tfor ( index = 0; index < length; index++ ) {\n\t\tif ( values[ index ] != null ) {\n\t\t\telements[ index ].style.display = values[ index ];\n\t\t}\n\t}\n\n\treturn elements;\n}\n\njQuery.fn.extend( {\n\tshow: function() {\n\t\treturn showHide( this, true );\n\t},\n\thide: function() {\n\t\treturn showHide( this );\n\t},\n\ttoggle: function( state ) {\n\t\tif ( typeof state === \"boolean\" ) {\n\t\t\treturn state ? this.show() : this.hide();\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tif ( isHiddenWithinTree( this ) ) {\n\t\t\t\tjQuery( this ).show();\n\t\t\t} else {\n\t\t\t\tjQuery( this ).hide();\n\t\t\t}\n\t\t} );\n\t}\n} );\nvar rcheckableType = ( /^(?:checkbox|radio)$/i );\n\nvar rtagName = ( /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]+)/i );\n\nvar rscriptType = ( /^$|\\/(?:java|ecma)script/i );\n\n\n\n// We have to close these tags to support XHTML (#13200)\nvar wrapMap = {\n\n\t// Support: IE <=9 only\n\toption: [ 1, \"<select multiple='multiple'>\", \"</select>\" ],\n\n\t// XHTML parsers do not magically insert elements in the\n\t// same way that tag soup parsers do. So we cannot shorten\n\t// this by omitting <tbody> or other required elements.\n\tthead: [ 1, \"<table>\", \"</table>\" ],\n\tcol: [ 2, \"<table><colgroup>\", \"</colgroup></table>\" ],\n\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\n\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\n\n\t_default: [ 0, \"\", \"\" ]\n};\n\n// Support: IE <=9 only\nwrapMap.optgroup = wrapMap.option;\n\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\nwrapMap.th = wrapMap.td;\n\n\nfunction getAll( context, tag ) {\n\n\t// Support: IE <=9 - 11 only\n\t// Use typeof to avoid zero-argument method invocation on host objects (#15151)\n\tvar ret;\n\n\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\tret = context.getElementsByTagName( tag || \"*\" );\n\n\t} else if ( typeof context.querySelectorAll !== \"undefined\" ) {\n\t\tret = context.querySelectorAll( tag || \"*\" );\n\n\t} else {\n\t\tret = [];\n\t}\n\n\tif ( tag === undefined || tag && jQuery.nodeName( context, tag ) ) {\n\t\treturn jQuery.merge( [ context ], ret );\n\t}\n\n\treturn ret;\n}\n\n\n// Mark scripts as having already been evaluated\nfunction setGlobalEval( elems, refElements ) {\n\tvar i = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\tdataPriv.set(\n\t\t\telems[ i ],\n\t\t\t\"globalEval\",\n\t\t\t!refElements || dataPriv.get( refElements[ i ], \"globalEval\" )\n\t\t);\n\t}\n}\n\n\nvar rhtml = /<|&#?\\w+;/;\n\nfunction buildFragment( elems, context, scripts, selection, ignored ) {\n\tvar elem, tmp, tag, wrap, contains, j,\n\t\tfragment = context.createDocumentFragment(),\n\t\tnodes = [],\n\t\ti = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\telem = elems[ i ];\n\n\t\tif ( elem || elem === 0 ) {\n\n\t\t\t// Add nodes directly\n\t\t\tif ( jQuery.type( elem ) === \"object\" ) {\n\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\n\n\t\t\t// Convert non-html into a text node\n\t\t\t} else if ( !rhtml.test( elem ) ) {\n\t\t\t\tnodes.push( context.createTextNode( elem ) );\n\n\t\t\t// Convert html into DOM nodes\n\t\t\t} else {\n\t\t\t\ttmp = tmp || fragment.appendChild( context.createElement( \"div\" ) );\n\n\t\t\t\t// Deserialize a standard representation\n\t\t\t\ttag = ( rtagName.exec( elem ) || [ \"\", \"\" ] )[ 1 ].toLowerCase();\n\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\n\t\t\t\ttmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];\n\n\t\t\t\t// Descend through wrappers to the right content\n\t\t\t\tj = wrap[ 0 ];\n\t\t\t\twhile ( j-- ) {\n\t\t\t\t\ttmp = tmp.lastChild;\n\t\t\t\t}\n\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\n\n\t\t\t\t// Remember the top-level container\n\t\t\t\ttmp = fragment.firstChild;\n\n\t\t\t\t// Ensure the created nodes are orphaned (#12392)\n\t\t\t\ttmp.textContent = \"\";\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove wrapper from fragment\n\tfragment.textContent = \"\";\n\n\ti = 0;\n\twhile ( ( elem = nodes[ i++ ] ) ) {\n\n\t\t// Skip elements already in the context collection (trac-4087)\n\t\tif ( selection && jQuery.inArray( elem, selection ) > -1 ) {\n\t\t\tif ( ignored ) {\n\t\t\t\tignored.push( elem );\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\tcontains = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t// Append to fragment\n\t\ttmp = getAll( fragment.appendChild( elem ), \"script\" );\n\n\t\t// Preserve script evaluation history\n\t\tif ( contains ) {\n\t\t\tsetGlobalEval( tmp );\n\t\t}\n\n\t\t// Capture executables\n\t\tif ( scripts ) {\n\t\t\tj = 0;\n\t\t\twhile ( ( elem = tmp[ j++ ] ) ) {\n\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\n\t\t\t\t\tscripts.push( elem );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn fragment;\n}\n\n\n( function() {\n\tvar fragment = document.createDocumentFragment(),\n\t\tdiv = fragment.appendChild( document.createElement( \"div\" ) ),\n\t\tinput = document.createElement( \"input\" );\n\n\t// Support: Android 4.0 - 4.3 only\n\t// Check state lost if the name is set (#11217)\n\t// Support: Windows Web Apps (WWA)\n\t// `name` and `type` must use .setAttribute for WWA (#14901)\n\tinput.setAttribute( \"type\", \"radio\" );\n\tinput.setAttribute( \"checked\", \"checked\" );\n\tinput.setAttribute( \"name\", \"t\" );\n\n\tdiv.appendChild( input );\n\n\t// Support: Android <=4.1 only\n\t// Older WebKit doesn't clone checked state correctly in fragments\n\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\n\n\t// Support: IE <=11 only\n\t// Make sure textarea (and checkbox) defaultValue is properly cloned\n\tdiv.innerHTML = \"<textarea>x</textarea>\";\n\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\n} )();\nvar documentElement = document.documentElement;\n\n\n\nvar\n\trkeyEvent = /^key/,\n\trmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,\n\trtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n\nfunction returnTrue() {\n\treturn true;\n}\n\nfunction returnFalse() {\n\treturn false;\n}\n\n// Support: IE <=9 only\n// See #13393 for more info\nfunction safeActiveElement() {\n\ttry {\n\t\treturn document.activeElement;\n\t} catch ( err ) { }\n}\n\nfunction on( elem, types, selector, data, fn, one ) {\n\tvar origFn, type;\n\n\t// Types can be a map of types/handlers\n\tif ( typeof types === \"object\" ) {\n\n\t\t// ( types-Object, selector, data )\n\t\tif ( typeof selector !== \"string\" ) {\n\n\t\t\t// ( types-Object, data )\n\t\t\tdata = data || selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tfor ( type in types ) {\n\t\t\ton( elem, type, selector, data, types[ type ], one );\n\t\t}\n\t\treturn elem;\n\t}\n\n\tif ( data == null && fn == null ) {\n\n\t\t// ( types, fn )\n\t\tfn = selector;\n\t\tdata = selector = undefined;\n\t} else if ( fn == null ) {\n\t\tif ( typeof selector === \"string\" ) {\n\n\t\t\t// ( types, selector, fn )\n\t\t\tfn = data;\n\t\t\tdata = undefined;\n\t\t} else {\n\n\t\t\t// ( types, data, fn )\n\t\t\tfn = data;\n\t\t\tdata = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t}\n\tif ( fn === false ) {\n\t\tfn = returnFalse;\n\t} else if ( !fn ) {\n\t\treturn elem;\n\t}\n\n\tif ( one === 1 ) {\n\t\torigFn = fn;\n\t\tfn = function( event ) {\n\n\t\t\t// Can use an empty set, since event contains the info\n\t\t\tjQuery().off( event );\n\t\t\treturn origFn.apply( this, arguments );\n\t\t};\n\n\t\t// Use same guid so caller can remove using origFn\n\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\n\t}\n\treturn elem.each( function() {\n\t\tjQuery.event.add( this, types, fn, data, selector );\n\t} );\n}\n\n/*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */\njQuery.event = {\n\n\tglobal: {},\n\n\tadd: function( elem, types, handler, data, selector ) {\n\n\t\tvar handleObjIn, eventHandle, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.get( elem );\n\n\t\t// Don't attach events to noData or text/comment nodes (but allow plain objects)\n\t\tif ( !elemData ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Caller can pass in an object of custom data in lieu of the handler\n\t\tif ( handler.handler ) {\n\t\t\thandleObjIn = handler;\n\t\t\thandler = handleObjIn.handler;\n\t\t\tselector = handleObjIn.selector;\n\t\t}\n\n\t\t// Ensure that invalid selectors throw exceptions at attach time\n\t\t// Evaluate against documentElement in case elem is a non-element node (e.g., document)\n\t\tif ( selector ) {\n\t\t\tjQuery.find.matchesSelector( documentElement, selector );\n\t\t}\n\n\t\t// Make sure that the handler has a unique ID, used to find/remove it later\n\t\tif ( !handler.guid ) {\n\t\t\thandler.guid = jQuery.guid++;\n\t\t}\n\n\t\t// Init the element's event structure and main handler, if this is the first\n\t\tif ( !( events = elemData.events ) ) {\n\t\t\tevents = elemData.events = {};\n\t\t}\n\t\tif ( !( eventHandle = elemData.handle ) ) {\n\t\t\teventHandle = elemData.handle = function( e ) {\n\n\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\n\t\t\t\t// when an event is called after a page has unloaded\n\t\t\t\treturn typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ?\n\t\t\t\t\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\n\t\t\t};\n\t\t}\n\n\t\t// Handle multiple events separated by a space\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// There *must* be a type, no attaching namespace-only handlers\n\t\t\tif ( !type ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If event changes its type, use the special event handlers for the changed type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// If selector defined, determine special event api type, otherwise given type\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\n\t\t\t// Update special based on newly reset type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// handleObj is passed to all event handlers\n\t\t\thandleObj = jQuery.extend( {\n\t\t\t\ttype: type,\n\t\t\t\torigType: origType,\n\t\t\t\tdata: data,\n\t\t\t\thandler: handler,\n\t\t\t\tguid: handler.guid,\n\t\t\t\tselector: selector,\n\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\n\t\t\t\tnamespace: namespaces.join( \".\" )\n\t\t\t}, handleObjIn );\n\n\t\t\t// Init the event handler queue if we're the first\n\t\t\tif ( !( handlers = events[ type ] ) ) {\n\t\t\t\thandlers = events[ type ] = [];\n\t\t\t\thandlers.delegateCount = 0;\n\n\t\t\t\t// Only use addEventListener if the special events handler returns false\n\t\t\t\tif ( !special.setup ||\n\t\t\t\t\tspecial.setup.call( elem, data, namespaces, eventHandle ) === false ) {\n\n\t\t\t\t\tif ( elem.addEventListener ) {\n\t\t\t\t\t\telem.addEventListener( type, eventHandle );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( special.add ) {\n\t\t\t\tspecial.add.call( elem, handleObj );\n\n\t\t\t\tif ( !handleObj.handler.guid ) {\n\t\t\t\t\thandleObj.handler.guid = handler.guid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add to the element's handler list, delegates in front\n\t\t\tif ( selector ) {\n\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\n\t\t\t} else {\n\t\t\t\thandlers.push( handleObj );\n\t\t\t}\n\n\t\t\t// Keep track of which events have ever been used, for event optimization\n\t\t\tjQuery.event.global[ type ] = true;\n\t\t}\n\n\t},\n\n\t// Detach an event or set of events from an element\n\tremove: function( elem, types, handler, selector, mappedTypes ) {\n\n\t\tvar j, origCount, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.hasData( elem ) && dataPriv.get( elem );\n\n\t\tif ( !elemData || !( events = elemData.events ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Once for each type.namespace in types; type may be omitted\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// Unbind all events (on this namespace, if provided) for the element\n\t\t\tif ( !type ) {\n\t\t\t\tfor ( type in events ) {\n\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\t\t\thandlers = events[ type ] || [];\n\t\t\ttmp = tmp[ 2 ] &&\n\t\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" );\n\n\t\t\t// Remove matching events\n\t\t\torigCount = j = handlers.length;\n\t\t\twhile ( j-- ) {\n\t\t\t\thandleObj = handlers[ j ];\n\n\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\n\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\n\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\n\t\t\t\t\t( !selector || selector === handleObj.selector ||\n\t\t\t\t\t\tselector === \"**\" && handleObj.selector ) ) {\n\t\t\t\t\thandlers.splice( j, 1 );\n\n\t\t\t\t\tif ( handleObj.selector ) {\n\t\t\t\t\t\thandlers.delegateCount--;\n\t\t\t\t\t}\n\t\t\t\t\tif ( special.remove ) {\n\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove generic event handler if we removed something and no more handlers exist\n\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\n\t\t\tif ( origCount && !handlers.length ) {\n\t\t\t\tif ( !special.teardown ||\n\t\t\t\t\tspecial.teardown.call( elem, namespaces, elemData.handle ) === false ) {\n\n\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\n\t\t\t\t}\n\n\t\t\t\tdelete events[ type ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove data and the expando if it's no longer used\n\t\tif ( jQuery.isEmptyObject( events ) ) {\n\t\t\tdataPriv.remove( elem, \"handle events\" );\n\t\t}\n\t},\n\n\tdispatch: function( nativeEvent ) {\n\n\t\t// Make a writable jQuery.Event from the native event object\n\t\tvar event = jQuery.event.fix( nativeEvent );\n\n\t\tvar i, j, ret, matched, handleObj, handlerQueue,\n\t\t\targs = new Array( arguments.length ),\n\t\t\thandlers = ( dataPriv.get( this, \"events\" ) || {} )[ event.type ] || [],\n\t\t\tspecial = jQuery.event.special[ event.type ] || {};\n\n\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\n\t\targs[ 0 ] = event;\n\n\t\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\n\t\tevent.delegateTarget = this;\n\n\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\n\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine handlers\n\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\n\n\t\t// Run delegates first; they may want to stop propagation beneath us\n\t\ti = 0;\n\t\twhile ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tevent.currentTarget = matched.elem;\n\n\t\t\tj = 0;\n\t\t\twhile ( ( handleObj = matched.handlers[ j++ ] ) &&\n\t\t\t\t!event.isImmediatePropagationStopped() ) {\n\n\t\t\t\t// Triggered event must either 1) have no namespace, or 2) have namespace(s)\n\t\t\t\t// a subset or equal to those in the bound event (both can have no namespace).\n\t\t\t\tif ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {\n\n\t\t\t\t\tevent.handleObj = handleObj;\n\t\t\t\t\tevent.data = handleObj.data;\n\n\t\t\t\t\tret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||\n\t\t\t\t\t\thandleObj.handler ).apply( matched.elem, args );\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\tif ( ( event.result = ret ) === false ) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Call the postDispatch hook for the mapped type\n\t\tif ( special.postDispatch ) {\n\t\t\tspecial.postDispatch.call( this, event );\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\thandlers: function( event, handlers ) {\n\t\tvar i, handleObj, sel, matchedHandlers, matchedSelectors,\n\t\t\thandlerQueue = [],\n\t\t\tdelegateCount = handlers.delegateCount,\n\t\t\tcur = event.target;\n\n\t\t// Find delegate handlers\n\t\tif ( delegateCount &&\n\n\t\t\t// Support: IE <=9\n\t\t\t// Black-hole SVG <use> instance trees (trac-13180)\n\t\t\tcur.nodeType &&\n\n\t\t\t// Support: Firefox <=42\n\t\t\t// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)\n\t\t\t// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click\n\t\t\t// Support: IE 11 only\n\t\t\t// ...but not arrow key \"clicks\" of radio inputs, which can have `button` -1 (gh-2343)\n\t\t\t!( event.type === \"click\" && event.button >= 1 ) ) {\n\n\t\t\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\n\n\t\t\t\t// Don't check non-elements (#13208)\n\t\t\t\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n\t\t\t\tif ( cur.nodeType === 1 && !( event.type === \"click\" && cur.disabled === true ) ) {\n\t\t\t\t\tmatchedHandlers = [];\n\t\t\t\t\tmatchedSelectors = {};\n\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\n\t\t\t\t\t\thandleObj = handlers[ i ];\n\n\t\t\t\t\t\t// Don't conflict with Object.prototype properties (#13203)\n\t\t\t\t\t\tsel = handleObj.selector + \" \";\n\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] === undefined ) {\n\t\t\t\t\t\t\tmatchedSelectors[ sel ] = handleObj.needsContext ?\n\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) > -1 :\n\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] ) {\n\t\t\t\t\t\t\tmatchedHandlers.push( handleObj );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( matchedHandlers.length ) {\n\t\t\t\t\t\thandlerQueue.push( { elem: cur, handlers: matchedHandlers } );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add the remaining (directly-bound) handlers\n\t\tcur = this;\n\t\tif ( delegateCount < handlers.length ) {\n\t\t\thandlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );\n\t\t}\n\n\t\treturn handlerQueue;\n\t},\n\n\taddProp: function( name, hook ) {\n\t\tObject.defineProperty( jQuery.Event.prototype, name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\n\t\t\tget: jQuery.isFunction( hook ) ?\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\t\treturn hook( this.originalEvent );\n\t\t\t\t\t}\n\t\t\t\t} :\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\t\treturn this.originalEvent[ name ];\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\tset: function( value ) {\n\t\t\t\tObject.defineProperty( this, name, {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\twritable: true,\n\t\t\t\t\tvalue: value\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t},\n\n\tfix: function( originalEvent ) {\n\t\treturn originalEvent[ jQuery.expando ] ?\n\t\t\toriginalEvent :\n\t\t\tnew jQuery.Event( originalEvent );\n\t},\n\n\tspecial: {\n\t\tload: {\n\n\t\t\t// Prevent triggered image.load events from bubbling to window.load\n\t\t\tnoBubble: true\n\t\t},\n\t\tfocus: {\n\n\t\t\t// Fire native event if possible so blur/focus sequence is correct\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this !== safeActiveElement() && this.focus ) {\n\t\t\t\t\tthis.focus();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusin\"\n\t\t},\n\t\tblur: {\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this === safeActiveElement() && this.blur ) {\n\t\t\t\t\tthis.blur();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusout\"\n\t\t},\n\t\tclick: {\n\n\t\t\t// For checkbox, fire native event so checked state will be right\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this.type === \"checkbox\" && this.click && jQuery.nodeName( this, \"input\" ) ) {\n\t\t\t\t\tthis.click();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// For cross-browser consistency, don't fire native .click() on links\n\t\t\t_default: function( event ) {\n\t\t\t\treturn jQuery.nodeName( event.target, \"a\" );\n\t\t\t}\n\t\t},\n\n\t\tbeforeunload: {\n\t\t\tpostDispatch: function( event ) {\n\n\t\t\t\t// Support: Firefox 20+\n\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\n\t\t\t\tif ( event.result !== undefined && event.originalEvent ) {\n\t\t\t\t\tevent.originalEvent.returnValue = event.result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\njQuery.removeEvent = function( elem, type, handle ) {\n\n\t// This \"if\" is needed for plain objects\n\tif ( elem.removeEventListener ) {\n\t\telem.removeEventListener( type, handle );\n\t}\n};\n\njQuery.Event = function( src, props ) {\n\n\t// Allow instantiation without the 'new' keyword\n\tif ( !( this instanceof jQuery.Event ) ) {\n\t\treturn new jQuery.Event( src, props );\n\t}\n\n\t// Event object\n\tif ( src && src.type ) {\n\t\tthis.originalEvent = src;\n\t\tthis.type = src.type;\n\n\t\t// Events bubbling up the document may have been marked as prevented\n\t\t// by a handler lower down the tree; reflect the correct value.\n\t\tthis.isDefaultPrevented = src.defaultPrevented ||\n\t\t\t\tsrc.defaultPrevented === undefined &&\n\n\t\t\t\t// Support: Android <=2.3 only\n\t\t\t\tsrc.returnValue === false ?\n\t\t\treturnTrue :\n\t\t\treturnFalse;\n\n\t\t// Create target properties\n\t\t// Support: Safari <=6 - 7 only\n\t\t// Target should not be a text node (#504, #13143)\n\t\tthis.target = ( src.target && src.target.nodeType === 3 ) ?\n\t\t\tsrc.target.parentNode :\n\t\t\tsrc.target;\n\n\t\tthis.currentTarget = src.currentTarget;\n\t\tthis.relatedTarget = src.relatedTarget;\n\n\t// Event type\n\t} else {\n\t\tthis.type = src;\n\t}\n\n\t// Put explicitly provided properties onto the event object\n\tif ( props ) {\n\t\tjQuery.extend( this, props );\n\t}\n\n\t// Create a timestamp if incoming event doesn't have one\n\tthis.timeStamp = src && src.timeStamp || jQuery.now();\n\n\t// Mark it as fixed\n\tthis[ jQuery.expando ] = true;\n};\n\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\njQuery.Event.prototype = {\n\tconstructor: jQuery.Event,\n\tisDefaultPrevented: returnFalse,\n\tisPropagationStopped: returnFalse,\n\tisImmediatePropagationStopped: returnFalse,\n\tisSimulated: false,\n\n\tpreventDefault: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isDefaultPrevented = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.preventDefault();\n\t\t}\n\t},\n\tstopPropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isPropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopPropagation();\n\t\t}\n\t},\n\tstopImmediatePropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isImmediatePropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopImmediatePropagation();\n\t\t}\n\n\t\tthis.stopPropagation();\n\t}\n};\n\n// Includes all common event props including KeyEvent and MouseEvent specific props\njQuery.each( {\n\taltKey: true,\n\tbubbles: true,\n\tcancelable: true,\n\tchangedTouches: true,\n\tctrlKey: true,\n\tdetail: true,\n\teventPhase: true,\n\tmetaKey: true,\n\tpageX: true,\n\tpageY: true,\n\tshiftKey: true,\n\tview: true,\n\t\"char\": true,\n\tcharCode: true,\n\tkey: true,\n\tkeyCode: true,\n\tbutton: true,\n\tbuttons: true,\n\tclientX: true,\n\tclientY: true,\n\toffsetX: true,\n\toffsetY: true,\n\tpointerId: true,\n\tpointerType: true,\n\tscreenX: true,\n\tscreenY: true,\n\ttargetTouches: true,\n\ttoElement: true,\n\ttouches: true,\n\n\twhich: function( event ) {\n\t\tvar button = event.button;\n\n\t\t// Add which for key events\n\t\tif ( event.which == null && rkeyEvent.test( event.type ) ) {\n\t\t\treturn event.charCode != null ? event.charCode : event.keyCode;\n\t\t}\n\n\t\t// Add which for click: 1 === left; 2 === middle; 3 === right\n\t\tif ( !event.which && button !== undefined && rmouseEvent.test( event.type ) ) {\n\t\t\tif ( button & 1 ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tif ( button & 2 ) {\n\t\t\t\treturn 3;\n\t\t\t}\n\n\t\t\tif ( button & 4 ) {\n\t\t\t\treturn 2;\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn event.which;\n\t}\n}, jQuery.event.addProp );\n\n// Create mouseenter/leave events using mouseover/out and event-time checks\n// so that event delegation works in jQuery.\n// Do the same for pointerenter/pointerleave and pointerover/pointerout\n//\n// Support: Safari 7 only\n// Safari sends mouseenter too often; see:\n// https://bugs.chromium.org/p/chromium/issues/detail?id=470258\n// for the description of the bug (it existed in older Chrome versions as well).\njQuery.each( {\n\tmouseenter: \"mouseover\",\n\tmouseleave: \"mouseout\",\n\tpointerenter: \"pointerover\",\n\tpointerleave: \"pointerout\"\n}, function( orig, fix ) {\n\tjQuery.event.special[ orig ] = {\n\t\tdelegateType: fix,\n\t\tbindType: fix,\n\n\t\thandle: function( event ) {\n\t\t\tvar ret,\n\t\t\t\ttarget = this,\n\t\t\t\trelated = event.relatedTarget,\n\t\t\t\thandleObj = event.handleObj;\n\n\t\t\t// For mouseenter/leave call the handler if related is outside the target.\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\n\t\t\tif ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {\n\t\t\t\tevent.type = handleObj.origType;\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\n\t\t\t\tevent.type = fix;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t};\n} );\n\njQuery.fn.extend( {\n\n\ton: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn );\n\t},\n\tone: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn, 1 );\n\t},\n\toff: function( types, selector, fn ) {\n\t\tvar handleObj, type;\n\t\tif ( types && types.preventDefault && types.handleObj ) {\n\n\t\t\t// ( event )  dispatched jQuery.Event\n\t\t\thandleObj = types.handleObj;\n\t\t\tjQuery( types.delegateTarget ).off(\n\t\t\t\thandleObj.namespace ?\n\t\t\t\t\thandleObj.origType + \".\" + handleObj.namespace :\n\t\t\t\t\thandleObj.origType,\n\t\t\t\thandleObj.selector,\n\t\t\t\thandleObj.handler\n\t\t\t);\n\t\t\treturn this;\n\t\t}\n\t\tif ( typeof types === \"object\" ) {\n\n\t\t\t// ( types-object [, selector] )\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.off( type, selector, types[ type ] );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif ( selector === false || typeof selector === \"function\" ) {\n\n\t\t\t// ( types [, fn] )\n\t\t\tfn = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.remove( this, types, fn, selector );\n\t\t} );\n\t}\n} );\n\n\nvar\n\n\t/* eslint-disable max-len */\n\n\t// See https://github.com/eslint/eslint/issues/3229\n\trxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)[^>]*)\\/>/gi,\n\n\t/* eslint-enable */\n\n\t// Support: IE <=10 - 11, Edge 12 - 13\n\t// In IE/Edge using regex groups here causes severe slowdowns.\n\t// See https://connect.microsoft.com/IE/feedback/details/1736512/\n\trnoInnerhtml = /<script|<style|<link/i,\n\n\t// checked=\"checked\" or checked\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n\trscriptTypeMasked = /^true\\/(.*)/,\n\trcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;\n\nfunction manipulationTarget( elem, content ) {\n\tif ( jQuery.nodeName( elem, \"table\" ) &&\n\t\tjQuery.nodeName( content.nodeType !== 11 ? content : content.firstChild, \"tr\" ) ) {\n\n\t\treturn elem.getElementsByTagName( \"tbody\" )[ 0 ] || elem;\n\t}\n\n\treturn elem;\n}\n\n// Replace/restore the type attribute of script elements for safe DOM manipulation\nfunction disableScript( elem ) {\n\telem.type = ( elem.getAttribute( \"type\" ) !== null ) + \"/\" + elem.type;\n\treturn elem;\n}\nfunction restoreScript( elem ) {\n\tvar match = rscriptTypeMasked.exec( elem.type );\n\n\tif ( match ) {\n\t\telem.type = match[ 1 ];\n\t} else {\n\t\telem.removeAttribute( \"type\" );\n\t}\n\n\treturn elem;\n}\n\nfunction cloneCopyEvent( src, dest ) {\n\tvar i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\n\n\tif ( dest.nodeType !== 1 ) {\n\t\treturn;\n\t}\n\n\t// 1. Copy private data: events, handlers, etc.\n\tif ( dataPriv.hasData( src ) ) {\n\t\tpdataOld = dataPriv.access( src );\n\t\tpdataCur = dataPriv.set( dest, pdataOld );\n\t\tevents = pdataOld.events;\n\n\t\tif ( events ) {\n\t\t\tdelete pdataCur.handle;\n\t\t\tpdataCur.events = {};\n\n\t\t\tfor ( type in events ) {\n\t\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\n\t\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 2. Copy user data\n\tif ( dataUser.hasData( src ) ) {\n\t\tudataOld = dataUser.access( src );\n\t\tudataCur = jQuery.extend( {}, udataOld );\n\n\t\tdataUser.set( dest, udataCur );\n\t}\n}\n\n// Fix IE bugs, see support tests\nfunction fixInput( src, dest ) {\n\tvar nodeName = dest.nodeName.toLowerCase();\n\n\t// Fails to persist the checked state of a cloned checkbox or radio button.\n\tif ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {\n\t\tdest.checked = src.checked;\n\n\t// Fails to return the selected option to the default selected state when cloning options\n\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\n\t\tdest.defaultValue = src.defaultValue;\n\t}\n}\n\nfunction domManip( collection, args, callback, ignored ) {\n\n\t// Flatten any nested arrays\n\targs = concat.apply( [], args );\n\n\tvar fragment, first, scripts, hasScripts, node, doc,\n\t\ti = 0,\n\t\tl = collection.length,\n\t\tiNoClone = l - 1,\n\t\tvalue = args[ 0 ],\n\t\tisFunction = jQuery.isFunction( value );\n\n\t// We can't cloneNode fragments that contain checked, in WebKit\n\tif ( isFunction ||\n\t\t\t( l > 1 && typeof value === \"string\" &&\n\t\t\t\t!support.checkClone && rchecked.test( value ) ) ) {\n\t\treturn collection.each( function( index ) {\n\t\t\tvar self = collection.eq( index );\n\t\t\tif ( isFunction ) {\n\t\t\t\targs[ 0 ] = value.call( this, index, self.html() );\n\t\t\t}\n\t\t\tdomManip( self, args, callback, ignored );\n\t\t} );\n\t}\n\n\tif ( l ) {\n\t\tfragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );\n\t\tfirst = fragment.firstChild;\n\n\t\tif ( fragment.childNodes.length === 1 ) {\n\t\t\tfragment = first;\n\t\t}\n\n\t\t// Require either new content or an interest in ignored elements to invoke the callback\n\t\tif ( first || ignored ) {\n\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\n\t\t\thasScripts = scripts.length;\n\n\t\t\t// Use the original fragment for the last item\n\t\t\t// instead of the first because it can end up\n\t\t\t// being emptied incorrectly in certain situations (#8070).\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tnode = fragment;\n\n\t\t\t\tif ( i !== iNoClone ) {\n\t\t\t\t\tnode = jQuery.clone( node, true, true );\n\n\t\t\t\t\t// Keep references to cloned scripts for later restoration\n\t\t\t\t\tif ( hasScripts ) {\n\n\t\t\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcallback.call( collection[ i ], node, i );\n\t\t\t}\n\n\t\t\tif ( hasScripts ) {\n\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\n\n\t\t\t\t// Reenable scripts\n\t\t\t\tjQuery.map( scripts, restoreScript );\n\n\t\t\t\t// Evaluate executable scripts on first document insertion\n\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\n\t\t\t\t\tnode = scripts[ i ];\n\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\n\t\t\t\t\t\t!dataPriv.access( node, \"globalEval\" ) &&\n\t\t\t\t\t\tjQuery.contains( doc, node ) ) {\n\n\t\t\t\t\t\tif ( node.src ) {\n\n\t\t\t\t\t\t\t// Optional AJAX dependency, but won't run scripts if not present\n\t\t\t\t\t\t\tif ( jQuery._evalUrl ) {\n\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tDOMEval( node.textContent.replace( rcleanScript, \"\" ), doc );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn collection;\n}\n\nfunction remove( elem, selector, keepData ) {\n\tvar node,\n\t\tnodes = selector ? jQuery.filter( selector, elem ) : elem,\n\t\ti = 0;\n\n\tfor ( ; ( node = nodes[ i ] ) != null; i++ ) {\n\t\tif ( !keepData && node.nodeType === 1 ) {\n\t\t\tjQuery.cleanData( getAll( node ) );\n\t\t}\n\n\t\tif ( node.parentNode ) {\n\t\t\tif ( keepData && jQuery.contains( node.ownerDocument, node ) ) {\n\t\t\t\tsetGlobalEval( getAll( node, \"script\" ) );\n\t\t\t}\n\t\t\tnode.parentNode.removeChild( node );\n\t\t}\n\t}\n\n\treturn elem;\n}\n\njQuery.extend( {\n\thtmlPrefilter: function( html ) {\n\t\treturn html.replace( rxhtmlTag, \"<$1></$2>\" );\n\t},\n\n\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\n\t\tvar i, l, srcElements, destElements,\n\t\t\tclone = elem.cloneNode( true ),\n\t\t\tinPage = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t// Fix IE cloning issues\n\t\tif ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&\n\t\t\t\t!jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2\n\t\t\tdestElements = getAll( clone );\n\t\t\tsrcElements = getAll( elem );\n\n\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\tfixInput( srcElements[ i ], destElements[ i ] );\n\t\t\t}\n\t\t}\n\n\t\t// Copy the events from the original to the clone\n\t\tif ( dataAndEvents ) {\n\t\t\tif ( deepDataAndEvents ) {\n\t\t\t\tsrcElements = srcElements || getAll( elem );\n\t\t\t\tdestElements = destElements || getAll( clone );\n\n\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\t\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcloneCopyEvent( elem, clone );\n\t\t\t}\n\t\t}\n\n\t\t// Preserve script evaluation history\n\t\tdestElements = getAll( clone, \"script\" );\n\t\tif ( destElements.length > 0 ) {\n\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\n\t\t}\n\n\t\t// Return the cloned set\n\t\treturn clone;\n\t},\n\n\tcleanData: function( elems ) {\n\t\tvar data, elem, type,\n\t\t\tspecial = jQuery.event.special,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\n\t\t\tif ( acceptData( elem ) ) {\n\t\t\t\tif ( ( data = elem[ dataPriv.expando ] ) ) {\n\t\t\t\t\tif ( data.events ) {\n\t\t\t\t\t\tfor ( type in data.events ) {\n\t\t\t\t\t\t\tif ( special[ type ] ) {\n\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\n\n\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataPriv.expando ] = undefined;\n\t\t\t\t}\n\t\t\t\tif ( elem[ dataUser.expando ] ) {\n\n\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataUser.expando ] = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n} );\n\njQuery.fn.extend( {\n\tdetach: function( selector ) {\n\t\treturn remove( this, selector, true );\n\t},\n\n\tremove: function( selector ) {\n\t\treturn remove( this, selector );\n\t},\n\n\ttext: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\treturn value === undefined ?\n\t\t\t\tjQuery.text( this ) :\n\t\t\t\tthis.empty().each( function() {\n\t\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\t\t\tthis.textContent = value;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t}, null, value, arguments.length );\n\t},\n\n\tappend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.appendChild( elem );\n\t\t\t}\n\t\t} );\n\t},\n\n\tprepend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.insertBefore( elem, target.firstChild );\n\t\t\t}\n\t\t} );\n\t},\n\n\tbefore: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this );\n\t\t\t}\n\t\t} );\n\t},\n\n\tafter: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\n\t\t\t}\n\t\t} );\n\t},\n\n\tempty: function() {\n\t\tvar elem,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = this[ i ] ) != null; i++ ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\n\t\t\t\t// Prevent memory leaks\n\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\n\t\t\t\t// Remove any remaining nodes\n\t\t\t\telem.textContent = \"\";\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tclone: function( dataAndEvents, deepDataAndEvents ) {\n\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\n\t\treturn this.map( function() {\n\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\n\t\t} );\n\t},\n\n\thtml: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\tvar elem = this[ 0 ] || {},\n\t\t\t\ti = 0,\n\t\t\t\tl = this.length;\n\n\t\t\tif ( value === undefined && elem.nodeType === 1 ) {\n\t\t\t\treturn elem.innerHTML;\n\t\t\t}\n\n\t\t\t// See if we can take a shortcut and just use innerHTML\n\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\n\t\t\t\t!wrapMap[ ( rtagName.exec( value ) || [ \"\", \"\" ] )[ 1 ].toLowerCase() ] ) {\n\n\t\t\t\tvalue = jQuery.htmlPrefilter( value );\n\n\t\t\t\ttry {\n\t\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\t\telem = this[ i ] || {};\n\n\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\t\t\t\t\t\telem.innerHTML = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telem = 0;\n\n\t\t\t\t// If using innerHTML throws an exception, use the fallback method\n\t\t\t\t} catch ( e ) {}\n\t\t\t}\n\n\t\t\tif ( elem ) {\n\t\t\t\tthis.empty().append( value );\n\t\t\t}\n\t\t}, null, value, arguments.length );\n\t},\n\n\treplaceWith: function() {\n\t\tvar ignored = [];\n\n\t\t// Make the changes, replacing each non-ignored context element with the new content\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tvar parent = this.parentNode;\n\n\t\t\tif ( jQuery.inArray( this, ignored ) < 0 ) {\n\t\t\t\tjQuery.cleanData( getAll( this ) );\n\t\t\t\tif ( parent ) {\n\t\t\t\t\tparent.replaceChild( elem, this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Force callback invocation\n\t\t}, ignored );\n\t}\n} );\n\njQuery.each( {\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\",\n\treplaceAll: \"replaceWith\"\n}, function( name, original ) {\n\tjQuery.fn[ name ] = function( selector ) {\n\t\tvar elems,\n\t\t\tret = [],\n\t\t\tinsert = jQuery( selector ),\n\t\t\tlast = insert.length - 1,\n\t\t\ti = 0;\n\n\t\tfor ( ; i <= last; i++ ) {\n\t\t\telems = i === last ? this : this.clone( true );\n\t\t\tjQuery( insert[ i ] )[ original ]( elems );\n\n\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t// .get() because push.apply(_, arraylike) throws on ancient WebKit\n\t\t\tpush.apply( ret, elems.get() );\n\t\t}\n\n\t\treturn this.pushStack( ret );\n\t};\n} );\nvar rmargin = ( /^margin/ );\n\nvar rnumnonpx = new RegExp( \"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\" );\n\nvar getStyles = function( elem ) {\n\n\t\t// Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n\t\t// IE throws on elements created in popups\n\t\t// FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n\t\tvar view = elem.ownerDocument.defaultView;\n\n\t\tif ( !view || !view.opener ) {\n\t\t\tview = window;\n\t\t}\n\n\t\treturn view.getComputedStyle( elem );\n\t};\n\n\n\n( function() {\n\n\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\n\t// so they're executed at the same time to save the second computation.\n\tfunction computeStyleTests() {\n\n\t\t// This is a singleton, we need to execute it only once\n\t\tif ( !div ) {\n\t\t\treturn;\n\t\t}\n\n\t\tdiv.style.cssText =\n\t\t\t\"box-sizing:border-box;\" +\n\t\t\t\"position:relative;display:block;\" +\n\t\t\t\"margin:auto;border:1px;padding:1px;\" +\n\t\t\t\"top:1%;width:50%\";\n\t\tdiv.innerHTML = \"\";\n\t\tdocumentElement.appendChild( container );\n\n\t\tvar divStyle = window.getComputedStyle( div );\n\t\tpixelPositionVal = divStyle.top !== \"1%\";\n\n\t\t// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\n\t\treliableMarginLeftVal = divStyle.marginLeft === \"2px\";\n\t\tboxSizingReliableVal = divStyle.width === \"4px\";\n\n\t\t// Support: Android 4.0 - 4.3 only\n\t\t// Some styles come back with percentage values, even though they shouldn't\n\t\tdiv.style.marginRight = \"50%\";\n\t\tpixelMarginRightVal = divStyle.marginRight === \"4px\";\n\n\t\tdocumentElement.removeChild( container );\n\n\t\t// Nullify the div so it wouldn't be stored in the memory and\n\t\t// it will also be a sign that checks already performed\n\t\tdiv = null;\n\t}\n\n\tvar pixelPositionVal, boxSizingReliableVal, pixelMarginRightVal, reliableMarginLeftVal,\n\t\tcontainer = document.createElement( \"div\" ),\n\t\tdiv = document.createElement( \"div\" );\n\n\t// Finish early in limited (non-browser) environments\n\tif ( !div.style ) {\n\t\treturn;\n\t}\n\n\t// Support: IE <=9 - 11 only\n\t// Style of cloned element affects source element cloned (#8908)\n\tdiv.style.backgroundClip = \"content-box\";\n\tdiv.cloneNode( true ).style.backgroundClip = \"\";\n\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n\n\tcontainer.style.cssText = \"border:0;width:8px;height:0;top:0;left:-9999px;\" +\n\t\t\"padding:0;margin-top:1px;position:absolute\";\n\tcontainer.appendChild( div );\n\n\tjQuery.extend( support, {\n\t\tpixelPosition: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelPositionVal;\n\t\t},\n\t\tboxSizingReliable: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn boxSizingReliableVal;\n\t\t},\n\t\tpixelMarginRight: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelMarginRightVal;\n\t\t},\n\t\treliableMarginLeft: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn reliableMarginLeftVal;\n\t\t}\n\t} );\n} )();\n\n\nfunction curCSS( elem, name, computed ) {\n\tvar width, minWidth, maxWidth, ret,\n\t\tstyle = elem.style;\n\n\tcomputed = computed || getStyles( elem );\n\n\t// Support: IE <=9 only\n\t// getPropertyValue is only needed for .css('filter') (#12537)\n\tif ( computed ) {\n\t\tret = computed.getPropertyValue( name ) || computed[ name ];\n\n\t\tif ( ret === \"\" && !jQuery.contains( elem.ownerDocument, elem ) ) {\n\t\t\tret = jQuery.style( elem, name );\n\t\t}\n\n\t\t// A tribute to the \"awesome hack by Dean Edwards\"\n\t\t// Android Browser returns percentage for some values,\n\t\t// but width seems to be reliably pixels.\n\t\t// This is against the CSSOM draft spec:\n\t\t// https://drafts.csswg.org/cssom/#resolved-values\n\t\tif ( !support.pixelMarginRight() && rnumnonpx.test( ret ) && rmargin.test( name ) ) {\n\n\t\t\t// Remember the original values\n\t\t\twidth = style.width;\n\t\t\tminWidth = style.minWidth;\n\t\t\tmaxWidth = style.maxWidth;\n\n\t\t\t// Put in the new values to get a computed value out\n\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\t\tret = computed.width;\n\n\t\t\t// Revert the changed values\n\t\t\tstyle.width = width;\n\t\t\tstyle.minWidth = minWidth;\n\t\t\tstyle.maxWidth = maxWidth;\n\t\t}\n\t}\n\n\treturn ret !== undefined ?\n\n\t\t// Support: IE <=9 - 11 only\n\t\t// IE returns zIndex value as an integer.\n\t\tret + \"\" :\n\t\tret;\n}\n\n\nfunction addGetHookIf( conditionFn, hookFn ) {\n\n\t// Define the hook, we'll check on the first run if it's really needed.\n\treturn {\n\t\tget: function() {\n\t\t\tif ( conditionFn() ) {\n\n\t\t\t\t// Hook not needed (or it's not possible to use it due\n\t\t\t\t// to missing dependency), remove it.\n\t\t\t\tdelete this.get;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Hook needed; redefine it so that the support test is not executed again.\n\t\t\treturn ( this.get = hookFn ).apply( this, arguments );\n\t\t}\n\t};\n}\n\n\nvar\n\n\t// Swappable if display is none or starts with table\n\t// except \"table\", \"table-cell\", or \"table-caption\"\n\t// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\n\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\n\tcssNormalTransform = {\n\t\tletterSpacing: \"0\",\n\t\tfontWeight: \"400\"\n\t},\n\n\tcssPrefixes = [ \"Webkit\", \"Moz\", \"ms\" ],\n\temptyStyle = document.createElement( \"div\" ).style;\n\n// Return a css property mapped to a potentially vendor prefixed property\nfunction vendorPropName( name ) {\n\n\t// Shortcut for names that are not vendor prefixed\n\tif ( name in emptyStyle ) {\n\t\treturn name;\n\t}\n\n\t// Check for vendor prefixed names\n\tvar capName = name[ 0 ].toUpperCase() + name.slice( 1 ),\n\t\ti = cssPrefixes.length;\n\n\twhile ( i-- ) {\n\t\tname = cssPrefixes[ i ] + capName;\n\t\tif ( name in emptyStyle ) {\n\t\t\treturn name;\n\t\t}\n\t}\n}\n\nfunction setPositiveNumber( elem, value, subtract ) {\n\n\t// Any relative (+/-) values have already been\n\t// normalized at this point\n\tvar matches = rcssNum.exec( value );\n\treturn matches ?\n\n\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\n\t\tMath.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || \"px\" ) :\n\t\tvalue;\n}\n\nfunction augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {\n\tvar i,\n\t\tval = 0;\n\n\t// If we already have the right measurement, avoid augmentation\n\tif ( extra === ( isBorderBox ? \"border\" : \"content\" ) ) {\n\t\ti = 4;\n\n\t// Otherwise initialize for horizontal or vertical properties\n\t} else {\n\t\ti = name === \"width\" ? 1 : 0;\n\t}\n\n\tfor ( ; i < 4; i += 2 ) {\n\n\t\t// Both box models exclude margin, so add it if we want it\n\t\tif ( extra === \"margin\" ) {\n\t\t\tval += jQuery.css( elem, extra + cssExpand[ i ], true, styles );\n\t\t}\n\n\t\tif ( isBorderBox ) {\n\n\t\t\t// border-box includes padding, so remove it if we want content\n\t\t\tif ( extra === \"content\" ) {\n\t\t\t\tval -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\t\t\t}\n\n\t\t\t// At this point, extra isn't border nor margin, so remove border\n\t\t\tif ( extra !== \"margin\" ) {\n\t\t\t\tval -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t} else {\n\n\t\t\t// At this point, extra isn't content, so add padding\n\t\t\tval += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\n\t\t\t// At this point, extra isn't content nor padding, so add border\n\t\t\tif ( extra !== \"padding\" ) {\n\t\t\t\tval += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn val;\n}\n\nfunction getWidthOrHeight( elem, name, extra ) {\n\n\t// Start with offset property, which is equivalent to the border-box value\n\tvar val,\n\t\tvalueIsBorderBox = true,\n\t\tstyles = getStyles( elem ),\n\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\";\n\n\t// Support: IE <=11 only\n\t// Running getBoundingClientRect on a disconnected node\n\t// in IE throws an error.\n\tif ( elem.getClientRects().length ) {\n\t\tval = elem.getBoundingClientRect()[ name ];\n\t}\n\n\t// Some non-html elements return undefined for offsetWidth, so check for null/undefined\n\t// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285\n\t// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668\n\tif ( val <= 0 || val == null ) {\n\n\t\t// Fall back to computed then uncomputed css if necessary\n\t\tval = curCSS( elem, name, styles );\n\t\tif ( val < 0 || val == null ) {\n\t\t\tval = elem.style[ name ];\n\t\t}\n\n\t\t// Computed unit is not pixels. Stop here and return.\n\t\tif ( rnumnonpx.test( val ) ) {\n\t\t\treturn val;\n\t\t}\n\n\t\t// Check for style in case a browser which returns unreliable values\n\t\t// for getComputedStyle silently falls back to the reliable elem.style\n\t\tvalueIsBorderBox = isBorderBox &&\n\t\t\t( support.boxSizingReliable() || val === elem.style[ name ] );\n\n\t\t// Normalize \"\", auto, and prepare for extra\n\t\tval = parseFloat( val ) || 0;\n\t}\n\n\t// Use the active box-sizing model to add/subtract irrelevant styles\n\treturn ( val +\n\t\taugmentWidthOrHeight(\n\t\t\telem,\n\t\t\tname,\n\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\n\t\t\tvalueIsBorderBox,\n\t\t\tstyles\n\t\t)\n\t) + \"px\";\n}\n\njQuery.extend( {\n\n\t// Add in style property hooks for overriding the default\n\t// behavior of getting and setting a style property\n\tcssHooks: {\n\t\topacity: {\n\t\t\tget: function( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\n\t\t\t\t\t// We should always get a number back from opacity\n\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\n\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// Don't automatically add \"px\" to these possibly-unitless properties\n\tcssNumber: {\n\t\t\"animationIterationCount\": true,\n\t\t\"columnCount\": true,\n\t\t\"fillOpacity\": true,\n\t\t\"flexGrow\": true,\n\t\t\"flexShrink\": true,\n\t\t\"fontWeight\": true,\n\t\t\"lineHeight\": true,\n\t\t\"opacity\": true,\n\t\t\"order\": true,\n\t\t\"orphans\": true,\n\t\t\"widows\": true,\n\t\t\"zIndex\": true,\n\t\t\"zoom\": true\n\t},\n\n\t// Add in properties whose names you wish to fix before\n\t// setting or getting the value\n\tcssProps: {\n\t\t\"float\": \"cssFloat\"\n\t},\n\n\t// Get and set the style property on a DOM Node\n\tstyle: function( elem, name, value, extra ) {\n\n\t\t// Don't set styles on text and comment nodes\n\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure that we're working with the right name\n\t\tvar ret, type, hooks,\n\t\t\torigName = jQuery.camelCase( name ),\n\t\t\tstyle = elem.style;\n\n\t\tname = jQuery.cssProps[ origName ] ||\n\t\t\t( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );\n\n\t\t// Gets hook for the prefixed version, then unprefixed version\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// Check if we're setting a value\n\t\tif ( value !== undefined ) {\n\t\t\ttype = typeof value;\n\n\t\t\t// Convert \"+=\" or \"-=\" to relative numbers (#7345)\n\t\t\tif ( type === \"string\" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {\n\t\t\t\tvalue = adjustCSS( elem, name, ret );\n\n\t\t\t\t// Fixes bug #9237\n\t\t\t\ttype = \"number\";\n\t\t\t}\n\n\t\t\t// Make sure that null and NaN values aren't set (#7116)\n\t\t\tif ( value == null || value !== value ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a number was passed in, add the unit (except for certain CSS properties)\n\t\t\tif ( type === \"number\" ) {\n\t\t\t\tvalue += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? \"\" : \"px\" );\n\t\t\t}\n\n\t\t\t// background-* props affect original clone's values\n\t\t\tif ( !support.clearCloneStyle && value === \"\" && name.indexOf( \"background\" ) === 0 ) {\n\t\t\t\tstyle[ name ] = \"inherit\";\n\t\t\t}\n\n\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\n\t\t\tif ( !hooks || !( \"set\" in hooks ) ||\n\t\t\t\t( value = hooks.set( elem, value, extra ) ) !== undefined ) {\n\n\t\t\t\tstyle[ name ] = value;\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// If a hook was provided get the non-computed value from there\n\t\t\tif ( hooks && \"get\" in hooks &&\n\t\t\t\t( ret = hooks.get( elem, false, extra ) ) !== undefined ) {\n\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\t// Otherwise just get the value from the style object\n\t\t\treturn style[ name ];\n\t\t}\n\t},\n\n\tcss: function( elem, name, extra, styles ) {\n\t\tvar val, num, hooks,\n\t\t\torigName = jQuery.camelCase( name );\n\n\t\t// Make sure that we're working with the right name\n\t\tname = jQuery.cssProps[ origName ] ||\n\t\t\t( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );\n\n\t\t// Try prefixed name followed by the unprefixed name\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// If a hook was provided get the computed value from there\n\t\tif ( hooks && \"get\" in hooks ) {\n\t\t\tval = hooks.get( elem, true, extra );\n\t\t}\n\n\t\t// Otherwise, if a way to get the computed value exists, use that\n\t\tif ( val === undefined ) {\n\t\t\tval = curCSS( elem, name, styles );\n\t\t}\n\n\t\t// Convert \"normal\" to computed value\n\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\n\t\t\tval = cssNormalTransform[ name ];\n\t\t}\n\n\t\t// Make numeric if forced or a qualifier was provided and val looks numeric\n\t\tif ( extra === \"\" || extra ) {\n\t\t\tnum = parseFloat( val );\n\t\t\treturn extra === true || isFinite( num ) ? num || 0 : val;\n\t\t}\n\t\treturn val;\n\t}\n} );\n\njQuery.each( [ \"height\", \"width\" ], function( i, name ) {\n\tjQuery.cssHooks[ name ] = {\n\t\tget: function( elem, computed, extra ) {\n\t\t\tif ( computed ) {\n\n\t\t\t\t// Certain elements can have dimension info if we invisibly show them\n\t\t\t\t// but it must have a current display style that would benefit\n\t\t\t\treturn rdisplayswap.test( jQuery.css( elem, \"display\" ) ) &&\n\n\t\t\t\t\t// Support: Safari 8+\n\t\t\t\t\t// Table columns in Safari have non-zero offsetWidth & zero\n\t\t\t\t\t// getBoundingClientRect().width unless display is changed.\n\t\t\t\t\t// Support: IE <=11 only\n\t\t\t\t\t// Running getBoundingClientRect on a disconnected node\n\t\t\t\t\t// in IE throws an error.\n\t\t\t\t\t( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?\n\t\t\t\t\t\tswap( elem, cssShow, function() {\n\t\t\t\t\t\t\treturn getWidthOrHeight( elem, name, extra );\n\t\t\t\t\t\t} ) :\n\t\t\t\t\t\tgetWidthOrHeight( elem, name, extra );\n\t\t\t}\n\t\t},\n\n\t\tset: function( elem, value, extra ) {\n\t\t\tvar matches,\n\t\t\t\tstyles = extra && getStyles( elem ),\n\t\t\t\tsubtract = extra && augmentWidthOrHeight(\n\t\t\t\t\telem,\n\t\t\t\t\tname,\n\t\t\t\t\textra,\n\t\t\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\t\t\t\tstyles\n\t\t\t\t);\n\n\t\t\t// Convert to pixels if value adjustment is needed\n\t\t\tif ( subtract && ( matches = rcssNum.exec( value ) ) &&\n\t\t\t\t( matches[ 3 ] || \"px\" ) !== \"px\" ) {\n\n\t\t\t\telem.style[ name ] = value;\n\t\t\t\tvalue = jQuery.css( elem, name );\n\t\t\t}\n\n\t\t\treturn setPositiveNumber( elem, value, subtract );\n\t\t}\n\t};\n} );\n\njQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,\n\tfunction( elem, computed ) {\n\t\tif ( computed ) {\n\t\t\treturn ( parseFloat( curCSS( elem, \"marginLeft\" ) ) ||\n\t\t\t\telem.getBoundingClientRect().left -\n\t\t\t\t\tswap( elem, { marginLeft: 0 }, function() {\n\t\t\t\t\t\treturn elem.getBoundingClientRect().left;\n\t\t\t\t\t} )\n\t\t\t\t) + \"px\";\n\t\t}\n\t}\n);\n\n// These hooks are used by animate to expand properties\njQuery.each( {\n\tmargin: \"\",\n\tpadding: \"\",\n\tborder: \"Width\"\n}, function( prefix, suffix ) {\n\tjQuery.cssHooks[ prefix + suffix ] = {\n\t\texpand: function( value ) {\n\t\t\tvar i = 0,\n\t\t\t\texpanded = {},\n\n\t\t\t\t// Assumes a single number if not a string\n\t\t\t\tparts = typeof value === \"string\" ? value.split( \" \" ) : [ value ];\n\n\t\t\tfor ( ; i < 4; i++ ) {\n\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\n\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\n\t\t\t}\n\n\t\t\treturn expanded;\n\t\t}\n\t};\n\n\tif ( !rmargin.test( prefix ) ) {\n\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\n\t}\n} );\n\njQuery.fn.extend( {\n\tcss: function( name, value ) {\n\t\treturn access( this, function( elem, name, value ) {\n\t\t\tvar styles, len,\n\t\t\t\tmap = {},\n\t\t\t\ti = 0;\n\n\t\t\tif ( jQuery.isArray( name ) ) {\n\t\t\t\tstyles = getStyles( elem );\n\t\t\t\tlen = name.length;\n\n\t\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\n\t\t\t\t}\n\n\t\t\t\treturn map;\n\t\t\t}\n\n\t\t\treturn value !== undefined ?\n\t\t\t\tjQuery.style( elem, name, value ) :\n\t\t\t\tjQuery.css( elem, name );\n\t\t}, name, value, arguments.length > 1 );\n\t}\n} );\n\n\nfunction Tween( elem, options, prop, end, easing ) {\n\treturn new Tween.prototype.init( elem, options, prop, end, easing );\n}\njQuery.Tween = Tween;\n\nTween.prototype = {\n\tconstructor: Tween,\n\tinit: function( elem, options, prop, end, easing, unit ) {\n\t\tthis.elem = elem;\n\t\tthis.prop = prop;\n\t\tthis.easing = easing || jQuery.easing._default;\n\t\tthis.options = options;\n\t\tthis.start = this.now = this.cur();\n\t\tthis.end = end;\n\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\n\t},\n\tcur: function() {\n\t\tvar hooks = Tween.propHooks[ this.prop ];\n\n\t\treturn hooks && hooks.get ?\n\t\t\thooks.get( this ) :\n\t\t\tTween.propHooks._default.get( this );\n\t},\n\trun: function( percent ) {\n\t\tvar eased,\n\t\t\thooks = Tween.propHooks[ this.prop ];\n\n\t\tif ( this.options.duration ) {\n\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\n\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\n\t\t\t);\n\t\t} else {\n\t\t\tthis.pos = eased = percent;\n\t\t}\n\t\tthis.now = ( this.end - this.start ) * eased + this.start;\n\n\t\tif ( this.options.step ) {\n\t\t\tthis.options.step.call( this.elem, this.now, this );\n\t\t}\n\n\t\tif ( hooks && hooks.set ) {\n\t\t\thooks.set( this );\n\t\t} else {\n\t\t\tTween.propHooks._default.set( this );\n\t\t}\n\t\treturn this;\n\t}\n};\n\nTween.prototype.init.prototype = Tween.prototype;\n\nTween.propHooks = {\n\t_default: {\n\t\tget: function( tween ) {\n\t\t\tvar result;\n\n\t\t\t// Use a property on the element directly when it is not a DOM element,\n\t\t\t// or when there is no matching style property that exists.\n\t\t\tif ( tween.elem.nodeType !== 1 ||\n\t\t\t\ttween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {\n\t\t\t\treturn tween.elem[ tween.prop ];\n\t\t\t}\n\n\t\t\t// Passing an empty string as a 3rd parameter to .css will automatically\n\t\t\t// attempt a parseFloat and fallback to a string if the parse fails.\n\t\t\t// Simple values such as \"10px\" are parsed to Float;\n\t\t\t// complex values such as \"rotate(1rad)\" are returned as-is.\n\t\t\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\n\n\t\t\t// Empty strings, null, undefined and \"auto\" are converted to 0.\n\t\t\treturn !result || result === \"auto\" ? 0 : result;\n\t\t},\n\t\tset: function( tween ) {\n\n\t\t\t// Use step hook for back compat.\n\t\t\t// Use cssHook if its there.\n\t\t\t// Use .style if available and use plain properties where available.\n\t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\n\t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\n\t\t\t} else if ( tween.elem.nodeType === 1 &&\n\t\t\t\t( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||\n\t\t\t\t\tjQuery.cssHooks[ tween.prop ] ) ) {\n\t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\n\t\t\t} else {\n\t\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Support: IE <=9 only\n// Panic based approach to setting things on disconnected nodes\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n\tset: function( tween ) {\n\t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\n\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t}\n\t}\n};\n\njQuery.easing = {\n\tlinear: function( p ) {\n\t\treturn p;\n\t},\n\tswing: function( p ) {\n\t\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\n\t},\n\t_default: \"swing\"\n};\n\njQuery.fx = Tween.prototype.init;\n\n// Back compat <1.8 extension point\njQuery.fx.step = {};\n\n\n\n\nvar\n\tfxNow, timerId,\n\trfxtypes = /^(?:toggle|show|hide)$/,\n\trrun = /queueHooks$/;\n\nfunction raf() {\n\tif ( timerId ) {\n\t\twindow.requestAnimationFrame( raf );\n\t\tjQuery.fx.tick();\n\t}\n}\n\n// Animations created synchronously will run synchronously\nfunction createFxNow() {\n\twindow.setTimeout( function() {\n\t\tfxNow = undefined;\n\t} );\n\treturn ( fxNow = jQuery.now() );\n}\n\n// Generate parameters to create a standard animation\nfunction genFx( type, includeWidth ) {\n\tvar which,\n\t\ti = 0,\n\t\tattrs = { height: type };\n\n\t// If we include width, step value is 1 to do all cssExpand values,\n\t// otherwise step value is 2 to skip over Left and Right\n\tincludeWidth = includeWidth ? 1 : 0;\n\tfor ( ; i < 4; i += 2 - includeWidth ) {\n\t\twhich = cssExpand[ i ];\n\t\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\n\t}\n\n\tif ( includeWidth ) {\n\t\tattrs.opacity = attrs.width = type;\n\t}\n\n\treturn attrs;\n}\n\nfunction createTween( value, prop, animation ) {\n\tvar tween,\n\t\tcollection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ \"*\" ] ),\n\t\tindex = 0,\n\t\tlength = collection.length;\n\tfor ( ; index < length; index++ ) {\n\t\tif ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {\n\n\t\t\t// We're done with this property\n\t\t\treturn tween;\n\t\t}\n\t}\n}\n\nfunction defaultPrefilter( elem, props, opts ) {\n\tvar prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,\n\t\tisBox = \"width\" in props || \"height\" in props,\n\t\tanim = this,\n\t\torig = {},\n\t\tstyle = elem.style,\n\t\thidden = elem.nodeType && isHiddenWithinTree( elem ),\n\t\tdataShow = dataPriv.get( elem, \"fxshow\" );\n\n\t// Queue-skipping animations hijack the fx hooks\n\tif ( !opts.queue ) {\n\t\thooks = jQuery._queueHooks( elem, \"fx\" );\n\t\tif ( hooks.unqueued == null ) {\n\t\t\thooks.unqueued = 0;\n\t\t\toldfire = hooks.empty.fire;\n\t\t\thooks.empty.fire = function() {\n\t\t\t\tif ( !hooks.unqueued ) {\n\t\t\t\t\toldfire();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\thooks.unqueued++;\n\n\t\tanim.always( function() {\n\n\t\t\t// Ensure the complete handler is called before this completes\n\t\t\tanim.always( function() {\n\t\t\t\thooks.unqueued--;\n\t\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\n\t\t\t\t\thooks.empty.fire();\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\t}\n\n\t// Detect show/hide animations\n\tfor ( prop in props ) {\n\t\tvalue = props[ prop ];\n\t\tif ( rfxtypes.test( value ) ) {\n\t\t\tdelete props[ prop ];\n\t\t\ttoggle = toggle || value === \"toggle\";\n\t\t\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\n\n\t\t\t\t// Pretend to be hidden if this is a \"show\" and\n\t\t\t\t// there is still data from a stopped show/hide\n\t\t\t\tif ( value === \"show\" && dataShow && dataShow[ prop ] !== undefined ) {\n\t\t\t\t\thidden = true;\n\n\t\t\t\t// Ignore all other no-op show/hide data\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\n\t\t}\n\t}\n\n\t// Bail out if this is a no-op like .hide().hide()\n\tpropTween = !jQuery.isEmptyObject( props );\n\tif ( !propTween && jQuery.isEmptyObject( orig ) ) {\n\t\treturn;\n\t}\n\n\t// Restrict \"overflow\" and \"display\" styles during box animations\n\tif ( isBox && elem.nodeType === 1 ) {\n\n\t\t// Support: IE <=9 - 11, Edge 12 - 13\n\t\t// Record all 3 overflow attributes because IE does not infer the shorthand\n\t\t// from identically-valued overflowX and overflowY\n\t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\n\n\t\t// Identify a display type, preferring old show/hide data over the CSS cascade\n\t\trestoreDisplay = dataShow && dataShow.display;\n\t\tif ( restoreDisplay == null ) {\n\t\t\trestoreDisplay = dataPriv.get( elem, \"display\" );\n\t\t}\n\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\tif ( display === \"none\" ) {\n\t\t\tif ( restoreDisplay ) {\n\t\t\t\tdisplay = restoreDisplay;\n\t\t\t} else {\n\n\t\t\t\t// Get nonempty value(s) by temporarily forcing visibility\n\t\t\t\tshowHide( [ elem ], true );\n\t\t\t\trestoreDisplay = elem.style.display || restoreDisplay;\n\t\t\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\t\t\tshowHide( [ elem ] );\n\t\t\t}\n\t\t}\n\n\t\t// Animate inline elements as inline-block\n\t\tif ( display === \"inline\" || display === \"inline-block\" && restoreDisplay != null ) {\n\t\t\tif ( jQuery.css( elem, \"float\" ) === \"none\" ) {\n\n\t\t\t\t// Restore the original display value at the end of pure show/hide animations\n\t\t\t\tif ( !propTween ) {\n\t\t\t\t\tanim.done( function() {\n\t\t\t\t\t\tstyle.display = restoreDisplay;\n\t\t\t\t\t} );\n\t\t\t\t\tif ( restoreDisplay == null ) {\n\t\t\t\t\t\tdisplay = style.display;\n\t\t\t\t\t\trestoreDisplay = display === \"none\" ? \"\" : display;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstyle.display = \"inline-block\";\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( opts.overflow ) {\n\t\tstyle.overflow = \"hidden\";\n\t\tanim.always( function() {\n\t\t\tstyle.overflow = opts.overflow[ 0 ];\n\t\t\tstyle.overflowX = opts.overflow[ 1 ];\n\t\t\tstyle.overflowY = opts.overflow[ 2 ];\n\t\t} );\n\t}\n\n\t// Implement show/hide animations\n\tpropTween = false;\n\tfor ( prop in orig ) {\n\n\t\t// General show/hide setup for this element animation\n\t\tif ( !propTween ) {\n\t\t\tif ( dataShow ) {\n\t\t\t\tif ( \"hidden\" in dataShow ) {\n\t\t\t\t\thidden = dataShow.hidden;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdataShow = dataPriv.access( elem, \"fxshow\", { display: restoreDisplay } );\n\t\t\t}\n\n\t\t\t// Store hidden/visible for toggle so `.stop().toggle()` \"reverses\"\n\t\t\tif ( toggle ) {\n\t\t\t\tdataShow.hidden = !hidden;\n\t\t\t}\n\n\t\t\t// Show elements before animating them\n\t\t\tif ( hidden ) {\n\t\t\t\tshowHide( [ elem ], true );\n\t\t\t}\n\n\t\t\t/* eslint-disable no-loop-func */\n\n\t\t\tanim.done( function() {\n\n\t\t\t/* eslint-enable no-loop-func */\n\n\t\t\t\t// The final step of a \"hide\" animation is actually hiding the element\n\t\t\t\tif ( !hidden ) {\n\t\t\t\t\tshowHide( [ elem ] );\n\t\t\t\t}\n\t\t\t\tdataPriv.remove( elem, \"fxshow\" );\n\t\t\t\tfor ( prop in orig ) {\n\t\t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t// Per-property setup\n\t\tpropTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\n\t\tif ( !( prop in dataShow ) ) {\n\t\t\tdataShow[ prop ] = propTween.start;\n\t\t\tif ( hidden ) {\n\t\t\t\tpropTween.end = propTween.start;\n\t\t\t\tpropTween.start = 0;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction propFilter( props, specialEasing ) {\n\tvar index, name, easing, value, hooks;\n\n\t// camelCase, specialEasing and expand cssHook pass\n\tfor ( index in props ) {\n\t\tname = jQuery.camelCase( index );\n\t\teasing = specialEasing[ name ];\n\t\tvalue = props[ index ];\n\t\tif ( jQuery.isArray( value ) ) {\n\t\t\teasing = value[ 1 ];\n\t\t\tvalue = props[ index ] = value[ 0 ];\n\t\t}\n\n\t\tif ( index !== name ) {\n\t\t\tprops[ name ] = value;\n\t\t\tdelete props[ index ];\n\t\t}\n\n\t\thooks = jQuery.cssHooks[ name ];\n\t\tif ( hooks && \"expand\" in hooks ) {\n\t\t\tvalue = hooks.expand( value );\n\t\t\tdelete props[ name ];\n\n\t\t\t// Not quite $.extend, this won't overwrite existing keys.\n\t\t\t// Reusing 'index' because we have the correct \"name\"\n\t\t\tfor ( index in value ) {\n\t\t\t\tif ( !( index in props ) ) {\n\t\t\t\t\tprops[ index ] = value[ index ];\n\t\t\t\t\tspecialEasing[ index ] = easing;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tspecialEasing[ name ] = easing;\n\t\t}\n\t}\n}\n\nfunction Animation( elem, properties, options ) {\n\tvar result,\n\t\tstopped,\n\t\tindex = 0,\n\t\tlength = Animation.prefilters.length,\n\t\tdeferred = jQuery.Deferred().always( function() {\n\n\t\t\t// Don't match elem in the :animated selector\n\t\t\tdelete tick.elem;\n\t\t} ),\n\t\ttick = function() {\n\t\t\tif ( stopped ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar currentTime = fxNow || createFxNow(),\n\t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\n\n\t\t\t\t// Support: Android 2.3 only\n\t\t\t\t// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\n\t\t\t\ttemp = remaining / animation.duration || 0,\n\t\t\t\tpercent = 1 - temp,\n\t\t\t\tindex = 0,\n\t\t\t\tlength = animation.tweens.length;\n\n\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\tanimation.tweens[ index ].run( percent );\n\t\t\t}\n\n\t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ] );\n\n\t\t\tif ( percent < 1 && length ) {\n\t\t\t\treturn remaining;\n\t\t\t} else {\n\t\t\t\tdeferred.resolveWith( elem, [ animation ] );\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\tanimation = deferred.promise( {\n\t\t\telem: elem,\n\t\t\tprops: jQuery.extend( {}, properties ),\n\t\t\topts: jQuery.extend( true, {\n\t\t\t\tspecialEasing: {},\n\t\t\t\teasing: jQuery.easing._default\n\t\t\t}, options ),\n\t\t\toriginalProperties: properties,\n\t\t\toriginalOptions: options,\n\t\t\tstartTime: fxNow || createFxNow(),\n\t\t\tduration: options.duration,\n\t\t\ttweens: [],\n\t\t\tcreateTween: function( prop, end ) {\n\t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\n\t\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\n\t\t\t\tanimation.tweens.push( tween );\n\t\t\t\treturn tween;\n\t\t\t},\n\t\t\tstop: function( gotoEnd ) {\n\t\t\t\tvar index = 0,\n\n\t\t\t\t\t// If we are going to the end, we want to run all the tweens\n\t\t\t\t\t// otherwise we skip this part\n\t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\n\t\t\t\tif ( stopped ) {\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\tstopped = true;\n\t\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\t\tanimation.tweens[ index ].run( 1 );\n\t\t\t\t}\n\n\t\t\t\t// Resolve when we played the last frame; otherwise, reject\n\t\t\t\tif ( gotoEnd ) {\n\t\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t} ),\n\t\tprops = animation.props;\n\n\tpropFilter( props, animation.opts.specialEasing );\n\n\tfor ( ; index < length; index++ ) {\n\t\tresult = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );\n\t\tif ( result ) {\n\t\t\tif ( jQuery.isFunction( result.stop ) ) {\n\t\t\t\tjQuery._queueHooks( animation.elem, animation.opts.queue ).stop =\n\t\t\t\t\tjQuery.proxy( result.stop, result );\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tjQuery.map( props, createTween, animation );\n\n\tif ( jQuery.isFunction( animation.opts.start ) ) {\n\t\tanimation.opts.start.call( elem, animation );\n\t}\n\n\tjQuery.fx.timer(\n\t\tjQuery.extend( tick, {\n\t\t\telem: elem,\n\t\t\tanim: animation,\n\t\t\tqueue: animation.opts.queue\n\t\t} )\n\t);\n\n\t// attach callbacks from options\n\treturn animation.progress( animation.opts.progress )\n\t\t.done( animation.opts.done, animation.opts.complete )\n\t\t.fail( animation.opts.fail )\n\t\t.always( animation.opts.always );\n}\n\njQuery.Animation = jQuery.extend( Animation, {\n\n\ttweeners: {\n\t\t\"*\": [ function( prop, value ) {\n\t\t\tvar tween = this.createTween( prop, value );\n\t\t\tadjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );\n\t\t\treturn tween;\n\t\t} ]\n\t},\n\n\ttweener: function( props, callback ) {\n\t\tif ( jQuery.isFunction( props ) ) {\n\t\t\tcallback = props;\n\t\t\tprops = [ \"*\" ];\n\t\t} else {\n\t\t\tprops = props.match( rnothtmlwhite );\n\t\t}\n\n\t\tvar prop,\n\t\t\tindex = 0,\n\t\t\tlength = props.length;\n\n\t\tfor ( ; index < length; index++ ) {\n\t\t\tprop = props[ index ];\n\t\t\tAnimation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];\n\t\t\tAnimation.tweeners[ prop ].unshift( callback );\n\t\t}\n\t},\n\n\tprefilters: [ defaultPrefilter ],\n\n\tprefilter: function( callback, prepend ) {\n\t\tif ( prepend ) {\n\t\t\tAnimation.prefilters.unshift( callback );\n\t\t} else {\n\t\t\tAnimation.prefilters.push( callback );\n\t\t}\n\t}\n} );\n\njQuery.speed = function( speed, easing, fn ) {\n\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\n\t\tcomplete: fn || !fn && easing ||\n\t\t\tjQuery.isFunction( speed ) && speed,\n\t\tduration: speed,\n\t\teasing: fn && easing || easing && !jQuery.isFunction( easing ) && easing\n\t};\n\n\t// Go to the end state if fx are off or if document is hidden\n\tif ( jQuery.fx.off || document.hidden ) {\n\t\topt.duration = 0;\n\n\t} else {\n\t\tif ( typeof opt.duration !== \"number\" ) {\n\t\t\tif ( opt.duration in jQuery.fx.speeds ) {\n\t\t\t\topt.duration = jQuery.fx.speeds[ opt.duration ];\n\n\t\t\t} else {\n\t\t\t\topt.duration = jQuery.fx.speeds._default;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Normalize opt.queue - true/undefined/null -> \"fx\"\n\tif ( opt.queue == null || opt.queue === true ) {\n\t\topt.queue = \"fx\";\n\t}\n\n\t// Queueing\n\topt.old = opt.complete;\n\n\topt.complete = function() {\n\t\tif ( jQuery.isFunction( opt.old ) ) {\n\t\t\topt.old.call( this );\n\t\t}\n\n\t\tif ( opt.queue ) {\n\t\t\tjQuery.dequeue( this, opt.queue );\n\t\t}\n\t};\n\n\treturn opt;\n};\n\njQuery.fn.extend( {\n\tfadeTo: function( speed, to, easing, callback ) {\n\n\t\t// Show any hidden elements after setting opacity to 0\n\t\treturn this.filter( isHiddenWithinTree ).css( \"opacity\", 0 ).show()\n\n\t\t\t// Animate to the value specified\n\t\t\t.end().animate( { opacity: to }, speed, easing, callback );\n\t},\n\tanimate: function( prop, speed, easing, callback ) {\n\t\tvar empty = jQuery.isEmptyObject( prop ),\n\t\t\toptall = jQuery.speed( speed, easing, callback ),\n\t\t\tdoAnimation = function() {\n\n\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\n\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\n\n\t\t\t\t// Empty animations, or finishing resolves immediately\n\t\t\t\tif ( empty || dataPriv.get( this, \"finish\" ) ) {\n\t\t\t\t\tanim.stop( true );\n\t\t\t\t}\n\t\t\t};\n\t\t\tdoAnimation.finish = doAnimation;\n\n\t\treturn empty || optall.queue === false ?\n\t\t\tthis.each( doAnimation ) :\n\t\t\tthis.queue( optall.queue, doAnimation );\n\t},\n\tstop: function( type, clearQueue, gotoEnd ) {\n\t\tvar stopQueue = function( hooks ) {\n\t\t\tvar stop = hooks.stop;\n\t\t\tdelete hooks.stop;\n\t\t\tstop( gotoEnd );\n\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tgotoEnd = clearQueue;\n\t\t\tclearQueue = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\tif ( clearQueue && type !== false ) {\n\t\t\tthis.queue( type || \"fx\", [] );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar dequeue = true,\n\t\t\t\tindex = type != null && type + \"queueHooks\",\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tdata = dataPriv.get( this );\n\n\t\t\tif ( index ) {\n\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\n\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( index in data ) {\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\n\t\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this &&\n\t\t\t\t\t( type == null || timers[ index ].queue === type ) ) {\n\n\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\n\t\t\t\t\tdequeue = false;\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start the next in the queue if the last step wasn't forced.\n\t\t\t// Timers currently will call their complete callbacks, which\n\t\t\t// will dequeue but only if they were gotoEnd.\n\t\t\tif ( dequeue || !gotoEnd ) {\n\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t}\n\t\t} );\n\t},\n\tfinish: function( type ) {\n\t\tif ( type !== false ) {\n\t\t\ttype = type || \"fx\";\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tvar index,\n\t\t\t\tdata = dataPriv.get( this ),\n\t\t\t\tqueue = data[ type + \"queue\" ],\n\t\t\t\thooks = data[ type + \"queueHooks\" ],\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tlength = queue ? queue.length : 0;\n\n\t\t\t// Enable finishing flag on private data\n\t\t\tdata.finish = true;\n\n\t\t\t// Empty the queue first\n\t\t\tjQuery.queue( this, type, [] );\n\n\t\t\tif ( hooks && hooks.stop ) {\n\t\t\t\thooks.stop.call( this, true );\n\t\t\t}\n\n\t\t\t// Look for any active animations, and finish them\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\n\t\t\t\t\ttimers[ index ].anim.stop( true );\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Look for any animations in the old queue and finish them\n\t\t\tfor ( index = 0; index < length; index++ ) {\n\t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\n\t\t\t\t\tqueue[ index ].finish.call( this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Turn off finishing flag\n\t\t\tdelete data.finish;\n\t\t} );\n\t}\n} );\n\njQuery.each( [ \"toggle\", \"show\", \"hide\" ], function( i, name ) {\n\tvar cssFn = jQuery.fn[ name ];\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn speed == null || typeof speed === \"boolean\" ?\n\t\t\tcssFn.apply( this, arguments ) :\n\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\n\t};\n} );\n\n// Generate shortcuts for custom animations\njQuery.each( {\n\tslideDown: genFx( \"show\" ),\n\tslideUp: genFx( \"hide\" ),\n\tslideToggle: genFx( \"toggle\" ),\n\tfadeIn: { opacity: \"show\" },\n\tfadeOut: { opacity: \"hide\" },\n\tfadeToggle: { opacity: \"toggle\" }\n}, function( name, props ) {\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn this.animate( props, speed, easing, callback );\n\t};\n} );\n\njQuery.timers = [];\njQuery.fx.tick = function() {\n\tvar timer,\n\t\ti = 0,\n\t\ttimers = jQuery.timers;\n\n\tfxNow = jQuery.now();\n\n\tfor ( ; i < timers.length; i++ ) {\n\t\ttimer = timers[ i ];\n\n\t\t// Checks the timer has not already been removed\n\t\tif ( !timer() && timers[ i ] === timer ) {\n\t\t\ttimers.splice( i--, 1 );\n\t\t}\n\t}\n\n\tif ( !timers.length ) {\n\t\tjQuery.fx.stop();\n\t}\n\tfxNow = undefined;\n};\n\njQuery.fx.timer = function( timer ) {\n\tjQuery.timers.push( timer );\n\tif ( timer() ) {\n\t\tjQuery.fx.start();\n\t} else {\n\t\tjQuery.timers.pop();\n\t}\n};\n\njQuery.fx.interval = 13;\njQuery.fx.start = function() {\n\tif ( !timerId ) {\n\t\ttimerId = window.requestAnimationFrame ?\n\t\t\twindow.requestAnimationFrame( raf ) :\n\t\t\twindow.setInterval( jQuery.fx.tick, jQuery.fx.interval );\n\t}\n};\n\njQuery.fx.stop = function() {\n\tif ( window.cancelAnimationFrame ) {\n\t\twindow.cancelAnimationFrame( timerId );\n\t} else {\n\t\twindow.clearInterval( timerId );\n\t}\n\n\ttimerId = null;\n};\n\njQuery.fx.speeds = {\n\tslow: 600,\n\tfast: 200,\n\n\t// Default speed\n\t_default: 400\n};\n\n\n// Based off of the plugin by Clint Helfers, with permission.\n// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\njQuery.fn.delay = function( time, type ) {\n\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\n\ttype = type || \"fx\";\n\n\treturn this.queue( type, function( next, hooks ) {\n\t\tvar timeout = window.setTimeout( next, time );\n\t\thooks.stop = function() {\n\t\t\twindow.clearTimeout( timeout );\n\t\t};\n\t} );\n};\n\n\n( function() {\n\tvar input = document.createElement( \"input\" ),\n\t\tselect = document.createElement( \"select\" ),\n\t\topt = select.appendChild( document.createElement( \"option\" ) );\n\n\tinput.type = \"checkbox\";\n\n\t// Support: Android <=4.3 only\n\t// Default value for a checkbox should be \"on\"\n\tsupport.checkOn = input.value !== \"\";\n\n\t// Support: IE <=11 only\n\t// Must access selectedIndex to make default options select\n\tsupport.optSelected = opt.selected;\n\n\t// Support: IE <=11 only\n\t// An input loses its value after becoming a radio\n\tinput = document.createElement( \"input\" );\n\tinput.value = \"t\";\n\tinput.type = \"radio\";\n\tsupport.radioValue = input.value === \"t\";\n} )();\n\n\nvar boolHook,\n\tattrHandle = jQuery.expr.attrHandle;\n\njQuery.fn.extend( {\n\tattr: function( name, value ) {\n\t\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\n\t},\n\n\tremoveAttr: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.removeAttr( this, name );\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tattr: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set attributes on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Fallback to prop when attributes are not supported\n\t\tif ( typeof elem.getAttribute === \"undefined\" ) {\n\t\t\treturn jQuery.prop( elem, name, value );\n\t\t}\n\n\t\t// Attribute hooks are determined by the lowercase version\n\t\t// Grab necessary hook if one is defined\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\t\t\thooks = jQuery.attrHooks[ name.toLowerCase() ] ||\n\t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( value === null ) {\n\t\t\t\tjQuery.removeAttr( elem, name );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\telem.setAttribute( name, value + \"\" );\n\t\t\treturn value;\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tret = jQuery.find.attr( elem, name );\n\n\t\t// Non-existent attributes return null, we normalize to undefined\n\t\treturn ret == null ? undefined : ret;\n\t},\n\n\tattrHooks: {\n\t\ttype: {\n\t\t\tset: function( elem, value ) {\n\t\t\t\tif ( !support.radioValue && value === \"radio\" &&\n\t\t\t\t\tjQuery.nodeName( elem, \"input\" ) ) {\n\t\t\t\t\tvar val = elem.value;\n\t\t\t\t\telem.setAttribute( \"type\", value );\n\t\t\t\t\tif ( val ) {\n\t\t\t\t\t\telem.value = val;\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tremoveAttr: function( elem, value ) {\n\t\tvar name,\n\t\t\ti = 0,\n\n\t\t\t// Attribute names can contain non-HTML whitespace characters\n\t\t\t// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n\t\t\tattrNames = value && value.match( rnothtmlwhite );\n\n\t\tif ( attrNames && elem.nodeType === 1 ) {\n\t\t\twhile ( ( name = attrNames[ i++ ] ) ) {\n\t\t\t\telem.removeAttribute( name );\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Hooks for boolean attributes\nboolHook = {\n\tset: function( elem, value, name ) {\n\t\tif ( value === false ) {\n\n\t\t\t// Remove boolean attributes when set to false\n\t\t\tjQuery.removeAttr( elem, name );\n\t\t} else {\n\t\t\telem.setAttribute( name, name );\n\t\t}\n\t\treturn name;\n\t}\n};\n\njQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( i, name ) {\n\tvar getter = attrHandle[ name ] || jQuery.find.attr;\n\n\tattrHandle[ name ] = function( elem, name, isXML ) {\n\t\tvar ret, handle,\n\t\t\tlowercaseName = name.toLowerCase();\n\n\t\tif ( !isXML ) {\n\n\t\t\t// Avoid an infinite loop by temporarily removing this function from the getter\n\t\t\thandle = attrHandle[ lowercaseName ];\n\t\t\tattrHandle[ lowercaseName ] = ret;\n\t\t\tret = getter( elem, name, isXML ) != null ?\n\t\t\t\tlowercaseName :\n\t\t\t\tnull;\n\t\t\tattrHandle[ lowercaseName ] = handle;\n\t\t}\n\t\treturn ret;\n\t};\n} );\n\n\n\n\nvar rfocusable = /^(?:input|select|textarea|button)$/i,\n\trclickable = /^(?:a|area)$/i;\n\njQuery.fn.extend( {\n\tprop: function( name, value ) {\n\t\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\n\t},\n\n\tremoveProp: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tdelete this[ jQuery.propFix[ name ] || name ];\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tprop: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set properties on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// Fix name and attach hooks\n\t\t\tname = jQuery.propFix[ name ] || name;\n\t\t\thooks = jQuery.propHooks[ name ];\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\treturn ( elem[ name ] = value );\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\treturn elem[ name ];\n\t},\n\n\tpropHooks: {\n\t\ttabIndex: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\t// Support: IE <=9 - 11 only\n\t\t\t\t// elem.tabIndex doesn't always return the\n\t\t\t\t// correct value when it hasn't been explicitly set\n\t\t\t\t// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n\t\t\t\t// Use proper attribute retrieval(#12072)\n\t\t\t\tvar tabindex = jQuery.find.attr( elem, \"tabindex\" );\n\n\t\t\t\tif ( tabindex ) {\n\t\t\t\t\treturn parseInt( tabindex, 10 );\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\trfocusable.test( elem.nodeName ) ||\n\t\t\t\t\trclickable.test( elem.nodeName ) &&\n\t\t\t\t\telem.href\n\t\t\t\t) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t},\n\n\tpropFix: {\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\"\n\t}\n} );\n\n// Support: IE <=11 only\n// Accessing the selectedIndex property\n// forces the browser to respect setting selected\n// on the option\n// The getter ensures a default option is selected\n// when in an optgroup\n// eslint rule \"no-unused-expressions\" is disabled for this code\n// since it considers such accessions noop\nif ( !support.optSelected ) {\n\tjQuery.propHooks.selected = {\n\t\tget: function( elem ) {\n\n\t\t\t/* eslint no-unused-expressions: \"off\" */\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent && parent.parentNode ) {\n\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tset: function( elem ) {\n\n\t\t\t/* eslint no-unused-expressions: \"off\" */\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent ) {\n\t\t\t\tparent.selectedIndex;\n\n\t\t\t\tif ( parent.parentNode ) {\n\t\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\njQuery.each( [\n\t\"tabIndex\",\n\t\"readOnly\",\n\t\"maxLength\",\n\t\"cellSpacing\",\n\t\"cellPadding\",\n\t\"rowSpan\",\n\t\"colSpan\",\n\t\"useMap\",\n\t\"frameBorder\",\n\t\"contentEditable\"\n], function() {\n\tjQuery.propFix[ this.toLowerCase() ] = this;\n} );\n\n\n\n\n\t// Strip and collapse whitespace according to HTML spec\n\t// https://html.spec.whatwg.org/multipage/infrastructure.html#strip-and-collapse-whitespace\n\tfunction stripAndCollapse( value ) {\n\t\tvar tokens = value.match( rnothtmlwhite ) || [];\n\t\treturn tokens.join( \" \" );\n\t}\n\n\nfunction getClass( elem ) {\n\treturn elem.getAttribute && elem.getAttribute( \"class\" ) || \"\";\n}\n\njQuery.fn.extend( {\n\taddClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( typeof value === \"string\" && value ) {\n\t\t\tclasses = value.match( rnothtmlwhite ) || [];\n\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\t\t\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + clazz + \" \" ) < 0 ) {\n\t\t\t\t\t\t\tcur += clazz + \" \";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremoveClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( !arguments.length ) {\n\t\t\treturn this.attr( \"class\", \"\" );\n\t\t}\n\n\t\tif ( typeof value === \"string\" && value ) {\n\t\t\tclasses = value.match( rnothtmlwhite ) || [];\n\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\n\t\t\t\t// This expression is here for better compressibility (see addClass)\n\t\t\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\n\t\t\t\t\t\t// Remove *all* instances\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + clazz + \" \" ) > -1 ) {\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + clazz + \" \", \" \" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttoggleClass: function( value, stateVal ) {\n\t\tvar type = typeof value;\n\n\t\tif ( typeof stateVal === \"boolean\" && type === \"string\" ) {\n\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\n\t\t}\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).toggleClass(\n\t\t\t\t\tvalue.call( this, i, getClass( this ), stateVal ),\n\t\t\t\t\tstateVal\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar className, i, self, classNames;\n\n\t\t\tif ( type === \"string\" ) {\n\n\t\t\t\t// Toggle individual class names\n\t\t\t\ti = 0;\n\t\t\t\tself = jQuery( this );\n\t\t\t\tclassNames = value.match( rnothtmlwhite ) || [];\n\n\t\t\t\twhile ( ( className = classNames[ i++ ] ) ) {\n\n\t\t\t\t\t// Check each className given, space separated list\n\t\t\t\t\tif ( self.hasClass( className ) ) {\n\t\t\t\t\t\tself.removeClass( className );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.addClass( className );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Toggle whole class name\n\t\t\t} else if ( value === undefined || type === \"boolean\" ) {\n\t\t\t\tclassName = getClass( this );\n\t\t\t\tif ( className ) {\n\n\t\t\t\t\t// Store className if set\n\t\t\t\t\tdataPriv.set( this, \"__className__\", className );\n\t\t\t\t}\n\n\t\t\t\t// If the element has a class name or if we're passed `false`,\n\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\n\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\n\t\t\t\t// falling back to the empty string if nothing was stored.\n\t\t\t\tif ( this.setAttribute ) {\n\t\t\t\t\tthis.setAttribute( \"class\",\n\t\t\t\t\t\tclassName || value === false ?\n\t\t\t\t\t\t\"\" :\n\t\t\t\t\t\tdataPriv.get( this, \"__className__\" ) || \"\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\thasClass: function( selector ) {\n\t\tvar className, elem,\n\t\t\ti = 0;\n\n\t\tclassName = \" \" + selector + \" \";\n\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\tif ( elem.nodeType === 1 &&\n\t\t\t\t( \" \" + stripAndCollapse( getClass( elem ) ) + \" \" ).indexOf( className ) > -1 ) {\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n} );\n\n\n\n\nvar rreturn = /\\r/g;\n\njQuery.fn.extend( {\n\tval: function( value ) {\n\t\tvar hooks, ret, isFunction,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !arguments.length ) {\n\t\t\tif ( elem ) {\n\t\t\t\thooks = jQuery.valHooks[ elem.type ] ||\n\t\t\t\t\tjQuery.valHooks[ elem.nodeName.toLowerCase() ];\n\n\t\t\t\tif ( hooks &&\n\t\t\t\t\t\"get\" in hooks &&\n\t\t\t\t\t( ret = hooks.get( elem, \"value\" ) ) !== undefined\n\t\t\t\t) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\n\t\t\t\tret = elem.value;\n\n\t\t\t\t// Handle most common string cases\n\t\t\t\tif ( typeof ret === \"string\" ) {\n\t\t\t\t\treturn ret.replace( rreturn, \"\" );\n\t\t\t\t}\n\n\t\t\t\t// Handle cases where value is null/undef or number\n\t\t\t\treturn ret == null ? \"\" : ret;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tisFunction = jQuery.isFunction( value );\n\n\t\treturn this.each( function( i ) {\n\t\t\tvar val;\n\n\t\t\tif ( this.nodeType !== 1 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( isFunction ) {\n\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\n\t\t\t} else {\n\t\t\t\tval = value;\n\t\t\t}\n\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\n\t\t\tif ( val == null ) {\n\t\t\t\tval = \"\";\n\n\t\t\t} else if ( typeof val === \"number\" ) {\n\t\t\t\tval += \"\";\n\n\t\t\t} else if ( jQuery.isArray( val ) ) {\n\t\t\t\tval = jQuery.map( val, function( value ) {\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\n\n\t\t\t// If set returns undefined, fall back to normal setting\n\t\t\tif ( !hooks || !( \"set\" in hooks ) || hooks.set( this, val, \"value\" ) === undefined ) {\n\t\t\t\tthis.value = val;\n\t\t\t}\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tvalHooks: {\n\t\toption: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\tvar val = jQuery.find.attr( elem, \"value\" );\n\t\t\t\treturn val != null ?\n\t\t\t\t\tval :\n\n\t\t\t\t\t// Support: IE <=10 - 11 only\n\t\t\t\t\t// option.text throws exceptions (#14686, #14858)\n\t\t\t\t\t// Strip and collapse whitespace\n\t\t\t\t\t// https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n\t\t\t\t\tstripAndCollapse( jQuery.text( elem ) );\n\t\t\t}\n\t\t},\n\t\tselect: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar value, option, i,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tindex = elem.selectedIndex,\n\t\t\t\t\tone = elem.type === \"select-one\",\n\t\t\t\t\tvalues = one ? null : [],\n\t\t\t\t\tmax = one ? index + 1 : options.length;\n\n\t\t\t\tif ( index < 0 ) {\n\t\t\t\t\ti = max;\n\n\t\t\t\t} else {\n\t\t\t\t\ti = one ? index : 0;\n\t\t\t\t}\n\n\t\t\t\t// Loop through all the selected options\n\t\t\t\tfor ( ; i < max; i++ ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t// IE8-9 doesn't update selected after form reset (#2551)\n\t\t\t\t\tif ( ( option.selected || i === index ) &&\n\n\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\n\t\t\t\t\t\t\t!option.disabled &&\n\t\t\t\t\t\t\t( !option.parentNode.disabled ||\n\t\t\t\t\t\t\t\t!jQuery.nodeName( option.parentNode, \"optgroup\" ) ) ) {\n\n\t\t\t\t\t\t// Get the specific value for the option\n\t\t\t\t\t\tvalue = jQuery( option ).val();\n\n\t\t\t\t\t\t// We don't need an array for one selects\n\t\t\t\t\t\tif ( one ) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Multi-Selects return an array\n\t\t\t\t\t\tvalues.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t},\n\n\t\t\tset: function( elem, value ) {\n\t\t\t\tvar optionSet, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tvalues = jQuery.makeArray( value ),\n\t\t\t\t\ti = options.length;\n\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t/* eslint-disable no-cond-assign */\n\n\t\t\t\t\tif ( option.selected =\n\t\t\t\t\t\tjQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1\n\t\t\t\t\t) {\n\t\t\t\t\t\toptionSet = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t/* eslint-enable no-cond-assign */\n\t\t\t\t}\n\n\t\t\t\t// Force browsers to behave consistently when non-matching value is set\n\t\t\t\tif ( !optionSet ) {\n\t\t\t\t\telem.selectedIndex = -1;\n\t\t\t\t}\n\t\t\t\treturn values;\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Radios and checkboxes getter/setter\njQuery.each( [ \"radio\", \"checkbox\" ], function() {\n\tjQuery.valHooks[ this ] = {\n\t\tset: function( elem, value ) {\n\t\t\tif ( jQuery.isArray( value ) ) {\n\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );\n\t\t\t}\n\t\t}\n\t};\n\tif ( !support.checkOn ) {\n\t\tjQuery.valHooks[ this ].get = function( elem ) {\n\t\t\treturn elem.getAttribute( \"value\" ) === null ? \"on\" : elem.value;\n\t\t};\n\t}\n} );\n\n\n\n\n// Return jQuery for attributes-only inclusion\n\n\nvar rfocusMorph = /^(?:focusinfocus|focusoutblur)$/;\n\njQuery.extend( jQuery.event, {\n\n\ttrigger: function( event, data, elem, onlyHandlers ) {\n\n\t\tvar i, cur, tmp, bubbleType, ontype, handle, special,\n\t\t\teventPath = [ elem || document ],\n\t\t\ttype = hasOwn.call( event, \"type\" ) ? event.type : event,\n\t\t\tnamespaces = hasOwn.call( event, \"namespace\" ) ? event.namespace.split( \".\" ) : [];\n\n\t\tcur = tmp = elem = elem || document;\n\n\t\t// Don't do events on text and comment nodes\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\n\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( type.indexOf( \".\" ) > -1 ) {\n\n\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\n\t\t\tnamespaces = type.split( \".\" );\n\t\t\ttype = namespaces.shift();\n\t\t\tnamespaces.sort();\n\t\t}\n\t\tontype = type.indexOf( \":\" ) < 0 && \"on\" + type;\n\n\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\n\t\tevent = event[ jQuery.expando ] ?\n\t\t\tevent :\n\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\n\n\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\n\t\tevent.namespace = namespaces.join( \".\" );\n\t\tevent.rnamespace = event.namespace ?\n\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" ) :\n\t\t\tnull;\n\n\t\t// Clean up the event in case it is being reused\n\t\tevent.result = undefined;\n\t\tif ( !event.target ) {\n\t\t\tevent.target = elem;\n\t\t}\n\n\t\t// Clone any incoming data and prepend the event, creating the handler arg list\n\t\tdata = data == null ?\n\t\t\t[ event ] :\n\t\t\tjQuery.makeArray( data, [ event ] );\n\n\t\t// Allow special events to draw outside the lines\n\t\tspecial = jQuery.event.special[ type ] || {};\n\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine event propagation path in advance, per W3C events spec (#9951)\n\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\t\tif ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {\n\n\t\t\tbubbleType = special.delegateType || type;\n\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\n\t\t\t\tcur = cur.parentNode;\n\t\t\t}\n\t\t\tfor ( ; cur; cur = cur.parentNode ) {\n\t\t\t\teventPath.push( cur );\n\t\t\t\ttmp = cur;\n\t\t\t}\n\n\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\n\t\t\tif ( tmp === ( elem.ownerDocument || document ) ) {\n\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\n\t\t\t}\n\t\t}\n\n\t\t// Fire handlers on the event path\n\t\ti = 0;\n\t\twhile ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {\n\n\t\t\tevent.type = i > 1 ?\n\t\t\t\tbubbleType :\n\t\t\t\tspecial.bindType || type;\n\n\t\t\t// jQuery handler\n\t\t\thandle = ( dataPriv.get( cur, \"events\" ) || {} )[ event.type ] &&\n\t\t\t\tdataPriv.get( cur, \"handle\" );\n\t\t\tif ( handle ) {\n\t\t\t\thandle.apply( cur, data );\n\t\t\t}\n\n\t\t\t// Native handler\n\t\t\thandle = ontype && cur[ ontype ];\n\t\t\tif ( handle && handle.apply && acceptData( cur ) ) {\n\t\t\t\tevent.result = handle.apply( cur, data );\n\t\t\t\tif ( event.result === false ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tevent.type = type;\n\n\t\t// If nobody prevented the default action, do it now\n\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\n\n\t\t\tif ( ( !special._default ||\n\t\t\t\tspecial._default.apply( eventPath.pop(), data ) === false ) &&\n\t\t\t\tacceptData( elem ) ) {\n\n\t\t\t\t// Call a native DOM method on the target with the same name as the event.\n\t\t\t\t// Don't do default actions on window, that's where global variables be (#6170)\n\t\t\t\tif ( ontype && jQuery.isFunction( elem[ type ] ) && !jQuery.isWindow( elem ) ) {\n\n\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\n\t\t\t\t\ttmp = elem[ ontype ];\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\n\t\t\t\t\tjQuery.event.triggered = type;\n\t\t\t\t\telem[ type ]();\n\t\t\t\t\tjQuery.event.triggered = undefined;\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\t// Piggyback on a donor event to simulate a different one\n\t// Used only for `focus(in | out)` events\n\tsimulate: function( type, elem, event ) {\n\t\tvar e = jQuery.extend(\n\t\t\tnew jQuery.Event(),\n\t\t\tevent,\n\t\t\t{\n\t\t\t\ttype: type,\n\t\t\t\tisSimulated: true\n\t\t\t}\n\t\t);\n\n\t\tjQuery.event.trigger( e, null, elem );\n\t}\n\n} );\n\njQuery.fn.extend( {\n\n\ttrigger: function( type, data ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.trigger( type, data, this );\n\t\t} );\n\t},\n\ttriggerHandler: function( type, data ) {\n\t\tvar elem = this[ 0 ];\n\t\tif ( elem ) {\n\t\t\treturn jQuery.event.trigger( type, data, elem, true );\n\t\t}\n\t}\n} );\n\n\njQuery.each( ( \"blur focus focusin focusout resize scroll click dblclick \" +\n\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\n\t\"change select submit keydown keypress keyup contextmenu\" ).split( \" \" ),\n\tfunction( i, name ) {\n\n\t// Handle event binding\n\tjQuery.fn[ name ] = function( data, fn ) {\n\t\treturn arguments.length > 0 ?\n\t\t\tthis.on( name, null, data, fn ) :\n\t\t\tthis.trigger( name );\n\t};\n} );\n\njQuery.fn.extend( {\n\thover: function( fnOver, fnOut ) {\n\t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\n\t}\n} );\n\n\n\n\nsupport.focusin = \"onfocusin\" in window;\n\n\n// Support: Firefox <=44\n// Firefox doesn't have focus(in | out) events\n// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n//\n// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1\n// focus(in | out) events fire after focus & blur events,\n// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857\nif ( !support.focusin ) {\n\tjQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\n\n\t\t// Attach a single capturing handler on the document while someone wants focusin/focusout\n\t\tvar handler = function( event ) {\n\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );\n\t\t};\n\n\t\tjQuery.event.special[ fix ] = {\n\t\t\tsetup: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix );\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.addEventListener( orig, handler, true );\n\t\t\t\t}\n\t\t\t\tdataPriv.access( doc, fix, ( attaches || 0 ) + 1 );\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix ) - 1;\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.removeEventListener( orig, handler, true );\n\t\t\t\t\tdataPriv.remove( doc, fix );\n\n\t\t\t\t} else {\n\t\t\t\t\tdataPriv.access( doc, fix, attaches );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t} );\n}\nvar location = window.location;\n\nvar nonce = jQuery.now();\n\nvar rquery = ( /\\?/ );\n\n\n\n// Cross-browser xml parsing\njQuery.parseXML = function( data ) {\n\tvar xml;\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\n\t// Support: IE 9 - 11 only\n\t// IE throws on parseFromString with invalid input.\n\ttry {\n\t\txml = ( new window.DOMParser() ).parseFromString( data, \"text/xml\" );\n\t} catch ( e ) {\n\t\txml = undefined;\n\t}\n\n\tif ( !xml || xml.getElementsByTagName( \"parsererror\" ).length ) {\n\t\tjQuery.error( \"Invalid XML: \" + data );\n\t}\n\treturn xml;\n};\n\n\nvar\n\trbracket = /\\[\\]$/,\n\trCRLF = /\\r?\\n/g,\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\n\nfunction buildParams( prefix, obj, traditional, add ) {\n\tvar name;\n\n\tif ( jQuery.isArray( obj ) ) {\n\n\t\t// Serialize array item.\n\t\tjQuery.each( obj, function( i, v ) {\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\n\n\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\tadd( prefix, v );\n\n\t\t\t} else {\n\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\tbuildParams(\n\t\t\t\t\tprefix + \"[\" + ( typeof v === \"object\" && v != null ? i : \"\" ) + \"]\",\n\t\t\t\t\tv,\n\t\t\t\t\ttraditional,\n\t\t\t\t\tadd\n\t\t\t\t);\n\t\t\t}\n\t\t} );\n\n\t} else if ( !traditional && jQuery.type( obj ) === \"object\" ) {\n\n\t\t// Serialize object item.\n\t\tfor ( name in obj ) {\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\n\t\t}\n\n\t} else {\n\n\t\t// Serialize scalar item.\n\t\tadd( prefix, obj );\n\t}\n}\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\njQuery.param = function( a, traditional ) {\n\tvar prefix,\n\t\ts = [],\n\t\tadd = function( key, valueOrFunction ) {\n\n\t\t\t// If value is a function, invoke it and use its return value\n\t\t\tvar value = jQuery.isFunction( valueOrFunction ) ?\n\t\t\t\tvalueOrFunction() :\n\t\t\t\tvalueOrFunction;\n\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" +\n\t\t\t\tencodeURIComponent( value == null ? \"\" : value );\n\t\t};\n\n\t// If an array was passed in, assume that it is an array of form elements.\n\tif ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\n\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function() {\n\t\t\tadd( this.name, this.value );\n\t\t} );\n\n\t} else {\n\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t\t// did it), otherwise encode params recursively.\n\t\tfor ( prefix in a ) {\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\n\t\t}\n\t}\n\n\t// Return the resulting serialization\n\treturn s.join( \"&\" );\n};\n\njQuery.fn.extend( {\n\tserialize: function() {\n\t\treturn jQuery.param( this.serializeArray() );\n\t},\n\tserializeArray: function() {\n\t\treturn this.map( function() {\n\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n\t\t} )\n\t\t.filter( function() {\n\t\t\tvar type = this.type;\n\n\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n\t\t\t\t( this.checked || !rcheckableType.test( type ) );\n\t\t} )\n\t\t.map( function( i, elem ) {\n\t\t\tvar val = jQuery( this ).val();\n\n\t\t\tif ( val == null ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif ( jQuery.isArray( val ) ) {\n\t\t\t\treturn jQuery.map( val, function( val ) {\n\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t} ).get();\n\t}\n} );\n\n\nvar\n\tr20 = /%20/g,\n\trhash = /#.*$/,\n\trantiCache = /([?&])_=[^&]*/,\n\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n\n\t// #7653, #8125, #8152: local protocol detection\n\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n\trnoContent = /^(?:GET|HEAD)$/,\n\trprotocol = /^\\/\\//,\n\n\t/* Prefilters\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t * 2) These are called:\n\t *    - BEFORE asking for a transport\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t * 3) key is the dataType\n\t * 4) the catchall symbol \"*\" can be used\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t */\n\tprefilters = {},\n\n\t/* Transports bindings\n\t * 1) key is the dataType\n\t * 2) the catchall symbol \"*\" can be used\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t */\n\ttransports = {},\n\n\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n\tallTypes = \"*/\".concat( \"*\" ),\n\n\t// Anchor tag for parsing the document origin\n\toriginAnchor = document.createElement( \"a\" );\n\toriginAnchor.href = location.href;\n\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\nfunction addToPrefiltersOrTransports( structure ) {\n\n\t// dataTypeExpression is optional and defaults to \"*\"\n\treturn function( dataTypeExpression, func ) {\n\n\t\tif ( typeof dataTypeExpression !== \"string\" ) {\n\t\t\tfunc = dataTypeExpression;\n\t\t\tdataTypeExpression = \"*\";\n\t\t}\n\n\t\tvar dataType,\n\t\t\ti = 0,\n\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];\n\n\t\tif ( jQuery.isFunction( func ) ) {\n\n\t\t\t// For each dataType in the dataTypeExpression\n\t\t\twhile ( ( dataType = dataTypes[ i++ ] ) ) {\n\n\t\t\t\t// Prepend if requested\n\t\t\t\tif ( dataType[ 0 ] === \"+\" ) {\n\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );\n\n\t\t\t\t// Otherwise append\n\t\t\t\t} else {\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).push( func );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Base inspection function for prefilters and transports\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\n\n\tvar inspected = {},\n\t\tseekingTransport = ( structure === transports );\n\n\tfunction inspect( dataType ) {\n\t\tvar selected;\n\t\tinspected[ dataType ] = true;\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\n\t\t\tif ( typeof dataTypeOrTransport === \"string\" &&\n\t\t\t\t!seekingTransport && !inspected[ dataTypeOrTransport ] ) {\n\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\n\t\t\t\tinspect( dataTypeOrTransport );\n\t\t\t\treturn false;\n\t\t\t} else if ( seekingTransport ) {\n\t\t\t\treturn !( selected = dataTypeOrTransport );\n\t\t\t}\n\t\t} );\n\t\treturn selected;\n\t}\n\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\n}\n\n// A special extend for ajax options\n// that takes \"flat\" options (not to be deep extended)\n// Fixes #9887\nfunction ajaxExtend( target, src ) {\n\tvar key, deep,\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n\tfor ( key in src ) {\n\t\tif ( src[ key ] !== undefined ) {\n\t\t\t( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];\n\t\t}\n\t}\n\tif ( deep ) {\n\t\tjQuery.extend( true, target, deep );\n\t}\n\n\treturn target;\n}\n\n/* Handles responses to an ajax request:\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\n\n\tvar ct, type, finalDataType, firstDataType,\n\t\tcontents = s.contents,\n\t\tdataTypes = s.dataTypes;\n\n\t// Remove auto dataType and get content-type in the process\n\twhile ( dataTypes[ 0 ] === \"*\" ) {\n\t\tdataTypes.shift();\n\t\tif ( ct === undefined ) {\n\t\t\tct = s.mimeType || jqXHR.getResponseHeader( \"Content-Type\" );\n\t\t}\n\t}\n\n\t// Check if we're dealing with a known content-type\n\tif ( ct ) {\n\t\tfor ( type in contents ) {\n\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\n\t\t\t\tdataTypes.unshift( type );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Check to see if we have a response for the expected dataType\n\tif ( dataTypes[ 0 ] in responses ) {\n\t\tfinalDataType = dataTypes[ 0 ];\n\t} else {\n\n\t\t// Try convertible dataTypes\n\t\tfor ( type in responses ) {\n\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[ 0 ] ] ) {\n\t\t\t\tfinalDataType = type;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( !firstDataType ) {\n\t\t\t\tfirstDataType = type;\n\t\t\t}\n\t\t}\n\n\t\t// Or just use first one\n\t\tfinalDataType = finalDataType || firstDataType;\n\t}\n\n\t// If we found a dataType\n\t// We add the dataType to the list if needed\n\t// and return the corresponding response\n\tif ( finalDataType ) {\n\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\n\t\t\tdataTypes.unshift( finalDataType );\n\t\t}\n\t\treturn responses[ finalDataType ];\n\t}\n}\n\n/* Chain conversions given the request and the original response\n * Also sets the responseXXX fields on the jqXHR instance\n */\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\n\tvar conv2, current, conv, tmp, prev,\n\t\tconverters = {},\n\n\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\n\t\tdataTypes = s.dataTypes.slice();\n\n\t// Create converters map with lowercased keys\n\tif ( dataTypes[ 1 ] ) {\n\t\tfor ( conv in s.converters ) {\n\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\n\t\t}\n\t}\n\n\tcurrent = dataTypes.shift();\n\n\t// Convert to each sequential dataType\n\twhile ( current ) {\n\n\t\tif ( s.responseFields[ current ] ) {\n\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\n\t\t}\n\n\t\t// Apply the dataFilter if provided\n\t\tif ( !prev && isSuccess && s.dataFilter ) {\n\t\t\tresponse = s.dataFilter( response, s.dataType );\n\t\t}\n\n\t\tprev = current;\n\t\tcurrent = dataTypes.shift();\n\n\t\tif ( current ) {\n\n\t\t\t// There's only work to do if current dataType is non-auto\n\t\t\tif ( current === \"*\" ) {\n\n\t\t\t\tcurrent = prev;\n\n\t\t\t// Convert response if prev dataType is non-auto and differs from current\n\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\n\n\t\t\t\t// Seek a direct converter\n\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\n\n\t\t\t\t// If none found, seek a pair\n\t\t\t\tif ( !conv ) {\n\t\t\t\t\tfor ( conv2 in converters ) {\n\n\t\t\t\t\t\t// If conv2 outputs current\n\t\t\t\t\t\ttmp = conv2.split( \" \" );\n\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\n\n\t\t\t\t\t\t\t// If prev can be converted to accepted input\n\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\n\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\n\t\t\t\t\t\t\tif ( conv ) {\n\n\t\t\t\t\t\t\t\t// Condense equivalence converters\n\t\t\t\t\t\t\t\tif ( conv === true ) {\n\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\n\n\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\n\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\n\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\n\t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply converter (if not an equivalence)\n\t\t\t\tif ( conv !== true ) {\n\n\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\n\t\t\t\t\tif ( conv && s.throws ) {\n\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tstate: \"parsererror\",\n\t\t\t\t\t\t\t\terror: conv ? e : \"No conversion from \" + prev + \" to \" + current\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { state: \"success\", data: response };\n}\n\njQuery.extend( {\n\n\t// Counter for holding the number of active queries\n\tactive: 0,\n\n\t// Last-Modified header cache for next request\n\tlastModified: {},\n\tetag: {},\n\n\tajaxSettings: {\n\t\turl: location.href,\n\t\ttype: \"GET\",\n\t\tisLocal: rlocalProtocol.test( location.protocol ),\n\t\tglobal: true,\n\t\tprocessData: true,\n\t\tasync: true,\n\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\n\t\t/*\n\t\ttimeout: 0,\n\t\tdata: null,\n\t\tdataType: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tcache: null,\n\t\tthrows: false,\n\t\ttraditional: false,\n\t\theaders: {},\n\t\t*/\n\n\t\taccepts: {\n\t\t\t\"*\": allTypes,\n\t\t\ttext: \"text/plain\",\n\t\t\thtml: \"text/html\",\n\t\t\txml: \"application/xml, text/xml\",\n\t\t\tjson: \"application/json, text/javascript\"\n\t\t},\n\n\t\tcontents: {\n\t\t\txml: /\\bxml\\b/,\n\t\t\thtml: /\\bhtml/,\n\t\t\tjson: /\\bjson\\b/\n\t\t},\n\n\t\tresponseFields: {\n\t\t\txml: \"responseXML\",\n\t\t\ttext: \"responseText\",\n\t\t\tjson: \"responseJSON\"\n\t\t},\n\n\t\t// Data converters\n\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\n\t\tconverters: {\n\n\t\t\t// Convert anything to text\n\t\t\t\"* text\": String,\n\n\t\t\t// Text to html (true = no transformation)\n\t\t\t\"text html\": true,\n\n\t\t\t// Evaluate text as a json expression\n\t\t\t\"text json\": JSON.parse,\n\n\t\t\t// Parse text as xml\n\t\t\t\"text xml\": jQuery.parseXML\n\t\t},\n\n\t\t// For options that shouldn't be deep extended:\n\t\t// you can add your own custom options here if\n\t\t// and when you create one that shouldn't be\n\t\t// deep extended (see ajaxExtend)\n\t\tflatOptions: {\n\t\t\turl: true,\n\t\t\tcontext: true\n\t\t}\n\t},\n\n\t// Creates a full fledged settings object into target\n\t// with both ajaxSettings and settings fields.\n\t// If target is omitted, writes into ajaxSettings.\n\tajaxSetup: function( target, settings ) {\n\t\treturn settings ?\n\n\t\t\t// Building a settings object\n\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\n\n\t\t\t// Extending ajaxSettings\n\t\t\tajaxExtend( jQuery.ajaxSettings, target );\n\t},\n\n\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\n\tajaxTransport: addToPrefiltersOrTransports( transports ),\n\n\t// Main method\n\tajax: function( url, options ) {\n\n\t\t// If url is an object, simulate pre-1.5 signature\n\t\tif ( typeof url === \"object\" ) {\n\t\t\toptions = url;\n\t\t\turl = undefined;\n\t\t}\n\n\t\t// Force options to be an object\n\t\toptions = options || {};\n\n\t\tvar transport,\n\n\t\t\t// URL without anti-cache param\n\t\t\tcacheURL,\n\n\t\t\t// Response headers\n\t\t\tresponseHeadersString,\n\t\t\tresponseHeaders,\n\n\t\t\t// timeout handle\n\t\t\ttimeoutTimer,\n\n\t\t\t// Url cleanup var\n\t\t\turlAnchor,\n\n\t\t\t// Request state (becomes false upon send and true upon completion)\n\t\t\tcompleted,\n\n\t\t\t// To know if global events are to be dispatched\n\t\t\tfireGlobals,\n\n\t\t\t// Loop variable\n\t\t\ti,\n\n\t\t\t// uncached part of the url\n\t\t\tuncached,\n\n\t\t\t// Create the final options object\n\t\t\ts = jQuery.ajaxSetup( {}, options ),\n\n\t\t\t// Callbacks context\n\t\t\tcallbackContext = s.context || s,\n\n\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\n\t\t\tglobalEventContext = s.context &&\n\t\t\t\t( callbackContext.nodeType || callbackContext.jquery ) ?\n\t\t\t\t\tjQuery( callbackContext ) :\n\t\t\t\t\tjQuery.event,\n\n\t\t\t// Deferreds\n\t\t\tdeferred = jQuery.Deferred(),\n\t\t\tcompleteDeferred = jQuery.Callbacks( \"once memory\" ),\n\n\t\t\t// Status-dependent callbacks\n\t\t\tstatusCode = s.statusCode || {},\n\n\t\t\t// Headers (they are sent all at once)\n\t\t\trequestHeaders = {},\n\t\t\trequestHeadersNames = {},\n\n\t\t\t// Default abort message\n\t\t\tstrAbort = \"canceled\",\n\n\t\t\t// Fake xhr\n\t\t\tjqXHR = {\n\t\t\t\treadyState: 0,\n\n\t\t\t\t// Builds headers hashtable if needed\n\t\t\t\tgetResponseHeader: function( key ) {\n\t\t\t\t\tvar match;\n\t\t\t\t\tif ( completed ) {\n\t\t\t\t\t\tif ( !responseHeaders ) {\n\t\t\t\t\t\t\tresponseHeaders = {};\n\t\t\t\t\t\t\twhile ( ( match = rheaders.exec( responseHeadersString ) ) ) {\n\t\t\t\t\t\t\t\tresponseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() ];\n\t\t\t\t\t}\n\t\t\t\t\treturn match == null ? null : match;\n\t\t\t\t},\n\n\t\t\t\t// Raw string\n\t\t\t\tgetAllResponseHeaders: function() {\n\t\t\t\t\treturn completed ? responseHeadersString : null;\n\t\t\t\t},\n\n\t\t\t\t// Caches the header\n\t\t\t\tsetRequestHeader: function( name, value ) {\n\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\tname = requestHeadersNames[ name.toLowerCase() ] =\n\t\t\t\t\t\t\trequestHeadersNames[ name.toLowerCase() ] || name;\n\t\t\t\t\t\trequestHeaders[ name ] = value;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Overrides response content-type header\n\t\t\t\toverrideMimeType: function( type ) {\n\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\ts.mimeType = type;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Status-dependent callbacks\n\t\t\t\tstatusCode: function( map ) {\n\t\t\t\t\tvar code;\n\t\t\t\t\tif ( map ) {\n\t\t\t\t\t\tif ( completed ) {\n\n\t\t\t\t\t\t\t// Execute the appropriate callbacks\n\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Lazy-add the new callbacks in a way that preserves old ones\n\t\t\t\t\t\t\tfor ( code in map ) {\n\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Cancel the request\n\t\t\t\tabort: function( statusText ) {\n\t\t\t\t\tvar finalText = statusText || strAbort;\n\t\t\t\t\tif ( transport ) {\n\t\t\t\t\t\ttransport.abort( finalText );\n\t\t\t\t\t}\n\t\t\t\t\tdone( 0, finalText );\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t};\n\n\t\t// Attach deferreds\n\t\tdeferred.promise( jqXHR );\n\n\t\t// Add protocol if not provided (prefilters might expect it)\n\t\t// Handle falsy url in the settings object (#10093: consistency with old signature)\n\t\t// We also use the url parameter if available\n\t\ts.url = ( ( url || s.url || location.href ) + \"\" )\n\t\t\t.replace( rprotocol, location.protocol + \"//\" );\n\n\t\t// Alias method option to type as per ticket #12004\n\t\ts.type = options.method || options.type || s.method || s.type;\n\n\t\t// Extract dataTypes list\n\t\ts.dataTypes = ( s.dataType || \"*\" ).toLowerCase().match( rnothtmlwhite ) || [ \"\" ];\n\n\t\t// A cross-domain request is in order when the origin doesn't match the current origin.\n\t\tif ( s.crossDomain == null ) {\n\t\t\turlAnchor = document.createElement( \"a\" );\n\n\t\t\t// Support: IE <=8 - 11, Edge 12 - 13\n\t\t\t// IE throws exception on accessing the href property if url is malformed,\n\t\t\t// e.g. http://example.com:80x/\n\t\t\ttry {\n\t\t\t\turlAnchor.href = s.url;\n\n\t\t\t\t// Support: IE <=8 - 11 only\n\t\t\t\t// Anchor's host property isn't correctly set when s.url is relative\n\t\t\t\turlAnchor.href = urlAnchor.href;\n\t\t\t\ts.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !==\n\t\t\t\t\turlAnchor.protocol + \"//\" + urlAnchor.host;\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// If there is an error parsing the URL, assume it is crossDomain,\n\t\t\t\t// it can be rejected by the transport if it is invalid\n\t\t\t\ts.crossDomain = true;\n\t\t\t}\n\t\t}\n\n\t\t// Convert data if not already a string\n\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\n\t\t\ts.data = jQuery.param( s.data, s.traditional );\n\t\t}\n\n\t\t// Apply prefilters\n\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\n\n\t\t// If request was aborted inside a prefilter, stop there\n\t\tif ( completed ) {\n\t\t\treturn jqXHR;\n\t\t}\n\n\t\t// We can fire global events as of now if asked to\n\t\t// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\n\t\tfireGlobals = jQuery.event && s.global;\n\n\t\t// Watch for a new set of requests\n\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\n\t\t\tjQuery.event.trigger( \"ajaxStart\" );\n\t\t}\n\n\t\t// Uppercase the type\n\t\ts.type = s.type.toUpperCase();\n\n\t\t// Determine if request has content\n\t\ts.hasContent = !rnoContent.test( s.type );\n\n\t\t// Save the URL in case we're toying with the If-Modified-Since\n\t\t// and/or If-None-Match header later on\n\t\t// Remove hash to simplify url manipulation\n\t\tcacheURL = s.url.replace( rhash, \"\" );\n\n\t\t// More options handling for requests with no content\n\t\tif ( !s.hasContent ) {\n\n\t\t\t// Remember the hash so we can put it back\n\t\t\tuncached = s.url.slice( cacheURL.length );\n\n\t\t\t// If data is available, append data to url\n\t\t\tif ( s.data ) {\n\t\t\t\tcacheURL += ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data;\n\n\t\t\t\t// #9682: remove data so that it's not used in an eventual retry\n\t\t\t\tdelete s.data;\n\t\t\t}\n\n\t\t\t// Add or update anti-cache param if needed\n\t\t\tif ( s.cache === false ) {\n\t\t\t\tcacheURL = cacheURL.replace( rantiCache, \"$1\" );\n\t\t\t\tuncached = ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + ( nonce++ ) + uncached;\n\t\t\t}\n\n\t\t\t// Put hash and anti-cache on the URL that will be requested (gh-1732)\n\t\t\ts.url = cacheURL + uncached;\n\n\t\t// Change '%20' to '+' if this is encoded form body content (gh-2658)\n\t\t} else if ( s.data && s.processData &&\n\t\t\t( s.contentType || \"\" ).indexOf( \"application/x-www-form-urlencoded\" ) === 0 ) {\n\t\t\ts.data = s.data.replace( r20, \"+\" );\n\t\t}\n\n\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\tif ( s.ifModified ) {\n\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\n\t\t\t}\n\t\t\tif ( jQuery.etag[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\n\t\t\t}\n\t\t}\n\n\t\t// Set the correct header, if data is being sent\n\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\n\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\n\t\t}\n\n\t\t// Set the Accepts header for the server, depending on the dataType\n\t\tjqXHR.setRequestHeader(\n\t\t\t\"Accept\",\n\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?\n\t\t\t\ts.accepts[ s.dataTypes[ 0 ] ] +\n\t\t\t\t\t( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\n\t\t\t\ts.accepts[ \"*\" ]\n\t\t);\n\n\t\t// Check for headers option\n\t\tfor ( i in s.headers ) {\n\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\n\t\t}\n\n\t\t// Allow custom headers/mimetypes and early abort\n\t\tif ( s.beforeSend &&\n\t\t\t( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {\n\n\t\t\t// Abort if not done already and return\n\t\t\treturn jqXHR.abort();\n\t\t}\n\n\t\t// Aborting is no longer a cancellation\n\t\tstrAbort = \"abort\";\n\n\t\t// Install callbacks on deferreds\n\t\tcompleteDeferred.add( s.complete );\n\t\tjqXHR.done( s.success );\n\t\tjqXHR.fail( s.error );\n\n\t\t// Get transport\n\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\n\n\t\t// If no transport, we auto-abort\n\t\tif ( !transport ) {\n\t\t\tdone( -1, \"No Transport\" );\n\t\t} else {\n\t\t\tjqXHR.readyState = 1;\n\n\t\t\t// Send global event\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\n\t\t\t}\n\n\t\t\t// If request was aborted inside ajaxSend, stop there\n\t\t\tif ( completed ) {\n\t\t\t\treturn jqXHR;\n\t\t\t}\n\n\t\t\t// Timeout\n\t\t\tif ( s.async && s.timeout > 0 ) {\n\t\t\t\ttimeoutTimer = window.setTimeout( function() {\n\t\t\t\t\tjqXHR.abort( \"timeout\" );\n\t\t\t\t}, s.timeout );\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tcompleted = false;\n\t\t\t\ttransport.send( requestHeaders, done );\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// Rethrow post-completion exceptions\n\t\t\t\tif ( completed ) {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\n\t\t\t\t// Propagate others as results\n\t\t\t\tdone( -1, e );\n\t\t\t}\n\t\t}\n\n\t\t// Callback for when everything is done\n\t\tfunction done( status, nativeStatusText, responses, headers ) {\n\t\t\tvar isSuccess, success, error, response, modified,\n\t\t\t\tstatusText = nativeStatusText;\n\n\t\t\t// Ignore repeat invocations\n\t\t\tif ( completed ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcompleted = true;\n\n\t\t\t// Clear timeout if it exists\n\t\t\tif ( timeoutTimer ) {\n\t\t\t\twindow.clearTimeout( timeoutTimer );\n\t\t\t}\n\n\t\t\t// Dereference transport for early garbage collection\n\t\t\t// (no matter how long the jqXHR object will be used)\n\t\t\ttransport = undefined;\n\n\t\t\t// Cache response headers\n\t\t\tresponseHeadersString = headers || \"\";\n\n\t\t\t// Set readyState\n\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\n\n\t\t\t// Determine if successful\n\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\n\n\t\t\t// Get response data\n\t\t\tif ( responses ) {\n\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\n\t\t\t}\n\n\t\t\t// Convert no matter what (that way responseXXX fields are always set)\n\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\n\n\t\t\t// If successful, handle type chaining\n\t\t\tif ( isSuccess ) {\n\n\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\t\t\tif ( s.ifModified ) {\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"Last-Modified\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"etag\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if no content\n\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\n\t\t\t\t\tstatusText = \"nocontent\";\n\n\t\t\t\t// if not modified\n\t\t\t\t} else if ( status === 304 ) {\n\t\t\t\t\tstatusText = \"notmodified\";\n\n\t\t\t\t// If we have data, let's convert it\n\t\t\t\t} else {\n\t\t\t\t\tstatusText = response.state;\n\t\t\t\t\tsuccess = response.data;\n\t\t\t\t\terror = response.error;\n\t\t\t\t\tisSuccess = !error;\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// Extract error from statusText and normalize for non-aborts\n\t\t\t\terror = statusText;\n\t\t\t\tif ( status || !statusText ) {\n\t\t\t\t\tstatusText = \"error\";\n\t\t\t\t\tif ( status < 0 ) {\n\t\t\t\t\t\tstatus = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set data for the fake xhr object\n\t\t\tjqXHR.status = status;\n\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\n\n\t\t\t// Success/Error\n\t\t\tif ( isSuccess ) {\n\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\n\t\t\t} else {\n\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\n\t\t\t}\n\n\t\t\t// Status-dependent callbacks\n\t\t\tjqXHR.statusCode( statusCode );\n\t\t\tstatusCode = undefined;\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\n\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\n\t\t\t}\n\n\t\t\t// Complete\n\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\n\n\t\t\t\t// Handle the global AJAX counter\n\t\t\t\tif ( !( --jQuery.active ) ) {\n\t\t\t\t\tjQuery.event.trigger( \"ajaxStop\" );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn jqXHR;\n\t},\n\n\tgetJSON: function( url, data, callback ) {\n\t\treturn jQuery.get( url, data, callback, \"json\" );\n\t},\n\n\tgetScript: function( url, callback ) {\n\t\treturn jQuery.get( url, undefined, callback, \"script\" );\n\t}\n} );\n\njQuery.each( [ \"get\", \"post\" ], function( i, method ) {\n\tjQuery[ method ] = function( url, data, callback, type ) {\n\n\t\t// Shift arguments if data argument was omitted\n\t\tif ( jQuery.isFunction( data ) ) {\n\t\t\ttype = type || callback;\n\t\t\tcallback = data;\n\t\t\tdata = undefined;\n\t\t}\n\n\t\t// The url can be an options object (which then must have .url)\n\t\treturn jQuery.ajax( jQuery.extend( {\n\t\t\turl: url,\n\t\t\ttype: method,\n\t\t\tdataType: type,\n\t\t\tdata: data,\n\t\t\tsuccess: callback\n\t\t}, jQuery.isPlainObject( url ) && url ) );\n\t};\n} );\n\n\njQuery._evalUrl = function( url ) {\n\treturn jQuery.ajax( {\n\t\turl: url,\n\n\t\t// Make this explicit, since user can override this through ajaxSetup (#11264)\n\t\ttype: \"GET\",\n\t\tdataType: \"script\",\n\t\tcache: true,\n\t\tasync: false,\n\t\tglobal: false,\n\t\t\"throws\": true\n\t} );\n};\n\n\njQuery.fn.extend( {\n\twrapAll: function( html ) {\n\t\tvar wrap;\n\n\t\tif ( this[ 0 ] ) {\n\t\t\tif ( jQuery.isFunction( html ) ) {\n\t\t\t\thtml = html.call( this[ 0 ] );\n\t\t\t}\n\n\t\t\t// The elements to wrap the target around\n\t\t\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\n\n\t\t\tif ( this[ 0 ].parentNode ) {\n\t\t\t\twrap.insertBefore( this[ 0 ] );\n\t\t\t}\n\n\t\t\twrap.map( function() {\n\t\t\t\tvar elem = this;\n\n\t\t\t\twhile ( elem.firstElementChild ) {\n\t\t\t\t\telem = elem.firstElementChild;\n\t\t\t\t}\n\n\t\t\t\treturn elem;\n\t\t\t} ).append( this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\twrapInner: function( html ) {\n\t\tif ( jQuery.isFunction( html ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).wrapInner( html.call( this, i ) );\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar self = jQuery( this ),\n\t\t\t\tcontents = self.contents();\n\n\t\t\tif ( contents.length ) {\n\t\t\t\tcontents.wrapAll( html );\n\n\t\t\t} else {\n\t\t\t\tself.append( html );\n\t\t\t}\n\t\t} );\n\t},\n\n\twrap: function( html ) {\n\t\tvar isFunction = jQuery.isFunction( html );\n\n\t\treturn this.each( function( i ) {\n\t\t\tjQuery( this ).wrapAll( isFunction ? html.call( this, i ) : html );\n\t\t} );\n\t},\n\n\tunwrap: function( selector ) {\n\t\tthis.parent( selector ).not( \"body\" ).each( function() {\n\t\t\tjQuery( this ).replaceWith( this.childNodes );\n\t\t} );\n\t\treturn this;\n\t}\n} );\n\n\njQuery.expr.pseudos.hidden = function( elem ) {\n\treturn !jQuery.expr.pseudos.visible( elem );\n};\njQuery.expr.pseudos.visible = function( elem ) {\n\treturn !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );\n};\n\n\n\n\njQuery.ajaxSettings.xhr = function() {\n\ttry {\n\t\treturn new window.XMLHttpRequest();\n\t} catch ( e ) {}\n};\n\nvar xhrSuccessStatus = {\n\n\t\t// File protocol always yields status code 0, assume 200\n\t\t0: 200,\n\n\t\t// Support: IE <=9 only\n\t\t// #1450: sometimes IE returns 1223 when it should be 204\n\t\t1223: 204\n\t},\n\txhrSupported = jQuery.ajaxSettings.xhr();\n\nsupport.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\nsupport.ajax = xhrSupported = !!xhrSupported;\n\njQuery.ajaxTransport( function( options ) {\n\tvar callback, errorCallback;\n\n\t// Cross domain only allowed if supported through XMLHttpRequest\n\tif ( support.cors || xhrSupported && !options.crossDomain ) {\n\t\treturn {\n\t\t\tsend: function( headers, complete ) {\n\t\t\t\tvar i,\n\t\t\t\t\txhr = options.xhr();\n\n\t\t\t\txhr.open(\n\t\t\t\t\toptions.type,\n\t\t\t\t\toptions.url,\n\t\t\t\t\toptions.async,\n\t\t\t\t\toptions.username,\n\t\t\t\t\toptions.password\n\t\t\t\t);\n\n\t\t\t\t// Apply custom fields if provided\n\t\t\t\tif ( options.xhrFields ) {\n\t\t\t\t\tfor ( i in options.xhrFields ) {\n\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Override mime type if needed\n\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\n\t\t\t\t\txhr.overrideMimeType( options.mimeType );\n\t\t\t\t}\n\n\t\t\t\t// X-Requested-With header\n\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\n\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\n\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\n\t\t\t\t// For same-domain requests, won't change header if already provided.\n\t\t\t\tif ( !options.crossDomain && !headers[ \"X-Requested-With\" ] ) {\n\t\t\t\t\theaders[ \"X-Requested-With\" ] = \"XMLHttpRequest\";\n\t\t\t\t}\n\n\t\t\t\t// Set headers\n\t\t\t\tfor ( i in headers ) {\n\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\n\t\t\t\t}\n\n\t\t\t\t// Callback\n\t\t\t\tcallback = function( type ) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\tcallback = errorCallback = xhr.onload =\n\t\t\t\t\t\t\t\txhr.onerror = xhr.onabort = xhr.onreadystatechange = null;\n\n\t\t\t\t\t\t\tif ( type === \"abort\" ) {\n\t\t\t\t\t\t\t\txhr.abort();\n\t\t\t\t\t\t\t} else if ( type === \"error\" ) {\n\n\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t// On a manual native abort, IE9 throws\n\t\t\t\t\t\t\t\t// errors on any property access that is not readyState\n\t\t\t\t\t\t\t\tif ( typeof xhr.status !== \"number\" ) {\n\t\t\t\t\t\t\t\t\tcomplete( 0, \"error\" );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcomplete(\n\n\t\t\t\t\t\t\t\t\t\t// File: protocol always yields status 0; see #8605, #14207\n\t\t\t\t\t\t\t\t\t\txhr.status,\n\t\t\t\t\t\t\t\t\t\txhr.statusText\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\txhrSuccessStatus[ xhr.status ] || xhr.status,\n\t\t\t\t\t\t\t\t\txhr.statusText,\n\n\t\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t\t// IE9 has no XHR2 but throws on binary (trac-11426)\n\t\t\t\t\t\t\t\t\t// For XHR2 non-text, let the caller handle it (gh-2498)\n\t\t\t\t\t\t\t\t\t( xhr.responseType || \"text\" ) !== \"text\"  ||\n\t\t\t\t\t\t\t\t\ttypeof xhr.responseText !== \"string\" ?\n\t\t\t\t\t\t\t\t\t\t{ binary: xhr.response } :\n\t\t\t\t\t\t\t\t\t\t{ text: xhr.responseText },\n\t\t\t\t\t\t\t\t\txhr.getAllResponseHeaders()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\t// Listen to events\n\t\t\t\txhr.onload = callback();\n\t\t\t\terrorCallback = xhr.onerror = callback( \"error\" );\n\n\t\t\t\t// Support: IE 9 only\n\t\t\t\t// Use onreadystatechange to replace onabort\n\t\t\t\t// to handle uncaught aborts\n\t\t\t\tif ( xhr.onabort !== undefined ) {\n\t\t\t\t\txhr.onabort = errorCallback;\n\t\t\t\t} else {\n\t\t\t\t\txhr.onreadystatechange = function() {\n\n\t\t\t\t\t\t// Check readyState before timeout as it changes\n\t\t\t\t\t\tif ( xhr.readyState === 4 ) {\n\n\t\t\t\t\t\t\t// Allow onerror to be called first,\n\t\t\t\t\t\t\t// but that will not handle a native abort\n\t\t\t\t\t\t\t// Also, save errorCallback to a variable\n\t\t\t\t\t\t\t// as xhr.onerror cannot be accessed\n\t\t\t\t\t\t\twindow.setTimeout( function() {\n\t\t\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\t\t\terrorCallback();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Create the abort callback\n\t\t\t\tcallback = callback( \"abort\" );\n\n\t\t\t\ttry {\n\n\t\t\t\t\t// Do send the request (this may raise an exception)\n\t\t\t\t\txhr.send( options.hasContent && options.data || null );\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t// #14683: Only rethrow if this hasn't been notified as an error yet\n\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\n// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)\njQuery.ajaxPrefilter( function( s ) {\n\tif ( s.crossDomain ) {\n\t\ts.contents.script = false;\n\t}\n} );\n\n// Install script dataType\njQuery.ajaxSetup( {\n\taccepts: {\n\t\tscript: \"text/javascript, application/javascript, \" +\n\t\t\t\"application/ecmascript, application/x-ecmascript\"\n\t},\n\tcontents: {\n\t\tscript: /\\b(?:java|ecma)script\\b/\n\t},\n\tconverters: {\n\t\t\"text script\": function( text ) {\n\t\t\tjQuery.globalEval( text );\n\t\t\treturn text;\n\t\t}\n\t}\n} );\n\n// Handle cache's special case and crossDomain\njQuery.ajaxPrefilter( \"script\", function( s ) {\n\tif ( s.cache === undefined ) {\n\t\ts.cache = false;\n\t}\n\tif ( s.crossDomain ) {\n\t\ts.type = \"GET\";\n\t}\n} );\n\n// Bind script tag hack transport\njQuery.ajaxTransport( \"script\", function( s ) {\n\n\t// This transport only deals with cross domain requests\n\tif ( s.crossDomain ) {\n\t\tvar script, callback;\n\t\treturn {\n\t\t\tsend: function( _, complete ) {\n\t\t\t\tscript = jQuery( \"<script>\" ).prop( {\n\t\t\t\t\tcharset: s.scriptCharset,\n\t\t\t\t\tsrc: s.url\n\t\t\t\t} ).on(\n\t\t\t\t\t\"load error\",\n\t\t\t\t\tcallback = function( evt ) {\n\t\t\t\t\t\tscript.remove();\n\t\t\t\t\t\tcallback = null;\n\t\t\t\t\t\tif ( evt ) {\n\t\t\t\t\t\t\tcomplete( evt.type === \"error\" ? 404 : 200, evt.type );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\t// Use native DOM manipulation to avoid our domManip AJAX trickery\n\t\t\t\tdocument.head.appendChild( script[ 0 ] );\n\t\t\t},\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\nvar oldCallbacks = [],\n\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n\n// Default jsonp settings\njQuery.ajaxSetup( {\n\tjsonp: \"callback\",\n\tjsonpCallback: function() {\n\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce++ ) );\n\t\tthis[ callback ] = true;\n\t\treturn callback;\n\t}\n} );\n\n// Detect, normalize options and install callbacks for jsonp requests\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\n\n\tvar callbackName, overwritten, responseContainer,\n\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\n\t\t\t\"url\" :\n\t\t\ttypeof s.data === \"string\" &&\n\t\t\t\t( s.contentType || \"\" )\n\t\t\t\t\t.indexOf( \"application/x-www-form-urlencoded\" ) === 0 &&\n\t\t\t\trjsonp.test( s.data ) && \"data\"\n\t\t);\n\n\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\n\n\t\t// Get callback name, remembering preexisting value associated with it\n\t\tcallbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?\n\t\t\ts.jsonpCallback() :\n\t\t\ts.jsonpCallback;\n\n\t\t// Insert callback into url or form data\n\t\tif ( jsonProp ) {\n\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\n\t\t} else if ( s.jsonp !== false ) {\n\t\t\ts.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\n\t\t}\n\n\t\t// Use data converter to retrieve json after script execution\n\t\ts.converters[ \"script json\" ] = function() {\n\t\t\tif ( !responseContainer ) {\n\t\t\t\tjQuery.error( callbackName + \" was not called\" );\n\t\t\t}\n\t\t\treturn responseContainer[ 0 ];\n\t\t};\n\n\t\t// Force json dataType\n\t\ts.dataTypes[ 0 ] = \"json\";\n\n\t\t// Install callback\n\t\toverwritten = window[ callbackName ];\n\t\twindow[ callbackName ] = function() {\n\t\t\tresponseContainer = arguments;\n\t\t};\n\n\t\t// Clean-up function (fires after converters)\n\t\tjqXHR.always( function() {\n\n\t\t\t// If previous value didn't exist - remove it\n\t\t\tif ( overwritten === undefined ) {\n\t\t\t\tjQuery( window ).removeProp( callbackName );\n\n\t\t\t// Otherwise restore preexisting value\n\t\t\t} else {\n\t\t\t\twindow[ callbackName ] = overwritten;\n\t\t\t}\n\n\t\t\t// Save back as free\n\t\t\tif ( s[ callbackName ] ) {\n\n\t\t\t\t// Make sure that re-using the options doesn't screw things around\n\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\n\n\t\t\t\t// Save the callback name for future use\n\t\t\t\toldCallbacks.push( callbackName );\n\t\t\t}\n\n\t\t\t// Call if it was a function and we have a response\n\t\t\tif ( responseContainer && jQuery.isFunction( overwritten ) ) {\n\t\t\t\toverwritten( responseContainer[ 0 ] );\n\t\t\t}\n\n\t\t\tresponseContainer = overwritten = undefined;\n\t\t} );\n\n\t\t// Delegate to script\n\t\treturn \"script\";\n\t}\n} );\n\n\n\n\n// Support: Safari 8 only\n// In Safari 8 documents created via document.implementation.createHTMLDocument\n// collapse sibling forms: the second one becomes a child of the first one.\n// Because of that, this security measure has to be disabled in Safari 8.\n// https://bugs.webkit.org/show_bug.cgi?id=137337\nsupport.createHTMLDocument = ( function() {\n\tvar body = document.implementation.createHTMLDocument( \"\" ).body;\n\tbody.innerHTML = \"<form></form><form></form>\";\n\treturn body.childNodes.length === 2;\n} )();\n\n\n// Argument \"data\" should be string of html\n// context (optional): If specified, the fragment will be created in this context,\n// defaults to document\n// keepScripts (optional): If true, will include scripts passed in the html string\njQuery.parseHTML = function( data, context, keepScripts ) {\n\tif ( typeof data !== \"string\" ) {\n\t\treturn [];\n\t}\n\tif ( typeof context === \"boolean\" ) {\n\t\tkeepScripts = context;\n\t\tcontext = false;\n\t}\n\n\tvar base, parsed, scripts;\n\n\tif ( !context ) {\n\n\t\t// Stop scripts or inline event handlers from being executed immediately\n\t\t// by using document.implementation\n\t\tif ( support.createHTMLDocument ) {\n\t\t\tcontext = document.implementation.createHTMLDocument( \"\" );\n\n\t\t\t// Set the base href for the created document\n\t\t\t// so any parsed elements with URLs\n\t\t\t// are based on the document's URL (gh-2965)\n\t\t\tbase = context.createElement( \"base\" );\n\t\t\tbase.href = document.location.href;\n\t\t\tcontext.head.appendChild( base );\n\t\t} else {\n\t\t\tcontext = document;\n\t\t}\n\t}\n\n\tparsed = rsingleTag.exec( data );\n\tscripts = !keepScripts && [];\n\n\t// Single tag\n\tif ( parsed ) {\n\t\treturn [ context.createElement( parsed[ 1 ] ) ];\n\t}\n\n\tparsed = buildFragment( [ data ], context, scripts );\n\n\tif ( scripts && scripts.length ) {\n\t\tjQuery( scripts ).remove();\n\t}\n\n\treturn jQuery.merge( [], parsed.childNodes );\n};\n\n\n/**\n * Load a url into a page\n */\njQuery.fn.load = function( url, params, callback ) {\n\tvar selector, type, response,\n\t\tself = this,\n\t\toff = url.indexOf( \" \" );\n\n\tif ( off > -1 ) {\n\t\tselector = stripAndCollapse( url.slice( off ) );\n\t\turl = url.slice( 0, off );\n\t}\n\n\t// If it's a function\n\tif ( jQuery.isFunction( params ) ) {\n\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = undefined;\n\n\t// Otherwise, build a param string\n\t} else if ( params && typeof params === \"object\" ) {\n\t\ttype = \"POST\";\n\t}\n\n\t// If we have elements to modify, make the request\n\tif ( self.length > 0 ) {\n\t\tjQuery.ajax( {\n\t\t\turl: url,\n\n\t\t\t// If \"type\" variable is undefined, then \"GET\" method will be used.\n\t\t\t// Make value of this field explicit since\n\t\t\t// user can override it through ajaxSetup method\n\t\t\ttype: type || \"GET\",\n\t\t\tdataType: \"html\",\n\t\t\tdata: params\n\t\t} ).done( function( responseText ) {\n\n\t\t\t// Save response for use in complete callback\n\t\t\tresponse = arguments;\n\n\t\t\tself.html( selector ?\n\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\n\t\t\t\tjQuery( \"<div>\" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :\n\n\t\t\t\t// Otherwise use the full result\n\t\t\t\tresponseText );\n\n\t\t// If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n\t\t// but they are ignored because response was set above.\n\t\t// If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n\t\t} ).always( callback && function( jqXHR, status ) {\n\t\t\tself.each( function() {\n\t\t\t\tcallback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );\n\t\t\t} );\n\t\t} );\n\t}\n\n\treturn this;\n};\n\n\n\n\n// Attach a bunch of functions for handling common AJAX events\njQuery.each( [\n\t\"ajaxStart\",\n\t\"ajaxStop\",\n\t\"ajaxComplete\",\n\t\"ajaxError\",\n\t\"ajaxSuccess\",\n\t\"ajaxSend\"\n], function( i, type ) {\n\tjQuery.fn[ type ] = function( fn ) {\n\t\treturn this.on( type, fn );\n\t};\n} );\n\n\n\n\njQuery.expr.pseudos.animated = function( elem ) {\n\treturn jQuery.grep( jQuery.timers, function( fn ) {\n\t\treturn elem === fn.elem;\n\t} ).length;\n};\n\n\n\n\n/**\n * Gets a window from an element\n */\nfunction getWindow( elem ) {\n\treturn jQuery.isWindow( elem ) ? elem : elem.nodeType === 9 && elem.defaultView;\n}\n\njQuery.offset = {\n\tsetOffset: function( elem, options, i ) {\n\t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\n\t\t\tposition = jQuery.css( elem, \"position\" ),\n\t\t\tcurElem = jQuery( elem ),\n\t\t\tprops = {};\n\n\t\t// Set position first, in-case top/left are set even on static elem\n\t\tif ( position === \"static\" ) {\n\t\t\telem.style.position = \"relative\";\n\t\t}\n\n\t\tcurOffset = curElem.offset();\n\t\tcurCSSTop = jQuery.css( elem, \"top\" );\n\t\tcurCSSLeft = jQuery.css( elem, \"left\" );\n\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) &&\n\t\t\t( curCSSTop + curCSSLeft ).indexOf( \"auto\" ) > -1;\n\n\t\t// Need to be able to calculate position if either\n\t\t// top or left is auto and position is either absolute or fixed\n\t\tif ( calculatePosition ) {\n\t\t\tcurPosition = curElem.position();\n\t\t\tcurTop = curPosition.top;\n\t\t\tcurLeft = curPosition.left;\n\n\t\t} else {\n\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\n\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\n\t\t}\n\n\t\tif ( jQuery.isFunction( options ) ) {\n\n\t\t\t// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n\t\t\toptions = options.call( elem, i, jQuery.extend( {}, curOffset ) );\n\t\t}\n\n\t\tif ( options.top != null ) {\n\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\n\t\t}\n\t\tif ( options.left != null ) {\n\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\n\t\t}\n\n\t\tif ( \"using\" in options ) {\n\t\t\toptions.using.call( elem, props );\n\n\t\t} else {\n\t\t\tcurElem.css( props );\n\t\t}\n\t}\n};\n\njQuery.fn.extend( {\n\toffset: function( options ) {\n\n\t\t// Preserve chaining for setter\n\t\tif ( arguments.length ) {\n\t\t\treturn options === undefined ?\n\t\t\t\tthis :\n\t\t\t\tthis.each( function( i ) {\n\t\t\t\t\tjQuery.offset.setOffset( this, options, i );\n\t\t\t\t} );\n\t\t}\n\n\t\tvar docElem, win, rect, doc,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !elem ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Support: IE <=11 only\n\t\t// Running getBoundingClientRect on a\n\t\t// disconnected node in IE throws an error\n\t\tif ( !elem.getClientRects().length ) {\n\t\t\treturn { top: 0, left: 0 };\n\t\t}\n\n\t\trect = elem.getBoundingClientRect();\n\n\t\t// Make sure element is not hidden (display: none)\n\t\tif ( rect.width || rect.height ) {\n\t\t\tdoc = elem.ownerDocument;\n\t\t\twin = getWindow( doc );\n\t\t\tdocElem = doc.documentElement;\n\n\t\t\treturn {\n\t\t\t\ttop: rect.top + win.pageYOffset - docElem.clientTop,\n\t\t\t\tleft: rect.left + win.pageXOffset - docElem.clientLeft\n\t\t\t};\n\t\t}\n\n\t\t// Return zeros for disconnected and hidden elements (gh-2310)\n\t\treturn rect;\n\t},\n\n\tposition: function() {\n\t\tif ( !this[ 0 ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar offsetParent, offset,\n\t\t\telem = this[ 0 ],\n\t\t\tparentOffset = { top: 0, left: 0 };\n\n\t\t// Fixed elements are offset from window (parentOffset = {top:0, left: 0},\n\t\t// because it is its only offset parent\n\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\n\n\t\t\t// Assume getBoundingClientRect is there when computed position is fixed\n\t\t\toffset = elem.getBoundingClientRect();\n\n\t\t} else {\n\n\t\t\t// Get *real* offsetParent\n\t\t\toffsetParent = this.offsetParent();\n\n\t\t\t// Get correct offsets\n\t\t\toffset = this.offset();\n\t\t\tif ( !jQuery.nodeName( offsetParent[ 0 ], \"html\" ) ) {\n\t\t\t\tparentOffset = offsetParent.offset();\n\t\t\t}\n\n\t\t\t// Add offsetParent borders\n\t\t\tparentOffset = {\n\t\t\t\ttop: parentOffset.top + jQuery.css( offsetParent[ 0 ], \"borderTopWidth\", true ),\n\t\t\t\tleft: parentOffset.left + jQuery.css( offsetParent[ 0 ], \"borderLeftWidth\", true )\n\t\t\t};\n\t\t}\n\n\t\t// Subtract parent offsets and element margins\n\t\treturn {\n\t\t\ttop: offset.top - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\n\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true )\n\t\t};\n\t},\n\n\t// This method will return documentElement in the following cases:\n\t// 1) For the element inside the iframe without offsetParent, this method will return\n\t//    documentElement of the parent window\n\t// 2) For the hidden or detached element\n\t// 3) For body or html element, i.e. in case of the html node - it will return itself\n\t//\n\t// but those exceptions were never presented as a real life use-cases\n\t// and might be considered as more preferable results.\n\t//\n\t// This logic, however, is not guaranteed and can change at any point in the future\n\toffsetParent: function() {\n\t\treturn this.map( function() {\n\t\t\tvar offsetParent = this.offsetParent;\n\n\t\t\twhile ( offsetParent && jQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t}\n\n\t\t\treturn offsetParent || documentElement;\n\t\t} );\n\t}\n} );\n\n// Create scrollLeft and scrollTop methods\njQuery.each( { scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function( method, prop ) {\n\tvar top = \"pageYOffset\" === prop;\n\n\tjQuery.fn[ method ] = function( val ) {\n\t\treturn access( this, function( elem, method, val ) {\n\t\t\tvar win = getWindow( elem );\n\n\t\t\tif ( val === undefined ) {\n\t\t\t\treturn win ? win[ prop ] : elem[ method ];\n\t\t\t}\n\n\t\t\tif ( win ) {\n\t\t\t\twin.scrollTo(\n\t\t\t\t\t!top ? val : win.pageXOffset,\n\t\t\t\t\ttop ? val : win.pageYOffset\n\t\t\t\t);\n\n\t\t\t} else {\n\t\t\t\telem[ method ] = val;\n\t\t\t}\n\t\t}, method, val, arguments.length );\n\t};\n} );\n\n// Support: Safari <=7 - 9.1, Chrome <=37 - 49\n// Add the top/left cssHooks using jQuery.fn.position\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\n// getComputedStyle returns percent when specified for top/left/bottom/right;\n// rather than make the css module depend on the offset module, just check for it here\njQuery.each( [ \"top\", \"left\" ], function( i, prop ) {\n\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\n\t\tfunction( elem, computed ) {\n\t\t\tif ( computed ) {\n\t\t\t\tcomputed = curCSS( elem, prop );\n\n\t\t\t\t// If curCSS returns percentage, fallback to offset\n\t\t\t\treturn rnumnonpx.test( computed ) ?\n\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\n\t\t\t\t\tcomputed;\n\t\t\t}\n\t\t}\n\t);\n} );\n\n\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\n\tjQuery.each( { padding: \"inner\" + name, content: type, \"\": \"outer\" + name },\n\t\tfunction( defaultExtra, funcName ) {\n\n\t\t// Margin is only for outerHeight, outerWidth\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\n\n\t\t\treturn access( this, function( elem, type, value ) {\n\t\t\t\tvar doc;\n\n\t\t\t\tif ( jQuery.isWindow( elem ) ) {\n\n\t\t\t\t\t// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)\n\t\t\t\t\treturn funcName.indexOf( \"outer\" ) === 0 ?\n\t\t\t\t\t\telem[ \"inner\" + name ] :\n\t\t\t\t\t\telem.document.documentElement[ \"client\" + name ];\n\t\t\t\t}\n\n\t\t\t\t// Get document width or height\n\t\t\t\tif ( elem.nodeType === 9 ) {\n\t\t\t\t\tdoc = elem.documentElement;\n\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n\t\t\t\t\t// whichever is greatest\n\t\t\t\t\treturn Math.max(\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\n\t\t\t\t\t\tdoc[ \"client\" + name ]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn value === undefined ?\n\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\n\n\t\t\t\t\t// Set width or height on the element\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\n\t\t\t}, type, chainable ? margin : undefined, chainable );\n\t\t};\n\t} );\n} );\n\n\njQuery.fn.extend( {\n\n\tbind: function( types, data, fn ) {\n\t\treturn this.on( types, null, data, fn );\n\t},\n\tunbind: function( types, fn ) {\n\t\treturn this.off( types, null, fn );\n\t},\n\n\tdelegate: function( selector, types, data, fn ) {\n\t\treturn this.on( types, selector, data, fn );\n\t},\n\tundelegate: function( selector, types, fn ) {\n\n\t\t// ( namespace ) or ( selector, types [, fn] )\n\t\treturn arguments.length === 1 ?\n\t\t\tthis.off( selector, \"**\" ) :\n\t\t\tthis.off( types, selector || \"**\", fn );\n\t}\n} );\n\njQuery.parseJSON = JSON.parse;\n\n\n\n\n// Register as a named AMD module, since jQuery can be concatenated with other\n// files that may use define, but not via a proper concatenation script that\n// understands anonymous AMD modules. A named AMD is safest and most robust\n// way to register. Lowercase jquery is used because AMD module names are\n// derived from file names, and jQuery is normally delivered in a lowercase\n// file name. Do this after creating the global so that if an AMD module wants\n// to call noConflict to hide this version of jQuery, it will work.\n\n// Note that for maximum portability, libraries that are not jQuery should\n// declare themselves as anonymous modules, and avoid setting a global if an\n// AMD loader is present. jQuery is a special case. For more information, see\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\nif ( typeof define === \"function\" && define.amd ) {\n\tdefine( \"jquery\", [], function() {\n\t\treturn jQuery;\n\t} );\n}\n\n\n\n\nvar\n\n\t// Map over jQuery in case of overwrite\n\t_jQuery = window.jQuery,\n\n\t// Map over the $ in case of overwrite\n\t_$ = window.$;\n\njQuery.noConflict = function( deep ) {\n\tif ( window.$ === jQuery ) {\n\t\twindow.$ = _$;\n\t}\n\n\tif ( deep && window.jQuery === jQuery ) {\n\t\twindow.jQuery = _jQuery;\n\t}\n\n\treturn jQuery;\n};\n\n// Expose jQuery and $ identifiers, even in AMD\n// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n// and CommonJS for browser emulators (#13566)\nif ( !noGlobal ) {\n\twindow.jQuery = window.$ = jQuery;\n}\n\n\n\n\n\nreturn jQuery;\n} );\n","var self = self || {};// File:src/Three.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nvar THREE = { REVISION: '71' };\r\n\r\n// browserify support\r\n\r\nif ( typeof module === 'object' ) {\r\n\r\n\tmodule.exports = THREE;\r\n\r\n}\r\n\r\n// polyfills\r\n\r\nif ( Math.sign === undefined ) {\r\n\r\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\r\n\r\n\tMath.sign = function ( x ) {\r\n\r\n\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : +x;\r\n\r\n\t};\r\n\r\n}\r\n\r\n\r\n// set the default log handlers\r\nTHREE.log = function() { console.log.apply( console, arguments ); }\r\nTHREE.warn = function() { console.warn.apply( console, arguments ); }\r\nTHREE.error = function() { console.error.apply( console, arguments ); }\r\n\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent.button\r\n\r\nTHREE.MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\r\n\r\n// GL STATE CONSTANTS\r\n\r\nTHREE.CullFaceNone = 0;\r\nTHREE.CullFaceBack = 1;\r\nTHREE.CullFaceFront = 2;\r\nTHREE.CullFaceFrontBack = 3;\r\n\r\nTHREE.FrontFaceDirectionCW = 0;\r\nTHREE.FrontFaceDirectionCCW = 1;\r\n\r\n// SHADOWING TYPES\r\n\r\nTHREE.BasicShadowMap = 0;\r\nTHREE.PCFShadowMap = 1;\r\nTHREE.PCFSoftShadowMap = 2;\r\n\r\n// MATERIAL CONSTANTS\r\n\r\n// side\r\n\r\nTHREE.FrontSide = 0;\r\nTHREE.BackSide = 1;\r\nTHREE.DoubleSide = 2;\r\n\r\n// shading\r\n\r\nTHREE.NoShading = 0;\r\nTHREE.FlatShading = 1;\r\nTHREE.SmoothShading = 2;\r\n\r\n// colors\r\n\r\nTHREE.NoColors = 0;\r\nTHREE.FaceColors = 1;\r\nTHREE.VertexColors = 2;\r\n\r\n// blending modes\r\n\r\nTHREE.NoBlending = 0;\r\nTHREE.NormalBlending = 1;\r\nTHREE.AdditiveBlending = 2;\r\nTHREE.SubtractiveBlending = 3;\r\nTHREE.MultiplyBlending = 4;\r\nTHREE.CustomBlending = 5;\r\n\r\n// custom blending equations\r\n// (numbers start from 100 not to clash with other\r\n//  mappings to OpenGL constants defined in Texture.js)\r\n\r\nTHREE.AddEquation = 100;\r\nTHREE.SubtractEquation = 101;\r\nTHREE.ReverseSubtractEquation = 102;\r\nTHREE.MinEquation = 103;\r\nTHREE.MaxEquation = 104;\r\n\r\n// custom blending destination factors\r\n\r\nTHREE.ZeroFactor = 200;\r\nTHREE.OneFactor = 201;\r\nTHREE.SrcColorFactor = 202;\r\nTHREE.OneMinusSrcColorFactor = 203;\r\nTHREE.SrcAlphaFactor = 204;\r\nTHREE.OneMinusSrcAlphaFactor = 205;\r\nTHREE.DstAlphaFactor = 206;\r\nTHREE.OneMinusDstAlphaFactor = 207;\r\n\r\n// custom blending source factors\r\n\r\n//THREE.ZeroFactor = 200;\r\n//THREE.OneFactor = 201;\r\n//THREE.SrcAlphaFactor = 204;\r\n//THREE.OneMinusSrcAlphaFactor = 205;\r\n//THREE.DstAlphaFactor = 206;\r\n//THREE.OneMinusDstAlphaFactor = 207;\r\nTHREE.DstColorFactor = 208;\r\nTHREE.OneMinusDstColorFactor = 209;\r\nTHREE.SrcAlphaSaturateFactor = 210;\r\n\r\n\r\n// TEXTURE CONSTANTS\r\n\r\nTHREE.MultiplyOperation = 0;\r\nTHREE.MixOperation = 1;\r\nTHREE.AddOperation = 2;\r\n\r\n// Mapping modes\r\n\r\nTHREE.UVMapping = 300;\r\n\r\nTHREE.CubeReflectionMapping = 301;\r\nTHREE.CubeRefractionMapping = 302;\r\n\r\nTHREE.EquirectangularReflectionMapping = 303;\r\nTHREE.EquirectangularRefractionMapping = 304;\r\n\r\nTHREE.SphericalReflectionMapping = 305;\r\n\r\n// Wrapping modes\r\n\r\nTHREE.RepeatWrapping = 1000;\r\nTHREE.ClampToEdgeWrapping = 1001;\r\nTHREE.MirroredRepeatWrapping = 1002;\r\n\r\n// Filters\r\n\r\nTHREE.NearestFilter = 1003;\r\nTHREE.NearestMipMapNearestFilter = 1004;\r\nTHREE.NearestMipMapLinearFilter = 1005;\r\nTHREE.LinearFilter = 1006;\r\nTHREE.LinearMipMapNearestFilter = 1007;\r\nTHREE.LinearMipMapLinearFilter = 1008;\r\n\r\n// Data types\r\n\r\nTHREE.UnsignedByteType = 1009;\r\nTHREE.ByteType = 1010;\r\nTHREE.ShortType = 1011;\r\nTHREE.UnsignedShortType = 1012;\r\nTHREE.IntType = 1013;\r\nTHREE.UnsignedIntType = 1014;\r\nTHREE.FloatType = 1015;\r\nTHREE.HalfFloatType = 1025;\r\n\r\n// Pixel types\r\n\r\n//THREE.UnsignedByteType = 1009;\r\nTHREE.UnsignedShort4444Type = 1016;\r\nTHREE.UnsignedShort5551Type = 1017;\r\nTHREE.UnsignedShort565Type = 1018;\r\n\r\n// Pixel formats\r\n\r\nTHREE.AlphaFormat = 1019;\r\nTHREE.RGBFormat = 1020;\r\nTHREE.RGBAFormat = 1021;\r\nTHREE.LuminanceFormat = 1022;\r\nTHREE.LuminanceAlphaFormat = 1023;\r\n// THREE.RGBEFormat handled as THREE.RGBAFormat in shaders\r\nTHREE.RGBEFormat = THREE.RGBAFormat; //1024;\r\n\r\n// DDS / ST3C Compressed texture formats\r\n\r\nTHREE.RGB_S3TC_DXT1_Format = 2001;\r\nTHREE.RGBA_S3TC_DXT1_Format = 2002;\r\nTHREE.RGBA_S3TC_DXT3_Format = 2003;\r\nTHREE.RGBA_S3TC_DXT5_Format = 2004;\r\n\r\n\r\n// PVRTC compressed texture formats\r\n\r\nTHREE.RGB_PVRTC_4BPPV1_Format = 2100;\r\nTHREE.RGB_PVRTC_2BPPV1_Format = 2101;\r\nTHREE.RGBA_PVRTC_4BPPV1_Format = 2102;\r\nTHREE.RGBA_PVRTC_2BPPV1_Format = 2103;\r\n\r\n\r\n// DEPRECATED\r\n\r\nTHREE.Projector = function () {\r\n\r\n\tTHREE.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\r\n\r\n\tthis.projectVector = function ( vector, camera ) {\r\n\r\n\t\tTHREE.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\r\n\t\tvector.project( camera );\r\n\r\n\t};\r\n\r\n\tthis.unprojectVector = function ( vector, camera ) {\r\n\r\n\t\tTHREE.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\r\n\t\tvector.unproject( camera );\r\n\r\n\t};\r\n\r\n\tthis.pickingRay = function ( vector, camera ) {\r\n\r\n\t\tTHREE.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.CanvasRenderer = function () {\r\n\r\n\tTHREE.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\r\n\r\n\tthis.domElement = document.createElement( 'canvas' );\r\n\tthis.clear = function () {};\r\n\tthis.render = function () {};\r\n\tthis.setClearColor = function () {};\r\n\tthis.setSize = function () {};\r\n\r\n};\r\n\r\n// File:src/math/Color.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Color = function ( color ) {\r\n\r\n\tif ( arguments.length === 3 ) {\r\n\r\n\t\treturn this.setRGB( arguments[ 0 ], arguments[ 1 ], arguments[ 2 ] );\r\n\r\n\t}\r\n\r\n\treturn this.set( color )\r\n\r\n};\r\n\r\nTHREE.Color.prototype = {\r\n\r\n\tconstructor: THREE.Color,\r\n\r\n\tr: 1, g: 1, b: 1,\r\n\r\n\tset: function ( value ) {\r\n\r\n\t\tif ( value instanceof THREE.Color ) {\r\n\r\n\t\t\tthis.copy( value );\r\n\r\n\t\t} else if ( typeof value === 'number' ) {\r\n\r\n\t\t\tthis.setHex( value );\r\n\r\n\t\t} else if ( typeof value === 'string' ) {\r\n\r\n\t\t\tthis.setStyle( value );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetHex: function ( hex ) {\r\n\r\n\t\thex = Math.floor( hex );\r\n\r\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\r\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\r\n\t\tthis.b = ( hex & 255 ) / 255;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetRGB: function ( r, g, b ) {\r\n\r\n\t\tthis.r = r;\r\n\t\tthis.g = g;\r\n\t\tthis.b = b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetHSL: function ( h, s, l ) {\r\n\r\n\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\r\n\t\tif ( s === 0 ) {\r\n\r\n\t\t\tthis.r = this.g = this.b = l;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar hue2rgb = function ( p, q, t ) {\r\n\r\n\t\t\t\tif ( t < 0 ) t += 1;\r\n\t\t\t\tif ( t > 1 ) t -= 1;\r\n\t\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\r\n\t\t\t\tif ( t < 1 / 2 ) return q;\r\n\t\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\r\n\t\t\t\treturn p;\r\n\r\n\t\t\t};\r\n\r\n\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\r\n\t\t\tvar q = ( 2 * l ) - p;\r\n\r\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\r\n\t\t\tthis.g = hue2rgb( q, p, h );\r\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetStyle: function ( style ) {\r\n\r\n\t\t// rgb(255,0,0)\r\n\r\n\t\tif ( /^rgb\\((\\d+), ?(\\d+), ?(\\d+)\\)$/i.test( style ) ) {\r\n\r\n\t\t\tvar color = /^rgb\\((\\d+), ?(\\d+), ?(\\d+)\\)$/i.exec( style );\r\n\r\n\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\r\n\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\r\n\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\t// rgb(100%,0%,0%)\r\n\r\n\t\tif ( /^rgb\\((\\d+)\\%, ?(\\d+)\\%, ?(\\d+)\\%\\)$/i.test( style ) ) {\r\n\r\n\t\t\tvar color = /^rgb\\((\\d+)\\%, ?(\\d+)\\%, ?(\\d+)\\%\\)$/i.exec( style );\r\n\r\n\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\r\n\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\r\n\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\t// #ff0000\r\n\r\n\t\tif ( /^\\#([0-9a-f]{6})$/i.test( style ) ) {\r\n\r\n\t\t\tvar color = /^\\#([0-9a-f]{6})$/i.exec( style );\r\n\r\n\t\t\tthis.setHex( parseInt( color[ 1 ], 16 ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\t// #f00\r\n\r\n\t\tif ( /^\\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test( style ) ) {\r\n\r\n\t\t\tvar color = /^\\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec( style );\r\n\r\n\t\t\tthis.setHex( parseInt( color[ 1 ] + color[ 1 ] + color[ 2 ] + color[ 2 ] + color[ 3 ] + color[ 3 ], 16 ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\t// red\r\n\r\n\t\tif ( /^(\\w+)$/i.test( style ) ) {\r\n\r\n\t\t\tthis.setHex( THREE.ColorKeywords[ style ] );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\r\n\t},\r\n\r\n\tcopy: function ( color ) {\r\n\r\n\t\tthis.r = color.r;\r\n\t\tthis.g = color.g;\r\n\t\tthis.b = color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyGammaToLinear: function ( color, gammaFactor ) {\r\n\r\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\r\n\t\tthis.r = Math.pow( color.r, gammaFactor );\r\n\t\tthis.g = Math.pow( color.g, gammaFactor );\r\n\t\tthis.b = Math.pow( color.b, gammaFactor );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyLinearToGamma: function ( color, gammaFactor ) {\r\n\r\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\r\n\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\r\n\r\n\t\tthis.r = Math.pow( color.r, safeInverse );\r\n\t\tthis.g = Math.pow( color.g, safeInverse );\r\n\t\tthis.b = Math.pow( color.b, safeInverse );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tconvertGammaToLinear: function () {\r\n\r\n\t\tvar r = this.r, g = this.g, b = this.b;\r\n\r\n\t\tthis.r = r * r;\r\n\t\tthis.g = g * g;\r\n\t\tthis.b = b * b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tconvertLinearToGamma: function () {\r\n\r\n\t\tthis.r = Math.sqrt( this.r );\r\n\t\tthis.g = Math.sqrt( this.g );\r\n\t\tthis.b = Math.sqrt( this.b );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetHex: function () {\r\n\r\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\r\n\r\n\t},\r\n\r\n\tgetHexString: function () {\r\n\r\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\r\n\r\n\t},\r\n\r\n\tgetHSL: function ( optionalTarget ) {\r\n\r\n\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\r\n\t\tvar hsl = optionalTarget || { h: 0, s: 0, l: 0 };\r\n\r\n\t\tvar r = this.r, g = this.g, b = this.b;\r\n\r\n\t\tvar max = Math.max( r, g, b );\r\n\t\tvar min = Math.min( r, g, b );\r\n\r\n\t\tvar hue, saturation;\r\n\t\tvar lightness = ( min + max ) / 2.0;\r\n\r\n\t\tif ( min === max ) {\r\n\r\n\t\t\thue = 0;\r\n\t\t\tsaturation = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar delta = max - min;\r\n\r\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\r\n\r\n\t\t\tswitch ( max ) {\r\n\r\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\r\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\r\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\r\n\r\n\t\t\t}\r\n\r\n\t\t\thue /= 6;\r\n\r\n\t\t}\r\n\r\n\t\thsl.h = hue;\r\n\t\thsl.s = saturation;\r\n\t\thsl.l = lightness;\r\n\r\n\t\treturn hsl;\r\n\r\n\t},\r\n\r\n\tgetStyle: function () {\r\n\r\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\r\n\r\n\t},\r\n\r\n\toffsetHSL: function ( h, s, l ) {\r\n\r\n\t\tvar hsl = this.getHSL();\r\n\r\n\t\thsl.h += h; hsl.s += s; hsl.l += l;\r\n\r\n\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( color ) {\r\n\r\n\t\tthis.r += color.r;\r\n\t\tthis.g += color.g;\r\n\t\tthis.b += color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddColors: function ( color1, color2 ) {\r\n\r\n\t\tthis.r = color1.r + color2.r;\r\n\t\tthis.g = color1.g + color2.g;\r\n\t\tthis.b = color1.b + color2.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.r += s;\r\n\t\tthis.g += s;\r\n\t\tthis.b += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( color ) {\r\n\r\n\t\tthis.r *= color.r;\r\n\t\tthis.g *= color.g;\r\n\t\tthis.b *= color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tthis.r *= s;\r\n\t\tthis.g *= s;\r\n\t\tthis.b *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerp: function ( color, alpha ) {\r\n\r\n\t\tthis.r += ( color.r - this.r ) * alpha;\r\n\t\tthis.g += ( color.g - this.g ) * alpha;\r\n\t\tthis.b += ( color.b - this.b ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( c ) {\r\n\r\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis.r = array[ 0 ];\r\n\t\tthis.g = array[ 1 ];\r\n\t\tthis.b = array[ 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.r;\r\n\t\tarray[ offset + 1 ] = this.g;\r\n\t\tarray[ offset + 2 ] = this.b;\r\n\r\n\t\treturn array;\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Color().setRGB( this.r, this.g, this.b );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\r\n'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\r\n'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\r\n'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\r\n'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\r\n'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\r\n'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\r\n'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\r\n'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\r\n'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\r\n'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\r\n'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\r\n'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\r\n'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\r\n'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\r\n'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\r\n'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\r\n'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\r\n'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\r\n'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\r\n'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\r\n'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\r\n'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\r\n'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\r\n\r\n// File:src/math/Quaternion.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Quaternion = function ( x, y, z, w ) {\r\n\r\n\tthis._x = x || 0;\r\n\tthis._y = y || 0;\r\n\tthis._z = z || 0;\r\n\tthis._w = ( w !== undefined ) ? w : 1;\r\n\r\n};\r\n\r\nTHREE.Quaternion.prototype = {\r\n\r\n\tconstructor: THREE.Quaternion,\r\n\r\n\t_x: 0,_y: 0, _z: 0, _w: 0,\r\n\r\n\tget x () {\r\n\r\n\t\treturn this._x;\r\n\r\n\t},\r\n\r\n\tset x ( value ) {\r\n\r\n\t\tthis._x = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget y () {\r\n\r\n\t\treturn this._y;\r\n\r\n\t},\r\n\r\n\tset y ( value ) {\r\n\r\n\t\tthis._y = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget z () {\r\n\r\n\t\treturn this._z;\r\n\r\n\t},\r\n\r\n\tset z ( value ) {\r\n\r\n\t\tthis._z = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget w () {\r\n\r\n\t\treturn this._w;\r\n\r\n\t},\r\n\r\n\tset w ( value ) {\r\n\r\n\t\tthis._w = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tset: function ( x, y, z, w ) {\r\n\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._w = w;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( quaternion ) {\r\n\r\n\t\tthis._x = quaternion.x;\r\n\t\tthis._y = quaternion.y;\r\n\t\tthis._z = quaternion.z;\r\n\t\tthis._w = quaternion.w;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromEuler: function ( euler, update ) {\r\n\r\n\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\r\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\t\t}\r\n\r\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\r\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\r\n\t\t//\tcontent/SpinCalc.m\r\n\r\n\t\tvar c1 = Math.cos( euler._x / 2 );\r\n\t\tvar c2 = Math.cos( euler._y / 2 );\r\n\t\tvar c3 = Math.cos( euler._z / 2 );\r\n\t\tvar s1 = Math.sin( euler._x / 2 );\r\n\t\tvar s2 = Math.sin( euler._y / 2 );\r\n\t\tvar s3 = Math.sin( euler._z / 2 );\r\n\r\n\t\tif ( euler.order === 'XYZ' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t} else if ( euler.order === 'YXZ' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t} else if ( euler.order === 'ZXY' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t} else if ( euler.order === 'ZYX' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t} else if ( euler.order === 'YZX' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t} else if ( euler.order === 'XZY' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t}\r\n\r\n\t\tif ( update !== false ) this.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromAxisAngle: function ( axis, angle ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\r\n\r\n\t\t// assumes axis is normalized\r\n\r\n\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\r\n\r\n\t\tthis._x = axis.x * s;\r\n\t\tthis._y = axis.y * s;\r\n\t\tthis._z = axis.z * s;\r\n\t\tthis._w = Math.cos( halfAngle );\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromRotationMatrix: function ( m ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tvar te = m.elements,\r\n\r\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\r\n\r\n\t\t\ttrace = m11 + m22 + m33,\r\n\t\t\ts;\r\n\r\n\t\tif ( trace > 0 ) {\r\n\r\n\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\r\n\r\n\t\t\tthis._w = 0.25 / s;\r\n\t\t\tthis._x = ( m32 - m23 ) * s;\r\n\t\t\tthis._y = ( m13 - m31 ) * s;\r\n\t\t\tthis._z = ( m21 - m12 ) * s;\r\n\r\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\r\n\r\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\r\n\r\n\t\t\tthis._w = ( m32 - m23 ) / s;\r\n\t\t\tthis._x = 0.25 * s;\r\n\t\t\tthis._y = ( m12 + m21 ) / s;\r\n\t\t\tthis._z = ( m13 + m31 ) / s;\r\n\r\n\t\t} else if ( m22 > m33 ) {\r\n\r\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\r\n\r\n\t\t\tthis._w = ( m13 - m31 ) / s;\r\n\t\t\tthis._x = ( m12 + m21 ) / s;\r\n\t\t\tthis._y = 0.25 * s;\r\n\t\t\tthis._z = ( m23 + m32 ) / s;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\r\n\r\n\t\t\tthis._w = ( m21 - m12 ) / s;\r\n\t\t\tthis._x = ( m13 + m31 ) / s;\r\n\t\t\tthis._y = ( m23 + m32 ) / s;\r\n\t\t\tthis._z = 0.25 * s;\r\n\r\n\t\t}\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromUnitVectors: function () {\r\n\r\n\t\t// http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final\r\n\r\n\t\t// assumes direction vectors vFrom and vTo are normalized\r\n\r\n\t\tvar v1, r;\r\n\r\n\t\tvar EPS = 0.000001;\r\n\r\n\t\treturn function ( vFrom, vTo ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tr = vFrom.dot( vTo ) + 1;\r\n\r\n\t\t\tif ( r < EPS ) {\r\n\r\n\t\t\t\tr = 0;\r\n\r\n\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\r\n\r\n\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tv1.crossVectors( vFrom, vTo );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._x = v1.x;\r\n\t\t\tthis._y = v1.y;\r\n\t\t\tthis._z = v1.z;\r\n\t\t\tthis._w = r;\r\n\r\n\t\t\tthis.normalize();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tinverse: function () {\r\n\r\n\t\tthis.conjugate().normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tconjugate: function () {\r\n\r\n\t\tthis._x *= - 1;\r\n\t\tthis._y *= - 1;\r\n\t\tthis._z *= - 1;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\tvar l = this.length();\r\n\r\n\t\tif ( l === 0 ) {\r\n\r\n\t\t\tthis._x = 0;\r\n\t\t\tthis._y = 0;\r\n\t\t\tthis._z = 0;\r\n\t\t\tthis._w = 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tl = 1 / l;\r\n\r\n\t\t\tthis._x = this._x * l;\r\n\t\t\tthis._y = this._y * l;\r\n\t\t\tthis._z = this._z * l;\r\n\t\t\tthis._w = this._w * l;\r\n\r\n\t\t}\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( q, p ) {\r\n\r\n\t\tif ( p !== undefined ) {\r\n\r\n\t\t\tTHREE.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\r\n\t\t\treturn this.multiplyQuaternions( q, p );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.multiplyQuaternions( this, q );\r\n\r\n\t},\r\n\r\n\tmultiplyQuaternions: function ( a, b ) {\r\n\r\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\r\n\r\n\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\r\n\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\r\n\r\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\r\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\r\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\r\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVector3: function ( vector ) {\r\n\r\n\t\tTHREE.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\r\n\t\treturn vector.applyQuaternion( this );\r\n\r\n\t},\r\n\r\n\tslerp: function ( qb, t ) {\r\n\r\n\t\tif ( t === 0 ) return this;\r\n\t\tif ( t === 1 ) return this.copy( qb );\r\n\r\n\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\r\n\r\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\r\n\r\n\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\r\n\r\n\t\tif ( cosHalfTheta < 0 ) {\r\n\r\n\t\t\tthis._w = - qb._w;\r\n\t\t\tthis._x = - qb._x;\r\n\t\t\tthis._y = - qb._y;\r\n\t\t\tthis._z = - qb._z;\r\n\r\n\t\t\tcosHalfTheta = - cosHalfTheta;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.copy( qb );\r\n\r\n\t\t}\r\n\r\n\t\tif ( cosHalfTheta >= 1.0 ) {\r\n\r\n\t\t\tthis._w = w;\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tvar halfTheta = Math.acos( cosHalfTheta );\r\n\t\tvar sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\r\n\r\n\t\tif ( Math.abs( sinHalfTheta ) < 0.001 ) {\r\n\r\n\t\t\tthis._w = 0.5 * ( w + this._w );\r\n\t\t\tthis._x = 0.5 * ( x + this._x );\r\n\t\t\tthis._y = 0.5 * ( y + this._y );\r\n\t\t\tthis._z = 0.5 * ( z + this._z );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\r\n\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\r\n\r\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\r\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\r\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\r\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( quaternion ) {\r\n\r\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis._x = array[ offset ];\r\n\t\tthis._y = array[ offset + 1 ];\r\n\t\tthis._z = array[ offset + 2 ];\r\n\t\tthis._w = array[ offset + 3 ];\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this._x;\r\n\t\tarray[ offset + 1 ] = this._y;\r\n\t\tarray[ offset + 2 ] = this._z;\r\n\t\tarray[ offset + 3 ] = this._w;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tonChange: function ( callback ) {\r\n\r\n\t\tthis.onChangeCallback = callback;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tonChangeCallback: function () {},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Quaternion( this._x, this._y, this._z, this._w );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Quaternion.slerp = function ( qa, qb, qm, t ) {\r\n\r\n\treturn qm.copy( qa ).slerp( qb, t );\r\n\r\n}\r\n\r\n// File:src/math/Vector2.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author egraether / http://egraether.com/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n */\r\n\r\nTHREE.Vector2 = function ( x, y ) {\r\n\r\n\tthis.x = x || 0;\r\n\tthis.y = y || 0;\r\n\r\n};\r\n\r\nTHREE.Vector2.prototype = {\r\n\r\n\tconstructor: THREE.Vector2,\r\n\r\n\tset: function ( x, y ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetX: function ( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponent: function ( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetComponent: function ( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcopy: function ( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tTHREE.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsub: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tTHREE.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubScalar: function ( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( v ) {\r\n\r\n\t\tthis.x *= v.x;\r\n\t\tthis.y *= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tthis.x *= s;\r\n\t\tthis.y *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivide: function ( v ) {\r\n\r\n\t\tthis.x /= v.x;\r\n\t\tthis.y /= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivideScalar: function ( scalar ) {\r\n\r\n\t\tif ( scalar !== 0 ) {\r\n\r\n\t\t\tvar invScalar = 1 / scalar;\r\n\r\n\t\t\tthis.x *= invScalar;\r\n\t\t\tthis.y *= invScalar;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmin: function ( v ) {\r\n\r\n\t\tif ( this.x > v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y > v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmax: function ( v ) {\r\n\r\n\t\tif ( this.x < v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclamp: function ( min, max ) {\r\n\r\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n\t\tif ( this.x < min.x ) {\r\n\r\n\t\t\tthis.x = min.x;\r\n\r\n\t\t} else if ( this.x > max.x ) {\r\n\r\n\t\t\tthis.x = max.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < min.y ) {\r\n\r\n\t\t\tthis.y = min.y;\r\n\r\n\t\t} else if ( this.y > max.y ) {\r\n\r\n\t\t\tthis.y = max.y;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\tclampScalar: ( function () {\r\n\r\n\t\tvar min, max;\r\n\r\n\t\treturn function ( minVal, maxVal ) {\r\n\r\n\t\t\tif ( min === undefined ) {\r\n\r\n\t\t\t\tmin = new THREE.Vector2();\r\n\t\t\t\tmax = new THREE.Vector2();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmin.set( minVal, minVal );\r\n\t\t\tmax.set( maxVal, maxVal );\r\n\r\n\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t};\r\n\r\n\t} )(),\r\n\r\n\tfloor: function () {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tceil: function () {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tround: function () {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\troundToZero: function () {\r\n\r\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\treturn this.divideScalar( this.length() );\r\n\r\n\t},\r\n\r\n\tdistanceTo: function ( v ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t},\r\n\r\n\tdistanceToSquared: function ( v ) {\r\n\r\n\t\tvar dx = this.x - v.x, dy = this.y - v.y;\r\n\t\treturn dx * dx + dy * dy;\r\n\r\n\t},\r\n\r\n\tsetLength: function ( l ) {\r\n\r\n\t\tvar oldLength = this.length();\r\n\r\n\t\tif ( oldLength !== 0 && l !== oldLength ) {\r\n\r\n\t\t\tthis.multiplyScalar( l / oldLength );\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerp: function ( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tindex = index * attribute.itemSize + offset;\r\n\r\n\t\tthis.x = attribute.array[ index ];\r\n\t\tthis.y = attribute.array[ index + 1 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Vector2( this.x, this.y );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Vector3.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author *kile / http://kile.stravaganza.org/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author egraether / http://egraether.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Vector3 = function ( x, y, z ) {\r\n\r\n\tthis.x = x || 0;\r\n\tthis.y = y || 0;\r\n\tthis.z = z || 0;\r\n\r\n};\r\n\r\nTHREE.Vector3.prototype = {\r\n\r\n\tconstructor: THREE.Vector3,\r\n\r\n\tset: function ( x, y, z ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetX: function ( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetZ: function ( z ) {\r\n\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponent: function ( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tcase 2: this.z = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetComponent: function ( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tcase 2: return this.z;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcopy: function ( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t\tthis.z = v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tTHREE.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\t\tthis.z += v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\t\tthis.z += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\t\tthis.z = a.z + b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsub: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tTHREE.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\t\tthis.z -= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\t\r\n\tsubScalar: function ( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\t\tthis.z -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\t\tthis.z = a.z - b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tTHREE.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\r\n\t\t\treturn this.multiplyVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x *= v.x;\r\n\t\tthis.y *= v.y;\r\n\t\tthis.z *= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( scalar ) {\r\n\r\n\t\tthis.x *= scalar;\r\n\t\tthis.y *= scalar;\r\n\t\tthis.z *= scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x * b.x;\r\n\t\tthis.y = a.y * b.y;\r\n\t\tthis.z = a.z * b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyEuler: function () {\r\n\r\n\t\tvar quaternion;\r\n\r\n\t\treturn function ( euler ) {\r\n\r\n\t\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\r\n\t\t\t\tTHREE.error( 'THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\r\n\r\n\t\t\tthis.applyQuaternion( quaternion.setFromEuler( euler ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyAxisAngle: function () {\r\n\r\n\t\tvar quaternion;\r\n\r\n\t\treturn function ( axis, angle ) {\r\n\r\n\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\r\n\r\n\t\t\tthis.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyMatrix3: function ( m ) {\r\n\r\n\t\tvar x = this.x;\r\n\t\tvar y = this.y;\r\n\t\tvar z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\r\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\r\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4 affine matrix\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ];\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ];\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyProjection: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4 projection matrix\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\t\tvar d = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] ); // perspective divide\r\n\r\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ] ) * d;\r\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ] ) * d;\r\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * d;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyQuaternion: function ( q ) {\r\n\r\n\t\tvar x = this.x;\r\n\t\tvar y = this.y;\r\n\t\tvar z = this.z;\r\n\r\n\t\tvar qx = q.x;\r\n\t\tvar qy = q.y;\r\n\t\tvar qz = q.z;\r\n\t\tvar qw = q.w;\r\n\r\n\t\t// calculate quat * vector\r\n\r\n\t\tvar ix =  qw * x + qy * z - qz * y;\r\n\t\tvar iy =  qw * y + qz * x - qx * z;\r\n\t\tvar iz =  qw * z + qx * y - qy * x;\r\n\t\tvar iw = - qx * x - qy * y - qz * z;\r\n\r\n\t\t// calculate result * inverse quat\r\n\r\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\r\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\r\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tproject: function () {\r\n\r\n\t\tvar matrix;\r\n\r\n\t\treturn function ( camera ) {\r\n\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\r\n\t\t\tmatrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );\r\n\t\t\treturn this.applyProjection( matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tunproject: function () {\r\n\r\n\t\tvar matrix;\r\n\r\n\t\treturn function ( camera ) {\r\n\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\r\n\t\t\tmatrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );\r\n\t\t\treturn this.applyProjection( matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttransformDirection: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4 affine matrix\r\n\t\t// vector interpreted as a direction\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z;\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z;\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\r\n\r\n\t\tthis.normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivide: function ( v ) {\r\n\r\n\t\tthis.x /= v.x;\r\n\t\tthis.y /= v.y;\r\n\t\tthis.z /= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivideScalar: function ( scalar ) {\r\n\r\n\t\tif ( scalar !== 0 ) {\r\n\r\n\t\t\tvar invScalar = 1 / scalar;\r\n\r\n\t\t\tthis.x *= invScalar;\r\n\t\t\tthis.y *= invScalar;\r\n\t\t\tthis.z *= invScalar;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\t\t\tthis.z = 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmin: function ( v ) {\r\n\r\n\t\tif ( this.x > v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y > v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z > v.z ) {\r\n\r\n\t\t\tthis.z = v.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmax: function ( v ) {\r\n\r\n\t\tif ( this.x < v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z < v.z ) {\r\n\r\n\t\t\tthis.z = v.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclamp: function ( min, max ) {\r\n\r\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n\t\tif ( this.x < min.x ) {\r\n\r\n\t\t\tthis.x = min.x;\r\n\r\n\t\t} else if ( this.x > max.x ) {\r\n\r\n\t\t\tthis.x = max.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < min.y ) {\r\n\r\n\t\t\tthis.y = min.y;\r\n\r\n\t\t} else if ( this.y > max.y ) {\r\n\r\n\t\t\tthis.y = max.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z < min.z ) {\r\n\r\n\t\t\tthis.z = min.z;\r\n\r\n\t\t} else if ( this.z > max.z ) {\r\n\r\n\t\t\tthis.z = max.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclampScalar: ( function () {\r\n\r\n\t\tvar min, max;\r\n\r\n\t\treturn function ( minVal, maxVal ) {\r\n\r\n\t\t\tif ( min === undefined ) {\r\n\r\n\t\t\t\tmin = new THREE.Vector3();\r\n\t\t\t\tmax = new THREE.Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmin.set( minVal, minVal, minVal );\r\n\t\t\tmax.set( maxVal, maxVal, maxVal );\r\n\r\n\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t};\r\n\r\n\t} )(),\r\n\r\n\tfloor: function () {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\t\tthis.z = Math.floor( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tceil: function () {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\t\tthis.z = Math.ceil( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tround: function () {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\t\tthis.z = Math.round( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\troundToZero: function () {\r\n\r\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\t\tthis.z = - this.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\r\n\r\n\t},\r\n\r\n\tlengthManhattan: function () {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\treturn this.divideScalar( this.length() );\r\n\r\n\t},\r\n\r\n\tsetLength: function ( l ) {\r\n\r\n\t\tvar oldLength = this.length();\r\n\r\n\t\tif ( oldLength !== 0 && l !== oldLength  ) {\r\n\r\n\t\t\tthis.multiplyScalar( l / oldLength );\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerp: function ( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcross: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tTHREE.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\r\n\t\t\treturn this.crossVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tthis.x = y * v.z - z * v.y;\r\n\t\tthis.y = z * v.x - x * v.z;\r\n\t\tthis.z = x * v.y - y * v.x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcrossVectors: function ( a, b ) {\r\n\r\n\t\tvar ax = a.x, ay = a.y, az = a.z;\r\n\t\tvar bx = b.x, by = b.y, bz = b.z;\r\n\r\n\t\tthis.x = ay * bz - az * by;\r\n\t\tthis.y = az * bx - ax * bz;\r\n\t\tthis.z = ax * by - ay * bx;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tprojectOnVector: function () {\r\n\r\n\t\tvar v1, dot;\r\n\r\n\t\treturn function ( vector ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tv1.copy( vector ).normalize();\r\n\r\n\t\t\tdot = this.dot( v1 );\r\n\r\n\t\t\treturn this.copy( v1 ).multiplyScalar( dot );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tprojectOnPlane: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function ( planeNormal ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tv1.copy( this ).projectOnVector( planeNormal );\r\n\r\n\t\t\treturn this.sub( v1 );\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\treflect: function () {\r\n\r\n\t\t// reflect incident vector off plane orthogonal to normal\r\n\t\t// normal is assumed to have unit length\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function ( normal ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tangleTo: function ( v ) {\r\n\r\n\t\tvar theta = this.dot( v ) / ( this.length() * v.length() );\r\n\r\n\t\t// clamp, to handle numerical problems\r\n\r\n\t\treturn Math.acos( THREE.Math.clamp( theta, - 1, 1 ) );\r\n\r\n\t},\r\n\r\n\tdistanceTo: function ( v ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t},\r\n\r\n\tdistanceToSquared: function ( v ) {\r\n\r\n\t\tvar dx = this.x - v.x;\r\n\t\tvar dy = this.y - v.y;\r\n\t\tvar dz = this.z - v.z;\r\n\r\n\t\treturn dx * dx + dy * dy + dz * dz;\r\n\r\n\t},\r\n\r\n\tsetEulerFromRotationMatrix: function ( m, order ) {\r\n\r\n\t\tTHREE.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\r\n\r\n\t},\r\n\r\n\tsetEulerFromQuaternion: function ( q, order ) {\r\n\r\n\t\tTHREE.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\r\n\r\n\t},\r\n\r\n\tgetPositionFromMatrix: function ( m ) {\r\n\r\n\t\tTHREE.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\r\n\r\n\t\treturn this.setFromMatrixPosition( m );\r\n\r\n\t},\r\n\r\n\tgetScaleFromMatrix: function ( m ) {\r\n\r\n\t\tTHREE.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\r\n\r\n\t\treturn this.setFromMatrixScale( m );\r\n\t},\r\n\r\n\tgetColumnFromMatrix: function ( index, matrix ) {\r\n\r\n\t\tTHREE.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\r\n\r\n\t\treturn this.setFromMatrixColumn( index, matrix );\r\n\r\n\t},\r\n\r\n\tsetFromMatrixPosition: function ( m ) {\r\n\r\n\t\tthis.x = m.elements[ 12 ];\r\n\t\tthis.y = m.elements[ 13 ];\r\n\t\tthis.z = m.elements[ 14 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromMatrixScale: function ( m ) {\r\n\r\n\t\tvar sx = this.set( m.elements[ 0 ], m.elements[ 1 ], m.elements[  2 ] ).length();\r\n\t\tvar sy = this.set( m.elements[ 4 ], m.elements[ 5 ], m.elements[  6 ] ).length();\r\n\t\tvar sz = this.set( m.elements[ 8 ], m.elements[ 9 ], m.elements[ 10 ] ).length();\r\n\r\n\t\tthis.x = sx;\r\n\t\tthis.y = sy;\r\n\t\tthis.z = sz;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\tsetFromMatrixColumn: function ( index, matrix ) {\r\n\t\t\r\n\t\tvar offset = index * 4;\r\n\r\n\t\tvar me = matrix.elements;\r\n\r\n\t\tthis.x = me[ offset ];\r\n\t\tthis.y = me[ offset + 1 ];\r\n\t\tthis.z = me[ offset + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\t\tthis.z = array[ offset + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\t\tarray[ offset + 2 ] = this.z;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tindex = index * attribute.itemSize + offset;\r\n\r\n\t\tthis.x = attribute.array[ index ];\r\n\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\tthis.z = attribute.array[ index + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Vector3( this.x, this.y, this.z );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Vector4.js\r\n\r\n/**\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author egraether / http://egraether.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Vector4 = function ( x, y, z, w ) {\r\n\r\n\tthis.x = x || 0;\r\n\tthis.y = y || 0;\r\n\tthis.z = z || 0;\r\n\tthis.w = ( w !== undefined ) ? w : 1;\r\n\r\n};\r\n\r\nTHREE.Vector4.prototype = {\r\n\r\n\tconstructor: THREE.Vector4,\r\n\r\n\tset: function ( x, y, z, w ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t\tthis.w = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetX: function ( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetZ: function ( z ) {\r\n\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetW: function ( w ) {\r\n\r\n\t\tthis.w = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponent: function ( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tcase 2: this.z = value; break;\r\n\t\t\tcase 3: this.w = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetComponent: function ( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tcase 2: return this.z;\r\n\t\t\tcase 3: return this.w;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcopy: function ( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t\tthis.z = v.z;\r\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tTHREE.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\t\tthis.z += v.z;\r\n\t\tthis.w += v.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\t\tthis.z += s;\r\n\t\tthis.w += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\t\tthis.z = a.z + b.z;\r\n\t\tthis.w = a.w + b.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsub: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tTHREE.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\t\tthis.z -= v.z;\r\n\t\tthis.w -= v.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubScalar: function ( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\t\tthis.z -= s;\r\n\t\tthis.w -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\t\tthis.z = a.z - b.z;\r\n\t\tthis.w = a.w - b.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( scalar ) {\r\n\r\n\t\tthis.x *= scalar;\r\n\t\tthis.y *= scalar;\r\n\t\tthis.z *= scalar;\r\n\t\tthis.w *= scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( m ) {\r\n\r\n\t\tvar x = this.x;\r\n\t\tvar y = this.y;\r\n\t\tvar z = this.z;\r\n\t\tvar w = this.w;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\r\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivideScalar: function ( scalar ) {\r\n\r\n\t\tif ( scalar !== 0 ) {\r\n\r\n\t\t\tvar invScalar = 1 / scalar;\r\n\r\n\t\t\tthis.x *= invScalar;\r\n\t\t\tthis.y *= invScalar;\r\n\t\t\tthis.z *= invScalar;\r\n\t\t\tthis.w *= invScalar;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\t\t\tthis.z = 0;\r\n\t\t\tthis.w = 1;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetAxisAngleFromQuaternion: function ( q ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\r\n\r\n\t\t// q is assumed to be normalized\r\n\r\n\t\tthis.w = 2 * Math.acos( q.w );\r\n\r\n\t\tvar s = Math.sqrt( 1 - q.w * q.w );\r\n\r\n\t\tif ( s < 0.0001 ) {\r\n\r\n\t\t\t this.x = 1;\r\n\t\t\t this.y = 0;\r\n\t\t\t this.z = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t this.x = q.x / s;\r\n\t\t\t this.y = q.y / s;\r\n\t\t\t this.z = q.z / s;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetAxisAngleFromRotationMatrix: function ( m ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tvar angle, x, y, z,\t\t// variables for result\r\n\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\r\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\r\n\r\n\t\t\tte = m.elements,\r\n\r\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\r\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon )\r\n\t\t   && ( Math.abs( m13 - m31 ) < epsilon )\r\n\t\t   && ( Math.abs( m23 - m32 ) < epsilon ) ) {\r\n\r\n\t\t\t// singularity found\r\n\t\t\t// first check for identity matrix which must have +1 for all terms\r\n\t\t\t// in leading diagonal and zero in other terms\r\n\r\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 )\r\n\t\t\t   && ( Math.abs( m13 + m31 ) < epsilon2 )\r\n\t\t\t   && ( Math.abs( m23 + m32 ) < epsilon2 )\r\n\t\t\t   && ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\r\n\r\n\t\t\t\t// this singularity is identity matrix so angle = 0\r\n\r\n\t\t\t\tthis.set( 1, 0, 0, 0 );\r\n\r\n\t\t\t\treturn this; // zero angle, arbitrary axis\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// otherwise this singularity is angle = 180\r\n\r\n\t\t\tangle = Math.PI;\r\n\r\n\t\t\tvar xx = ( m11 + 1 ) / 2;\r\n\t\t\tvar yy = ( m22 + 1 ) / 2;\r\n\t\t\tvar zz = ( m33 + 1 ) / 2;\r\n\t\t\tvar xy = ( m12 + m21 ) / 4;\r\n\t\t\tvar xz = ( m13 + m31 ) / 4;\r\n\t\t\tvar yz = ( m23 + m32 ) / 4;\r\n\r\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) { // m11 is the largest diagonal term\r\n\r\n\t\t\t\tif ( xx < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0;\r\n\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\tz = 0.707106781;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tx = Math.sqrt( xx );\r\n\t\t\t\t\ty = xy / x;\r\n\t\t\t\t\tz = xz / x;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( yy > zz ) { // m22 is the largest diagonal term\r\n\r\n\t\t\t\tif ( yy < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\ty = 0;\r\n\t\t\t\t\tz = 0.707106781;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ty = Math.sqrt( yy );\r\n\t\t\t\t\tx = xy / y;\r\n\t\t\t\t\tz = yz / y;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else { // m33 is the largest diagonal term so base result on this\r\n\r\n\t\t\t\tif ( zz < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\tz = 0;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tz = Math.sqrt( zz );\r\n\t\t\t\t\tx = xz / z;\r\n\t\t\t\t\ty = yz / z;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.set( x, y, z, angle );\r\n\r\n\t\t\treturn this; // return 180 deg rotation\r\n\r\n\t\t}\r\n\r\n\t\t// as we have reached here there are no singularities so we can handle normally\r\n\r\n\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 )\r\n\t\t\t\t\t\t  + ( m13 - m31 ) * ( m13 - m31 )\r\n\t\t\t\t\t\t  + ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\r\n\r\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\r\n\r\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\r\n\t\t// caught by singularity test above, but I've left it in just in case\r\n\r\n\t\tthis.x = ( m32 - m23 ) / s;\r\n\t\tthis.y = ( m13 - m31 ) / s;\r\n\t\tthis.z = ( m21 - m12 ) / s;\r\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmin: function ( v ) {\r\n\r\n\t\tif ( this.x > v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y > v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z > v.z ) {\r\n\r\n\t\t\tthis.z = v.z;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.w > v.w ) {\r\n\r\n\t\t\tthis.w = v.w;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmax: function ( v ) {\r\n\r\n\t\tif ( this.x < v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z < v.z ) {\r\n\r\n\t\t\tthis.z = v.z;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.w < v.w ) {\r\n\r\n\t\t\tthis.w = v.w;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclamp: function ( min, max ) {\r\n\r\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n\t\tif ( this.x < min.x ) {\r\n\r\n\t\t\tthis.x = min.x;\r\n\r\n\t\t} else if ( this.x > max.x ) {\r\n\r\n\t\t\tthis.x = max.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < min.y ) {\r\n\r\n\t\t\tthis.y = min.y;\r\n\r\n\t\t} else if ( this.y > max.y ) {\r\n\r\n\t\t\tthis.y = max.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z < min.z ) {\r\n\r\n\t\t\tthis.z = min.z;\r\n\r\n\t\t} else if ( this.z > max.z ) {\r\n\r\n\t\t\tthis.z = max.z;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.w < min.w ) {\r\n\r\n\t\t\tthis.w = min.w;\r\n\r\n\t\t} else if ( this.w > max.w ) {\r\n\r\n\t\t\tthis.w = max.w;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclampScalar: ( function () {\r\n\r\n\t\tvar min, max;\r\n\r\n\t\treturn function ( minVal, maxVal ) {\r\n\r\n\t\t\tif ( min === undefined ) {\r\n\r\n\t\t\t\tmin = new THREE.Vector4();\r\n\t\t\t\tmax = new THREE.Vector4();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmin.set( minVal, minVal, minVal, minVal );\r\n\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\r\n\r\n\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t};\r\n\r\n\t} )(),\r\n\r\n  floor: function () {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\t\tthis.z = Math.floor( this.z );\r\n\t\tthis.w = Math.floor( this.w );\r\n\r\n\t\treturn this;\r\n\r\n  },\r\n\r\n  ceil: function () {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\t\tthis.z = Math.ceil( this.z );\r\n\t\tthis.w = Math.ceil( this.w );\r\n\r\n\t\treturn this;\r\n\r\n  },\r\n\r\n  round: function () {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\t\tthis.z = Math.round( this.z );\r\n\t\tthis.w = Math.round( this.w );\r\n\r\n\t\treturn this;\r\n\r\n  },\r\n\r\n  roundToZero: function () {\r\n\r\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\r\n\r\n\t\treturn this;\r\n\r\n  },\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\t\tthis.z = - this.z;\r\n\t\tthis.w = - this.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\r\n\r\n\t},\r\n\r\n\tlengthManhattan: function () {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\treturn this.divideScalar( this.length() );\r\n\r\n\t},\r\n\r\n\tsetLength: function ( l ) {\r\n\r\n\t\tvar oldLength = this.length();\r\n\r\n\t\tif ( oldLength !== 0 && l !== oldLength ) {\r\n\r\n\t\t\tthis.multiplyScalar( l / oldLength );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerp: function ( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\t\tthis.w += ( v.w - this.w ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\t\tthis.z = array[ offset + 2 ];\r\n\t\tthis.w = array[ offset + 3 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\t\tarray[ offset + 2 ] = this.z;\r\n\t\tarray[ offset + 3 ] = this.w;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tindex = index * attribute.itemSize + offset;\r\n\r\n\t\tthis.x = attribute.array[ index ];\r\n\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\tthis.z = attribute.array[ index + 2 ];\r\n\t\tthis.w = attribute.array[ index + 3 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Vector4( this.x, this.y, this.z, this.w );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Euler.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Euler = function ( x, y, z, order ) {\r\n\r\n\tthis._x = x || 0;\r\n\tthis._y = y || 0;\r\n\tthis._z = z || 0;\r\n\tthis._order = order || THREE.Euler.DefaultOrder;\r\n\r\n};\r\n\r\nTHREE.Euler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\r\n\r\nTHREE.Euler.DefaultOrder = 'XYZ';\r\n\r\nTHREE.Euler.prototype = {\r\n\r\n\tconstructor: THREE.Euler,\r\n\r\n\t_x: 0, _y: 0, _z: 0, _order: THREE.Euler.DefaultOrder,\r\n\r\n\tget x () {\r\n\r\n\t\treturn this._x;\r\n\r\n\t},\r\n\r\n\tset x ( value ) {\r\n\r\n\t\tthis._x = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget y () {\r\n\r\n\t\treturn this._y;\r\n\r\n\t},\r\n\r\n\tset y ( value ) {\r\n\r\n\t\tthis._y = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget z () {\r\n\r\n\t\treturn this._z;\r\n\r\n\t},\r\n\r\n\tset z ( value ) {\r\n\r\n\t\tthis._z = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget order () {\r\n\r\n\t\treturn this._order;\r\n\r\n\t},\r\n\r\n\tset order ( value ) {\r\n\r\n\t\tthis._order = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tset: function ( x, y, z, order ) {\r\n\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._order = order || this._order;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( euler ) {\r\n\r\n\t\tthis._x = euler._x;\r\n\t\tthis._y = euler._y;\r\n\t\tthis._z = euler._z;\r\n\t\tthis._order = euler._order;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromRotationMatrix: function ( m, order, update ) {\r\n\r\n\t\tvar clamp = THREE.Math.clamp;\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tvar te = m.elements;\r\n\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\r\n\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\r\n\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\r\n\t\torder = order || this._order;\r\n\r\n\t\tif ( order === 'XYZ' ) {\r\n\r\n\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\tthis._z = Math.atan2( - m12, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\tthis._z = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'YXZ' ) {\r\n\r\n\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\t\t\t\tthis._z = Math.atan2( m21, m22 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\t\t\t\tthis._z = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'ZXY' ) {\r\n\r\n\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._y = Math.atan2( - m31, m33 );\r\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._y = 0;\r\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'ZYX' ) {\r\n\r\n\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( m32, m33 );\r\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'YZX' ) {\r\n\r\n\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( - m23, m22 );\r\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'XZY' ) {\r\n\r\n\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\tthis._y = Math.atan2( m13, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\tthis._y = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tTHREE.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order )\r\n\r\n\t\t}\r\n\r\n\t\tthis._order = order;\r\n\r\n\t\tif ( update !== false ) this.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromQuaternion: function () {\r\n\r\n\t\tvar matrix;\r\n\r\n\t\treturn function ( q, order, update ) {\r\n\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\t\t\tmatrix.makeRotationFromQuaternion( q );\r\n\t\t\tthis.setFromRotationMatrix( matrix, order, update );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetFromVector3: function ( v, order ) {\r\n\r\n\t\treturn this.set( v.x, v.y, v.z, order || this._order );\r\n\r\n\t},\r\n\r\n\treorder: function () {\r\n\r\n\t\t// WARNING: this discards revolution information -bhouston\r\n\r\n\t\tvar q = new THREE.Quaternion();\r\n\r\n\t\treturn function ( newOrder ) {\r\n\r\n\t\t\tq.setFromEuler( this );\r\n\t\t\tthis.setFromQuaternion( q, newOrder );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tequals: function ( euler ) {\r\n\r\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis._x = array[ 0 ];\r\n\t\tthis._y = array[ 1 ];\r\n\t\tthis._z = array[ 2 ];\r\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this._x;\r\n\t\tarray[ offset + 1 ] = this._y;\r\n\t\tarray[ offset + 2 ] = this._z;\r\n\t\tarray[ offset + 3 ] = this._order;\r\n\r\n\t\treturn array;\r\n\t},\r\n\r\n\ttoVector3: function ( optionalResult ) {\r\n\r\n\t\tif ( optionalResult ) {\r\n\r\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn new THREE.Vector3( this._x, this._y, this._z );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tonChange: function ( callback ) {\r\n\r\n\t\tthis.onChangeCallback = callback;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tonChangeCallback: function () {},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Euler( this._x, this._y, this._z, this._order );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Line3.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Line3 = function ( start, end ) {\r\n\r\n\tthis.start = ( start !== undefined ) ? start : new THREE.Vector3();\r\n\tthis.end = ( end !== undefined ) ? end : new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Line3.prototype = {\r\n\r\n\tconstructor: THREE.Line3,\r\n\r\n\tset: function ( start, end ) {\r\n\r\n\t\tthis.start.copy( start );\r\n\t\tthis.end.copy( end );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( line ) {\r\n\r\n\t\tthis.start.copy( line.start );\r\n\t\tthis.end.copy( line.end );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcenter: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\r\n\r\n\t},\r\n\r\n\tdelta: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.subVectors( this.end, this.start );\r\n\r\n\t},\r\n\r\n\tdistanceSq: function () {\r\n\r\n\t\treturn this.start.distanceToSquared( this.end );\r\n\r\n\t},\r\n\r\n\tdistance: function () {\r\n\r\n\t\treturn this.start.distanceTo( this.end );\r\n\r\n\t},\r\n\r\n\tat: function ( t, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\r\n\t},\r\n\r\n\tclosestPointToPointParameter: function () {\r\n\r\n\t\tvar startP = new THREE.Vector3();\r\n\t\tvar startEnd = new THREE.Vector3();\r\n\r\n\t\treturn function ( point, clampToLine ) {\r\n\r\n\t\t\tstartP.subVectors( point, this.start );\r\n\t\t\tstartEnd.subVectors( this.end, this.start );\r\n\r\n\t\t\tvar startEnd2 = startEnd.dot( startEnd );\r\n\t\t\tvar startEnd_startP = startEnd.dot( startP );\r\n\r\n\t\t\tvar t = startEnd_startP / startEnd2;\r\n\r\n\t\t\tif ( clampToLine ) {\r\n\r\n\t\t\t\tt = THREE.Math.clamp( t, 0, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn t;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclosestPointToPoint: function ( point, clampToLine, optionalTarget ) {\r\n\r\n\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( matrix ) {\r\n\r\n\t\tthis.start.applyMatrix4( matrix );\r\n\t\tthis.end.applyMatrix4( matrix );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( line ) {\r\n\r\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Line3().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Box2.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Box2 = function ( min, max ) {\r\n\r\n\tthis.min = ( min !== undefined ) ? min : new THREE.Vector2( Infinity, Infinity );\r\n\tthis.max = ( max !== undefined ) ? max : new THREE.Vector2( - Infinity, - Infinity );\r\n\r\n};\r\n\r\nTHREE.Box2.prototype = {\r\n\r\n\tconstructor: THREE.Box2,\r\n\r\n\tset: function ( min, max ) {\r\n\r\n\t\tthis.min.copy( min );\r\n\t\tthis.max.copy( max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPoints: function ( points ) {\r\n\r\n\t\tthis.makeEmpty();\r\n\r\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.expandByPoint( points[ i ] )\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromCenterAndSize: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector2();\r\n\r\n\t\treturn function ( center, size ) {\r\n\r\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\tthis.max.copy( center ).add( halfSize );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tcopy: function ( box ) {\r\n\r\n\t\tthis.min.copy( box.min );\r\n\t\tthis.max.copy( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeEmpty: function () {\r\n\r\n\t\tthis.min.x = this.min.y = Infinity;\r\n\t\tthis.max.x = this.max.y = - Infinity;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tempty: function () {\r\n\r\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\r\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\r\n\r\n\t},\r\n\r\n\tcenter: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\r\n\t},\r\n\r\n\tsize: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\treturn result.subVectors( this.max, this.min );\r\n\r\n\t},\r\n\r\n\texpandByPoint: function ( point ) {\r\n\r\n\t\tthis.min.min( point );\r\n\t\tthis.max.max( point );\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\texpandByVector: function ( vector ) {\r\n\r\n\t\tthis.min.sub( vector );\r\n\t\tthis.max.add( vector );\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\texpandByScalar: function ( scalar ) {\r\n\r\n\t\tthis.min.addScalar( - scalar );\r\n\t\tthis.max.addScalar( scalar );\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\tif ( point.x < this.min.x || point.x > this.max.x ||\r\n\t\t     point.y < this.min.y || point.y > this.max.y ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tcontainsBox: function ( box ) {\r\n\r\n\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n\t\t     ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tgetParameter: function ( point, optionalTarget ) {\r\n\r\n\t\t// This can potentially have a divide by zero if the box\r\n\t\t// has a size dimension of 0.\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\r\n\t\treturn result.set(\r\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\r\n\t\t);\r\n\r\n\t},\r\n\r\n\tisIntersectionBox: function ( box ) {\r\n\r\n\t\t// using 6 splitting planes to rule out intersections.\r\n\r\n\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t     box.max.y < this.min.y || box.min.y > this.max.y ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tclampPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\treturn result.copy( point ).clamp( this.min, this.max );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector2();\r\n\r\n\t\treturn function ( point ) {\r\n\r\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\treturn clampedPoint.sub( point ).length();\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersect: function ( box ) {\r\n\r\n\t\tthis.min.max( box.min );\r\n\t\tthis.max.min( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tunion: function ( box ) {\r\n\r\n\t\tthis.min.min( box.min );\r\n\t\tthis.max.max( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.min.add( offset );\r\n\t\tthis.max.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( box ) {\r\n\r\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Box2().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Box3.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Box3 = function ( min, max ) {\r\n\r\n\tthis.min = ( min !== undefined ) ? min : new THREE.Vector3( Infinity, Infinity, Infinity );\r\n\tthis.max = ( max !== undefined ) ? max : new THREE.Vector3( - Infinity, - Infinity, - Infinity );\r\n\r\n};\r\n\r\nTHREE.Box3.prototype = {\r\n\r\n\tconstructor: THREE.Box3,\r\n\r\n\tset: function ( min, max ) {\r\n\r\n\t\tthis.min.copy( min );\r\n\t\tthis.max.copy( max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPoints: function ( points ) {\r\n\r\n\t\tthis.makeEmpty();\r\n\r\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.expandByPoint( points[ i ] )\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromCenterAndSize: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( center, size ) {\r\n\r\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\r\n\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\tthis.max.copy( center ).add( halfSize );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetFromObject: function () {\r\n\r\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\r\n\t\t// accounting for both the object's, and childrens', world transforms\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( object ) {\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tobject.updateMatrixWorld( true );\r\n\r\n\t\t\tthis.makeEmpty();\r\n\r\n\t\t\tobject.traverse( function ( node ) {\r\n\r\n\t\t\t\tvar geometry = node.geometry;\r\n\r\n\t\t\t\tif ( geometry !== undefined ) {\r\n\r\n\t\t\t\t\tif ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\t\t\t\tvar vertices = geometry.vertices;\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tv1.copy( vertices[ i ] );\r\n\r\n\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\r\n\r\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( geometry instanceof THREE.BufferGeometry && geometry.attributes[ 'position' ] !== undefined ) {\r\n\r\n\t\t\t\t\t\tvar positions = geometry.attributes[ 'position' ].array;\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\t\t\tv1.set( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\r\n\r\n\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\r\n\r\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tcopy: function ( box ) {\r\n\r\n\t\tthis.min.copy( box.min );\r\n\t\tthis.max.copy( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeEmpty: function () {\r\n\r\n\t\tthis.min.x = this.min.y = this.min.z = Infinity;\r\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tempty: function () {\r\n\r\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\r\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\r\n\r\n\t},\r\n\r\n\tcenter: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\r\n\t},\r\n\r\n\tsize: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.subVectors( this.max, this.min );\r\n\r\n\t},\r\n\r\n\texpandByPoint: function ( point ) {\r\n\r\n\t\tthis.min.min( point );\r\n\t\tthis.max.max( point );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByVector: function ( vector ) {\r\n\r\n\t\tthis.min.sub( vector );\r\n\t\tthis.max.add( vector );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByScalar: function ( scalar ) {\r\n\r\n\t\tthis.min.addScalar( - scalar );\r\n\t\tthis.max.addScalar( scalar );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\tif ( point.x < this.min.x || point.x > this.max.x ||\r\n\t\t     point.y < this.min.y || point.y > this.max.y ||\r\n\t\t     point.z < this.min.z || point.z > this.max.z ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tcontainsBox: function ( box ) {\r\n\r\n\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n\t\t\t ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) &&\r\n\t\t\t ( this.min.z <= box.min.z ) && ( box.max.z <= this.max.z ) ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tgetParameter: function ( point, optionalTarget ) {\r\n\r\n\t\t// This can potentially have a divide by zero if the box\r\n\t\t// has a size dimension of 0.\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn result.set(\r\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\r\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\r\n\t\t);\r\n\r\n\t},\r\n\r\n\tisIntersectionBox: function ( box ) {\r\n\r\n\t\t// using 6 splitting planes to rule out intersections.\r\n\r\n\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t     box.max.y < this.min.y || box.min.y > this.max.y ||\r\n\t\t     box.max.z < this.min.z || box.min.z > this.max.z ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tclampPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.copy( point ).clamp( this.min, this.max );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( point ) {\r\n\r\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\treturn clampedPoint.sub( point ).length();\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgetBoundingSphere: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Sphere();\r\n\r\n\t\t\tresult.center = this.center();\r\n\t\t\tresult.radius = this.size( v1 ).length() * 0.5;\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersect: function ( box ) {\r\n\r\n\t\tthis.min.max( box.min );\r\n\t\tthis.max.min( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tunion: function ( box ) {\r\n\r\n\t\tthis.min.min( box.min );\r\n\t\tthis.max.max( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function () {\r\n\r\n\t\tvar points = [\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3()\r\n\t\t];\r\n\r\n\t\treturn function ( matrix ) {\r\n\r\n\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\r\n\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\r\n\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\r\n\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\r\n\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\r\n\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\r\n\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\r\n\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\r\n\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix );  // 111\r\n\r\n\t\t\tthis.makeEmpty();\r\n\t\t\tthis.setFromPoints( points );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.min.add( offset );\r\n\t\tthis.max.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( box ) {\r\n\r\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Box3().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Matrix3.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Matrix3 = function () {\r\n\r\n\tthis.elements = new Float32Array( [\r\n\r\n\t\t1, 0, 0,\r\n\t\t0, 1, 0,\r\n\t\t0, 0, 1\r\n\r\n\t] );\r\n\r\n\tif ( arguments.length > 0 ) {\r\n\r\n\t\tTHREE.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Matrix3.prototype = {\r\n\r\n\tconstructor: THREE.Matrix3,\r\n\r\n\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] = n11; te[ 3 ] = n12; te[ 6 ] = n13;\r\n\t\tte[ 1 ] = n21; te[ 4 ] = n22; te[ 7 ] = n23;\r\n\t\tte[ 2 ] = n31; te[ 5 ] = n32; te[ 8 ] = n33;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tidentity: function () {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0,\r\n\t\t\t0, 1, 0,\r\n\t\t\t0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( m ) {\r\n\r\n\t\tvar me = m.elements;\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ],\r\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ],\r\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ]\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVector3: function ( vector ) {\r\n\r\n\t\tTHREE.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\r\n\t\treturn vector.applyMatrix3( this );\r\n\r\n\t},\r\n\r\n\tmultiplyVector3Array: function ( a ) {\r\n\r\n\t\tTHREE.warn( 'THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\r\n\t\treturn this.applyToVector3Array( a );\r\n\r\n\t},\r\n\r\n\tapplyToVector3Array: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( array, offset, length ) {\r\n\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = array.length;\r\n\r\n\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\r\n\r\n\t\t\t\tv1.x = array[ j ];\r\n\t\t\t\tv1.y = array[ j + 1 ];\r\n\t\t\t\tv1.z = array[ j + 2 ];\r\n\r\n\t\t\t\tv1.applyMatrix3( this );\r\n\r\n\t\t\t\tarray[ j ]     = v1.x;\r\n\t\t\t\tarray[ j + 1 ] = v1.y;\r\n\t\t\t\tarray[ j + 2 ] = v1.z;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\r\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\r\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdeterminant: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\r\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\r\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\r\n\r\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\r\n\r\n\t},\r\n\r\n\tgetInverse: function ( matrix, throwOnInvertible ) {\r\n\r\n\t\t// input: THREE.Matrix4\r\n\t\t// ( based on http://code.google.com/p/webgl-mjs/ )\r\n\r\n\t\tvar me = matrix.elements;\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] =   me[ 10 ] * me[ 5 ] - me[ 6 ] * me[ 9 ];\r\n\t\tte[ 1 ] = - me[ 10 ] * me[ 1 ] + me[ 2 ] * me[ 9 ];\r\n\t\tte[ 2 ] =   me[ 6 ] * me[ 1 ] - me[ 2 ] * me[ 5 ];\r\n\t\tte[ 3 ] = - me[ 10 ] * me[ 4 ] + me[ 6 ] * me[ 8 ];\r\n\t\tte[ 4 ] =   me[ 10 ] * me[ 0 ] - me[ 2 ] * me[ 8 ];\r\n\t\tte[ 5 ] = - me[ 6 ] * me[ 0 ] + me[ 2 ] * me[ 4 ];\r\n\t\tte[ 6 ] =   me[ 9 ] * me[ 4 ] - me[ 5 ] * me[ 8 ];\r\n\t\tte[ 7 ] = - me[ 9 ] * me[ 0 ] + me[ 1 ] * me[ 8 ];\r\n\t\tte[ 8 ] =   me[ 5 ] * me[ 0 ] - me[ 1 ] * me[ 4 ];\r\n\r\n\t\tvar det = me[ 0 ] * te[ 0 ] + me[ 1 ] * te[ 3 ] + me[ 2 ] * te[ 6 ];\r\n\r\n\t\t// no inverse\r\n\r\n\t\tif ( det === 0 ) {\r\n\r\n\t\t\tvar msg = \"Matrix3.getInverse(): can't invert matrix, determinant is 0\";\r\n\r\n\t\t\tif ( throwOnInvertible || false ) {\r\n\r\n\t\t\t\tthrow new Error( msg );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tTHREE.warn( msg );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.identity();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tthis.multiplyScalar( 1.0 / det );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranspose: function () {\r\n\r\n\t\tvar tmp, m = this.elements;\r\n\r\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\r\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\r\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tflattenToArrayOffset: function ( array, offset ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tarray[ offset     ] = te[ 0 ];\r\n\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\r\n\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\r\n\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\t\tarray[ offset + 8 ]  = te[ 8 ];\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tgetNormalMatrix: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4\r\n\r\n\t\tthis.getInverse( m ).transpose();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttransposeIntoArray: function ( r ) {\r\n\r\n\t\tvar m = this.elements;\r\n\r\n\t\tr[ 0 ] = m[ 0 ];\r\n\t\tr[ 1 ] = m[ 3 ];\r\n\t\tr[ 2 ] = m[ 6 ];\r\n\t\tr[ 3 ] = m[ 1 ];\r\n\t\tr[ 4 ] = m[ 4 ];\r\n\t\tr[ 5 ] = m[ 7 ];\r\n\t\tr[ 6 ] = m[ 2 ];\r\n\t\tr[ 7 ] = m[ 5 ];\r\n\t\tr[ 8 ] = m[ 8 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis.elements.set( array );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\treturn [\r\n\t\t\tte[ 0 ], te[ 1 ], te[ 2 ],\r\n\t\t\tte[ 3 ], te[ 4 ], te[ 5 ],\r\n\t\t\tte[ 6 ], te[ 7 ], te[ 8 ]\r\n\t\t];\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Matrix3().fromArray( this.elements );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Matrix4.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author jordi_ros / http://plattsoft.com\r\n * @author D1plo1d / http://github.com/D1plo1d\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author timknip / http://www.floorplanner.com/\r\n * @author bhouston / http://exocortex.com\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Matrix4 = function () {\r\n\r\n\tthis.elements = new Float32Array( [\r\n\r\n\t\t1, 0, 0, 0,\r\n\t\t0, 1, 0, 0,\r\n\t\t0, 0, 1, 0,\r\n\t\t0, 0, 0, 1\r\n\r\n\t] );\r\n\r\n\tif ( arguments.length > 0 ) {\r\n\r\n\t\tTHREE.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Matrix4.prototype = {\r\n\r\n\tconstructor: THREE.Matrix4,\r\n\r\n\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\r\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\r\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\r\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tidentity: function () {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, 1, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( m ) {\r\n\r\n\t\tthis.elements.set( m.elements );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\textractPosition: function ( m ) {\r\n\r\n\t\tTHREE.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\r\n\t\treturn this.copyPosition( m );\r\n\r\n\t},\r\n\r\n\tcopyPosition: function ( m ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar me = m.elements;\r\n\r\n\t\tte[ 12 ] = me[ 12 ];\r\n\t\tte[ 13 ] = me[ 13 ];\r\n\t\tte[ 14 ] = me[ 14 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\textractBasis: function ( xAxis, yAxis, zAxis ) {\r\n \r\n\t\tvar te = this.elements;\r\n \r\n\t\txAxis.set( te[ 0 ], te[ 1 ], te[ 2 ] );\r\n\t\tyAxis.set( te[ 4 ], te[ 5 ], te[ 6 ] );\r\n\t\tzAxis.set( te[ 8 ], te[ 9 ], te[ 10 ] );\r\n \r\n\t\treturn this;\r\n \t\t\r\n\t},\r\n \r\n\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\r\n\r\n\t\tthis.set(\r\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\r\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\r\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\r\n\t\t\t0,       0,       0,       1\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\textractRotation: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( m ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = m.elements;\r\n\r\n\t\t\tvar scaleX = 1 / v1.set( me[ 0 ], me[ 1 ], me[ 2 ] ).length();\r\n\t\t\tvar scaleY = 1 / v1.set( me[ 4 ], me[ 5 ], me[ 6 ] ).length();\r\n\t\t\tvar scaleZ = 1 / v1.set( me[ 8 ], me[ 9 ], me[ 10 ] ).length();\r\n\r\n\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\r\n\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\r\n\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\r\n\r\n\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\r\n\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\r\n\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\r\n\r\n\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\r\n\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\r\n\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmakeRotationFromEuler: function ( euler ) {\r\n\r\n\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\r\n\t\t\tTHREE.error( 'THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t}\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar x = euler.x, y = euler.y, z = euler.z;\r\n\t\tvar a = Math.cos( x ), b = Math.sin( x );\r\n\t\tvar c = Math.cos( y ), d = Math.sin( y );\r\n\t\tvar e = Math.cos( z ), f = Math.sin( z );\r\n\r\n\t\tif ( euler.order === 'XYZ' ) {\r\n\r\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = - c * f;\r\n\t\t\tte[ 8 ] = d;\r\n\r\n\t\t\tte[ 1 ] = af + be * d;\r\n\t\t\tte[ 5 ] = ae - bf * d;\r\n\t\t\tte[ 9 ] = - b * c;\r\n\r\n\t\t\tte[ 2 ] = bf - ae * d;\r\n\t\t\tte[ 6 ] = be + af * d;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'YXZ' ) {\r\n\r\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\r\n\t\t\tte[ 0 ] = ce + df * b;\r\n\t\t\tte[ 4 ] = de * b - cf;\r\n\t\t\tte[ 8 ] = a * d;\r\n\r\n\t\t\tte[ 1 ] = a * f;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = - b;\r\n\r\n\t\t\tte[ 2 ] = cf * b - de;\r\n\t\t\tte[ 6 ] = df + ce * b;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'ZXY' ) {\r\n\r\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\r\n\t\t\tte[ 0 ] = ce - df * b;\r\n\t\t\tte[ 4 ] = - a * f;\r\n\t\t\tte[ 8 ] = de + cf * b;\r\n\r\n\t\t\tte[ 1 ] = cf + de * b;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = df - ce * b;\r\n\r\n\t\t\tte[ 2 ] = - a * d;\r\n\t\t\tte[ 6 ] = b;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'ZYX' ) {\r\n\r\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = be * d - af;\r\n\t\t\tte[ 8 ] = ae * d + bf;\r\n\r\n\t\t\tte[ 1 ] = c * f;\r\n\t\t\tte[ 5 ] = bf * d + ae;\r\n\t\t\tte[ 9 ] = af * d - be;\r\n\r\n\t\t\tte[ 2 ] = - d;\r\n\t\t\tte[ 6 ] = b * c;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'YZX' ) {\r\n\r\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = bd - ac * f;\r\n\t\t\tte[ 8 ] = bc * f + ad;\r\n\r\n\t\t\tte[ 1 ] = f;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = - b * e;\r\n\r\n\t\t\tte[ 2 ] = - d * e;\r\n\t\t\tte[ 6 ] = ad * f + bc;\r\n\t\t\tte[ 10 ] = ac - bd * f;\r\n\r\n\t\t} else if ( euler.order === 'XZY' ) {\r\n\r\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = - f;\r\n\t\t\tte[ 8 ] = d * e;\r\n\r\n\t\t\tte[ 1 ] = ac * f + bd;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = ad * f - bc;\r\n\r\n\t\t\tte[ 2 ] = bc * f - ad;\r\n\t\t\tte[ 6 ] = b * e;\r\n\t\t\tte[ 10 ] = bd * f + ac;\r\n\r\n\t\t}\r\n\r\n\t\t// last column\r\n\t\tte[ 3 ] = 0;\r\n\t\tte[ 7 ] = 0;\r\n\t\tte[ 11 ] = 0;\r\n\r\n\t\t// bottom row\r\n\t\tte[ 12 ] = 0;\r\n\t\tte[ 13 ] = 0;\r\n\t\tte[ 14 ] = 0;\r\n\t\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetRotationFromQuaternion: function ( q ) {\r\n\r\n\t\tTHREE.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\r\n\r\n\t\treturn this.makeRotationFromQuaternion( q );\r\n\r\n\t},\r\n\r\n\tmakeRotationFromQuaternion: function ( q ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar x = q.x, y = q.y, z = q.z, w = q.w;\r\n\t\tvar x2 = x + x, y2 = y + y, z2 = z + z;\r\n\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\r\n\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\r\n\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\r\n\r\n\t\tte[ 0 ] = 1 - ( yy + zz );\r\n\t\tte[ 4 ] = xy - wz;\r\n\t\tte[ 8 ] = xz + wy;\r\n\r\n\t\tte[ 1 ] = xy + wz;\r\n\t\tte[ 5 ] = 1 - ( xx + zz );\r\n\t\tte[ 9 ] = yz - wx;\r\n\r\n\t\tte[ 2 ] = xz - wy;\r\n\t\tte[ 6 ] = yz + wx;\r\n\t\tte[ 10 ] = 1 - ( xx + yy );\r\n\r\n\t\t// last column\r\n\t\tte[ 3 ] = 0;\r\n\t\tte[ 7 ] = 0;\r\n\t\tte[ 11 ] = 0;\r\n\r\n\t\t// bottom row\r\n\t\tte[ 12 ] = 0;\r\n\t\tte[ 13 ] = 0;\r\n\t\tte[ 14 ] = 0;\r\n\t\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlookAt: function () {\r\n\r\n\t\tvar x = new THREE.Vector3();\r\n\t\tvar y = new THREE.Vector3();\r\n\t\tvar z = new THREE.Vector3();\r\n\r\n\t\treturn function ( eye, target, up ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tz.subVectors( eye, target ).normalize();\r\n\r\n\t\t\tif ( z.length() === 0 ) {\r\n\r\n\t\t\t\tz.z = 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tx.crossVectors( up, z ).normalize();\r\n\r\n\t\t\tif ( x.length() === 0 ) {\r\n\r\n\t\t\t\tz.x += 0.0001;\r\n\t\t\t\tx.crossVectors( up, z ).normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t\ty.crossVectors( z, x );\r\n\r\n\r\n\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\r\n\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\r\n\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmultiply: function ( m, n ) {\r\n\r\n\t\tif ( n !== undefined ) {\r\n\r\n\t\t\tTHREE.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\r\n\t\t\treturn this.multiplyMatrices( m, n );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.multiplyMatrices( this, m );\r\n\r\n\t},\r\n\r\n\tmultiplyMatrices: function ( a, b ) {\r\n\r\n\t\tvar ae = a.elements;\r\n\t\tvar be = b.elements;\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\r\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\r\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\r\n\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\r\n\r\n\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\r\n\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\r\n\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\r\n\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\r\n\r\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\r\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\r\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\r\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\r\n\r\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\r\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\r\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\r\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\r\n\r\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\r\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\r\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\r\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\r\n\r\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\r\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\r\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\r\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyToArray: function ( a, b, r ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tthis.multiplyMatrices( a, b );\r\n\r\n\t\tr[ 0 ] = te[ 0 ]; r[ 1 ] = te[ 1 ]; r[ 2 ] = te[ 2 ]; r[ 3 ] = te[ 3 ];\r\n\t\tr[ 4 ] = te[ 4 ]; r[ 5 ] = te[ 5 ]; r[ 6 ] = te[ 6 ]; r[ 7 ] = te[ 7 ];\r\n\t\tr[ 8 ]  = te[ 8 ]; r[ 9 ]  = te[ 9 ]; r[ 10 ] = te[ 10 ]; r[ 11 ] = te[ 11 ];\r\n\t\tr[ 12 ] = te[ 12 ]; r[ 13 ] = te[ 13 ]; r[ 14 ] = te[ 14 ]; r[ 15 ] = te[ 15 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\r\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\r\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\r\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVector3: function ( vector ) {\r\n\r\n\t\tTHREE.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.' );\r\n\t\treturn vector.applyProjection( this );\r\n\r\n\t},\r\n\r\n\tmultiplyVector4: function ( vector ) {\r\n\r\n\t\tTHREE.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\treturn vector.applyMatrix4( this );\r\n\r\n\t},\r\n\r\n\tmultiplyVector3Array: function ( a ) {\r\n\r\n\t\tTHREE.warn( 'THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\r\n\t\treturn this.applyToVector3Array( a );\r\n\r\n\t},\r\n\r\n\tapplyToVector3Array: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( array, offset, length ) {\r\n\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = array.length;\r\n\r\n\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\r\n\r\n\t\t\t\tv1.x = array[ j ];\r\n\t\t\t\tv1.y = array[ j + 1 ];\r\n\t\t\t\tv1.z = array[ j + 2 ];\r\n\r\n\t\t\t\tv1.applyMatrix4( this );\r\n\r\n\t\t\t\tarray[ j ]     = v1.x;\r\n\t\t\t\tarray[ j + 1 ] = v1.y;\r\n\t\t\t\tarray[ j + 2 ] = v1.z;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateAxis: function ( v ) {\r\n\r\n\t\tTHREE.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\r\n\r\n\t\tv.transformDirection( this );\r\n\r\n\t},\r\n\r\n\tcrossVector: function ( vector ) {\r\n\r\n\t\tTHREE.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\treturn vector.applyMatrix4( this );\r\n\r\n\t},\r\n\r\n\tdeterminant: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\r\n\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\r\n\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\r\n\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\r\n\r\n\t\t//TODO: make this more efficient\r\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\r\n\r\n\t\treturn (\r\n\t\t\tn41 * (\r\n\t\t\t\t+ n14 * n23 * n32\r\n\t\t\t\t - n13 * n24 * n32\r\n\t\t\t\t - n14 * n22 * n33\r\n\t\t\t\t + n12 * n24 * n33\r\n\t\t\t\t + n13 * n22 * n34\r\n\t\t\t\t - n12 * n23 * n34\r\n\t\t\t) +\r\n\t\t\tn42 * (\r\n\t\t\t\t+ n11 * n23 * n34\r\n\t\t\t\t - n11 * n24 * n33\r\n\t\t\t\t + n14 * n21 * n33\r\n\t\t\t\t - n13 * n21 * n34\r\n\t\t\t\t + n13 * n24 * n31\r\n\t\t\t\t - n14 * n23 * n31\r\n\t\t\t) +\r\n\t\t\tn43 * (\r\n\t\t\t\t+ n11 * n24 * n32\r\n\t\t\t\t - n11 * n22 * n34\r\n\t\t\t\t - n14 * n21 * n32\r\n\t\t\t\t + n12 * n21 * n34\r\n\t\t\t\t + n14 * n22 * n31\r\n\t\t\t\t - n12 * n24 * n31\r\n\t\t\t) +\r\n\t\t\tn44 * (\r\n\t\t\t\t- n13 * n22 * n31\r\n\t\t\t\t - n11 * n23 * n32\r\n\t\t\t\t + n11 * n22 * n33\r\n\t\t\t\t + n13 * n21 * n32\r\n\t\t\t\t - n12 * n21 * n33\r\n\t\t\t\t + n12 * n23 * n31\r\n\t\t\t)\r\n\r\n\t\t);\r\n\r\n\t},\r\n\r\n\ttranspose: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar tmp;\r\n\r\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\r\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\r\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\r\n\r\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\r\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\r\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tflattenToArrayOffset: function ( array, offset ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tarray[ offset     ] = te[ 0 ];\r\n\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\r\n\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\r\n\t\tarray[ offset + 8 ]  = te[ 8 ];\r\n\t\tarray[ offset + 9 ]  = te[ 9 ];\r\n\t\tarray[ offset + 10 ] = te[ 10 ];\r\n\t\tarray[ offset + 11 ] = te[ 11 ];\r\n\r\n\t\tarray[ offset + 12 ] = te[ 12 ];\r\n\t\tarray[ offset + 13 ] = te[ 13 ];\r\n\t\tarray[ offset + 14 ] = te[ 14 ];\r\n\t\tarray[ offset + 15 ] = te[ 15 ];\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tgetPosition: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tTHREE.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\r\n\r\n\t\t\tvar te = this.elements;\r\n\t\t\treturn v1.set( te[ 12 ], te[ 13 ], te[ 14 ] );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetPosition: function ( v ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 12 ] = v.x;\r\n\t\tte[ 13 ] = v.y;\r\n\t\tte[ 14 ] = v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetInverse: function ( m, throwOnInvertible ) {\r\n\r\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\r\n\t\tvar te = this.elements;\r\n\t\tvar me = m.elements;\r\n\r\n\t\tvar n11 = me[ 0 ], n12 = me[ 4 ], n13 = me[ 8 ], n14 = me[ 12 ];\r\n\t\tvar n21 = me[ 1 ], n22 = me[ 5 ], n23 = me[ 9 ], n24 = me[ 13 ];\r\n\t\tvar n31 = me[ 2 ], n32 = me[ 6 ], n33 = me[ 10 ], n34 = me[ 14 ];\r\n\t\tvar n41 = me[ 3 ], n42 = me[ 7 ], n43 = me[ 11 ], n44 = me[ 15 ];\r\n\r\n\t\tte[ 0 ] = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44;\r\n\t\tte[ 4 ] = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44;\r\n\t\tte[ 8 ] = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44;\r\n\t\tte[ 12 ] = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\r\n\t\tte[ 1 ] = n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44;\r\n\t\tte[ 5 ] = n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44;\r\n\t\tte[ 9 ] = n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44;\r\n\t\tte[ 13 ] = n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34;\r\n\t\tte[ 2 ] = n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44;\r\n\t\tte[ 6 ] = n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44;\r\n\t\tte[ 10 ] = n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44;\r\n\t\tte[ 14 ] = n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34;\r\n\t\tte[ 3 ] = n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43;\r\n\t\tte[ 7 ] = n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43;\r\n\t\tte[ 11 ] = n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43;\r\n\t\tte[ 15 ] = n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33;\r\n\r\n\t\tvar det = n11 * te[ 0 ] + n21 * te[ 4 ] + n31 * te[ 8 ] + n41 * te[ 12 ];\r\n\r\n\t\tif ( det == 0 ) {\r\n\r\n\t\t\tvar msg = \"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\";\r\n\r\n\t\t\tif ( throwOnInvertible || false ) {\r\n\r\n\t\t\t\tthrow new Error( msg );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tTHREE.warn( msg );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.identity();\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tthis.multiplyScalar( 1 / det );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranslate: function ( v ) {\r\n\r\n\t\tTHREE.error( 'THREE.Matrix4: .translate() has been removed.' );\r\n\r\n\t},\r\n\r\n\trotateX: function ( angle ) {\r\n\r\n\t\tTHREE.error( 'THREE.Matrix4: .rotateX() has been removed.' );\r\n\r\n\t},\r\n\r\n\trotateY: function ( angle ) {\r\n\r\n\t\tTHREE.error( 'THREE.Matrix4: .rotateY() has been removed.' );\r\n\r\n\t},\r\n\r\n\trotateZ: function ( angle ) {\r\n\r\n\t\tTHREE.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\r\n\r\n\t},\r\n\r\n\trotateByAxis: function ( axis, angle ) {\r\n\r\n\t\tTHREE.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\r\n\r\n\t},\r\n\r\n\tscale: function ( v ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar x = v.x, y = v.y, z = v.z;\r\n\r\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\r\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\r\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\r\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetMaxScaleOnAxis: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\r\n\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\r\n\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\r\n\r\n\t\treturn Math.sqrt( Math.max( scaleXSq, Math.max( scaleYSq, scaleZSq ) ) );\r\n\r\n\t},\r\n\r\n\tmakeTranslation: function ( x, y, z ) {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0, x,\r\n\t\t\t0, 1, 0, y,\r\n\t\t\t0, 0, 1, z,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationX: function ( theta ) {\r\n\r\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0,  0, 0,\r\n\t\t\t0, c, - s, 0,\r\n\t\t\t0, s,  c, 0,\r\n\t\t\t0, 0,  0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationY: function ( theta ) {\r\n\r\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t c, 0, s, 0,\r\n\t\t\t 0, 1, 0, 0,\r\n\t\t\t- s, 0, c, 0,\r\n\t\t\t 0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationZ: function ( theta ) {\r\n\r\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tc, - s, 0, 0,\r\n\t\t\ts,  c, 0, 0,\r\n\t\t\t0,  0, 1, 0,\r\n\t\t\t0,  0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationAxis: function ( axis, angle ) {\r\n\r\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\r\n\r\n\t\tvar c = Math.cos( angle );\r\n\t\tvar s = Math.sin( angle );\r\n\t\tvar t = 1 - c;\r\n\t\tvar x = axis.x, y = axis.y, z = axis.z;\r\n\t\tvar tx = t * x, ty = t * y;\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\r\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\r\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\t return this;\r\n\r\n\t},\r\n\r\n\tmakeScale: function ( x, y, z ) {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tx, 0, 0, 0,\r\n\t\t\t0, y, 0, 0,\r\n\t\t\t0, 0, z, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcompose: function ( position, quaternion, scale ) {\r\n\r\n\t\tthis.makeRotationFromQuaternion( quaternion );\r\n\t\tthis.scale( scale );\r\n\t\tthis.setPosition( position );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdecompose: function () {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\t\tvar matrix = new THREE.Matrix4();\r\n\r\n\t\treturn function ( position, quaternion, scale ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\r\n\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\r\n\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\r\n\r\n\t\t\t// if determine is negative, we need to invert one scale\r\n\t\t\tvar det = this.determinant();\r\n\t\t\tif ( det < 0 ) {\r\n\t\t\t\tsx = - sx;\r\n\t\t\t}\r\n\r\n\t\t\tposition.x = te[ 12 ];\r\n\t\t\tposition.y = te[ 13 ];\r\n\t\t\tposition.z = te[ 14 ];\r\n\r\n\t\t\t// scale the rotation part\r\n\r\n\t\t\tmatrix.elements.set( this.elements ); // at this point matrix is incomplete so we can't use .copy()\r\n\r\n\t\t\tvar invSX = 1 / sx;\r\n\t\t\tvar invSY = 1 / sy;\r\n\t\t\tvar invSZ = 1 / sz;\r\n\r\n\t\t\tmatrix.elements[ 0 ] *= invSX;\r\n\t\t\tmatrix.elements[ 1 ] *= invSX;\r\n\t\t\tmatrix.elements[ 2 ] *= invSX;\r\n\r\n\t\t\tmatrix.elements[ 4 ] *= invSY;\r\n\t\t\tmatrix.elements[ 5 ] *= invSY;\r\n\t\t\tmatrix.elements[ 6 ] *= invSY;\r\n\r\n\t\t\tmatrix.elements[ 8 ] *= invSZ;\r\n\t\t\tmatrix.elements[ 9 ] *= invSZ;\r\n\t\t\tmatrix.elements[ 10 ] *= invSZ;\r\n\r\n\t\t\tquaternion.setFromRotationMatrix( matrix );\r\n\r\n\t\t\tscale.x = sx;\r\n\t\t\tscale.y = sy;\r\n\t\t\tscale.z = sz;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar x = 2 * near / ( right - left );\r\n\t\tvar y = 2 * near / ( top - bottom );\r\n\r\n\t\tvar a = ( right + left ) / ( right - left );\r\n\t\tvar b = ( top + bottom ) / ( top - bottom );\r\n\t\tvar c = - ( far + near ) / ( far - near );\r\n\t\tvar d = - 2 * far * near / ( far - near );\r\n\r\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\r\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\r\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\r\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakePerspective: function ( fov, aspect, near, far ) {\r\n\r\n\t\tvar ymax = near * Math.tan( THREE.Math.degToRad( fov * 0.5 ) );\r\n\t\tvar ymin = - ymax;\r\n\t\tvar xmin = ymin * aspect;\r\n\t\tvar xmax = ymax * aspect;\r\n\r\n\t\treturn this.makeFrustum( xmin, xmax, ymin, ymax, near, far );\r\n\r\n\t},\r\n\r\n\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar w = right - left;\r\n\t\tvar h = top - bottom;\r\n\t\tvar p = far - near;\r\n\r\n\t\tvar x = ( right + left ) / w;\r\n\t\tvar y = ( top + bottom ) / h;\r\n\t\tvar z = ( far + near ) / p;\r\n\r\n\t\tte[ 0 ] = 2 / w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\r\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 / h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\r\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 / p;\tte[ 14 ] = - z;\r\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis.elements.set( array );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\treturn [\r\n\t\t\tte[ 0 ], te[ 1 ], te[ 2 ], te[ 3 ],\r\n\t\t\tte[ 4 ], te[ 5 ], te[ 6 ], te[ 7 ],\r\n\t\t\tte[ 8 ], te[ 9 ], te[ 10 ], te[ 11 ],\r\n\t\t\tte[ 12 ], te[ 13 ], te[ 14 ], te[ 15 ]\r\n\t\t];\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Matrix4().fromArray( this.elements );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Ray.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Ray = function ( origin, direction ) {\r\n\r\n\tthis.origin = ( origin !== undefined ) ? origin : new THREE.Vector3();\r\n\tthis.direction = ( direction !== undefined ) ? direction : new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Ray.prototype = {\r\n\r\n\tconstructor: THREE.Ray,\r\n\r\n\tset: function ( origin, direction ) {\r\n\r\n\t\tthis.origin.copy( origin );\r\n\t\tthis.direction.copy( direction );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( ray ) {\r\n\r\n\t\tthis.origin.copy( ray.origin );\r\n\t\tthis.direction.copy( ray.direction );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tat: function ( t, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn result.copy( this.direction ).multiplyScalar( t ).add( this.origin );\r\n\r\n\t},\r\n\r\n\trecast: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( t ) {\r\n\r\n\t\t\tthis.origin.copy( this.at( t, v1 ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclosestPointToPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\tresult.subVectors( point, this.origin );\r\n\t\tvar directionDistance = result.dot( this.direction );\r\n\r\n\t\tif ( directionDistance < 0 ) {\r\n\r\n\t\t\treturn result.copy( this.origin );\r\n\r\n\t\t}\r\n\r\n\t\treturn result.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( point ) {\r\n\r\n\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\r\n\r\n\t\t\t// point behind the ray\r\n\r\n\t\t\tif ( directionDistance < 0 ) {\r\n\r\n\t\t\t\treturn this.origin.distanceTo( point );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\r\n\t\t\treturn v1.distanceTo( point );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tdistanceSqToSegment: function () {\r\n\r\n\t\tvar segCenter = new THREE.Vector3();\r\n\t\tvar segDir = new THREE.Vector3();\r\n\t\tvar diff = new THREE.Vector3();\r\n\r\n\t\treturn function ( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\r\n\r\n\t\t\t// from http://www.geometrictools.com/LibMathematics/Distance/Wm5DistRay3Segment3.cpp\r\n\t\t\t// It returns the min distance between the ray and the segment\r\n\t\t\t// defined by v0 and v1\r\n\t\t\t// It can also set two optional targets :\r\n\t\t\t// - The closest point on the ray\r\n\t\t\t// - The closest point on the segment\r\n\r\n\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\r\n\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\r\n\t\t\tdiff.copy( this.origin ).sub( segCenter );\r\n\r\n\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\r\n\t\t\tvar a01 = - this.direction.dot( segDir );\r\n\t\t\tvar b0 = diff.dot( this.direction );\r\n\t\t\tvar b1 = - diff.dot( segDir );\r\n\t\t\tvar c = diff.lengthSq();\r\n\t\t\tvar det = Math.abs( 1 - a01 * a01 );\r\n\t\t\tvar s0, s1, sqrDist, extDet;\r\n\r\n\t\t\tif ( det > 0 ) {\r\n\r\n\t\t\t\t// The ray and segment are not parallel.\r\n\r\n\t\t\t\ts0 = a01 * b1 - b0;\r\n\t\t\t\ts1 = a01 * b0 - b1;\r\n\t\t\t\textDet = segExtent * det;\r\n\r\n\t\t\t\tif ( s0 >= 0 ) {\r\n\r\n\t\t\t\t\tif ( s1 >= - extDet ) {\r\n\r\n\t\t\t\t\t\tif ( s1 <= extDet ) {\r\n\r\n\t\t\t\t\t\t\t// region 0\r\n\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\r\n\r\n\t\t\t\t\t\t\tvar invDet = 1 / det;\r\n\t\t\t\t\t\t\ts0 *= invDet;\r\n\t\t\t\t\t\t\ts1 *= invDet;\r\n\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// region 1\r\n\r\n\t\t\t\t\t\t\ts1 = segExtent;\r\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// region 5\r\n\r\n\t\t\t\t\t\ts1 = - segExtent;\r\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( s1 <= - extDet ) {\r\n\r\n\t\t\t\t\t\t// region 4\r\n\r\n\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t} else if ( s1 <= extDet ) {\r\n\r\n\t\t\t\t\t\t// region 3\r\n\r\n\t\t\t\t\t\ts0 = 0;\r\n\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// region 2\r\n\r\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Ray and segment are parallel.\r\n\r\n\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\r\n\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( optionalPointOnRay ) {\r\n\r\n\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( optionalPointOnSegment ) {\r\n\r\n\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn sqrDist;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\r\n\tisIntersectionSphere: function ( sphere ) {\r\n\r\n\t\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\r\n\r\n\t},\r\n\r\n\tintersectSphere: function () {\r\n\r\n\t\t// from http://www.scratchapixel.com/lessons/3d-basic-lessons/lesson-7-intersecting-simple-shapes/ray-sphere-intersection/\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( sphere, optionalTarget ) {\r\n\r\n\t\t\tv1.subVectors( sphere.center, this.origin );\r\n\r\n\t\t\tvar tca = v1.dot( this.direction );\r\n\r\n\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\r\n\r\n\t\t\tvar radius2 = sphere.radius * sphere.radius;\r\n\r\n\t\t\tif ( d2 > radius2 ) return null;\r\n\r\n\t\t\tvar thc = Math.sqrt( radius2 - d2 );\r\n\r\n\t\t\t// t0 = first intersect point - entrance on front of sphere\r\n\t\t\tvar t0 = tca - thc;\r\n\r\n\t\t\t// t1 = second intersect point - exit point on back of sphere\r\n\t\t\tvar t1 = tca + thc;\r\n\r\n\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\r\n\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\r\n\r\n\t\t\t// test to see if t0 is behind the ray:\r\n\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\r\n\t\t\t// in order to always return an intersect point that is in front of the ray.\r\n\t\t\tif ( t0 < 0 ) return this.at( t1, optionalTarget );\r\n\r\n\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0 \r\n\t\t\treturn this.at( t0, optionalTarget );\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tisIntersectionPlane: function ( plane ) {\r\n\r\n\t\t// check if the ray lies on the plane first\r\n\r\n\t\tvar distToPoint = plane.distanceToPoint( this.origin );\r\n\r\n\t\tif ( distToPoint === 0 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\tvar denominator = plane.normal.dot( this.direction );\r\n\r\n\t\tif ( denominator * distToPoint < 0 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\t// ray origin is behind the plane (and is pointing behind it)\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tdistanceToPlane: function ( plane ) {\r\n\r\n\t\tvar denominator = plane.normal.dot( this.direction );\r\n\t\tif ( denominator == 0 ) {\r\n\r\n\t\t\t// line is coplanar, return origin\r\n\t\t\tif ( plane.distanceToPoint( this.origin ) == 0 ) {\r\n\r\n\t\t\t\treturn 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\r\n\r\n\t\t// Return if the ray never intersects the plane\r\n\r\n\t\treturn t >= 0 ? t :  null;\r\n\r\n\t},\r\n\r\n\tintersectPlane: function ( plane, optionalTarget ) {\r\n\r\n\t\tvar t = this.distanceToPlane( plane );\r\n\r\n\t\tif ( t === null ) {\r\n\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn this.at( t, optionalTarget );\r\n\r\n\t},\r\n\r\n\tisIntersectionBox: function () {\r\n\r\n\t\tvar v = new THREE.Vector3();\r\n\r\n\t\treturn function ( box ) {\r\n\r\n\t\t\treturn this.intersectBox( box, v ) !== null;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersectBox: function ( box, optionalTarget ) {\r\n\r\n\t\t// http://www.scratchapixel.com/lessons/3d-basic-lessons/lesson-7-intersecting-simple-shapes/ray-box-intersection/\r\n\r\n\t\tvar tmin,tmax,tymin,tymax,tzmin,tzmax;\r\n\r\n\t\tvar invdirx = 1 / this.direction.x,\r\n\t\t\tinvdiry = 1 / this.direction.y,\r\n\t\t\tinvdirz = 1 / this.direction.z;\r\n\r\n\t\tvar origin = this.origin;\r\n\r\n\t\tif ( invdirx >= 0 ) {\r\n\r\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\r\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\r\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\r\n\t\t}\r\n\r\n\t\tif ( invdiry >= 0 ) {\r\n\r\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\r\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\r\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\r\n\t\t}\r\n\r\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\r\n\r\n\t\t// These lines also handle the case where tmin or tmax is NaN\r\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\r\n\r\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\r\n\r\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\r\n\r\n\t\tif ( invdirz >= 0 ) {\r\n\r\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\r\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\r\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\r\n\t\t}\r\n\r\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\r\n\r\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\r\n\r\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\r\n\r\n\t\t//return point closest to the ray (positive side)\r\n\r\n\t\tif ( tmax < 0 ) return null;\r\n\r\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, optionalTarget );\r\n\r\n\t},\r\n\r\n\tintersectTriangle: function () {\r\n\r\n\t\t// Compute the offset origin, edges, and normal.\r\n\t\tvar diff = new THREE.Vector3();\r\n\t\tvar edge1 = new THREE.Vector3();\r\n\t\tvar edge2 = new THREE.Vector3();\r\n\t\tvar normal = new THREE.Vector3();\r\n\r\n\t\treturn function ( a, b, c, backfaceCulling, optionalTarget ) {\r\n\r\n\t\t\t// from http://www.geometrictools.com/LibMathematics/Intersection/Wm5IntrRay3Triangle3.cpp\r\n\r\n\t\t\tedge1.subVectors( b, a );\r\n\t\t\tedge2.subVectors( c, a );\r\n\t\t\tnormal.crossVectors( edge1, edge2 );\r\n\r\n\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\r\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\r\n\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\r\n\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\r\n\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\r\n\t\t\tvar DdN = this.direction.dot( normal );\r\n\t\t\tvar sign;\r\n\r\n\t\t\tif ( DdN > 0 ) {\r\n\r\n\t\t\t\tif ( backfaceCulling ) return null;\r\n\t\t\t\tsign = 1;\r\n\r\n\t\t\t} else if ( DdN < 0 ) {\r\n\r\n\t\t\t\tsign = - 1;\r\n\t\t\t\tDdN = - DdN;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdiff.subVectors( this.origin, a );\r\n\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\r\n\r\n\t\t\t// b1 < 0, no intersection\r\n\t\t\tif ( DdQxE2 < 0 ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\r\n\r\n\t\t\t// b2 < 0, no intersection\r\n\t\t\tif ( DdE1xQ < 0 ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// b1+b2 > 1, no intersection\r\n\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Line intersects triangle, check if ray does.\r\n\t\t\tvar QdN = - sign * diff.dot( normal );\r\n\r\n\t\t\t// t < 0, no intersection\r\n\t\t\tif ( QdN < 0 ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Ray intersects triangle.\r\n\t\t\treturn this.at( QdN / DdN, optionalTarget );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyMatrix4: function ( matrix4 ) {\r\n\r\n\t\tthis.direction.add( this.origin ).applyMatrix4( matrix4 );\r\n\t\tthis.origin.applyMatrix4( matrix4 );\r\n\t\tthis.direction.sub( this.origin );\r\n\t\tthis.direction.normalize();\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\tequals: function ( ray ) {\r\n\r\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Ray().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Sphere.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Sphere = function ( center, radius ) {\r\n\r\n\tthis.center = ( center !== undefined ) ? center : new THREE.Vector3();\r\n\tthis.radius = ( radius !== undefined ) ? radius : 0;\r\n\r\n};\r\n\r\nTHREE.Sphere.prototype = {\r\n\r\n\tconstructor: THREE.Sphere,\r\n\r\n\tset: function ( center, radius ) {\r\n\r\n\t\tthis.center.copy( center );\r\n\t\tthis.radius = radius;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\tsetFromPoints: function () {\r\n\r\n\t\tvar box = new THREE.Box3();\r\n\r\n\t\treturn function ( points, optionalCenter ) {\r\n\r\n\t\t\tvar center = this.center;\r\n\r\n\t\t\tif ( optionalCenter !== undefined ) {\r\n\r\n\t\t\t\tcenter.copy( optionalCenter );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tbox.setFromPoints( points ).center( center );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar maxRadiusSq = 0;\r\n\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tcopy: function ( sphere ) {\r\n\r\n\t\tthis.center.copy( sphere.center );\r\n\t\tthis.radius = sphere.radius;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tempty: function () {\r\n\r\n\t\treturn ( this.radius <= 0 );\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function ( point ) {\r\n\r\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\r\n\r\n\t},\r\n\r\n\tintersectsSphere: function ( sphere ) {\r\n\r\n\t\tvar radiusSum = this.radius + sphere.radius;\r\n\r\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\r\n\r\n\t},\r\n\r\n\tclampPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\tresult.copy( point );\r\n\r\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\r\n\r\n\t\t\tresult.sub( this.center ).normalize();\r\n\t\t\tresult.multiplyScalar( this.radius ).add( this.center );\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t},\r\n\r\n\tgetBoundingBox: function ( optionalTarget ) {\r\n\r\n\t\tvar box = optionalTarget || new THREE.Box3();\r\n\r\n\t\tbox.set( this.center, this.center );\r\n\t\tbox.expandByScalar( this.radius );\r\n\r\n\t\treturn box;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( matrix ) {\r\n\r\n\t\tthis.center.applyMatrix4( matrix );\r\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.center.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( sphere ) {\r\n\r\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Sphere().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Frustum.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Frustum = function ( p0, p1, p2, p3, p4, p5 ) {\r\n\r\n\tthis.planes = [\r\n\r\n\t\t( p0 !== undefined ) ? p0 : new THREE.Plane(),\r\n\t\t( p1 !== undefined ) ? p1 : new THREE.Plane(),\r\n\t\t( p2 !== undefined ) ? p2 : new THREE.Plane(),\r\n\t\t( p3 !== undefined ) ? p3 : new THREE.Plane(),\r\n\t\t( p4 !== undefined ) ? p4 : new THREE.Plane(),\r\n\t\t( p5 !== undefined ) ? p5 : new THREE.Plane()\r\n\r\n\t];\r\n\r\n};\r\n\r\nTHREE.Frustum.prototype = {\r\n\r\n\tconstructor: THREE.Frustum,\r\n\r\n\tset: function ( p0, p1, p2, p3, p4, p5 ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\r\n\t\tplanes[ 0 ].copy( p0 );\r\n\t\tplanes[ 1 ].copy( p1 );\r\n\t\tplanes[ 2 ].copy( p2 );\r\n\t\tplanes[ 3 ].copy( p3 );\r\n\t\tplanes[ 4 ].copy( p4 );\r\n\t\tplanes[ 5 ].copy( p5 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( frustum ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\r\n\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromMatrix: function ( m ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\t\tvar me = m.elements;\r\n\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\r\n\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\r\n\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\r\n\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\r\n\r\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\r\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\r\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\r\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\r\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\r\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tintersectsObject: function () {\r\n\r\n\t\tvar sphere = new THREE.Sphere();\r\n\r\n\t\treturn function ( object ) {\r\n\r\n\t\t\tvar geometry = object.geometry;\r\n\r\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\tsphere.applyMatrix4( object.matrixWorld );\r\n\r\n\t\t\treturn this.intersectsSphere( sphere );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersectsSphere: function ( sphere ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\t\tvar center = sphere.center;\r\n\t\tvar negRadius = - sphere.radius;\r\n\r\n\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tvar distance = planes[ i ].distanceToPoint( center );\r\n\r\n\t\t\tif ( distance < negRadius ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tintersectsBox: function () {\r\n\r\n\t\tvar p1 = new THREE.Vector3(),\r\n\t\t\tp2 = new THREE.Vector3();\r\n\r\n\t\treturn function ( box ) {\r\n\r\n\t\t\tvar planes = this.planes;\r\n\r\n\t\t\tfor ( var i = 0; i < 6 ; i ++ ) {\r\n\r\n\t\t\t\tvar plane = planes[ i ];\r\n\r\n\t\t\t\tp1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\r\n\t\t\t\tp2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\r\n\t\t\t\tp1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\r\n\t\t\t\tp2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\r\n\t\t\t\tp1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\r\n\t\t\t\tp2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\r\n\r\n\t\t\t\tvar d1 = plane.distanceToPoint( p1 );\r\n\t\t\t\tvar d2 = plane.distanceToPoint( p2 );\r\n\r\n\t\t\t\t// if both outside plane, no intersection\r\n\r\n\t\t\t\tif ( d1 < 0 && d2 < 0 ) {\r\n\r\n\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\r\n\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Frustum().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Plane.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Plane = function ( normal, constant ) {\r\n\r\n\tthis.normal = ( normal !== undefined ) ? normal : new THREE.Vector3( 1, 0, 0 );\r\n\tthis.constant = ( constant !== undefined ) ? constant : 0;\r\n\r\n};\r\n\r\nTHREE.Plane.prototype = {\r\n\r\n\tconstructor: THREE.Plane,\r\n\r\n\tset: function ( normal, constant ) {\r\n\r\n\t\tthis.normal.copy( normal );\r\n\t\tthis.constant = constant;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponents: function ( x, y, z, w ) {\r\n\r\n\t\tthis.normal.set( x, y, z );\r\n\t\tthis.constant = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\r\n\r\n\t\tthis.normal.copy( normal );\r\n\t\tthis.constant = - point.dot( this.normal );\t// must be this.normal, not normal, as this.normal is normalized\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromCoplanarPoints: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\r\n\t\treturn function ( a, b, c ) {\r\n\r\n\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\r\n\r\n\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\r\n\r\n\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\r\n\tcopy: function ( plane ) {\r\n\r\n\t\tthis.normal.copy( plane.normal );\r\n\t\tthis.constant = plane.constant;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\r\n\r\n\t\tvar inverseNormalLength = 1.0 / this.normal.length();\r\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\r\n\t\tthis.constant *= inverseNormalLength;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.constant *= - 1;\r\n\t\tthis.normal.negate();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function ( point ) {\r\n\r\n\t\treturn this.normal.dot( point ) + this.constant;\r\n\r\n\t},\r\n\r\n\tdistanceToSphere: function ( sphere ) {\r\n\r\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\r\n\r\n\t},\r\n\r\n\tprojectPoint: function ( point, optionalTarget ) {\r\n\r\n\t\treturn this.orthoPoint( point, optionalTarget ).sub( point ).negate();\r\n\r\n\t},\r\n\r\n\torthoPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar perpendicularMagnitude = this.distanceToPoint( point );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.copy( this.normal ).multiplyScalar( perpendicularMagnitude );\r\n\r\n\t},\r\n\r\n\tisIntersectionLine: function ( line ) {\r\n\r\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\r\n\r\n\t\tvar startSign = this.distanceToPoint( line.start );\r\n\t\tvar endSign = this.distanceToPoint( line.end );\r\n\r\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\r\n\r\n\t},\r\n\r\n\tintersectLine: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( line, optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t\tvar direction = line.delta( v1 );\r\n\r\n\t\t\tvar denominator = this.normal.dot( direction );\r\n\r\n\t\t\tif ( denominator == 0 ) {\r\n\r\n\t\t\t\t// line is coplanar, return origin\r\n\t\t\t\tif ( this.distanceToPoint( line.start ) == 0 ) {\r\n\r\n\t\t\t\t\treturn result.copy( line.start );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Unsure if this is the correct method to handle this case.\r\n\t\t\t\treturn undefined;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\r\n\r\n\t\t\tif ( t < 0 || t > 1 ) {\r\n\r\n\t\t\t\treturn undefined;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn result.copy( direction ).multiplyScalar( t ).add( line.start );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\r\n\tcoplanarPoint: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.copy( this.normal ).multiplyScalar( - this.constant );\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\tvar m1 = new THREE.Matrix3();\r\n\r\n\t\treturn function ( matrix, optionalNormalMatrix ) {\r\n\r\n\t\t\t// compute new normal based on theory here:\r\n\t\t\t// http://www.songho.ca/opengl/gl_normaltransform.html\r\n\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\r\n\t\t\tvar newNormal = v1.copy( this.normal ).applyMatrix3( normalMatrix );\r\n\r\n\t\t\tvar newCoplanarPoint = this.coplanarPoint( v2 );\r\n\t\t\tnewCoplanarPoint.applyMatrix4( matrix );\r\n\r\n\t\t\tthis.setFromNormalAndCoplanarPoint( newNormal, newCoplanarPoint );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.constant = this.constant - offset.dot( this.normal );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( plane ) {\r\n\r\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant == this.constant );\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Plane().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Math.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Math = {\r\n\r\n\tgenerateUUID: function () {\r\n\r\n\t\t// http://www.broofa.com/Tools/Math.uuid.htm\r\n\r\n\t\tvar chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );\r\n\t\tvar uuid = new Array( 36 );\r\n\t\tvar rnd = 0, r;\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tfor ( var i = 0; i < 36; i ++ ) {\r\n\r\n\t\t\t\tif ( i == 8 || i == 13 || i == 18 || i == 23 ) {\r\n\r\n\t\t\t\t\tuuid[ i ] = '-';\r\n\r\n\t\t\t\t} else if ( i == 14 ) {\r\n\r\n\t\t\t\t\tuuid[ i ] = '4';\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;\r\n\t\t\t\t\tr = rnd & 0xf;\r\n\t\t\t\t\trnd = rnd >> 4;\r\n\t\t\t\t\tuuid[ i ] = chars[ ( i == 19 ) ? ( r & 0x3 ) | 0x8 : r ];\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn uuid.join( '' );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\t// Clamp value to range <a, b>\r\n\r\n\tclamp: function ( x, a, b ) {\r\n\r\n\t\treturn ( x < a ) ? a : ( ( x > b ) ? b : x );\r\n\r\n\t},\r\n\r\n\t// Clamp value to range <a, inf)\r\n\r\n\tclampBottom: function ( x, a ) {\r\n\r\n\t\treturn x < a ? a : x;\r\n\r\n\t},\r\n\r\n\t// Linear mapping from range <a1, a2> to range <b1, b2>\r\n\r\n\tmapLinear: function ( x, a1, a2, b1, b2 ) {\r\n\r\n\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\r\n\r\n\t},\r\n\r\n\t// http://en.wikipedia.org/wiki/Smoothstep\r\n\r\n\tsmoothstep: function ( x, min, max ) {\r\n\r\n\t\tif ( x <= min ) return 0;\r\n\t\tif ( x >= max ) return 1;\r\n\r\n\t\tx = ( x - min ) / ( max - min );\r\n\r\n\t\treturn x * x * ( 3 - 2 * x );\r\n\r\n\t},\r\n\r\n\tsmootherstep: function ( x, min, max ) {\r\n\r\n\t\tif ( x <= min ) return 0;\r\n\t\tif ( x >= max ) return 1;\r\n\r\n\t\tx = ( x - min ) / ( max - min );\r\n\r\n\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\r\n\r\n\t},\r\n\r\n\t// Random float from <0, 1> with 16 bits of randomness\r\n\t// (standard Math.random() creates repetitive patterns when applied over larger space)\r\n\r\n\trandom16: function () {\r\n\r\n\t\treturn ( 65280 * Math.random() + 255 * Math.random() ) / 65535;\r\n\r\n\t},\r\n\r\n\t// Random integer from <low, high> interval\r\n\r\n\trandInt: function ( low, high ) {\r\n\r\n\t\treturn Math.floor( this.randFloat( low, high ) );\r\n\r\n\t},\r\n\r\n\t// Random float from <low, high> interval\r\n\r\n\trandFloat: function ( low, high ) {\r\n\r\n\t\treturn low + Math.random() * ( high - low );\r\n\r\n\t},\r\n\r\n\t// Random float from <-range/2, range/2> interval\r\n\r\n\trandFloatSpread: function ( range ) {\r\n\r\n\t\treturn range * ( 0.5 - Math.random() );\r\n\r\n\t},\r\n\r\n\tdegToRad: function () {\r\n\r\n\t\tvar degreeToRadiansFactor = Math.PI / 180;\r\n\r\n\t\treturn function ( degrees ) {\r\n\r\n\t\t\treturn degrees * degreeToRadiansFactor;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tradToDeg: function () {\r\n\r\n\t\tvar radianToDegreesFactor = 180 / Math.PI;\r\n\r\n\t\treturn function ( radians ) {\r\n\r\n\t\t\treturn radians * radianToDegreesFactor;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tisPowerOfTwo: function ( value ) {\r\n\r\n\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\r\n\r\n\t},\r\n\r\n\tnextPowerOfTwo: function ( value ) {\r\n\r\n\t\tvalue --;\r\n\t\tvalue |= value >> 1;\r\n\t\tvalue |= value >> 2;\r\n\t\tvalue |= value >> 4;\r\n\t\tvalue |= value >> 8;\r\n\t\tvalue |= value >> 16;\r\n\t\tvalue ++;\r\n\r\n\t\treturn value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Spline.js\r\n\r\n/**\r\n * Spline from Tween.js, slightly optimized (and trashed)\r\n * http://sole.github.com/tween.js/examples/05_spline.html\r\n *\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Spline = function ( points ) {\r\n\r\n\tthis.points = points;\r\n\r\n\tvar c = [], v3 = { x: 0, y: 0, z: 0 },\r\n\tpoint, intPoint, weight, w2, w3,\r\n\tpa, pb, pc, pd;\r\n\r\n\tthis.initFromArray = function ( a ) {\r\n\r\n\t\tthis.points = [];\r\n\r\n\t\tfor ( var i = 0; i < a.length; i ++ ) {\r\n\r\n\t\t\tthis.points[ i ] = { x: a[ i ][ 0 ], y: a[ i ][ 1 ], z: a[ i ][ 2 ] };\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.getPoint = function ( k ) {\r\n\r\n\t\tpoint = ( this.points.length - 1 ) * k;\r\n\t\tintPoint = Math.floor( point );\r\n\t\tweight = point - intPoint;\r\n\r\n\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\r\n\t\tc[ 1 ] = intPoint;\r\n\t\tc[ 2 ] = intPoint  > this.points.length - 2 ? this.points.length - 1 : intPoint + 1;\r\n\t\tc[ 3 ] = intPoint  > this.points.length - 3 ? this.points.length - 1 : intPoint + 2;\r\n\r\n\t\tpa = this.points[ c[ 0 ] ];\r\n\t\tpb = this.points[ c[ 1 ] ];\r\n\t\tpc = this.points[ c[ 2 ] ];\r\n\t\tpd = this.points[ c[ 3 ] ];\r\n\r\n\t\tw2 = weight * weight;\r\n\t\tw3 = weight * w2;\r\n\r\n\t\tv3.x = interpolate( pa.x, pb.x, pc.x, pd.x, weight, w2, w3 );\r\n\t\tv3.y = interpolate( pa.y, pb.y, pc.y, pd.y, weight, w2, w3 );\r\n\t\tv3.z = interpolate( pa.z, pb.z, pc.z, pd.z, weight, w2, w3 );\r\n\r\n\t\treturn v3;\r\n\r\n\t};\r\n\r\n\tthis.getControlPointsArray = function () {\r\n\r\n\t\tvar i, p, l = this.points.length,\r\n\t\t\tcoords = [];\r\n\r\n\t\tfor ( i = 0; i < l; i ++ ) {\r\n\r\n\t\t\tp = this.points[ i ];\r\n\t\t\tcoords[ i ] = [ p.x, p.y, p.z ];\r\n\r\n\t\t}\r\n\r\n\t\treturn coords;\r\n\r\n\t};\r\n\r\n\t// approximate length by summing linear segments\r\n\r\n\tthis.getLength = function ( nSubDivisions ) {\r\n\r\n\t\tvar i, index, nSamples, position,\r\n\t\t\tpoint = 0, intPoint = 0, oldIntPoint = 0,\r\n\t\t\toldPosition = new THREE.Vector3(),\r\n\t\t\ttmpVec = new THREE.Vector3(),\r\n\t\t\tchunkLengths = [],\r\n\t\t\ttotalLength = 0;\r\n\r\n\t\t// first point has 0 length\r\n\r\n\t\tchunkLengths[ 0 ] = 0;\r\n\r\n\t\tif ( ! nSubDivisions ) nSubDivisions = 100;\r\n\r\n\t\tnSamples = this.points.length * nSubDivisions;\r\n\r\n\t\toldPosition.copy( this.points[ 0 ] );\r\n\r\n\t\tfor ( i = 1; i < nSamples; i ++ ) {\r\n\r\n\t\t\tindex = i / nSamples;\r\n\r\n\t\t\tposition = this.getPoint( index );\r\n\t\t\ttmpVec.copy( position );\r\n\r\n\t\t\ttotalLength += tmpVec.distanceTo( oldPosition );\r\n\r\n\t\t\toldPosition.copy( position );\r\n\r\n\t\t\tpoint = ( this.points.length - 1 ) * index;\r\n\t\t\tintPoint = Math.floor( point );\r\n\r\n\t\t\tif ( intPoint != oldIntPoint ) {\r\n\r\n\t\t\t\tchunkLengths[ intPoint ] = totalLength;\r\n\t\t\t\toldIntPoint = intPoint;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// last point ends with total length\r\n\r\n\t\tchunkLengths[ chunkLengths.length ] = totalLength;\r\n\r\n\t\treturn { chunks: chunkLengths, total: totalLength };\r\n\r\n\t};\r\n\r\n\tthis.reparametrizeByArcLength = function ( samplingCoef ) {\r\n\r\n\t\tvar i, j,\r\n\t\t\tindex, indexCurrent, indexNext,\r\n\t\t\trealDistance,\r\n\t\t\tsampling, position,\r\n\t\t\tnewpoints = [],\r\n\t\t\ttmpVec = new THREE.Vector3(),\r\n\t\t\tsl = this.getLength();\r\n\r\n\t\tnewpoints.push( tmpVec.copy( this.points[ 0 ] ).clone() );\r\n\r\n\t\tfor ( i = 1; i < this.points.length; i ++ ) {\r\n\r\n\t\t\t//tmpVec.copy( this.points[ i - 1 ] );\r\n\t\t\t//linearDistance = tmpVec.distanceTo( this.points[ i ] );\r\n\r\n\t\t\trealDistance = sl.chunks[ i ] - sl.chunks[ i - 1 ];\r\n\r\n\t\t\tsampling = Math.ceil( samplingCoef * realDistance / sl.total );\r\n\r\n\t\t\tindexCurrent = ( i - 1 ) / ( this.points.length - 1 );\r\n\t\t\tindexNext = i / ( this.points.length - 1 );\r\n\r\n\t\t\tfor ( j = 1; j < sampling - 1; j ++ ) {\r\n\r\n\t\t\t\tindex = indexCurrent + j * ( 1 / sampling ) * ( indexNext - indexCurrent );\r\n\r\n\t\t\t\tposition = this.getPoint( index );\r\n\t\t\t\tnewpoints.push( tmpVec.copy( position ).clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tnewpoints.push( tmpVec.copy( this.points[ i ] ).clone() );\r\n\r\n\t\t}\r\n\r\n\t\tthis.points = newpoints;\r\n\r\n\t};\r\n\r\n\t// Catmull-Rom\r\n\r\n\tfunction interpolate( p0, p1, p2, p3, t, t2, t3 ) {\r\n\r\n\t\tvar v0 = ( p2 - p0 ) * 0.5,\r\n\t\t\tv1 = ( p3 - p1 ) * 0.5;\r\n\r\n\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/math/Triangle.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Triangle = function ( a, b, c ) {\r\n\r\n\tthis.a = ( a !== undefined ) ? a : new THREE.Vector3();\r\n\tthis.b = ( b !== undefined ) ? b : new THREE.Vector3();\r\n\tthis.c = ( c !== undefined ) ? c : new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Triangle.normal = function () {\r\n\r\n\tvar v0 = new THREE.Vector3();\r\n\r\n\treturn function ( a, b, c, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\tresult.subVectors( c, b );\r\n\t\tv0.subVectors( a, b );\r\n\t\tresult.cross( v0 );\r\n\r\n\t\tvar resultLengthSq = result.lengthSq();\r\n\t\tif ( resultLengthSq > 0 ) {\r\n\r\n\t\t\treturn result.multiplyScalar( 1 / Math.sqrt( resultLengthSq ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn result.set( 0, 0, 0 );\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// static/instance method to calculate barycoordinates\r\n// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\r\nTHREE.Triangle.barycoordFromPoint = function () {\r\n\r\n\tvar v0 = new THREE.Vector3();\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\r\n\treturn function ( point, a, b, c, optionalTarget ) {\r\n\r\n\t\tv0.subVectors( c, a );\r\n\t\tv1.subVectors( b, a );\r\n\t\tv2.subVectors( point, a );\r\n\r\n\t\tvar dot00 = v0.dot( v0 );\r\n\t\tvar dot01 = v0.dot( v1 );\r\n\t\tvar dot02 = v0.dot( v2 );\r\n\t\tvar dot11 = v1.dot( v1 );\r\n\t\tvar dot12 = v1.dot( v2 );\r\n\r\n\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t// colinear or singular triangle\r\n\t\tif ( denom == 0 ) {\r\n\t\t\t// arbitrary location outside of triangle?\r\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\r\n\t\t\treturn result.set( - 2, - 1, - 1 );\r\n\t\t}\r\n\r\n\t\tvar invDenom = 1 / denom;\r\n\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\r\n\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\r\n\r\n\t\t// barycoordinates must always sum to 1\r\n\t\treturn result.set( 1 - u - v, v, u );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Triangle.containsPoint = function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\r\n\treturn function ( point, a, b, c ) {\r\n\r\n\t\tvar result = THREE.Triangle.barycoordFromPoint( point, a, b, c, v1 );\r\n\r\n\t\treturn ( result.x >= 0 ) && ( result.y >= 0 ) && ( ( result.x + result.y ) <= 1 );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Triangle.prototype = {\r\n\r\n\tconstructor: THREE.Triangle,\r\n\r\n\tset: function ( a, b, c ) {\r\n\r\n\t\tthis.a.copy( a );\r\n\t\tthis.b.copy( b );\r\n\t\tthis.c.copy( c );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\r\n\r\n\t\tthis.a.copy( points[ i0 ] );\r\n\t\tthis.b.copy( points[ i1 ] );\r\n\t\tthis.c.copy( points[ i2 ] );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( triangle ) {\r\n\r\n\t\tthis.a.copy( triangle.a );\r\n\t\tthis.b.copy( triangle.b );\r\n\t\tthis.c.copy( triangle.c );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tarea: function () {\r\n\r\n\t\tvar v0 = new THREE.Vector3();\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tv0.subVectors( this.c, this.b );\r\n\t\t\tv1.subVectors( this.a, this.b );\r\n\r\n\t\t\treturn v0.cross( v1 ).length() * 0.5;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmidpoint: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\r\n\r\n\t},\r\n\r\n\tnormal: function ( optionalTarget ) {\r\n\r\n\t\treturn THREE.Triangle.normal( this.a, this.b, this.c, optionalTarget );\r\n\r\n\t},\r\n\r\n\tplane: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Plane();\r\n\r\n\t\treturn result.setFromCoplanarPoints( this.a, this.b, this.c );\r\n\r\n\t},\r\n\r\n\tbarycoordFromPoint: function ( point, optionalTarget ) {\r\n\r\n\t\treturn THREE.Triangle.barycoordFromPoint( point, this.a, this.b, this.c, optionalTarget );\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\treturn THREE.Triangle.containsPoint( point, this.a, this.b, this.c );\r\n\r\n\t},\r\n\r\n\tequals: function ( triangle ) {\r\n\r\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Triangle().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/Clock.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Clock = function ( autoStart ) {\r\n\r\n\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\r\n\r\n\tthis.startTime = 0;\r\n\tthis.oldTime = 0;\r\n\tthis.elapsedTime = 0;\r\n\r\n\tthis.running = false;\r\n\r\n};\r\n\r\nTHREE.Clock.prototype = {\r\n\r\n\tconstructor: THREE.Clock,\r\n\r\n\tstart: function () {\r\n\r\n\t\tthis.startTime = self.performance !== undefined && self.performance.now !== undefined\r\n\t\t\t\t\t ? self.performance.now()\r\n\t\t\t\t\t : Date.now();\r\n\r\n\t\tthis.oldTime = this.startTime;\r\n\t\tthis.running = true;\r\n\t},\r\n\r\n\tstop: function () {\r\n\r\n\t\tthis.getElapsedTime();\r\n\t\tthis.running = false;\r\n\r\n\t},\r\n\r\n\tgetElapsedTime: function () {\r\n\r\n\t\tthis.getDelta();\r\n\t\treturn this.elapsedTime;\r\n\r\n\t},\r\n\r\n\tgetDelta: function () {\r\n\r\n\t\tvar diff = 0;\r\n\r\n\t\tif ( this.autoStart && ! this.running ) {\r\n\r\n\t\t\tthis.start();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.running ) {\r\n\r\n\t\t\tvar newTime = self.performance !== undefined && self.performance.now !== undefined\r\n\t\t\t\t\t ? self.performance.now()\r\n\t\t\t\t\t : Date.now();\r\n\r\n\t\t\tdiff = 0.001 * ( newTime - this.oldTime );\r\n\t\t\tthis.oldTime = newTime;\r\n\r\n\t\t\tthis.elapsedTime += diff;\r\n\r\n\t\t}\r\n\r\n\t\treturn diff;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/EventDispatcher.js\r\n\r\n/**\r\n * https://github.com/mrdoob/eventdispatcher.js/\r\n */\r\n\r\nTHREE.EventDispatcher = function () {}\r\n\r\nTHREE.EventDispatcher.prototype = {\r\n\r\n\tconstructor: THREE.EventDispatcher,\r\n\r\n\tapply: function ( object ) {\r\n\r\n\t\tobject.addEventListener = THREE.EventDispatcher.prototype.addEventListener;\r\n\t\tobject.hasEventListener = THREE.EventDispatcher.prototype.hasEventListener;\r\n\t\tobject.removeEventListener = THREE.EventDispatcher.prototype.removeEventListener;\r\n\t\tobject.dispatchEvent = THREE.EventDispatcher.prototype.dispatchEvent;\r\n\r\n\t},\r\n\r\n\taddEventListener: function ( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) this._listeners = {};\r\n\r\n\t\tvar listeners = this._listeners;\r\n\r\n\t\tif ( listeners[ type ] === undefined ) {\r\n\r\n\t\t\tlisteners[ type ] = [];\r\n\r\n\t\t}\r\n\r\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\r\n\r\n\t\t\tlisteners[ type ].push( listener );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\thasEventListener: function ( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) return false;\r\n\r\n\t\tvar listeners = this._listeners;\r\n\r\n\t\tif ( listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tremoveEventListener: function ( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) return;\r\n\r\n\t\tvar listeners = this._listeners;\r\n\t\tvar listenerArray = listeners[ type ];\r\n\r\n\t\tif ( listenerArray !== undefined ) {\r\n\r\n\t\t\tvar index = listenerArray.indexOf( listener );\r\n\r\n\t\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\t\tlistenerArray.splice( index, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tdispatchEvent: function ( event ) {\r\n\r\n\t\tif ( this._listeners === undefined ) return;\r\n\r\n\t\tvar listeners = this._listeners;\r\n\t\tvar listenerArray = listeners[ event.type ];\r\n\r\n\t\tif ( listenerArray !== undefined ) {\r\n\r\n\t\t\tevent.target = this;\r\n\r\n\t\t\tvar array = [];\r\n\t\t\tvar length = listenerArray.length;\r\n\r\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n\t\t\t\tarray[ i ] = listenerArray[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n\t\t\t\tarray[ i ].call( this, event );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/Raycaster.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author bhouston / http://exocortex.com/\r\n * @author stephomi / http://stephaneginier.com/\r\n */\r\n\r\n( function ( THREE ) {\r\n\r\n\tTHREE.Raycaster = function ( origin, direction, near, far ) {\r\n\r\n\t\tthis.ray = new THREE.Ray( origin, direction );\r\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\r\n\t\tthis.near = near || 0;\r\n\t\tthis.far = far || Infinity;\r\n\r\n\t\tthis.params = {\r\n\t\t\tSprite: {},\r\n\t\t\tMesh: {},\r\n\t\t\tPointCloud: { threshold: 1 },\r\n\t\t\tLOD: {},\r\n\t\t\tLine: {}\r\n\t\t};\r\n\r\n\t};\r\n\r\n\tvar descSort = function ( a, b ) {\r\n\r\n\t\treturn a.distance - b.distance;\r\n\r\n\t};\r\n\r\n\tvar intersectObject = function ( object, raycaster, intersects, recursive ) {\r\n\r\n\t\tobject.raycast( raycaster, intersects );\r\n\r\n\t\tif ( recursive === true ) {\r\n\r\n\t\t\tvar children = object.children;\r\n\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tTHREE.Raycaster.prototype = {\r\n\r\n\t\tconstructor: THREE.Raycaster,\r\n\r\n\t\tprecision: 0.0001,\r\n\t\tlinePrecision: 1,\r\n\r\n\t\tset: function ( origin, direction ) {\r\n\r\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\r\n\t\t\tthis.ray.set( origin, direction );\r\n\r\n\t\t},\r\n\r\n\t\tsetFromCamera: function ( coords, camera ) {\r\n\r\n\t\t\t// camera is assumed _not_ to be a child of a transformed object\r\n\r\n\t\t\tif ( camera instanceof THREE.PerspectiveCamera ) {\r\n\r\n\t\t\t\tthis.ray.origin.copy( camera.position );\r\n\t\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( camera.position ).normalize();\r\n\r\n\t\t\t} else if ( camera instanceof THREE.OrthographicCamera ) {\r\n\r\n\t\t\t\tthis.ray.origin.set( coords.x, coords.y, - 1 ).unproject( camera );\r\n\t\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tTHREE.error( 'THREE.Raycaster: Unsupported camera type.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tintersectObject: function ( object, recursive ) {\r\n\r\n\t\t\tvar intersects = [];\r\n\r\n\t\t\tintersectObject( object, this, intersects, recursive );\r\n\r\n\t\t\tintersects.sort( descSort );\r\n\r\n\t\t\treturn intersects;\r\n\r\n\t\t},\r\n\r\n\t\tintersectObjects: function ( objects, recursive ) {\r\n\r\n\t\t\tvar intersects = [];\r\n\r\n\t\t\tif ( objects instanceof Array === false ) {\r\n\r\n\t\t\t\tTHREE.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\r\n\t\t\t\treturn intersects;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tintersects.sort( descSort );\r\n\r\n\t\t\treturn intersects;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}( THREE ) );\r\n\r\n// File:src/core/Object3D.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Object3D = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.Object3DIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'Object3D';\r\n\r\n\tthis.parent = undefined;\r\n\tthis.children = [];\r\n\r\n\tthis.up = THREE.Object3D.DefaultUp.clone();\r\n\r\n\tvar position = new THREE.Vector3();\r\n\tvar rotation = new THREE.Euler();\r\n\tvar quaternion = new THREE.Quaternion();\r\n\tvar scale = new THREE.Vector3( 1, 1, 1 );\r\n\r\n\tvar onRotationChange = function () {\r\n\t\tquaternion.setFromEuler( rotation, false );\r\n\t};\r\n\r\n\tvar onQuaternionChange = function () {\r\n\t\trotation.setFromQuaternion( quaternion, undefined, false );\r\n\t};\r\n\r\n\trotation.onChange( onRotationChange );\r\n\tquaternion.onChange( onQuaternionChange );\r\n\r\n\tObject.defineProperties( this, {\r\n\t\tposition: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: position\r\n\t\t},\r\n\t\trotation: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: rotation\r\n\t\t},\r\n\t\tquaternion: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: quaternion\r\n\t\t},\r\n\t\tscale: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: scale\r\n\t\t}\r\n\t} );\r\n\r\n\tthis.rotationAutoUpdate = true;\r\n\r\n\tthis.matrix = new THREE.Matrix4();\r\n\tthis.matrixWorld = new THREE.Matrix4();\r\n\r\n\tthis.matrixAutoUpdate = true;\r\n\tthis.matrixWorldNeedsUpdate = false;\r\n\r\n\tthis.visible = true;\r\n\r\n\tthis.castShadow = false;\r\n\tthis.receiveShadow = false;\r\n\r\n\tthis.frustumCulled = true;\r\n\tthis.renderOrder = 0;\r\n\r\n\tthis.userData = {};\r\n\r\n};\r\n\r\nTHREE.Object3D.DefaultUp = new THREE.Vector3( 0, 1, 0 );\r\n\r\nTHREE.Object3D.prototype = {\r\n\r\n\tconstructor: THREE.Object3D,\r\n\r\n\tget eulerOrder () {\r\n\r\n\t\tTHREE.warn( 'THREE.Object3D: .eulerOrder has been moved to .rotation.order.' );\r\n\r\n\t\treturn this.rotation.order;\r\n\r\n\t},\r\n\r\n\tset eulerOrder ( value ) {\r\n\r\n\t\tTHREE.warn( 'THREE.Object3D: .eulerOrder has been moved to .rotation.order.' );\r\n\r\n\t\tthis.rotation.order = value;\r\n\r\n\t},\r\n\r\n\tget useQuaternion () {\r\n\r\n\t\tTHREE.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\r\n\t},\r\n\r\n\tset useQuaternion ( value ) {\r\n\r\n\t\tTHREE.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\r\n\t},\r\n\r\n\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\r\n\r\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\r\n\r\n\t},\r\n\r\n\tsetRotationFromAxisAngle: function ( axis, angle ) {\r\n\r\n\t\t// assumes axis is normalized\r\n\r\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\r\n\r\n\t},\r\n\r\n\tsetRotationFromEuler: function ( euler ) {\r\n\r\n\t\tthis.quaternion.setFromEuler( euler, true );\r\n\r\n\t},\r\n\r\n\tsetRotationFromMatrix: function ( m ) {\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tthis.quaternion.setFromRotationMatrix( m );\r\n\r\n\t},\r\n\r\n\tsetRotationFromQuaternion: function ( q ) {\r\n\r\n\t\t// assumes q is normalized\r\n\r\n\t\tthis.quaternion.copy( q );\r\n\r\n\t},\r\n\r\n\trotateOnAxis: function () {\r\n\r\n\t\t// rotate object on axis in object space\r\n\t\t// axis is assumed to be normalized\r\n\r\n\t\tvar q1 = new THREE.Quaternion();\r\n\r\n\t\treturn function ( axis, angle ) {\r\n\r\n\t\t\tq1.setFromAxisAngle( axis, angle );\r\n\r\n\t\t\tthis.quaternion.multiply( q1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\trotateX: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\r\n\r\n\t\treturn function ( angle ) {\r\n\r\n\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateY: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\r\n\r\n\t\treturn function ( angle ) {\r\n\r\n\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateZ: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\t\treturn function ( angle ) {\r\n\r\n\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslateOnAxis: function () {\r\n\r\n\t\t// translate object by distance along axis in object space\r\n\t\t// axis is assumed to be normalized\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( axis, distance ) {\r\n\r\n\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\r\n\r\n\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\ttranslate: function ( distance, axis ) {\r\n\r\n\t\tTHREE.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\r\n\t\treturn this.translateOnAxis( axis, distance );\r\n\r\n\t},\r\n\r\n\ttranslateX: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\r\n\r\n\t\treturn function ( distance ) {\r\n\r\n\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslateY: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\r\n\r\n\t\treturn function ( distance ) {\r\n\r\n\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslateZ: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\t\treturn function ( distance ) {\r\n\r\n\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlocalToWorld: function ( vector ) {\r\n\r\n\t\treturn vector.applyMatrix4( this.matrixWorld );\r\n\r\n\t},\r\n\r\n\tworldToLocal: function () {\r\n\r\n\t\tvar m1 = new THREE.Matrix4();\r\n\r\n\t\treturn function ( vector ) {\r\n\r\n\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlookAt: function () {\r\n\r\n\t\t// This routine does not support objects with rotated and/or translated parent(s)\r\n\r\n\t\tvar m1 = new THREE.Matrix4();\r\n\r\n\t\treturn function ( vector ) {\r\n\r\n\t\t\tm1.lookAt( vector, this.position, this.up );\r\n\r\n\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tadd: function ( object ) {\r\n\r\n\t\tif ( arguments.length > 1 ) {\r\n\r\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\r\n\t\t\t\tthis.add( arguments[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t\tif ( object === this ) {\r\n\r\n\t\t\tTHREE.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tif ( object instanceof THREE.Object3D ) {\r\n\r\n\t\t\tif ( object.parent !== undefined ) {\r\n\r\n\t\t\t\tobject.parent.remove( object );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobject.parent = this;\r\n\t\t\tobject.dispatchEvent( { type: 'added' } );\r\n\r\n\t\t\tthis.children.push( object );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tTHREE.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tremove: function ( object ) {\r\n\r\n\t\tif ( arguments.length > 1 ) {\r\n\r\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\r\n\t\t\t\tthis.remove( arguments[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tvar index = this.children.indexOf( object );\r\n\r\n\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\tobject.parent = undefined;\r\n\r\n\t\t\tobject.dispatchEvent( { type: 'removed' } );\r\n\r\n\t\t\tthis.children.splice( index, 1 );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetChildByName: function ( name ) {\r\n\r\n\t\tTHREE.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\r\n\t\treturn this.getObjectByName( name );\r\n\r\n\t},\r\n\r\n\tgetObjectById: function ( id ) {\r\n\r\n\t\treturn this.getObjectByProperty( 'id', id );\r\n\r\n\t},\r\n\r\n\tgetObjectByName: function ( name ) {\r\n\r\n\t\treturn this.getObjectByProperty( 'name', name );\r\n\r\n\t},\r\n\r\n\tgetObjectByProperty: function ( name, value ) {\r\n\r\n\t\tif ( this[ name ] === value ) return this;\r\n\r\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar child = this.children[ i ];\r\n\t\t\tvar object = child.getObjectByProperty( name, value );\r\n\r\n\t\t\tif ( object !== undefined ) {\r\n\r\n\t\t\t\treturn object;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn undefined;\r\n\r\n\t},\r\n\r\n\tgetWorldPosition: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\treturn result.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t},\r\n\r\n\tgetWorldQuaternion: function () {\r\n\r\n\t\tvar position = new THREE.Vector3();\r\n\t\tvar scale = new THREE.Vector3();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Quaternion();\r\n\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\tthis.matrixWorld.decompose( position, result, scale );\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tgetWorldRotation: function () {\r\n\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Euler();\r\n\r\n\t\t\tthis.getWorldQuaternion( quaternion );\r\n\r\n\t\t\treturn result.setFromQuaternion( quaternion, this.rotation.order, false );\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tgetWorldScale: function () {\r\n\r\n\t\tvar position = new THREE.Vector3();\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\tthis.matrixWorld.decompose( position, quaternion, result );\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tgetWorldDirection: function () {\r\n\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t\tthis.getWorldQuaternion( quaternion );\r\n\r\n\t\t\treturn result.set( 0, 0, 1 ).applyQuaternion( quaternion );\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\traycast: function () {},\r\n\r\n\ttraverse: function ( callback ) {\r\n\r\n\t\tcallback( this );\r\n\r\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n\t\t\tthis.children[ i ].traverse( callback );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttraverseVisible: function ( callback ) {\r\n\r\n\t\tif ( this.visible === false ) return;\r\n\r\n\t\tcallback( this );\r\n\r\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n\t\t\tthis.children[ i ].traverseVisible( callback );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttraverseAncestors: function ( callback ) {\r\n\r\n\t\tif ( this.parent ) {\r\n\r\n\t\t\tcallback( this.parent );\r\n\r\n\t\t\tthis.parent.traverseAncestors( callback );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tupdateMatrix: function () {\r\n\r\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\r\n\r\n\t\tthis.matrixWorldNeedsUpdate = true;\r\n\r\n\t},\r\n\r\n\tupdateMatrixWorld: function ( force ) {\r\n\r\n\t\tif ( this.matrixAutoUpdate === true ) this.updateMatrix();\r\n\r\n\t\tif ( this.matrixWorldNeedsUpdate === true || force === true ) {\r\n\r\n\t\t\tif ( this.parent === undefined ) {\r\n\r\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.matrixWorldNeedsUpdate = false;\r\n\r\n\t\t\tforce = true;\r\n\r\n\t\t}\r\n\r\n\t\t// update children\r\n\r\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n\t\t\tthis.children[ i ].updateMatrixWorld( force );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttoJSON: function () {\r\n\r\n\t\tvar output = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.3,\r\n\t\t\t\ttype: 'Object',\r\n\t\t\t\tgenerator: 'ObjectExporter'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t//\r\n\r\n\t\tvar geometries = {};\r\n\r\n\t\tvar parseGeometry = function ( geometry ) {\r\n\r\n\t\t\tif ( output.geometries === undefined ) {\r\n\r\n\t\t\t\toutput.geometries = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometries[ geometry.uuid ] === undefined ) {\r\n\r\n\t\t\t\tvar json = geometry.toJSON();\r\n\r\n\t\t\t\tdelete json.metadata;\r\n\r\n\t\t\t\tgeometries[ geometry.uuid ] = json;\r\n\r\n\t\t\t\toutput.geometries.push( json );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn geometry.uuid;\r\n\r\n\t\t};\r\n\r\n\t\t//\r\n\r\n\t\tvar materials = {};\r\n\r\n\t\tvar parseMaterial = function ( material ) {\r\n\r\n\t\t\tif ( output.materials === undefined ) {\r\n\r\n\t\t\t\toutput.materials = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( materials[ material.uuid ] === undefined ) {\r\n\r\n\t\t\t\tvar json = material.toJSON();\r\n\r\n\t\t\t\tdelete json.metadata;\r\n\r\n\t\t\t\tmaterials[ material.uuid ] = json;\r\n\r\n\t\t\t\toutput.materials.push( json );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn material.uuid;\r\n\r\n\t\t};\r\n\r\n\t\t//\r\n\r\n\t\tvar parseObject = function ( object ) {\r\n\r\n\t\t\tvar data = {};\r\n\r\n\t\t\tdata.uuid = object.uuid;\r\n\t\t\tdata.type = object.type;\r\n\r\n\t\t\tif ( object.name !== '' ) data.name = object.name;\r\n\t\t\tif ( JSON.stringify( object.userData ) !== '{}' ) data.userData = object.userData;\r\n\t\t\tif ( object.visible !== true ) data.visible = object.visible;\r\n\r\n\t\t\tif ( object instanceof THREE.PerspectiveCamera ) {\r\n\r\n\t\t\t\tdata.fov = object.fov;\r\n\t\t\t\tdata.aspect = object.aspect;\r\n\t\t\t\tdata.near = object.near;\r\n\t\t\t\tdata.far = object.far;\r\n\r\n\t\t\t} else if ( object instanceof THREE.OrthographicCamera ) {\r\n\r\n\t\t\t\tdata.left = object.left;\r\n\t\t\t\tdata.right = object.right;\r\n\t\t\t\tdata.top = object.top;\r\n\t\t\t\tdata.bottom = object.bottom;\r\n\t\t\t\tdata.near = object.near;\r\n\t\t\t\tdata.far = object.far;\r\n\r\n\t\t\t} else if ( object instanceof THREE.AmbientLight ) {\r\n\r\n\t\t\t\tdata.color = object.color.getHex();\r\n\r\n\t\t\t} else if ( object instanceof THREE.DirectionalLight ) {\r\n\r\n\t\t\t\tdata.color = object.color.getHex();\r\n\t\t\t\tdata.intensity = object.intensity;\r\n\r\n\t\t\t} else if ( object instanceof THREE.PointLight ) {\r\n\r\n\t\t\t\tdata.color = object.color.getHex();\r\n\t\t\t\tdata.intensity = object.intensity;\r\n\t\t\t\tdata.distance = object.distance;\r\n\t\t\t\tdata.decay = object.decay;\r\n\r\n\t\t\t} else if ( object instanceof THREE.SpotLight ) {\r\n\r\n\t\t\t\tdata.color = object.color.getHex();\r\n\t\t\t\tdata.intensity = object.intensity;\r\n\t\t\t\tdata.distance = object.distance;\r\n\t\t\t\tdata.angle = object.angle;\r\n\t\t\t\tdata.exponent = object.exponent;\r\n\t\t\t\tdata.decay = object.decay;\r\n\r\n\t\t\t} else if ( object instanceof THREE.HemisphereLight ) {\r\n\r\n\t\t\t\tdata.color = object.color.getHex();\r\n\t\t\t\tdata.groundColor = object.groundColor.getHex();\r\n\r\n\t\t\t} else if ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.PointCloud ) {\r\n\r\n\t\t\t\tdata.geometry = parseGeometry( object.geometry );\r\n\t\t\t\tdata.material = parseMaterial( object.material );\r\n\r\n\t\t\t\tif ( object instanceof THREE.Line ) data.mode = object.mode;\r\n\r\n\t\t\t} else if ( object instanceof THREE.Sprite ) {\r\n\r\n\t\t\t\tdata.material = parseMaterial( object.material );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdata.matrix = object.matrix.toArray();\r\n\r\n\t\t\tif ( object.children.length > 0 ) {\r\n\r\n\t\t\t\tdata.children = [];\r\n\r\n\t\t\t\tfor ( var i = 0; i < object.children.length; i ++ ) {\r\n\r\n\t\t\t\t\tdata.children.push( parseObject( object.children[ i ] ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\toutput.object = parseObject( this );\r\n\r\n\t\treturn output;\r\n\r\n\t},\r\n\r\n\tclone: function ( object, recursive ) {\r\n\r\n\t\tif ( object === undefined ) object = new THREE.Object3D();\r\n\t\tif ( recursive === undefined ) recursive = true;\r\n\r\n\t\tobject.name = this.name;\r\n\r\n\t\tobject.up.copy( this.up );\r\n\r\n\t\tobject.position.copy( this.position );\r\n\t\tobject.quaternion.copy( this.quaternion );\r\n\t\tobject.scale.copy( this.scale );\r\n\r\n\t\tobject.rotationAutoUpdate = this.rotationAutoUpdate;\r\n\r\n\t\tobject.matrix.copy( this.matrix );\r\n\t\tobject.matrixWorld.copy( this.matrixWorld );\r\n\r\n\t\tobject.matrixAutoUpdate = this.matrixAutoUpdate;\r\n\t\tobject.matrixWorldNeedsUpdate = this.matrixWorldNeedsUpdate;\r\n\r\n\t\tobject.visible = this.visible;\r\n\r\n\t\tobject.castShadow = this.castShadow;\r\n\t\tobject.receiveShadow = this.receiveShadow;\r\n\r\n\t\tobject.frustumCulled = this.frustumCulled;\r\n\r\n\t\tobject.userData = JSON.parse( JSON.stringify( this.userData ) );\r\n\r\n\t\tif ( recursive === true ) {\r\n\r\n\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\r\n\r\n\t\t\t\tvar child = this.children[ i ];\r\n\t\t\t\tobject.add( child.clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn object;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Object3D.prototype );\r\n\r\nTHREE.Object3DIdCount = 0;\r\n\r\n// File:src/core/Face3.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Face3 = function ( a, b, c, normal, color, materialIndex ) {\r\n\r\n\tthis.a = a;\r\n\tthis.b = b;\r\n\tthis.c = c;\r\n\r\n\tthis.normal = normal instanceof THREE.Vector3 ? normal : new THREE.Vector3();\r\n\tthis.vertexNormals = normal instanceof Array ? normal : [];\r\n\r\n\tthis.color = color instanceof THREE.Color ? color : new THREE.Color();\r\n\tthis.vertexColors = color instanceof Array ? color : [];\r\n\r\n\tthis.vertexTangents = [];\r\n\r\n\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\r\n\r\n};\r\n\r\nTHREE.Face3.prototype = {\r\n\r\n\tconstructor: THREE.Face3,\r\n\r\n\tclone: function () {\r\n\r\n\t\tvar face = new THREE.Face3( this.a, this.b, this.c );\r\n\r\n\t\tface.normal.copy( this.normal );\r\n\t\tface.color.copy( this.color );\r\n\r\n\t\tface.materialIndex = this.materialIndex;\r\n\r\n\t\tfor ( var i = 0, il = this.vertexNormals.length; i < il; i ++ ) {\r\n\r\n\t\t\tface.vertexNormals[ i ] = this.vertexNormals[ i ].clone();\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = this.vertexColors.length; i < il; i ++ ) {\r\n\r\n\t\t\tface.vertexColors[ i ] = this.vertexColors[ i ].clone();\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = this.vertexTangents.length; i < il; i ++ ) {\r\n\r\n\t\t\tface.vertexTangents[ i ] = this.vertexTangents[ i ].clone();\r\n\r\n\t\t}\r\n\r\n\t\treturn face;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/Face4.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Face4 = function ( a, b, c, d, normal, color, materialIndex ) {\r\n\r\n\tTHREE.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' )\r\n\treturn new THREE.Face3( a, b, c, normal, color, materialIndex );\r\n\r\n};\r\n\r\n// File:src/core/BufferAttribute.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BufferAttribute = function ( array, itemSize ) {\r\n\r\n\tthis.array = array;\r\n\tthis.itemSize = itemSize;\r\n\r\n\tthis.needsUpdate = false;\r\n\r\n};\r\n\r\nTHREE.BufferAttribute.prototype = {\r\n\r\n\tconstructor: THREE.BufferAttribute,\r\n\r\n\tget length () {\r\n\r\n\t\treturn this.array.length;\r\n\r\n\t},\r\n\r\n\tcopyAt: function ( index1, attribute, index2 ) {\r\n\r\n\t\tindex1 *= this.itemSize;\r\n\t\tindex2 *= attribute.itemSize;\r\n\r\n\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\r\n\r\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tset: function ( value, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.array.set( value, offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetX: function ( index, x ) {\r\n\r\n\t\tthis.array[ index * this.itemSize ] = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( index, y ) {\r\n\r\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetZ: function ( index, z ) {\r\n\r\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXY: function ( index, x, y ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tthis.array[ index     ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZ: function ( index, x, y, z ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tthis.array[ index     ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\t\tthis.array[ index + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZW: function ( index, x, y, z, w ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tthis.array[ index     ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\t\tthis.array[ index + 2 ] = z;\r\n\t\tthis.array[ index + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.BufferAttribute( new this.array.constructor( this.array ), this.itemSize );\r\n\r\n\t}\r\n\r\n};\r\n\r\n//\r\n\r\nTHREE.Int8Attribute = function ( data, itemSize ) {\r\n\r\n\tTHREE.warn( 'THREE.Int8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.' );\r\n\treturn new THREE.BufferAttribute( data, itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint8Attribute = function ( data, itemSize ) {\r\n\r\n\tTHREE.warn( 'THREE.Uint8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.' );\r\n\treturn new THREE.BufferAttribute( data, itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint8ClampedAttribute = function ( data, itemSize ) {\r\n\r\n\tTHREE.warn( 'THREE.Uint8ClampedAttribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.' );\r\n\treturn new THREE.BufferAttribute( data, itemSize );\r\n\r\n\r\n};\r\n\r\nTHREE.Int16Attribute = function ( data, itemSize ) {\r\n\r\n\tTHREE.warn( 'THREE.Int16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.' );\r\n\treturn new THREE.BufferAttribute( data, itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint16Attribute = function ( data, itemSize ) {\r\n\r\n\tTHREE.warn( 'THREE.Uint16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.' );\r\n\treturn new THREE.BufferAttribute( data, itemSize );\r\n\r\n};\r\n\r\nTHREE.Int32Attribute = function ( data, itemSize ) {\r\n\r\n\tTHREE.warn( 'THREE.Int32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.' );\r\n\treturn new THREE.BufferAttribute( data, itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint32Attribute = function ( data, itemSize ) {\r\n\r\n\tTHREE.warn( 'THREE.Uint32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.' );\r\n\treturn new THREE.BufferAttribute( data, itemSize );\r\n\r\n};\r\n\r\nTHREE.Float32Attribute = function ( data, itemSize ) {\r\n\r\n\tTHREE.warn( 'THREE.Float32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.' );\r\n\treturn new THREE.BufferAttribute( data, itemSize );\r\n\r\n};\r\n\r\nTHREE.Float64Attribute = function ( data, itemSize ) {\r\n\r\n\tTHREE.warn( 'THREE.Float64Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.' );\r\n\treturn new THREE.BufferAttribute( data, itemSize );\r\n\r\n};\r\n\r\n// File:src/core/DynamicBufferAttribute.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.DynamicBufferAttribute = function ( array, itemSize ) {\r\n\r\n\tTHREE.BufferAttribute.call( this, array, itemSize );\r\n\r\n\tthis.updateRange = { offset: 0, count: -1 };\r\n\r\n};\r\n\r\nTHREE.DynamicBufferAttribute.prototype = Object.create( THREE.BufferAttribute.prototype );\r\nTHREE.DynamicBufferAttribute.prototype.constructor = THREE.DynamicBufferAttribute;\r\n\r\nTHREE.DynamicBufferAttribute.prototype.clone = function () {\r\n\r\n\treturn new THREE.DynamicBufferAttribute( new this.array.constructor( this.array ), this.itemSize );\r\n\r\n};\r\n\r\n// File:src/core/BufferGeometry.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BufferGeometry = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'BufferGeometry';\r\n\r\n\tthis.attributes = {};\r\n\tthis.attributesKeys = [];\r\n\r\n\tthis.drawcalls = [];\r\n\tthis.offsets = this.drawcalls; // backwards compatibility\r\n\r\n\tthis.boundingBox = null;\r\n\tthis.boundingSphere = null;\r\n\r\n};\r\n\r\nTHREE.BufferGeometry.prototype = {\r\n\r\n\tconstructor: THREE.BufferGeometry,\r\n\r\n\taddAttribute: function ( name, attribute ) {\r\n\r\n\t\tif ( attribute instanceof THREE.BufferAttribute === false ) {\r\n\r\n\t\t\tTHREE.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\r\n\r\n\t\t\tthis.attributes[ name ] = { array: arguments[ 1 ], itemSize: arguments[ 2 ] };\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tthis.attributes[ name ] = attribute;\r\n\t\tthis.attributesKeys = Object.keys( this.attributes );\r\n\r\n\t},\r\n\r\n\tgetAttribute: function ( name ) {\r\n\r\n\t\treturn this.attributes[ name ];\r\n\r\n\t},\r\n\r\n\taddDrawCall: function ( start, count, indexOffset ) {\r\n\r\n\t\tthis.drawcalls.push( {\r\n\r\n\t\t\tstart: start,\r\n\t\t\tcount: count,\r\n\t\t\tindex: indexOffset !== undefined ? indexOffset : 0\r\n\r\n\t\t} );\r\n\r\n\t},\r\n\r\n\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\tvar position = this.attributes.position;\r\n\r\n\t\tif ( position !== undefined ) {\r\n\r\n\t\t\tmatrix.applyToVector3Array( position.array );\r\n\t\t\tposition.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tvar normal = this.attributes.normal;\r\n\r\n\t\tif ( normal !== undefined ) {\r\n\r\n\t\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\t\tnormalMatrix.applyToVector3Array( normal.array );\r\n\t\t\tnormal.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingBox !== null ) {\r\n\r\n\t\t\tthis.computeBoundingBox();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.computeBoundingSphere();\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcenter: function () {\r\n\r\n\t\tthis.computeBoundingBox();\r\n\r\n\t\tvar offset = this.boundingBox.center().negate();\r\n\r\n\t\tthis.applyMatrix( new THREE.Matrix4().setPosition( offset ) );\r\n\r\n\t\treturn offset;\r\n\r\n\t},\r\n\r\n\tfromGeometry: function ( geometry, settings ) {\r\n\r\n\t\tsettings = settings || { 'vertexColors': THREE.NoColors };\r\n\r\n\t\tvar vertices = geometry.vertices;\r\n\t\tvar faces = geometry.faces;\r\n\t\tvar faceVertexUvs = geometry.faceVertexUvs;\r\n\t\tvar vertexColors = settings.vertexColors;\r\n\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ].length > 0;\r\n\t\tvar hasFaceVertexNormals = faces[ 0 ].vertexNormals.length == 3;\r\n\r\n\t\tvar positions = new Float32Array( faces.length * 3 * 3 );\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\r\n\r\n\t\tvar normals = new Float32Array( faces.length * 3 * 3 );\r\n\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\r\n\t\tif ( vertexColors !== THREE.NoColors ) {\r\n\r\n\t\t\tvar colors = new Float32Array( faces.length * 3 * 3 );\r\n\t\t\tthis.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( hasFaceVertexUv === true ) {\r\n\r\n\t\t\tvar uvs = new Float32Array( faces.length * 3 * 2 );\r\n\t\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, i2 = 0, i3 = 0; i < faces.length; i ++, i2 += 6, i3 += 9 ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tvar a = vertices[ face.a ];\r\n\t\t\tvar b = vertices[ face.b ];\r\n\t\t\tvar c = vertices[ face.c ];\r\n\r\n\t\t\tpositions[ i3     ] = a.x;\r\n\t\t\tpositions[ i3 + 1 ] = a.y;\r\n\t\t\tpositions[ i3 + 2 ] = a.z;\r\n\r\n\t\t\tpositions[ i3 + 3 ] = b.x;\r\n\t\t\tpositions[ i3 + 4 ] = b.y;\r\n\t\t\tpositions[ i3 + 5 ] = b.z;\r\n\r\n\t\t\tpositions[ i3 + 6 ] = c.x;\r\n\t\t\tpositions[ i3 + 7 ] = c.y;\r\n\t\t\tpositions[ i3 + 8 ] = c.z;\r\n\r\n\t\t\tif ( hasFaceVertexNormals === true ) {\r\n\r\n\t\t\t\tvar na = face.vertexNormals[ 0 ];\r\n\t\t\t\tvar nb = face.vertexNormals[ 1 ];\r\n\t\t\t\tvar nc = face.vertexNormals[ 2 ];\r\n\r\n\t\t\t\tnormals[ i3     ] = na.x;\r\n\t\t\t\tnormals[ i3 + 1 ] = na.y;\r\n\t\t\t\tnormals[ i3 + 2 ] = na.z;\r\n\r\n\t\t\t\tnormals[ i3 + 3 ] = nb.x;\r\n\t\t\t\tnormals[ i3 + 4 ] = nb.y;\r\n\t\t\t\tnormals[ i3 + 5 ] = nb.z;\r\n\r\n\t\t\t\tnormals[ i3 + 6 ] = nc.x;\r\n\t\t\t\tnormals[ i3 + 7 ] = nc.y;\r\n\t\t\t\tnormals[ i3 + 8 ] = nc.z;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar n = face.normal;\r\n\r\n\t\t\t\tnormals[ i3     ] = n.x;\r\n\t\t\t\tnormals[ i3 + 1 ] = n.y;\r\n\t\t\t\tnormals[ i3 + 2 ] = n.z;\r\n\r\n\t\t\t\tnormals[ i3 + 3 ] = n.x;\r\n\t\t\t\tnormals[ i3 + 4 ] = n.y;\r\n\t\t\t\tnormals[ i3 + 5 ] = n.z;\r\n\r\n\t\t\t\tnormals[ i3 + 6 ] = n.x;\r\n\t\t\t\tnormals[ i3 + 7 ] = n.y;\r\n\t\t\t\tnormals[ i3 + 8 ] = n.z;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( vertexColors === THREE.FaceColors ) {\r\n\r\n\t\t\t\tvar fc = face.color;\r\n\r\n\t\t\t\tcolors[ i3     ] = fc.r;\r\n\t\t\t\tcolors[ i3 + 1 ] = fc.g;\r\n\t\t\t\tcolors[ i3 + 2 ] = fc.b;\r\n\r\n\t\t\t\tcolors[ i3 + 3 ] = fc.r;\r\n\t\t\t\tcolors[ i3 + 4 ] = fc.g;\r\n\t\t\t\tcolors[ i3 + 5 ] = fc.b;\r\n\r\n\t\t\t\tcolors[ i3 + 6 ] = fc.r;\r\n\t\t\t\tcolors[ i3 + 7 ] = fc.g;\r\n\t\t\t\tcolors[ i3 + 8 ] = fc.b;\r\n\r\n\t\t\t} else if ( vertexColors === THREE.VertexColors ) {\r\n\r\n\t\t\t\tvar vca = face.vertexColors[ 0 ];\r\n\t\t\t\tvar vcb = face.vertexColors[ 1 ];\r\n\t\t\t\tvar vcc = face.vertexColors[ 2 ];\r\n\r\n\t\t\t\tcolors[ i3     ] = vca.r;\r\n\t\t\t\tcolors[ i3 + 1 ] = vca.g;\r\n\t\t\t\tcolors[ i3 + 2 ] = vca.b;\r\n\r\n\t\t\t\tcolors[ i3 + 3 ] = vcb.r;\r\n\t\t\t\tcolors[ i3 + 4 ] = vcb.g;\r\n\t\t\t\tcolors[ i3 + 5 ] = vcb.b;\r\n\r\n\t\t\t\tcolors[ i3 + 6 ] = vcc.r;\r\n\t\t\t\tcolors[ i3 + 7 ] = vcc.g;\r\n\t\t\t\tcolors[ i3 + 8 ] = vcc.b;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexUv === true ) {\r\n\r\n\t\t\t\tvar uva = faceVertexUvs[ 0 ][ i ][ 0 ];\r\n\t\t\t\tvar uvb = faceVertexUvs[ 0 ][ i ][ 1 ];\r\n\t\t\t\tvar uvc = faceVertexUvs[ 0 ][ i ][ 2 ];\r\n\r\n\t\t\t\tuvs[ i2     ] = uva.x;\r\n\t\t\t\tuvs[ i2 + 1 ] = uva.y;\r\n\r\n\t\t\t\tuvs[ i2 + 2 ] = uvb.x;\r\n\t\t\t\tuvs[ i2 + 3 ] = uvb.y;\r\n\r\n\t\t\t\tuvs[ i2 + 4 ] = uvc.x;\r\n\t\t\t\tuvs[ i2 + 5 ] = uvc.y;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.computeBoundingSphere()\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcomputeBoundingBox: function () {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tif ( this.boundingBox === null ) {\r\n\r\n\t\t\t\tthis.boundingBox = new THREE.Box3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar positions = this.attributes.position.array;\r\n\r\n\t\t\tif ( positions ) {\r\n\r\n\t\t\t\tvar bb = this.boundingBox;\r\n\t\t\t\tbb.makeEmpty();\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tvector.set( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\r\n\t\t\t\t\tbb.expandByPoint( vector );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( positions === undefined || positions.length === 0 ) {\r\n\r\n\t\t\t\tthis.boundingBox.min.set( 0, 0, 0 );\r\n\t\t\t\tthis.boundingBox.max.set( 0, 0, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\r\n\r\n\t\t\t\tTHREE.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tcomputeBoundingSphere: function () {\r\n\r\n\t\tvar box = new THREE.Box3();\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tif ( this.boundingSphere === null ) {\r\n\r\n\t\t\t\tthis.boundingSphere = new THREE.Sphere();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar positions = this.attributes.position.array;\r\n\r\n\t\t\tif ( positions ) {\r\n\r\n\t\t\t\tbox.makeEmpty();\r\n\r\n\t\t\t\tvar center = this.boundingSphere.center;\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tvector.set( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\r\n\t\t\t\t\tbox.expandByPoint( vector );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbox.center( center );\r\n\r\n\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\r\n\t\t\t\t// boundingSphere of the boundingBox:  sqrt(3) smaller in the best case\r\n\r\n\t\t\t\tvar maxRadiusSq = 0;\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tvector.set( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\r\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\r\n\r\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\r\n\r\n\t\t\t\t\tTHREE.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tcomputeFaceNormals: function () {\r\n\r\n\t\t// backwards compatibility\r\n\r\n\t},\r\n\r\n\tcomputeVertexNormals: function () {\r\n\r\n\t\tvar attributes = this.attributes;\r\n\r\n\t\tif ( attributes.position ) {\r\n\r\n\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\tif ( attributes.normal === undefined ) {\r\n\r\n\t\t\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( new Float32Array( positions.length ), 3 ) );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// reset existing normals to zero\r\n\r\n\t\t\t\tvar normals = attributes.normal.array;\r\n\r\n\t\t\t\tfor ( var i = 0, il = normals.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tnormals[ i ] = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar normals = attributes.normal.array;\r\n\r\n\t\t\tvar vA, vB, vC,\r\n\r\n\t\t\tpA = new THREE.Vector3(),\r\n\t\t\tpB = new THREE.Vector3(),\r\n\t\t\tpC = new THREE.Vector3(),\r\n\r\n\t\t\tcb = new THREE.Vector3(),\r\n\t\t\tab = new THREE.Vector3();\r\n\r\n\t\t\t// indexed elements\r\n\r\n\t\t\tif ( attributes.index ) {\r\n\r\n\t\t\t\tvar indices = attributes.index.array;\r\n\r\n\t\t\t\tvar offsets = ( this.offsets.length > 0 ? this.offsets : [ { start: 0, count: indices.length, index: 0 } ] );\r\n\r\n\t\t\t\tfor ( var j = 0, jl = offsets.length; j < jl; ++ j ) {\r\n\r\n\t\t\t\t\tvar start = offsets[ j ].start;\r\n\t\t\t\t\tvar count = offsets[ j ].count;\r\n\t\t\t\t\tvar index = offsets[ j ].index;\r\n\r\n\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\t\tvA = ( index + indices[ i     ] ) * 3;\r\n\t\t\t\t\t\tvB = ( index + indices[ i + 1 ] ) * 3;\r\n\t\t\t\t\t\tvC = ( index + indices[ i + 2 ] ) * 3;\r\n\r\n\t\t\t\t\t\tpA.fromArray( positions, vA );\r\n\t\t\t\t\t\tpB.fromArray( positions, vB );\r\n\t\t\t\t\t\tpC.fromArray( positions, vC );\r\n\r\n\t\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\t\t\tnormals[ vA     ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t\tnormals[ vB     ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t\tnormals[ vC     ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\r\n\r\n\t\t\t\t\tpA.fromArray( positions, i );\r\n\t\t\t\t\tpB.fromArray( positions, i + 3 );\r\n\t\t\t\t\tpC.fromArray( positions, i + 6 );\r\n\r\n\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\t\tnormals[ i     ] = cb.x;\r\n\t\t\t\t\tnormals[ i + 1 ] = cb.y;\r\n\t\t\t\t\tnormals[ i + 2 ] = cb.z;\r\n\r\n\t\t\t\t\tnormals[ i + 3 ] = cb.x;\r\n\t\t\t\t\tnormals[ i + 4 ] = cb.y;\r\n\t\t\t\t\tnormals[ i + 5 ] = cb.z;\r\n\r\n\t\t\t\t\tnormals[ i + 6 ] = cb.x;\r\n\t\t\t\t\tnormals[ i + 7 ] = cb.y;\r\n\t\t\t\t\tnormals[ i + 8 ] = cb.z;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.normalizeNormals();\r\n\r\n\t\t\tattributes.normal.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeTangents: function () {\r\n\r\n\t\t// based on http://www.terathon.com/code/tangent.html\r\n\t\t// (per vertex tangents)\r\n\r\n\t\tif ( this.attributes.index === undefined ||\r\n\t\t\t this.attributes.position === undefined ||\r\n\t\t\t this.attributes.normal === undefined ||\r\n\t\t\t this.attributes.uv === undefined ) {\r\n\r\n\t\t\tTHREE.warn( 'THREE.BufferGeometry: Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar indices = this.attributes.index.array;\r\n\t\tvar positions = this.attributes.position.array;\r\n\t\tvar normals = this.attributes.normal.array;\r\n\t\tvar uvs = this.attributes.uv.array;\r\n\r\n\t\tvar nVertices = positions.length / 3;\r\n\r\n\t\tif ( this.attributes.tangent === undefined ) {\r\n\r\n\t\t\tthis.addAttribute( 'tangent', new THREE.BufferAttribute( new Float32Array( 4 * nVertices ), 4 ) );\r\n\r\n\t\t}\r\n\r\n\t\tvar tangents = this.attributes.tangent.array;\r\n\r\n\t\tvar tan1 = [], tan2 = [];\r\n\r\n\t\tfor ( var k = 0; k < nVertices; k ++ ) {\r\n\r\n\t\t\ttan1[ k ] = new THREE.Vector3();\r\n\t\t\ttan2[ k ] = new THREE.Vector3();\r\n\r\n\t\t}\r\n\r\n\t\tvar vA = new THREE.Vector3(),\r\n\t\t\tvB = new THREE.Vector3(),\r\n\t\t\tvC = new THREE.Vector3(),\r\n\r\n\t\t\tuvA = new THREE.Vector2(),\r\n\t\t\tuvB = new THREE.Vector2(),\r\n\t\t\tuvC = new THREE.Vector2(),\r\n\r\n\t\t\tx1, x2, y1, y2, z1, z2,\r\n\t\t\ts1, s2, t1, t2, r;\r\n\r\n\t\tvar sdir = new THREE.Vector3(), tdir = new THREE.Vector3();\r\n\r\n\t\tfunction handleTriangle( a, b, c ) {\r\n\r\n\t\t\tvA.fromArray( positions, a * 3 );\r\n\t\t\tvB.fromArray( positions, b * 3 );\r\n\t\t\tvC.fromArray( positions, c * 3 );\r\n\r\n\t\t\tuvA.fromArray( uvs, a * 2 );\r\n\t\t\tuvB.fromArray( uvs, b * 2 );\r\n\t\t\tuvC.fromArray( uvs, c * 2 );\r\n\r\n\t\t\tx1 = vB.x - vA.x;\r\n\t\t\tx2 = vC.x - vA.x;\r\n\r\n\t\t\ty1 = vB.y - vA.y;\r\n\t\t\ty2 = vC.y - vA.y;\r\n\r\n\t\t\tz1 = vB.z - vA.z;\r\n\t\t\tz2 = vC.z - vA.z;\r\n\r\n\t\t\ts1 = uvB.x - uvA.x;\r\n\t\t\ts2 = uvC.x - uvA.x;\r\n\r\n\t\t\tt1 = uvB.y - uvA.y;\r\n\t\t\tt2 = uvC.y - uvA.y;\r\n\r\n\t\t\tr = 1.0 / ( s1 * t2 - s2 * t1 );\r\n\r\n\t\t\tsdir.set(\r\n\t\t\t\t( t2 * x1 - t1 * x2 ) * r,\r\n\t\t\t\t( t2 * y1 - t1 * y2 ) * r,\r\n\t\t\t\t( t2 * z1 - t1 * z2 ) * r\r\n\t\t\t);\r\n\r\n\t\t\ttdir.set(\r\n\t\t\t\t( s1 * x2 - s2 * x1 ) * r,\r\n\t\t\t\t( s1 * y2 - s2 * y1 ) * r,\r\n\t\t\t\t( s1 * z2 - s2 * z1 ) * r\r\n\t\t\t);\r\n\r\n\t\t\ttan1[ a ].add( sdir );\r\n\t\t\ttan1[ b ].add( sdir );\r\n\t\t\ttan1[ c ].add( sdir );\r\n\r\n\t\t\ttan2[ a ].add( tdir );\r\n\t\t\ttan2[ b ].add( tdir );\r\n\t\t\ttan2[ c ].add( tdir );\r\n\r\n\t\t}\r\n\r\n\t\tvar i, il;\r\n\t\tvar j, jl;\r\n\t\tvar iA, iB, iC;\r\n\r\n\t\tif ( this.drawcalls.length === 0 ) {\r\n\r\n\t\t\tthis.addDrawCall( 0, indices.length, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tvar drawcalls = this.drawcalls;\r\n\r\n\t\tfor ( j = 0, jl = drawcalls.length; j < jl; ++ j ) {\r\n\r\n\t\t\tvar start = drawcalls[ j ].start;\r\n\t\t\tvar count = drawcalls[ j ].count;\r\n\t\t\tvar index = drawcalls[ j ].index;\r\n\r\n\t\t\tfor ( i = start, il = start + count; i < il; i += 3 ) {\r\n\r\n\t\t\t\tiA = index + indices[ i ];\r\n\t\t\t\tiB = index + indices[ i + 1 ];\r\n\t\t\t\tiC = index + indices[ i + 2 ];\r\n\r\n\t\t\t\thandleTriangle( iA, iB, iC );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar tmp = new THREE.Vector3(), tmp2 = new THREE.Vector3();\r\n\t\tvar n = new THREE.Vector3(), n2 = new THREE.Vector3();\r\n\t\tvar w, t, test;\r\n\r\n\t\tfunction handleVertex( v ) {\r\n\r\n\t\t\tn.fromArray( normals, v * 3 );\r\n\t\t\tn2.copy( n );\r\n\r\n\t\t\tt = tan1[ v ];\r\n\r\n\t\t\t// Gram-Schmidt orthogonalize\r\n\r\n\t\t\ttmp.copy( t );\r\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\r\n\r\n\t\t\t// Calculate handedness\r\n\r\n\t\t\ttmp2.crossVectors( n2, t );\r\n\t\t\ttest = tmp2.dot( tan2[ v ] );\r\n\t\t\tw = ( test < 0.0 ) ? - 1.0 : 1.0;\r\n\r\n\t\t\ttangents[ v * 4     ] = tmp.x;\r\n\t\t\ttangents[ v * 4 + 1 ] = tmp.y;\r\n\t\t\ttangents[ v * 4 + 2 ] = tmp.z;\r\n\t\t\ttangents[ v * 4 + 3 ] = w;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( j = 0, jl = drawcalls.length; j < jl; ++ j ) {\r\n\r\n\t\t\tvar start = drawcalls[ j ].start;\r\n\t\t\tvar count = drawcalls[ j ].count;\r\n\t\t\tvar index = drawcalls[ j ].index;\r\n\r\n\t\t\tfor ( i = start, il = start + count; i < il; i += 3 ) {\r\n\r\n\t\t\t\tiA = index + indices[ i ];\r\n\t\t\t\tiB = index + indices[ i + 1 ];\r\n\t\t\t\tiC = index + indices[ i + 2 ];\r\n\r\n\t\t\t\thandleVertex( iA );\r\n\t\t\t\thandleVertex( iB );\r\n\t\t\t\thandleVertex( iC );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t/*\r\n\tCompute the draw offset for large models by chunking the index buffer into chunks of 65k addressable vertices.\r\n\tThis method will effectively rewrite the index buffer and remap all attributes to match the new indices.\r\n\tWARNING: This method will also expand the vertex count to prevent sprawled triangles across draw offsets.\r\n\tsize - Defaults to 65535, but allows for larger or smaller chunks.\r\n\t*/\r\n\tcomputeOffsets: function ( size ) {\r\n\r\n\t\tif ( size === undefined ) size = 65535; // WebGL limits type of index buffer values to 16-bit.\r\n\r\n\t\tvar indices = this.attributes.index.array;\r\n\t\tvar vertices = this.attributes.position.array;\r\n\r\n\t\tvar facesCount = ( indices.length / 3 );\r\n\r\n\t\t/*\r\n\t\tconsole.log(\"Computing buffers in offsets of \"+size+\" -> indices:\"+indices.length+\" vertices:\"+vertices.length);\r\n\t\tconsole.log(\"Faces to process: \"+(indices.length/3));\r\n\t\tconsole.log(\"Reordering \"+verticesCount+\" vertices.\");\r\n\t\t*/\r\n\r\n\t\tvar sortedIndices = new Uint16Array( indices.length ); //16-bit buffers\r\n\t\tvar indexPtr = 0;\r\n\t\tvar vertexPtr = 0;\r\n\r\n\t\tvar offsets = [ { start:0, count:0, index:0 } ];\r\n\t\tvar offset = offsets[ 0 ];\r\n\r\n\t\tvar duplicatedVertices = 0;\r\n\t\tvar newVerticeMaps = 0;\r\n\t\tvar faceVertices = new Int32Array( 6 );\r\n\t\tvar vertexMap = new Int32Array( vertices.length );\r\n\t\tvar revVertexMap = new Int32Array( vertices.length );\r\n\t\tfor ( var j = 0; j < vertices.length; j ++ ) { vertexMap[ j ] = - 1; revVertexMap[ j ] = - 1; }\r\n\r\n\t\t/*\r\n\t\t\tTraverse every face and reorder vertices in the proper offsets of 65k.\r\n\t\t\tWe can have more than 65k entries in the index buffer per offset, but only reference 65k values.\r\n\t\t*/\r\n\t\tfor ( var findex = 0; findex < facesCount; findex ++ ) {\r\n\t\t\tnewVerticeMaps = 0;\r\n\r\n\t\t\tfor ( var vo = 0; vo < 3; vo ++ ) {\r\n\t\t\t\tvar vid = indices[ findex * 3 + vo ];\r\n\t\t\t\tif ( vertexMap[ vid ] == - 1 ) {\r\n\t\t\t\t\t//Unmapped vertice\r\n\t\t\t\t\tfaceVertices[ vo * 2 ] = vid;\r\n\t\t\t\t\tfaceVertices[ vo * 2 + 1 ] = - 1;\r\n\t\t\t\t\tnewVerticeMaps ++;\r\n\t\t\t\t} else if ( vertexMap[ vid ] < offset.index ) {\r\n\t\t\t\t\t//Reused vertices from previous block (duplicate)\r\n\t\t\t\t\tfaceVertices[ vo * 2 ] = vid;\r\n\t\t\t\t\tfaceVertices[ vo * 2 + 1 ] = - 1;\r\n\t\t\t\t\tduplicatedVertices ++;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//Reused vertice in the current block\r\n\t\t\t\t\tfaceVertices[ vo * 2 ] = vid;\r\n\t\t\t\t\tfaceVertices[ vo * 2 + 1 ] = vertexMap[ vid ];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar faceMax = vertexPtr + newVerticeMaps;\r\n\t\t\tif ( faceMax > ( offset.index + size ) ) {\r\n\t\t\t\tvar new_offset = { start:indexPtr, count:0, index:vertexPtr };\r\n\t\t\t\toffsets.push( new_offset );\r\n\t\t\t\toffset = new_offset;\r\n\r\n\t\t\t\t//Re-evaluate reused vertices in light of new offset.\r\n\t\t\t\tfor ( var v = 0; v < 6; v += 2 ) {\r\n\t\t\t\t\tvar new_vid = faceVertices[ v + 1 ];\r\n\t\t\t\t\tif ( new_vid > - 1 && new_vid < offset.index )\r\n\t\t\t\t\t\tfaceVertices[ v + 1 ] = - 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//Reindex the face.\r\n\t\t\tfor ( var v = 0; v < 6; v += 2 ) {\r\n\t\t\t\tvar vid = faceVertices[ v ];\r\n\t\t\t\tvar new_vid = faceVertices[ v + 1 ];\r\n\r\n\t\t\t\tif ( new_vid === - 1 )\r\n\t\t\t\t\tnew_vid = vertexPtr ++;\r\n\r\n\t\t\t\tvertexMap[ vid ] = new_vid;\r\n\t\t\t\trevVertexMap[ new_vid ] = vid;\r\n\t\t\t\tsortedIndices[ indexPtr ++ ] = new_vid - offset.index; //XXX overflows at 16bit\r\n\t\t\t\toffset.count ++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/* Move all attribute values to map to the new computed indices , also expand the vertice stack to match our new vertexPtr. */\r\n\t\tthis.reorderBuffers( sortedIndices, revVertexMap, vertexPtr );\r\n\t\tthis.offsets = offsets; // TODO: Deprecate\r\n\t\tthis.drawcalls = offsets;\r\n\r\n\t\t/*\r\n\t\tvar orderTime = Date.now();\r\n\t\tconsole.log(\"Reorder time: \"+(orderTime-s)+\"ms\");\r\n\t\tconsole.log(\"Duplicated \"+duplicatedVertices+\" vertices.\");\r\n\t\tconsole.log(\"Compute Buffers time: \"+(Date.now()-s)+\"ms\");\r\n\t\tconsole.log(\"Draw offsets: \"+offsets.length);\r\n\t\t*/\r\n\r\n\t\treturn offsets;\r\n\r\n\t},\r\n\r\n\tmerge: function ( geometry, offset ) {\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry === false ) {\r\n\r\n\t\t\tTHREE.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tvar attributes = this.attributes;\r\n\r\n\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\r\n\r\n\t\t\tvar attribute1 = attributes[ key ];\r\n\t\t\tvar attributeArray1 = attribute1.array;\r\n\r\n\t\t\tvar attribute2 = geometry.attributes[ key ];\r\n\t\t\tvar attributeArray2 = attribute2.array;\r\n\r\n\t\t\tvar attributeSize = attribute2.itemSize;\r\n\r\n\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\r\n\r\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnormalizeNormals: function () {\r\n\r\n\t\tvar normals = this.attributes.normal.array;\r\n\r\n\t\tvar x, y, z, n;\r\n\r\n\t\tfor ( var i = 0, il = normals.length; i < il; i += 3 ) {\r\n\r\n\t\t\tx = normals[ i ];\r\n\t\t\ty = normals[ i + 1 ];\r\n\t\t\tz = normals[ i + 2 ];\r\n\r\n\t\t\tn = 1.0 / Math.sqrt( x * x + y * y + z * z );\r\n\r\n\t\t\tnormals[ i     ] *= n;\r\n\t\t\tnormals[ i + 1 ] *= n;\r\n\t\t\tnormals[ i + 2 ] *= n;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t/*\r\n\t\treoderBuffers:\r\n\t\tReorder attributes based on a new indexBuffer and indexMap.\r\n\t\tindexBuffer - Uint16Array of the new ordered indices.\r\n\t\tindexMap - Int32Array where the position is the new vertex ID and the value the old vertex ID for each vertex.\r\n\t\tvertexCount - Amount of total vertices considered in this reordering (in case you want to grow the vertice stack).\r\n\t*/\r\n\treorderBuffers: function ( indexBuffer, indexMap, vertexCount ) {\r\n\r\n\t\t/* Create a copy of all attributes for reordering. */\r\n\t\tvar sortedAttributes = {};\r\n\t\tfor ( var attr in this.attributes ) {\r\n\t\t\tif ( attr == 'index' )\r\n\t\t\t\tcontinue;\r\n\t\t\tvar sourceArray = this.attributes[ attr ].array;\r\n\t\t\tsortedAttributes[ attr ] = new sourceArray.constructor( this.attributes[ attr ].itemSize * vertexCount );\r\n\t\t}\r\n\r\n\t\t/* Move attribute positions based on the new index map */\r\n\t\tfor ( var new_vid = 0; new_vid < vertexCount; new_vid ++ ) {\r\n\t\t\tvar vid = indexMap[ new_vid ];\r\n\t\t\tfor ( var attr in this.attributes ) {\r\n\t\t\t\tif ( attr == 'index' )\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tvar attrArray = this.attributes[ attr ].array;\r\n\t\t\t\tvar attrSize = this.attributes[ attr ].itemSize;\r\n\t\t\t\tvar sortedAttr = sortedAttributes[ attr ];\r\n\t\t\t\tfor ( var k = 0; k < attrSize; k ++ )\r\n\t\t\t\t\tsortedAttr[ new_vid * attrSize + k ] = attrArray[ vid * attrSize + k ];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/* Carry the new sorted buffers locally */\r\n\t\tthis.attributes[ 'index' ].array = indexBuffer;\r\n\t\tfor ( var attr in this.attributes ) {\r\n\t\t\tif ( attr == 'index' )\r\n\t\t\t\tcontinue;\r\n\t\t\tthis.attributes[ attr ].array = sortedAttributes[ attr ];\r\n\t\t\tthis.attributes[ attr ].numItems = this.attributes[ attr ].itemSize * vertexCount;\r\n\t\t}\r\n\t},\r\n\r\n\ttoJSON: function () {\r\n\r\n\t\tvar output = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.0,\r\n\t\t\t\ttype: 'BufferGeometry',\r\n\t\t\t\tgenerator: 'BufferGeometryExporter'\r\n\t\t\t},\r\n\t\t\tuuid: this.uuid,\r\n\t\t\ttype: this.type,\r\n\t\t\tdata: {\r\n\t\t\t\tattributes: {}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tvar attributes = this.attributes;\r\n\t\tvar offsets = this.offsets;\r\n\t\tvar boundingSphere = this.boundingSphere;\r\n\r\n\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\tvar attribute = attributes[ key ];\r\n\r\n\t\t\tvar array = Array.prototype.slice.call( attribute.array );\r\n\r\n\t\t\toutput.data.attributes[ key ] = {\r\n\t\t\t\titemSize: attribute.itemSize,\r\n\t\t\t\ttype: attribute.array.constructor.name,\r\n\t\t\t\tarray: array\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( offsets.length > 0 ) {\r\n\r\n\t\t\toutput.data.offsets = JSON.parse( JSON.stringify( offsets ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( boundingSphere !== null ) {\r\n\r\n\t\t\toutput.data.boundingSphere = {\r\n\t\t\t\tcenter: boundingSphere.center.toArray(),\r\n\t\t\t\tradius: boundingSphere.radius\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\t\tfor ( var attr in this.attributes ) {\r\n\r\n\t\t\tvar sourceAttr = this.attributes[ attr ];\r\n\t\t\tgeometry.addAttribute( attr, sourceAttr.clone() );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = this.offsets.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar offset = this.offsets[ i ];\r\n\r\n\t\t\tgeometry.offsets.push( {\r\n\r\n\t\t\t\tstart: offset.start,\r\n\t\t\t\tindex: offset.index,\r\n\t\t\t\tcount: offset.count\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\treturn geometry;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.BufferGeometry.prototype );\r\n\r\n// File:src/core/Geometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author kile / http://kile.stravaganza.org/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Geometry = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'Geometry';\r\n\r\n\tthis.vertices = [];\r\n\tthis.colors = [];  // one-to-one vertex colors, used in Points and Line\r\n\r\n\tthis.faces = [];\r\n\r\n\tthis.faceVertexUvs = [ [] ];\r\n\r\n\tthis.morphTargets = [];\r\n\tthis.morphColors = [];\r\n\tthis.morphNormals = [];\r\n\r\n\tthis.skinWeights = [];\r\n\tthis.skinIndices = [];\r\n\r\n\tthis.lineDistances = [];\r\n\r\n\tthis.boundingBox = null;\r\n\tthis.boundingSphere = null;\r\n\r\n\tthis.hasTangents = false;\r\n\r\n\tthis.dynamic = true; // the intermediate typed arrays will be deleted when set to false\r\n\r\n\t// update flags\r\n\r\n\tthis.verticesNeedUpdate = false;\r\n\tthis.elementsNeedUpdate = false;\r\n\tthis.uvsNeedUpdate = false;\r\n\tthis.normalsNeedUpdate = false;\r\n\tthis.tangentsNeedUpdate = false;\r\n\tthis.colorsNeedUpdate = false;\r\n\tthis.lineDistancesNeedUpdate = false;\r\n\r\n\tthis.groupsNeedUpdate = false;\r\n\r\n};\r\n\r\nTHREE.Geometry.prototype = {\r\n\r\n\tconstructor: THREE.Geometry,\r\n\r\n\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\tvertex.applyMatrix4( matrix );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar face = this.faces[ i ];\r\n\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingBox !== null ) {\r\n\r\n\t\t\tthis.computeBoundingBox();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.computeBoundingSphere();\r\n\r\n\t\t}\r\n\r\n\t\tthis.verticesNeedUpdate = true;\r\n\t\tthis.normalsNeedUpdate = true;\r\n\r\n\t},\r\n\r\n\tfromBufferGeometry: function ( geometry ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar attributes = geometry.attributes;\r\n\r\n\t\tvar vertices = attributes.position.array;\r\n\t\tvar indices = attributes.index !== undefined ? attributes.index.array : undefined;\r\n\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\r\n\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\r\n\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\r\n\r\n\t\tvar tempNormals = [];\r\n\t\tvar tempUVs = [];\r\n\r\n\t\tfor ( var i = 0, j = 0; i < vertices.length; i += 3, j += 2 ) {\r\n\r\n\t\t\tscope.vertices.push( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\r\n\r\n\t\t\tif ( normals !== undefined ) {\r\n\r\n\t\t\t\ttempNormals.push( new THREE.Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( colors !== undefined ) {\r\n\r\n\t\t\t\tscope.colors.push( new THREE.Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( uvs !== undefined ) {\r\n\r\n\t\t\t\ttempUVs.push( new THREE.Vector2( uvs[ j ], uvs[ j + 1 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar addFace = function ( a, b, c ) {\r\n\r\n\t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\r\n\t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\r\n\r\n\t\t\tscope.faces.push( new THREE.Face3( a, b, c, vertexNormals, vertexColors ) );\r\n\r\n\t\t\tif ( uvs !== undefined ) {\r\n\r\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tif ( indices !== undefined ) {\r\n\r\n\t\t\tvar drawcalls = geometry.drawcalls;\r\n\r\n\t\t\tif ( drawcalls.length > 0 ) {\r\n\r\n\t\t\t\tfor ( var i = 0; i < drawcalls.length; i ++ ) {\r\n\r\n\t\t\t\t\tvar drawcall = drawcalls[ i ];\r\n\r\n\t\t\t\t\tvar start = drawcall.start;\r\n\t\t\t\t\tvar count = drawcall.count;\r\n\t\t\t\t\tvar index = drawcall.index;\r\n\r\n\t\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\r\n\r\n\t\t\t\t\t\taddFace( index + indices[ j ], index + indices[ j + 1 ], index + indices[ j + 2 ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\r\n\r\n\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( var i = 0; i < vertices.length / 3; i += 3 ) {\r\n\r\n\t\t\t\taddFace( i, i + 1, i + 2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.computeFaceNormals();\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcenter: function () {\r\n\r\n\t\tthis.computeBoundingBox();\r\n\r\n\t\tvar offset = this.boundingBox.center().negate();\r\n\r\n\t\tthis.applyMatrix( new THREE.Matrix4().setPosition( offset ) );\r\n\r\n\t\treturn offset;\r\n\r\n\t},\r\n\r\n\tcomputeFaceNormals: function () {\r\n\r\n\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\r\n\r\n\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tvar face = this.faces[ f ];\r\n\r\n\t\t\tvar vA = this.vertices[ face.a ];\r\n\t\t\tvar vB = this.vertices[ face.b ];\r\n\t\t\tvar vC = this.vertices[ face.c ];\r\n\r\n\t\t\tcb.subVectors( vC, vB );\r\n\t\t\tab.subVectors( vA, vB );\r\n\t\t\tcb.cross( ab );\r\n\r\n\t\t\tcb.normalize();\r\n\r\n\t\t\tface.normal.copy( cb );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeVertexNormals: function ( areaWeighted ) {\r\n\r\n\t\tvar v, vl, f, fl, face, vertices;\r\n\r\n\t\tvertices = new Array( this.vertices.length );\r\n\r\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\r\n\t\t\tvertices[ v ] = new THREE.Vector3();\r\n\r\n\t\t}\r\n\r\n\t\tif ( areaWeighted ) {\r\n\r\n\t\t\t// vertex normals weighted by triangle areas\r\n\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\r\n\r\n\t\t\tvar vA, vB, vC;\r\n\t\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tvA = this.vertices[ face.a ];\r\n\t\t\t\tvB = this.vertices[ face.b ];\r\n\t\t\t\tvC = this.vertices[ face.c ];\r\n\r\n\t\t\t\tcb.subVectors( vC, vB );\r\n\t\t\t\tab.subVectors( vA, vB );\r\n\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\tvertices[ face.a ].add( cb );\r\n\t\t\t\tvertices[ face.b ].add( cb );\r\n\t\t\t\tvertices[ face.c ].add( cb );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tvertices[ face.a ].add( face.normal );\r\n\t\t\t\tvertices[ face.b ].add( face.normal );\r\n\t\t\t\tvertices[ face.c ].add( face.normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\r\n\t\t\tvertices[ v ].normalize();\r\n\r\n\t\t}\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\tface.vertexNormals[ 0 ] = vertices[ face.a ].clone();\r\n\t\t\tface.vertexNormals[ 1 ] = vertices[ face.b ].clone();\r\n\t\t\tface.vertexNormals[ 2 ] = vertices[ face.c ].clone();\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeMorphNormals: function () {\r\n\r\n\t\tvar i, il, f, fl, face;\r\n\r\n\t\t// save original normals\r\n\t\t// - create temp variables on first access\r\n\t\t//   otherwise just copy (for faster repeated calls)\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\tif ( ! face.__originalFaceNormal ) {\r\n\r\n\t\t\t\tface.__originalFaceNormal = face.normal.clone();\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tface.__originalFaceNormal.copy( face.normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\r\n\r\n\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\r\n\r\n\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// use temp geometry to compute face and vertex normals for each morph\r\n\r\n\t\tvar tmpGeo = new THREE.Geometry();\r\n\t\ttmpGeo.faces = this.faces;\r\n\r\n\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\t\t// create on first access\r\n\r\n\t\t\tif ( ! this.morphNormals[ i ] ) {\r\n\r\n\t\t\t\tthis.morphNormals[ i ] = {};\r\n\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\r\n\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\r\n\r\n\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\r\n\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\r\n\r\n\t\t\t\tvar faceNormal, vertexNormals;\r\n\r\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\tfaceNormal = new THREE.Vector3();\r\n\t\t\t\t\tvertexNormals = { a: new THREE.Vector3(), b: new THREE.Vector3(), c: new THREE.Vector3() };\r\n\r\n\t\t\t\t\tdstNormalsFace.push( faceNormal );\r\n\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar morphNormals = this.morphNormals[ i ];\r\n\r\n\t\t\t// set vertices to morph target\r\n\r\n\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\r\n\r\n\t\t\t// compute morph normals\r\n\r\n\t\t\ttmpGeo.computeFaceNormals();\r\n\t\t\ttmpGeo.computeVertexNormals();\r\n\r\n\t\t\t// store morph normals\r\n\r\n\t\t\tvar faceNormal, vertexNormals;\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\r\n\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\r\n\r\n\t\t\t\tfaceNormal.copy( face.normal );\r\n\r\n\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\r\n\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\r\n\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// restore original normals\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\tface.normal = face.__originalFaceNormal;\r\n\t\t\tface.vertexNormals = face.__originalVertexNormals;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeTangents: function () {\r\n\r\n\t\t// based on http://www.terathon.com/code/tangent.html\r\n\t\t// tangents go to vertices\r\n\r\n\t\tvar f, fl, v, vl, i, vertexIndex,\r\n\t\t\tface, uv, vA, vB, vC, uvA, uvB, uvC,\r\n\t\t\tx1, x2, y1, y2, z1, z2,\r\n\t\t\ts1, s2, t1, t2, r, t, test,\r\n\t\t\ttan1 = [], tan2 = [],\r\n\t\t\tsdir = new THREE.Vector3(), tdir = new THREE.Vector3(),\r\n\t\t\ttmp = new THREE.Vector3(), tmp2 = new THREE.Vector3(),\r\n\t\t\tn = new THREE.Vector3(), w;\r\n\r\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\r\n\t\t\ttan1[ v ] = new THREE.Vector3();\r\n\t\t\ttan2[ v ] = new THREE.Vector3();\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleTriangle( context, a, b, c, ua, ub, uc ) {\r\n\r\n\t\t\tvA = context.vertices[ a ];\r\n\t\t\tvB = context.vertices[ b ];\r\n\t\t\tvC = context.vertices[ c ];\r\n\r\n\t\t\tuvA = uv[ ua ];\r\n\t\t\tuvB = uv[ ub ];\r\n\t\t\tuvC = uv[ uc ];\r\n\r\n\t\t\tx1 = vB.x - vA.x;\r\n\t\t\tx2 = vC.x - vA.x;\r\n\t\t\ty1 = vB.y - vA.y;\r\n\t\t\ty2 = vC.y - vA.y;\r\n\t\t\tz1 = vB.z - vA.z;\r\n\t\t\tz2 = vC.z - vA.z;\r\n\r\n\t\t\ts1 = uvB.x - uvA.x;\r\n\t\t\ts2 = uvC.x - uvA.x;\r\n\t\t\tt1 = uvB.y - uvA.y;\r\n\t\t\tt2 = uvC.y - uvA.y;\r\n\r\n\t\t\tr = 1.0 / ( s1 * t2 - s2 * t1 );\r\n\t\t\tsdir.set( ( t2 * x1 - t1 * x2 ) * r,\r\n\t\t\t\t\t  ( t2 * y1 - t1 * y2 ) * r,\r\n\t\t\t\t\t  ( t2 * z1 - t1 * z2 ) * r );\r\n\t\t\ttdir.set( ( s1 * x2 - s2 * x1 ) * r,\r\n\t\t\t\t\t  ( s1 * y2 - s2 * y1 ) * r,\r\n\t\t\t\t\t  ( s1 * z2 - s2 * z1 ) * r );\r\n\r\n\t\t\ttan1[ a ].add( sdir );\r\n\t\t\ttan1[ b ].add( sdir );\r\n\t\t\ttan1[ c ].add( sdir );\r\n\r\n\t\t\ttan2[ a ].add( tdir );\r\n\t\t\ttan2[ b ].add( tdir );\r\n\t\t\ttan2[ c ].add( tdir );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\t\t\tuv = this.faceVertexUvs[ 0 ][ f ]; // use UV layer 0 for tangents\r\n\r\n\t\t\thandleTriangle( this, face.a, face.b, face.c, 0, 1, 2 );\r\n\r\n\t\t}\r\n\r\n\t\tvar faceIndex = [ 'a', 'b', 'c', 'd' ];\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\tfor ( i = 0; i < Math.min( face.vertexNormals.length, 3 ); i ++ ) {\r\n\r\n\t\t\t\tn.copy( face.vertexNormals[ i ] );\r\n\r\n\t\t\t\tvertexIndex = face[ faceIndex[ i ] ];\r\n\r\n\t\t\t\tt = tan1[ vertexIndex ];\r\n\r\n\t\t\t\t// Gram-Schmidt orthogonalize\r\n\r\n\t\t\t\ttmp.copy( t );\r\n\t\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\r\n\r\n\t\t\t\t// Calculate handedness\r\n\r\n\t\t\t\ttmp2.crossVectors( face.vertexNormals[ i ], t );\r\n\t\t\t\ttest = tmp2.dot( tan2[ vertexIndex ] );\r\n\t\t\t\tw = ( test < 0.0 ) ? - 1.0 : 1.0;\r\n\r\n\t\t\t\tface.vertexTangents[ i ] = new THREE.Vector4( tmp.x, tmp.y, tmp.z, w );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.hasTangents = true;\r\n\r\n\t},\r\n\r\n\tcomputeLineDistances: function () {\r\n\r\n\t\tvar d = 0;\r\n\t\tvar vertices = this.vertices;\r\n\r\n\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tif ( i > 0 ) {\r\n\r\n\t\t\t\td += vertices[ i ].distanceTo( vertices[ i - 1 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.lineDistances[ i ] = d;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeBoundingBox: function () {\r\n\r\n\t\tif ( this.boundingBox === null ) {\r\n\r\n\t\t\tthis.boundingBox = new THREE.Box3();\r\n\r\n\t\t}\r\n\r\n\t\tthis.boundingBox.setFromPoints( this.vertices );\r\n\r\n\t},\r\n\r\n\tcomputeBoundingSphere: function () {\r\n\r\n\t\tif ( this.boundingSphere === null ) {\r\n\r\n\t\t\tthis.boundingSphere = new THREE.Sphere();\r\n\r\n\t\t}\r\n\r\n\t\tthis.boundingSphere.setFromPoints( this.vertices );\r\n\r\n\t},\r\n\r\n\tmerge: function ( geometry, matrix, materialIndexOffset ) {\r\n\r\n\t\tif ( geometry instanceof THREE.Geometry === false ) {\r\n\r\n\t\t\tTHREE.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar normalMatrix,\r\n\t\tvertexOffset = this.vertices.length,\r\n\t\tvertices1 = this.vertices,\r\n\t\tvertices2 = geometry.vertices,\r\n\t\tfaces1 = this.faces,\r\n\t\tfaces2 = geometry.faces,\r\n\t\tuvs1 = this.faceVertexUvs[ 0 ],\r\n\t\tuvs2 = geometry.faceVertexUvs[ 0 ];\r\n\r\n\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\r\n\r\n\t\tif ( matrix !== undefined ) {\r\n\r\n\t\t\tnormalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\t}\r\n\r\n\t\t// vertices\r\n\r\n\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar vertex = vertices2[ i ];\r\n\r\n\t\t\tvar vertexCopy = vertex.clone();\r\n\r\n\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\r\n\r\n\t\t\tvertices1.push( vertexCopy );\r\n\r\n\t\t}\r\n\r\n\t\t// faces\r\n\r\n\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\r\n\t\t\tfaceVertexNormals = face.vertexNormals,\r\n\t\t\tfaceVertexColors = face.vertexColors;\r\n\r\n\t\t\tfaceCopy = new THREE.Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\r\n\t\t\tfaceCopy.normal.copy( face.normal );\r\n\r\n\t\t\tif ( normalMatrix !== undefined ) {\r\n\r\n\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tnormal = faceVertexNormals[ j ].clone();\r\n\r\n\t\t\t\tif ( normalMatrix !== undefined ) {\r\n\r\n\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfaceCopy.vertexNormals.push( normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfaceCopy.color.copy( face.color );\r\n\r\n\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tcolor = faceVertexColors[ j ];\r\n\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\r\n\r\n\t\t\tfaces1.push( faceCopy );\r\n\r\n\t\t}\r\n\r\n\t\t// uvs\r\n\r\n\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar uv = uvs2[ i ], uvCopy = [];\r\n\r\n\t\t\tif ( uv === undefined ) {\r\n\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tuvCopy.push( uv[ j ].clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuvs1.push( uvCopy );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tmergeMesh: function ( mesh ) {\r\n\r\n\t\tif ( mesh instanceof THREE.Mesh === false ) {\r\n\r\n\t\t\tTHREE.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tmesh.matrixAutoUpdate && mesh.updateMatrix();\r\n\r\n\t\tthis.merge( mesh.geometry, mesh.matrix );\r\n\r\n\t},\r\n\r\n\t/*\r\n\t * Checks for duplicate vertices with hashmap.\r\n\t * Duplicated vertices are removed\r\n\t * and faces' vertices are updated.\r\n\t */\r\n\r\n\tmergeVertices: function () {\r\n\r\n\t\tvar verticesMap = {}; // Hashmap for looking up vertice by position coordinates (and making sure they are unique)\r\n\t\tvar unique = [], changes = [];\r\n\r\n\t\tvar v, key;\r\n\t\tvar precisionPoints = 4; // number of decimal points, eg. 4 for epsilon of 0.0001\r\n\t\tvar precision = Math.pow( 10, precisionPoints );\r\n\t\tvar i, il, face;\r\n\t\tvar indices, j, jl;\r\n\r\n\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tv = this.vertices[ i ];\r\n\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\r\n\r\n\t\t\tif ( verticesMap[ key ] === undefined ) {\r\n\r\n\t\t\t\tverticesMap[ key ] = i;\r\n\t\t\t\tunique.push( this.vertices[ i ] );\r\n\t\t\t\tchanges[ i ] = unique.length - 1;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\r\n\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\r\n\t\t// if faces are completely degenerate after merging vertices, we\r\n\t\t// have to remove them from the geometry.\r\n\t\tvar faceIndicesToRemove = [];\r\n\r\n\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\r\n\t\t\tface = this.faces[ i ];\r\n\r\n\t\t\tface.a = changes[ face.a ];\r\n\t\t\tface.b = changes[ face.b ];\r\n\t\t\tface.c = changes[ face.c ];\r\n\r\n\t\t\tindices = [ face.a, face.b, face.c ];\r\n\r\n\t\t\tvar dupIndex = - 1;\r\n\r\n\t\t\t// if any duplicate vertices are found in a Face3\r\n\t\t\t// we have to remove the face as nothing can be saved\r\n\t\t\tfor ( var n = 0; n < 3; n ++ ) {\r\n\t\t\t\tif ( indices[ n ] == indices[ ( n + 1 ) % 3 ] ) {\r\n\r\n\t\t\t\t\tdupIndex = n;\r\n\t\t\t\t\tfaceIndicesToRemove.push( i );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\r\n\t\t\tvar idx = faceIndicesToRemove[ i ];\r\n\r\n\t\t\tthis.faces.splice( idx, 1 );\r\n\r\n\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Use unique set of vertices\r\n\r\n\t\tvar diff = this.vertices.length - unique.length;\r\n\t\tthis.vertices = unique;\r\n\t\treturn diff;\r\n\r\n\t},\r\n\r\n\ttoJSON: function () {\r\n\r\n\t\tvar output = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.0,\r\n\t\t\t\ttype: 'BufferGeometry',\r\n\t\t\t\tgenerator: 'BufferGeometryExporter'\r\n\t\t\t},\r\n\t\t\tuuid: this.uuid,\r\n\t\t\ttype: this.type\r\n\t\t};\r\n\r\n\t\tif ( this.name !== \"\" ) output.name = this.name;\r\n\r\n\t\tif ( this.parameters !== undefined ) {\r\n\r\n\t\t\tvar parameters = this.parameters;\r\n\r\n\t\t\tfor ( var key in parameters ) {\r\n\r\n\t\t\t\tif ( parameters[ key ] !== undefined ) output[ key ] = parameters[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn output;\r\n\r\n\t\t}\r\n\r\n\t\tvar vertices = [];\r\n\r\n\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\r\n\r\n\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t}\r\n\r\n\t\tvar faces = [];\r\n\t\tvar normals = [];\r\n\t\tvar normalsHash = {};\r\n\t\tvar colors = [];\r\n\t\tvar colorsHash = {};\r\n\t\tvar uvs = [];\r\n\t\tvar uvsHash = {};\r\n\r\n\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\r\n\r\n\t\t\tvar face = this.faces[ i ];\r\n\r\n\t\t\tvar hasMaterial = false; // face.materialIndex !== undefined;\r\n\t\t\tvar hasFaceUv = false; // deprecated\r\n\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\r\n\t\t\tvar hasFaceNormal = face.normal.length() > 0;\r\n\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\r\n\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\r\n\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\r\n\r\n\t\t\tvar faceType = 0;\r\n\r\n\t\t\tfaceType = setBit( faceType, 0, 0 );\r\n\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\r\n\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\r\n\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\r\n\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\r\n\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\r\n\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\r\n\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\r\n\r\n\t\t\tfaces.push( faceType );\r\n\t\t\tfaces.push( face.a, face.b, face.c );\r\n\r\n\r\n\t\t\t/*\r\n\t\t\tif ( hasMaterial ) {\r\n\r\n\t\t\t\tfaces.push( face.materialIndex );\r\n\r\n\t\t\t}\r\n\t\t\t*/\r\n\r\n\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\r\n\r\n\t\t\t\tfaces.push(\r\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\r\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\r\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n\t\t\t\tfaces.push(\r\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\r\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\r\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\tfaces.push( getColorIndex( face.color ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\tvar vertexColors = face.vertexColors;\r\n\r\n\t\t\t\tfaces.push(\r\n\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\r\n\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\r\n\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction setBit( value, position, enabled ) {\r\n\r\n\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position) );\r\n\r\n\t\t}\r\n\r\n\t\tfunction getNormalIndex( normal ) {\r\n\r\n\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\r\n\r\n\t\t\tif ( normalsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\treturn normalsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tnormalsHash[ hash ] = normals.length / 3;\r\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\r\n\t\t\treturn normalsHash[ hash ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction getColorIndex( color ) {\r\n\r\n\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\r\n\r\n\t\t\tif ( colorsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\treturn colorsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcolorsHash[ hash ] = colors.length;\r\n\t\t\tcolors.push( color.getHex() );\r\n\r\n\t\t\treturn colorsHash[ hash ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction getUvIndex( uv ) {\r\n\r\n\t\t\tvar hash = uv.x.toString() + uv.y.toString();\r\n\r\n\t\t\tif ( uvsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\treturn uvsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuvsHash[ hash ] = uvs.length / 2;\r\n\t\t\tuvs.push( uv.x, uv.y );\r\n\r\n\t\t\treturn uvsHash[ hash ];\r\n\r\n\t\t}\r\n\r\n\t\toutput.data = {};\r\n\r\n\t\toutput.data.vertices = vertices;\r\n\t\toutput.data.normals = normals;\r\n\t\tif ( colors.length > 0 ) output.data.colors = colors;\r\n\t\tif ( uvs.length > 0 ) output.data.uvs = [ uvs ]; // temporal backward compatibility\r\n\t\toutput.data.faces = faces;\r\n\r\n\t\t//\r\n\r\n\t\treturn output;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\tvar geometry = new THREE.Geometry();\r\n\r\n\t\tvar vertices = this.vertices;\r\n\r\n\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tgeometry.vertices.push( vertices[ i ].clone() );\r\n\r\n\t\t}\r\n\r\n\t\tvar faces = this.faces;\r\n\r\n\t\tfor ( var i = 0, il = faces.length; i < il; i ++ ) {\r\n\r\n\t\t\tgeometry.faces.push( faces[ i ].clone() );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = this.faceVertexUvs.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar faceVertexUvs = this.faceVertexUvs[ i ];\r\n\r\n\t\t\tif ( geometry.faceVertexUvs[ i ] === undefined ) {\r\n\r\n\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\r\n\r\n\t\t\t\tfor ( var k = 0, kl = uvs.length; k < kl; k ++ ) {\r\n\r\n\t\t\t\t\tvar uv = uvs[ k ];\r\n\r\n\t\t\t\t\tuvsCopy.push( uv.clone() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.faceVertexUvs[ i ].push( uvsCopy );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn geometry;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Geometry.prototype );\r\n\r\nTHREE.GeometryIdCount = 0;\r\n\r\n// File:src/cameras/Camera.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.Camera = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Camera';\r\n\r\n\tthis.matrixWorldInverse = new THREE.Matrix4();\r\n\tthis.projectionMatrix = new THREE.Matrix4();\r\n\r\n};\r\n\r\nTHREE.Camera.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Camera.prototype.constructor = THREE.Camera;\r\n\r\nTHREE.Camera.prototype.getWorldDirection = function () {\r\n\r\n\tvar quaternion = new THREE.Quaternion();\r\n\r\n\treturn function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\tthis.getWorldQuaternion( quaternion );\r\n\r\n\t\treturn result.set( 0, 0, - 1 ).applyQuaternion( quaternion );\r\n\r\n\t}\r\n\r\n}();\r\n\r\nTHREE.Camera.prototype.lookAt = function () {\r\n\r\n\t// This routine does not support cameras with rotated and/or translated parent(s)\r\n\r\n\tvar m1 = new THREE.Matrix4();\r\n\r\n\treturn function ( vector ) {\r\n\r\n\t\tm1.lookAt( this.position, vector, this.up );\r\n\r\n\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Camera.prototype.clone = function ( camera ) {\r\n\r\n\tif ( camera === undefined ) camera = new THREE.Camera();\r\n\r\n\tTHREE.Object3D.prototype.clone.call( this, camera );\r\n\r\n\tcamera.matrixWorldInverse.copy( this.matrixWorldInverse );\r\n\tcamera.projectionMatrix.copy( this.projectionMatrix );\r\n\r\n\treturn camera;\r\n};\r\n\r\n// File:src/cameras/CubeCamera.js\r\n\r\n/**\r\n * Camera for rendering cube maps\r\n *\t- renders scene into axis-aligned cube\r\n *\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.CubeCamera = function ( near, far, cubeResolution ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'CubeCamera';\r\n\r\n\tvar fov = 90, aspect = 1;\r\n\r\n\tvar cameraPX = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraPX.up.set( 0, - 1, 0 );\r\n\tcameraPX.lookAt( new THREE.Vector3( 1, 0, 0 ) );\r\n\tthis.add( cameraPX );\r\n\r\n\tvar cameraNX = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraNX.up.set( 0, - 1, 0 );\r\n\tcameraNX.lookAt( new THREE.Vector3( - 1, 0, 0 ) );\r\n\tthis.add( cameraNX );\r\n\r\n\tvar cameraPY = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraPY.up.set( 0, 0, 1 );\r\n\tcameraPY.lookAt( new THREE.Vector3( 0, 1, 0 ) );\r\n\tthis.add( cameraPY );\r\n\r\n\tvar cameraNY = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraNY.up.set( 0, 0, - 1 );\r\n\tcameraNY.lookAt( new THREE.Vector3( 0, - 1, 0 ) );\r\n\tthis.add( cameraNY );\r\n\r\n\tvar cameraPZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraPZ.up.set( 0, - 1, 0 );\r\n\tcameraPZ.lookAt( new THREE.Vector3( 0, 0, 1 ) );\r\n\tthis.add( cameraPZ );\r\n\r\n\tvar cameraNZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraNZ.up.set( 0, - 1, 0 );\r\n\tcameraNZ.lookAt( new THREE.Vector3( 0, 0, - 1 ) );\r\n\tthis.add( cameraNZ );\r\n\r\n\tthis.renderTarget = new THREE.WebGLRenderTargetCube( cubeResolution, cubeResolution, { format: THREE.RGBFormat, magFilter: THREE.LinearFilter, minFilter: THREE.LinearFilter } );\r\n\r\n\tthis.updateCubeMap = function ( renderer, scene ) {\r\n\r\n\t\tvar renderTarget = this.renderTarget;\r\n\t\tvar generateMipmaps = renderTarget.generateMipmaps;\r\n\r\n\t\trenderTarget.generateMipmaps = false;\r\n\r\n\t\trenderTarget.activeCubeFace = 0;\r\n\t\trenderer.render( scene, cameraPX, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 1;\r\n\t\trenderer.render( scene, cameraNX, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 2;\r\n\t\trenderer.render( scene, cameraPY, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 3;\r\n\t\trenderer.render( scene, cameraNY, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 4;\r\n\t\trenderer.render( scene, cameraPZ, renderTarget );\r\n\r\n\t\trenderTarget.generateMipmaps = generateMipmaps;\r\n\r\n\t\trenderTarget.activeCubeFace = 5;\r\n\t\trenderer.render( scene, cameraNZ, renderTarget );\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.CubeCamera.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.CubeCamera.prototype.constructor = THREE.CubeCamera;\r\n\r\n// File:src/cameras/OrthographicCamera.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.OrthographicCamera = function ( left, right, top, bottom, near, far ) {\r\n\r\n\tTHREE.Camera.call( this );\r\n\r\n\tthis.type = 'OrthographicCamera';\r\n\r\n\tthis.zoom = 1;\r\n\r\n\tthis.left = left;\r\n\tthis.right = right;\r\n\tthis.top = top;\r\n\tthis.bottom = bottom;\r\n\r\n\tthis.near = ( near !== undefined ) ? near : 0.1;\r\n\tthis.far = ( far !== undefined ) ? far : 2000;\r\n\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\nTHREE.OrthographicCamera.prototype = Object.create( THREE.Camera.prototype );\r\nTHREE.OrthographicCamera.prototype.constructor = THREE.OrthographicCamera;\r\n\r\nTHREE.OrthographicCamera.prototype.updateProjectionMatrix = function () {\r\n\r\n\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\r\n\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\r\n\tvar cx = ( this.right + this.left ) / 2;\r\n\tvar cy = ( this.top + this.bottom ) / 2;\r\n\r\n\tthis.projectionMatrix.makeOrthographic( cx - dx, cx + dx, cy + dy, cy - dy, this.near, this.far );\r\n\r\n};\r\n\r\nTHREE.OrthographicCamera.prototype.clone = function () {\r\n\r\n\tvar camera = new THREE.OrthographicCamera();\r\n\r\n\tTHREE.Camera.prototype.clone.call( this, camera );\r\n\r\n\tcamera.zoom = this.zoom;\r\n\r\n\tcamera.left = this.left;\r\n\tcamera.right = this.right;\r\n\tcamera.top = this.top;\r\n\tcamera.bottom = this.bottom;\r\n\r\n\tcamera.near = this.near;\r\n\tcamera.far = this.far;\r\n\r\n\tcamera.projectionMatrix.copy( this.projectionMatrix );\r\n\r\n\treturn camera;\r\n};\r\n\r\n// File:src/cameras/PerspectiveCamera.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author greggman / http://games.greggman.com/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n */\r\n\r\nTHREE.PerspectiveCamera = function ( fov, aspect, near, far ) {\r\n\r\n\tTHREE.Camera.call( this );\r\n\r\n\tthis.type = 'PerspectiveCamera';\r\n\r\n\tthis.zoom = 1;\r\n\r\n\tthis.fov = fov !== undefined ? fov : 50;\r\n\tthis.aspect = aspect !== undefined ? aspect : 1;\r\n\tthis.near = near !== undefined ? near : 0.1;\r\n\tthis.far = far !== undefined ? far : 2000;\r\n\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\nTHREE.PerspectiveCamera.prototype = Object.create( THREE.Camera.prototype );\r\nTHREE.PerspectiveCamera.prototype.constructor = THREE.PerspectiveCamera;\r\n\r\n\r\n/**\r\n * Uses Focal Length (in mm) to estimate and set FOV\r\n * 35mm (fullframe) camera is used if frame size is not specified;\r\n * Formula based on http://www.bobatkins.com/photography/technical/field_of_view.html\r\n */\r\n\r\nTHREE.PerspectiveCamera.prototype.setLens = function ( focalLength, frameHeight ) {\r\n\r\n\tif ( frameHeight === undefined ) frameHeight = 24;\r\n\r\n\tthis.fov = 2 * THREE.Math.radToDeg( Math.atan( frameHeight / ( focalLength * 2 ) ) );\r\n\tthis.updateProjectionMatrix();\r\n\r\n}\r\n\r\n\r\n/**\r\n * Sets an offset in a larger frustum. This is useful for multi-window or\r\n * multi-monitor/multi-machine setups.\r\n *\r\n * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\r\n * the monitors are in grid like this\r\n *\r\n *   +---+---+---+\r\n *   | A | B | C |\r\n *   +---+---+---+\r\n *   | D | E | F |\r\n *   +---+---+---+\r\n *\r\n * then for each monitor you would call it like this\r\n *\r\n *   var w = 1920;\r\n *   var h = 1080;\r\n *   var fullWidth = w * 3;\r\n *   var fullHeight = h * 2;\r\n *\r\n *   --A--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\r\n *   --B--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\r\n *   --C--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\r\n *   --D--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\r\n *   --E--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\r\n *   --F--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\r\n *\r\n *   Note there is no reason monitors have to be the same size or in a grid.\r\n */\r\n\r\nTHREE.PerspectiveCamera.prototype.setViewOffset = function ( fullWidth, fullHeight, x, y, width, height ) {\r\n\r\n\tthis.fullWidth = fullWidth;\r\n\tthis.fullHeight = fullHeight;\r\n\tthis.x = x;\r\n\tthis.y = y;\r\n\tthis.width = width;\r\n\tthis.height = height;\r\n\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\n\r\nTHREE.PerspectiveCamera.prototype.updateProjectionMatrix = function () {\r\n\r\n\tvar fov = THREE.Math.radToDeg( 2 * Math.atan( Math.tan( THREE.Math.degToRad( this.fov ) * 0.5 ) / this.zoom ) );\r\n\r\n\tif ( this.fullWidth ) {\r\n\r\n\t\tvar aspect = this.fullWidth / this.fullHeight;\r\n\t\tvar top = Math.tan( THREE.Math.degToRad( fov * 0.5 ) ) * this.near;\r\n\t\tvar bottom = - top;\r\n\t\tvar left = aspect * bottom;\r\n\t\tvar right = aspect * top;\r\n\t\tvar width = Math.abs( right - left );\r\n\t\tvar height = Math.abs( top - bottom );\r\n\r\n\t\tthis.projectionMatrix.makeFrustum(\r\n\t\t\tleft + this.x * width / this.fullWidth,\r\n\t\t\tleft + ( this.x + this.width ) * width / this.fullWidth,\r\n\t\t\ttop - ( this.y + this.height ) * height / this.fullHeight,\r\n\t\t\ttop - this.y * height / this.fullHeight,\r\n\t\t\tthis.near,\r\n\t\t\tthis.far\r\n\t\t);\r\n\r\n\t} else {\r\n\r\n\t\tthis.projectionMatrix.makePerspective( fov, this.aspect, this.near, this.far );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.PerspectiveCamera.prototype.clone = function () {\r\n\r\n\tvar camera = new THREE.PerspectiveCamera();\r\n\r\n\tTHREE.Camera.prototype.clone.call( this, camera );\r\n\r\n\tcamera.zoom = this.zoom;\r\n\r\n\tcamera.fov = this.fov;\r\n\tcamera.aspect = this.aspect;\r\n\tcamera.near = this.near;\r\n\tcamera.far = this.far;\r\n\r\n\tcamera.projectionMatrix.copy( this.projectionMatrix );\r\n\r\n\treturn camera;\r\n\r\n};\r\n\r\n// File:src/lights/Light.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Light = function ( color ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Light';\r\n\t\r\n\tthis.color = new THREE.Color( color );\r\n\r\n};\r\n\r\nTHREE.Light.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Light.prototype.constructor = THREE.Light;\r\n\r\nTHREE.Light.prototype.clone = function ( light ) {\r\n\r\n\tif ( light === undefined ) light = new THREE.Light();\r\n\r\n\tTHREE.Object3D.prototype.clone.call( this, light );\r\n\r\n\tlight.color.copy( this.color );\r\n\r\n\treturn light;\r\n\r\n};\r\n\r\n// File:src/lights/AmbientLight.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.AmbientLight = function ( color ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.type = 'AmbientLight';\r\n\r\n};\r\n\r\nTHREE.AmbientLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.AmbientLight.prototype.constructor = THREE.AmbientLight;\r\n\r\nTHREE.AmbientLight.prototype.clone = function () {\r\n\r\n\tvar light = new THREE.AmbientLight();\r\n\r\n\tTHREE.Light.prototype.clone.call( this, light );\r\n\r\n\treturn light;\r\n\r\n};\r\n\r\n// File:src/lights/AreaLight.js\r\n\r\n/**\r\n * @author MPanknin / http://www.redplant.de/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.AreaLight = function ( color, intensity ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.type = 'AreaLight';\r\n\r\n\tthis.normal = new THREE.Vector3( 0, - 1, 0 );\r\n\tthis.right = new THREE.Vector3( 1, 0, 0 );\r\n\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\r\n\tthis.width = 1.0;\r\n\tthis.height = 1.0;\r\n\r\n\tthis.constantAttenuation = 1.5;\r\n\tthis.linearAttenuation = 0.5;\r\n\tthis.quadraticAttenuation = 0.1;\r\n\r\n};\r\n\r\nTHREE.AreaLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.AreaLight.prototype.constructor = THREE.AreaLight;\r\n\r\n\r\n// File:src/lights/DirectionalLight.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.DirectionalLight = function ( color, intensity ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.type = 'DirectionalLight';\r\n\r\n\tthis.position.set( 0, 1, 0 );\r\n\tthis.target = new THREE.Object3D();\r\n\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\r\n\tthis.castShadow = false;\r\n\tthis.onlyShadow = false;\r\n\r\n\t//\r\n\r\n\tthis.shadowCameraNear = 50;\r\n\tthis.shadowCameraFar = 5000;\r\n\r\n\tthis.shadowCameraLeft = - 500;\r\n\tthis.shadowCameraRight = 500;\r\n\tthis.shadowCameraTop = 500;\r\n\tthis.shadowCameraBottom = - 500;\r\n\r\n\tthis.shadowCameraVisible = false;\r\n\r\n\tthis.shadowBias = 0;\r\n\tthis.shadowDarkness = 0.5;\r\n\r\n\tthis.shadowMapWidth = 512;\r\n\tthis.shadowMapHeight = 512;\r\n\r\n\t//\r\n\r\n\tthis.shadowCascade = false;\r\n\r\n\tthis.shadowCascadeOffset = new THREE.Vector3( 0, 0, - 1000 );\r\n\tthis.shadowCascadeCount = 2;\r\n\r\n\tthis.shadowCascadeBias = [ 0, 0, 0 ];\r\n\tthis.shadowCascadeWidth = [ 512, 512, 512 ];\r\n\tthis.shadowCascadeHeight = [ 512, 512, 512 ];\r\n\r\n\tthis.shadowCascadeNearZ = [ - 1.000, 0.990, 0.998 ];\r\n\tthis.shadowCascadeFarZ  = [ 0.990, 0.998, 1.000 ];\r\n\r\n\tthis.shadowCascadeArray = [];\r\n\r\n\t//\r\n\r\n\tthis.shadowMap = null;\r\n\tthis.shadowMapSize = null;\r\n\tthis.shadowCamera = null;\r\n\tthis.shadowMatrix = null;\r\n\r\n};\r\n\r\nTHREE.DirectionalLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.DirectionalLight.prototype.constructor = THREE.DirectionalLight;\r\n\r\nTHREE.DirectionalLight.prototype.clone = function () {\r\n\r\n\tvar light = new THREE.DirectionalLight();\r\n\r\n\tTHREE.Light.prototype.clone.call( this, light );\r\n\r\n\tlight.target = this.target.clone();\r\n\r\n\tlight.intensity = this.intensity;\r\n\r\n\tlight.castShadow = this.castShadow;\r\n\tlight.onlyShadow = this.onlyShadow;\r\n\r\n\t//\r\n\r\n\tlight.shadowCameraNear = this.shadowCameraNear;\r\n\tlight.shadowCameraFar = this.shadowCameraFar;\r\n\r\n\tlight.shadowCameraLeft = this.shadowCameraLeft;\r\n\tlight.shadowCameraRight = this.shadowCameraRight;\r\n\tlight.shadowCameraTop = this.shadowCameraTop;\r\n\tlight.shadowCameraBottom = this.shadowCameraBottom;\r\n\r\n\tlight.shadowCameraVisible = this.shadowCameraVisible;\r\n\r\n\tlight.shadowBias = this.shadowBias;\r\n\tlight.shadowDarkness = this.shadowDarkness;\r\n\r\n\tlight.shadowMapWidth = this.shadowMapWidth;\r\n\tlight.shadowMapHeight = this.shadowMapHeight;\r\n\r\n\t//\r\n\r\n\tlight.shadowCascade = this.shadowCascade;\r\n\r\n\tlight.shadowCascadeOffset.copy( this.shadowCascadeOffset );\r\n\tlight.shadowCascadeCount = this.shadowCascadeCount;\r\n\r\n\tlight.shadowCascadeBias = this.shadowCascadeBias.slice( 0 );\r\n\tlight.shadowCascadeWidth = this.shadowCascadeWidth.slice( 0 );\r\n\tlight.shadowCascadeHeight = this.shadowCascadeHeight.slice( 0 );\r\n\r\n\tlight.shadowCascadeNearZ = this.shadowCascadeNearZ.slice( 0 );\r\n\tlight.shadowCascadeFarZ  = this.shadowCascadeFarZ.slice( 0 );\r\n\r\n\treturn light;\r\n\r\n};\r\n\r\n// File:src/lights/HemisphereLight.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.HemisphereLight = function ( skyColor, groundColor, intensity ) {\r\n\r\n\tTHREE.Light.call( this, skyColor );\r\n\r\n\tthis.type = 'HemisphereLight';\r\n\r\n\tthis.position.set( 0, 100, 0 );\r\n\r\n\tthis.groundColor = new THREE.Color( groundColor );\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\r\n};\r\n\r\nTHREE.HemisphereLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.HemisphereLight.prototype.constructor = THREE.HemisphereLight;\r\n\r\nTHREE.HemisphereLight.prototype.clone = function () {\r\n\r\n\tvar light = new THREE.HemisphereLight();\r\n\r\n\tTHREE.Light.prototype.clone.call( this, light );\r\n\r\n\tlight.groundColor.copy( this.groundColor );\r\n\tlight.intensity = this.intensity;\r\n\r\n\treturn light;\r\n\r\n};\r\n\r\n// File:src/lights/PointLight.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.PointLight = function ( color, intensity, distance, decay ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.type = 'PointLight';\r\n\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\r\n};\r\n\r\nTHREE.PointLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.PointLight.prototype.constructor = THREE.PointLight;\r\n\r\nTHREE.PointLight.prototype.clone = function () {\r\n\r\n\tvar light = new THREE.PointLight();\r\n\r\n\tTHREE.Light.prototype.clone.call( this, light );\r\n\r\n\tlight.intensity = this.intensity;\r\n\tlight.distance = this.distance;\r\n\tlight.decay = this.decay;\r\n\r\n\treturn light;\r\n\r\n};\r\n\r\n// File:src/lights/SpotLight.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SpotLight = function ( color, intensity, distance, angle, exponent, decay ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.type = 'SpotLight';\r\n\r\n\tthis.position.set( 0, 1, 0 );\r\n\tthis.target = new THREE.Object3D();\r\n\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\r\n\tthis.exponent = ( exponent !== undefined ) ? exponent : 10;\r\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\r\n\tthis.castShadow = false;\r\n\tthis.onlyShadow = false;\r\n\r\n\t//\r\n\r\n\tthis.shadowCameraNear = 50;\r\n\tthis.shadowCameraFar = 5000;\r\n\tthis.shadowCameraFov = 50;\r\n\r\n\tthis.shadowCameraVisible = false;\r\n\r\n\tthis.shadowBias = 0;\r\n\tthis.shadowDarkness = 0.5;\r\n\r\n\tthis.shadowMapWidth = 512;\r\n\tthis.shadowMapHeight = 512;\r\n\r\n\t//\r\n\r\n\tthis.shadowMap = null;\r\n\tthis.shadowMapSize = null;\r\n\tthis.shadowCamera = null;\r\n\tthis.shadowMatrix = null;\r\n\r\n};\r\n\r\nTHREE.SpotLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.SpotLight.prototype.constructor = THREE.SpotLight;\r\n\r\nTHREE.SpotLight.prototype.clone = function () {\r\n\r\n\tvar light = new THREE.SpotLight();\r\n\r\n\tTHREE.Light.prototype.clone.call( this, light );\r\n\r\n\tlight.target = this.target.clone();\r\n\r\n\tlight.intensity = this.intensity;\r\n\tlight.distance = this.distance;\r\n\tlight.angle = this.angle;\r\n\tlight.exponent = this.exponent;\r\n\tlight.decay = this.decay;\r\n\r\n\tlight.castShadow = this.castShadow;\r\n\tlight.onlyShadow = this.onlyShadow;\r\n\r\n\t//\r\n\r\n\tlight.shadowCameraNear = this.shadowCameraNear;\r\n\tlight.shadowCameraFar = this.shadowCameraFar;\r\n\tlight.shadowCameraFov = this.shadowCameraFov;\r\n\r\n\tlight.shadowCameraVisible = this.shadowCameraVisible;\r\n\r\n\tlight.shadowBias = this.shadowBias;\r\n\tlight.shadowDarkness = this.shadowDarkness;\r\n\r\n\tlight.shadowMapWidth = this.shadowMapWidth;\r\n\tlight.shadowMapHeight = this.shadowMapHeight;\r\n\r\n\treturn light;\r\n\r\n};\r\n\r\n// File:src/loaders/Cache.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Cache = {\r\n\r\n\tfiles: {},\r\n\r\n\tadd: function ( key, file ) {\r\n\r\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\r\n\r\n\t\tthis.files[ key ] = file;\r\n\r\n\t},\r\n\r\n\tget: function ( key ) {\r\n\r\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\r\n\r\n\t\treturn this.files[ key ];\r\n\r\n\t},\r\n\r\n\tremove: function ( key ) {\r\n\r\n\t\tdelete this.files[ key ];\r\n\r\n\t},\r\n\r\n\tclear: function () {\r\n\r\n\t\tthis.files = {}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/Loader.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Loader = function ( showStatus ) {\r\n\r\n\tthis.showStatus = showStatus;\r\n\tthis.statusDomElement = showStatus ? THREE.Loader.prototype.addStatusElement() : null;\r\n\r\n\tthis.imageLoader = new THREE.ImageLoader();\r\n\r\n\tthis.onLoadStart = function () {};\r\n\tthis.onLoadProgress = function () {};\r\n\tthis.onLoadComplete = function () {};\r\n\r\n};\r\n\r\nTHREE.Loader.prototype = {\r\n\r\n\tconstructor: THREE.Loader,\r\n\r\n\tcrossOrigin: undefined,\r\n\r\n\taddStatusElement: function () {\r\n\r\n\t\tvar e = document.createElement( 'div' );\r\n\r\n\t\te.style.position = 'absolute';\r\n\t\te.style.right = '0px';\r\n\t\te.style.top = '0px';\r\n\t\te.style.fontSize = '0.8em';\r\n\t\te.style.textAlign = 'left';\r\n\t\te.style.background = 'rgba(0,0,0,0.25)';\r\n\t\te.style.color = '#fff';\r\n\t\te.style.width = '120px';\r\n\t\te.style.padding = '0.5em 0.5em 0.5em 0.5em';\r\n\t\te.style.zIndex = 1000;\r\n\r\n\t\te.innerHTML = 'Loading ...';\r\n\r\n\t\treturn e;\r\n\r\n\t},\r\n\r\n\tupdateProgress: function ( progress ) {\r\n\r\n\t\tvar message = 'Loaded ';\r\n\r\n\t\tif ( progress.total ) {\r\n\r\n\t\t\tmessage += ( 100 * progress.loaded / progress.total ).toFixed( 0 ) + '%';\r\n\r\n\r\n\t\t} else {\r\n\r\n\t\t\tmessage += ( progress.loaded / 1024 ).toFixed( 2 ) + ' KB';\r\n\r\n\t\t}\r\n\r\n\t\tthis.statusDomElement.innerHTML = message;\r\n\r\n\t},\r\n\r\n\textractUrlBase: function ( url ) {\r\n\r\n\t\tvar parts = url.split( '/' );\r\n\r\n\t\tif ( parts.length === 1 ) return './';\r\n\r\n\t\tparts.pop();\r\n\r\n\t\treturn parts.join( '/' ) + '/';\r\n\r\n\t},\r\n\r\n\tinitMaterials: function ( materials, texturePath ) {\r\n\r\n\t\tvar array = [];\r\n\r\n\t\tfor ( var i = 0; i < materials.length; ++ i ) {\r\n\r\n\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath );\r\n\r\n\t\t}\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tneedsTangents: function ( materials ) {\r\n\r\n\t\tfor ( var i = 0, il = materials.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar m = materials[ i ];\r\n\r\n\t\t\tif ( m instanceof THREE.ShaderMaterial ) return true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tcreateMaterial: function ( m, texturePath ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tfunction nearest_pow2( n ) {\r\n\r\n\t\t\tvar l = Math.log( n ) / Math.LN2;\r\n\t\t\treturn Math.pow( 2, Math.round(  l ) );\r\n\r\n\t\t}\r\n\r\n\t\tfunction create_texture( where, name, sourceFile, repeat, offset, wrap, anisotropy ) {\r\n\r\n\t\t\tvar fullPath = texturePath + sourceFile;\r\n\r\n\t\t\tvar texture;\r\n\r\n\t\t\tvar loader = THREE.Loader.Handlers.get( fullPath );\r\n\r\n\t\t\tif ( loader !== null ) {\r\n\r\n\t\t\t\ttexture = loader.load( fullPath );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttexture = new THREE.Texture();\r\n\r\n\t\t\t\tloader = scope.imageLoader;\r\n\t\t\t\tloader.crossOrigin = scope.crossOrigin;\r\n\t\t\t\tloader.load( fullPath, function ( image ) {\r\n\r\n\t\t\t\t\tif ( THREE.Math.isPowerOfTwo( image.width ) === false ||\r\n\t\t\t\t\t\t THREE.Math.isPowerOfTwo( image.height ) === false ) {\r\n\r\n\t\t\t\t\t\tvar width = nearest_pow2( image.width );\r\n\t\t\t\t\t\tvar height = nearest_pow2( image.height );\r\n\r\n\t\t\t\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\t\t\t\tcanvas.width = width;\r\n\t\t\t\t\t\tcanvas.height = height;\r\n\r\n\t\t\t\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\r\n\r\n\t\t\t\t\t\ttexture.image = canvas;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\ttexture.image = image;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttexture.sourceFile = sourceFile;\r\n\r\n\t\t\tif ( repeat ) {\r\n\r\n\t\t\t\ttexture.repeat.set( repeat[ 0 ], repeat[ 1 ] );\r\n\r\n\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = THREE.RepeatWrapping;\r\n\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = THREE.RepeatWrapping;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( offset ) {\r\n\r\n\t\t\t\ttexture.offset.set( offset[ 0 ], offset[ 1 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( wrap ) {\r\n\r\n\t\t\t\tvar wrapMap = {\r\n\t\t\t\t\t'repeat': THREE.RepeatWrapping,\r\n\t\t\t\t\t'mirror': THREE.MirroredRepeatWrapping\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( wrapMap[ wrap[ 0 ] ] !== undefined ) texture.wrapS = wrapMap[ wrap[ 0 ] ];\r\n\t\t\t\tif ( wrapMap[ wrap[ 1 ] ] !== undefined ) texture.wrapT = wrapMap[ wrap[ 1 ] ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( anisotropy ) {\r\n\r\n\t\t\t\ttexture.anisotropy = anisotropy;\r\n\r\n\t\t\t}\r\n\r\n\t\t\twhere[ name ] = texture;\r\n\r\n\t\t}\r\n\r\n\t\tfunction rgb2hex( rgb ) {\r\n\r\n\t\t\treturn ( rgb[ 0 ] * 255 << 16 ) + ( rgb[ 1 ] * 255 << 8 ) + rgb[ 2 ] * 255;\r\n\r\n\t\t}\r\n\r\n\t\t// defaults\r\n\r\n\t\tvar mtype = 'MeshLambertMaterial';\r\n\t\tvar mpars = { color: 0xeeeeee, opacity: 1.0, map: null, lightMap: null, normalMap: null, bumpMap: null, wireframe: false };\r\n\r\n\t\t// parameters from model file\r\n\r\n\t\tif ( m.shading ) {\r\n\r\n\t\t\tvar shading = m.shading.toLowerCase();\r\n\r\n\t\t\tif ( shading === 'phong' ) mtype = 'MeshPhongMaterial';\r\n\t\t\telse if ( shading === 'basic' ) mtype = 'MeshBasicMaterial';\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.blending !== undefined && THREE[ m.blending ] !== undefined ) {\r\n\r\n\t\t\tmpars.blending = THREE[ m.blending ];\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.transparent !== undefined ) {\r\n\r\n\t\t\tmpars.transparent = m.transparent;\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.opacity !== undefined && m.opacity < 1.0 ) {\r\n\r\n\t\t\tmpars.transparent = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.depthTest !== undefined ) {\r\n\r\n\t\t\tmpars.depthTest = m.depthTest;\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.depthWrite !== undefined ) {\r\n\r\n\t\t\tmpars.depthWrite = m.depthWrite;\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.visible !== undefined ) {\r\n\r\n\t\t\tmpars.visible = m.visible;\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.flipSided !== undefined ) {\r\n\r\n\t\t\tmpars.side = THREE.BackSide;\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.doubleSided !== undefined ) {\r\n\r\n\t\t\tmpars.side = THREE.DoubleSide;\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.wireframe !== undefined ) {\r\n\r\n\t\t\tmpars.wireframe = m.wireframe;\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.vertexColors !== undefined ) {\r\n\r\n\t\t\tif ( m.vertexColors === 'face' ) {\r\n\r\n\t\t\t\tmpars.vertexColors = THREE.FaceColors;\r\n\r\n\t\t\t} else if ( m.vertexColors ) {\r\n\r\n\t\t\t\tmpars.vertexColors = THREE.VertexColors;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// colors\r\n\r\n\t\tif ( m.colorDiffuse ) {\r\n\r\n\t\t\tmpars.color = rgb2hex( m.colorDiffuse );\r\n\r\n\t\t} else if ( m.DbgColor ) {\r\n\r\n\t\t\tmpars.color = m.DbgColor;\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.colorSpecular ) {\r\n\r\n\t\t\tmpars.specular = rgb2hex( m.colorSpecular );\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.colorEmissive ) {\r\n\r\n\t\t\tmpars.emissive = rgb2hex( m.colorEmissive );\r\n\r\n\t\t}\r\n\r\n\t\t// modifiers\r\n\r\n\t\tif ( m.transparency !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Loader: transparency has been renamed to opacity' );\r\n\t\t\tm.opacity = m.transparency;\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.opacity !== undefined ) {\r\n\r\n\t\t\tmpars.opacity = m.opacity;\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.specularCoef ) {\r\n\r\n\t\t\tmpars.shininess = m.specularCoef;\r\n\r\n\t\t}\r\n\r\n\t\t// textures\r\n\r\n\t\tif ( m.mapDiffuse && texturePath ) {\r\n\r\n\t\t\tcreate_texture( mpars, 'map', m.mapDiffuse, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.mapLight && texturePath ) {\r\n\r\n\t\t\tcreate_texture( mpars, 'lightMap', m.mapLight, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.mapBump && texturePath ) {\r\n\r\n\t\t\tcreate_texture( mpars, 'bumpMap', m.mapBump, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.mapNormal && texturePath ) {\r\n\r\n\t\t\tcreate_texture( mpars, 'normalMap', m.mapNormal, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.mapSpecular && texturePath ) {\r\n\r\n\t\t\tcreate_texture( mpars, 'specularMap', m.mapSpecular, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.mapAlpha && texturePath ) {\r\n\r\n\t\t\tcreate_texture( mpars, 'alphaMap', m.mapAlpha, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tif ( m.mapBumpScale ) {\r\n\r\n\t\t\tmpars.bumpScale = m.mapBumpScale;\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.mapNormalFactor ) {\r\n\r\n\t\t\tmpars.normalScale = new THREE.Vector2( m.mapNormalFactor, m.mapNormalFactor );\r\n\r\n\t\t}\r\n\r\n\t\tvar material = new THREE[ mtype ]( mpars );\r\n\r\n\t\tif ( m.DbgName !== undefined ) material.name = m.DbgName;\r\n\r\n\t\treturn material;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Loader.Handlers = {\r\n\r\n\thandlers: [],\r\n\r\n\tadd: function ( regex, loader ) {\r\n\r\n\t\tthis.handlers.push( regex, loader );\r\n\r\n\t},\r\n\r\n\tget: function ( file ) {\r\n\r\n\t\tfor ( var i = 0, l = this.handlers.length; i < l; i += 2 ) {\r\n\r\n\t\t\tvar regex = this.handlers[ i ];\r\n\t\t\tvar loader  = this.handlers[ i + 1 ];\r\n\r\n\t\t\tif ( regex.test( file ) ) {\r\n\r\n\t\t\t\treturn loader;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/XHRLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.XHRLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.XHRLoader.prototype = {\r\n\r\n\tconstructor: THREE.XHRLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar cached = THREE.Cache.get( url );\r\n\r\n\t\tif ( cached !== undefined ) {\r\n\r\n\t\t\tif ( onLoad ) onLoad( cached );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar request = new XMLHttpRequest();\r\n\t\trequest.open( 'GET', url, true );\r\n\r\n\t\trequest.addEventListener( 'load', function ( event ) {\r\n\r\n\t\t\tTHREE.Cache.add( url, this.response );\r\n\r\n\t\t\tif ( onLoad ) onLoad( this.response );\r\n\r\n\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t}, false );\r\n\r\n\t\tif ( onProgress !== undefined ) {\r\n\r\n\t\t\trequest.addEventListener( 'progress', function ( event ) {\r\n\r\n\t\t\t\tonProgress( event );\r\n\r\n\t\t\t}, false );\r\n\r\n\t\t}\r\n\r\n\t\tif ( onError !== undefined ) {\r\n\r\n\t\t\trequest.addEventListener( 'error', function ( event ) {\r\n\r\n\t\t\t\tonError( event );\r\n\r\n\t\t\t}, false );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.crossOrigin !== undefined ) request.crossOrigin = this.crossOrigin;\r\n\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\r\n\r\n\t\trequest.send( null );\r\n\r\n\t\tscope.manager.itemStart( url );\r\n\r\n\t},\r\n\r\n\tsetResponseType: function ( value ) {\r\n\r\n\t\tthis.responseType = value;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/ImageLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.ImageLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.ImageLoader.prototype = {\r\n\r\n\tconstructor: THREE.ImageLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar cached = THREE.Cache.get( url );\r\n\r\n\t\tif ( cached !== undefined ) {\r\n\r\n\t\t\tonLoad( cached );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar image = document.createElement( 'img' );\r\n\r\n\t\timage.addEventListener( 'load', function ( event ) {\r\n\r\n\t\t\tTHREE.Cache.add( url, this );\r\n\r\n\t\t\tif ( onLoad ) onLoad( this );\r\n\t\t\t\r\n\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t}, false );\r\n\r\n\t\tif ( onProgress !== undefined ) {\r\n\r\n\t\t\timage.addEventListener( 'progress', function ( event ) {\r\n\r\n\t\t\t\tonProgress( event );\r\n\r\n\t\t\t}, false );\r\n\r\n\t\t}\r\n\r\n\t\tif ( onError !== undefined ) {\r\n\r\n\t\t\timage.addEventListener( 'error', function ( event ) {\r\n\r\n\t\t\t\tonError( event );\r\n\r\n\t\t\t}, false );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\r\n\r\n\t\timage.src = url;\r\n\r\n\t\tscope.manager.itemStart( url );\r\n\r\n\t\treturn image;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t}\r\n\r\n}\r\n\r\n// File:src/loaders/JSONLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.JSONLoader = function ( showStatus ) {\r\n\r\n\tTHREE.Loader.call( this, showStatus );\r\n\r\n\tthis.withCredentials = false;\r\n\r\n};\r\n\r\nTHREE.JSONLoader.prototype = Object.create( THREE.Loader.prototype );\r\nTHREE.JSONLoader.prototype.constructor = THREE.JSONLoader;\r\n\r\nTHREE.JSONLoader.prototype.load = function ( url, callback, texturePath ) {\r\n\r\n\t// todo: unify load API to for easier SceneLoader use\r\n\r\n\ttexturePath = texturePath && ( typeof texturePath === 'string' ) ? texturePath : this.extractUrlBase( url );\r\n\r\n\tthis.onLoadStart();\r\n\tthis.loadAjaxJSON( this, url, callback, texturePath );\r\n\r\n};\r\n\r\nTHREE.JSONLoader.prototype.loadAjaxJSON = function ( context, url, callback, texturePath, callbackProgress ) {\r\n\r\n\tvar xhr = new XMLHttpRequest();\r\n\r\n\tvar length = 0;\r\n\r\n\txhr.onreadystatechange = function () {\r\n\r\n\t\tif ( xhr.readyState === xhr.DONE ) {\r\n\r\n\t\t\tif ( xhr.status === 200 || xhr.status === 0 ) {\r\n\r\n\t\t\t\tif ( xhr.responseText ) {\r\n\r\n\t\t\t\t\tvar json = JSON.parse( xhr.responseText );\r\n\t\t\t\t\tvar metadata = json.metadata;\r\n\r\n\t\t\t\t\tif ( metadata !== undefined ) {\r\n\r\n\t\t\t\t\t\tif ( metadata.type === 'object' ) {\r\n\r\n\t\t\t\t\t\t\tTHREE.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\r\n\t\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( metadata.type === 'scene' ) {\r\n\r\n\t\t\t\t\t\t\tTHREE.error( 'THREE.JSONLoader: ' + url + ' seems to be a Scene. Use THREE.SceneLoader instead.' );\r\n\t\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar result = context.parse( json, texturePath );\r\n\t\t\t\t\tcallback( result.geometry, result.materials );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tTHREE.error( 'THREE.JSONLoader: ' + url + ' seems to be unreachable or the file is empty.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// in context of more complex asset initialization\r\n\t\t\t\t// do not block on single failed file\r\n\t\t\t\t// maybe should go even one more level up\r\n\r\n\t\t\t\tcontext.onLoadComplete();\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tTHREE.error( 'THREE.JSONLoader: Couldn\\'t load ' + url + ' (' + xhr.status + ')' );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( xhr.readyState === xhr.LOADING ) {\r\n\r\n\t\t\tif ( callbackProgress ) {\r\n\r\n\t\t\t\tif ( length === 0 ) {\r\n\r\n\t\t\t\t\tlength = xhr.getResponseHeader( 'Content-Length' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcallbackProgress( { total: length, loaded: xhr.responseText.length } );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( xhr.readyState === xhr.HEADERS_RECEIVED ) {\r\n\r\n\t\t\tif ( callbackProgress !== undefined ) {\r\n\r\n\t\t\t\tlength = xhr.getResponseHeader( 'Content-Length' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\txhr.open( 'GET', url, true );\r\n\txhr.withCredentials = this.withCredentials;\r\n\txhr.send( null );\r\n\r\n};\r\n\r\nTHREE.JSONLoader.prototype.parse = function ( json, texturePath ) {\r\n\r\n\tvar geometry = new THREE.Geometry(),\r\n\tscale = ( json.scale !== undefined ) ? 1.0 / json.scale : 1.0;\r\n\r\n\tparseModel( scale );\r\n\r\n\tparseSkin();\r\n\tparseMorphing( scale );\r\n\r\n\tgeometry.computeFaceNormals();\r\n\tgeometry.computeBoundingSphere();\r\n\r\n\tfunction parseModel( scale ) {\r\n\r\n\t\tfunction isBitSet( value, position ) {\r\n\r\n\t\t\treturn value & ( 1 << position );\r\n\r\n\t\t}\r\n\r\n\t\tvar i, j, fi,\r\n\r\n\t\toffset, zLength,\r\n\r\n\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\r\n\r\n\t\ttype,\r\n\t\tisQuad,\r\n\t\thasMaterial,\r\n\t\thasFaceVertexUv,\r\n\t\thasFaceNormal, hasFaceVertexNormal,\r\n\t\thasFaceColor, hasFaceVertexColor,\r\n\r\n\t\tvertex, face, faceA, faceB, hex, normal,\r\n\r\n\t\tuvLayer, uv, u, v,\r\n\r\n\t\tfaces = json.faces,\r\n\t\tvertices = json.vertices,\r\n\t\tnormals = json.normals,\r\n\t\tcolors = json.colors,\r\n\r\n\t\tnUvLayers = 0;\r\n\r\n\t\tif ( json.uvs !== undefined ) {\r\n\r\n\t\t\t// disregard empty arrays\r\n\r\n\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\r\n\r\n\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\toffset = 0;\r\n\t\tzLength = vertices.length;\r\n\r\n\t\twhile ( offset < zLength ) {\r\n\r\n\t\t\tvertex = new THREE.Vector3();\r\n\r\n\t\t\tvertex.x = vertices[ offset ++ ] * scale;\r\n\t\t\tvertex.y = vertices[ offset ++ ] * scale;\r\n\t\t\tvertex.z = vertices[ offset ++ ] * scale;\r\n\r\n\t\t\tgeometry.vertices.push( vertex );\r\n\r\n\t\t}\r\n\r\n\t\toffset = 0;\r\n\t\tzLength = faces.length;\r\n\r\n\t\twhile ( offset < zLength ) {\r\n\r\n\t\t\ttype = faces[ offset ++ ];\r\n\r\n\r\n\t\t\tisQuad              = isBitSet( type, 0 );\r\n\t\t\thasMaterial         = isBitSet( type, 1 );\r\n\t\t\thasFaceVertexUv     = isBitSet( type, 3 );\r\n\t\t\thasFaceNormal       = isBitSet( type, 4 );\r\n\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\r\n\t\t\thasFaceColor\t     = isBitSet( type, 6 );\r\n\t\t\thasFaceVertexColor  = isBitSet( type, 7 );\r\n\r\n\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\r\n\r\n\t\t\tif ( isQuad ) {\r\n\r\n\t\t\t\tfaceA = new THREE.Face3();\r\n\t\t\t\tfaceA.a = faces[ offset ];\r\n\t\t\t\tfaceA.b = faces[ offset + 1 ];\r\n\t\t\t\tfaceA.c = faces[ offset + 3 ];\r\n\r\n\t\t\t\tfaceB = new THREE.Face3();\r\n\t\t\t\tfaceB.a = faces[ offset + 1 ];\r\n\t\t\t\tfaceB.b = faces[ offset + 2 ];\r\n\t\t\t\tfaceB.c = faces[ offset + 3 ];\r\n\r\n\t\t\t\toffset += 4;\r\n\r\n\t\t\t\tif ( hasMaterial ) {\r\n\r\n\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\tfaceA.materialIndex = materialIndex;\r\n\t\t\t\t\tfaceB.materialIndex = materialIndex;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// to get face <=> uv index correspondence\r\n\r\n\t\t\t\tfi = geometry.faces.length;\r\n\r\n\t\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\r\n\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = []\r\n\r\n\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\r\n\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\r\n\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\r\n\r\n\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\tfaceA.normal.set(\r\n\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tfaceB.normal.copy( faceA.normal );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\r\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\tnormal = new THREE.Vector3(\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t);\r\n\r\n\r\n\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\r\n\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\thex = colors[ colorIndex ];\r\n\r\n\t\t\t\t\tfaceA.color.setHex( hex );\r\n\t\t\t\t\tfaceB.color.setHex( hex );\r\n\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\r\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\thex = colors[ colorIndex ];\r\n\r\n\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new THREE.Color( hex ) );\r\n\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new THREE.Color( hex ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.faces.push( faceA );\r\n\t\t\t\tgeometry.faces.push( faceB );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tface = new THREE.Face3();\r\n\t\t\t\tface.a = faces[ offset ++ ];\r\n\t\t\t\tface.b = faces[ offset ++ ];\r\n\t\t\t\tface.c = faces[ offset ++ ];\r\n\r\n\t\t\t\tif ( hasMaterial ) {\r\n\r\n\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\tface.materialIndex = materialIndex;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// to get face <=> uv index correspondence\r\n\r\n\t\t\t\tfi = geometry.faces.length;\r\n\r\n\t\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\r\n\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\r\n\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\r\n\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\r\n\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\r\n\r\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\tface.normal.set(\r\n\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\tnormal = new THREE.Vector3(\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tface.vertexNormals.push( normal );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\r\n\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\tface.vertexColors.push( new THREE.Color( colors[ colorIndex ] ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.faces.push( face );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction parseSkin() {\r\n\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\r\n\r\n\t\tif ( json.skinWeights ) {\r\n\r\n\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\r\n\r\n\t\t\t\tvar x =                               json.skinWeights[ i     ];\r\n\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\r\n\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\r\n\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\r\n\r\n\t\t\t\tgeometry.skinWeights.push( new THREE.Vector4( x, y, z, w ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( json.skinIndices ) {\r\n\r\n\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\r\n\r\n\t\t\t\tvar a =                               json.skinIndices[ i     ];\r\n\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\r\n\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\r\n\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\r\n\r\n\t\t\t\tgeometry.skinIndices.push( new THREE.Vector4( a, b, c, d ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tgeometry.bones = json.bones;\r\n\r\n\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\r\n\r\n\t\t\tTHREE.warn( 'THREE.JSONLoader: When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\r\n\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\r\n\r\n\t\t}\r\n\r\n\r\n\t\t// could change this to json.animations[0] or remove completely\r\n\r\n\t\tgeometry.animation = json.animation;\r\n\t\tgeometry.animations = json.animations;\r\n\r\n\t};\r\n\r\n\tfunction parseMorphing( scale ) {\r\n\r\n\t\tif ( json.morphTargets !== undefined ) {\r\n\r\n\t\t\tvar i, l, v, vl, dstVertices, srcVertices;\r\n\r\n\t\t\tfor ( i = 0, l = json.morphTargets.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tgeometry.morphTargets[ i ] = {};\r\n\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\r\n\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\r\n\r\n\t\t\t\tdstVertices = geometry.morphTargets[ i ].vertices;\r\n\t\t\t\tsrcVertices = json.morphTargets [ i ].vertices;\r\n\r\n\t\t\t\tfor ( v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\r\n\r\n\t\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\r\n\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\r\n\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\r\n\r\n\t\t\t\t\tdstVertices.push( vertex );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( json.morphColors !== undefined ) {\r\n\r\n\t\t\tvar i, l, c, cl, dstColors, srcColors, color;\r\n\r\n\t\t\tfor ( i = 0, l = json.morphColors.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tgeometry.morphColors[ i ] = {};\r\n\t\t\t\tgeometry.morphColors[ i ].name = json.morphColors[ i ].name;\r\n\t\t\t\tgeometry.morphColors[ i ].colors = [];\r\n\r\n\t\t\t\tdstColors = geometry.morphColors[ i ].colors;\r\n\t\t\t\tsrcColors = json.morphColors [ i ].colors;\r\n\r\n\t\t\t\tfor ( c = 0, cl = srcColors.length; c < cl; c += 3 ) {\r\n\r\n\t\t\t\t\tcolor = new THREE.Color( 0xffaa00 );\r\n\t\t\t\t\tcolor.setRGB( srcColors[ c ], srcColors[ c + 1 ], srcColors[ c + 2 ] );\r\n\t\t\t\t\tdstColors.push( color );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tif ( json.materials === undefined || json.materials.length === 0 ) {\r\n\r\n\t\treturn { geometry: geometry };\r\n\r\n\t} else {\r\n\r\n\t\tvar materials = this.initMaterials( json.materials, texturePath );\r\n\r\n\t\tif ( this.needsTangents( materials ) ) {\r\n\r\n\t\t\tgeometry.computeTangents();\r\n\r\n\t\t}\r\n\r\n\t\treturn { geometry: geometry, materials: materials };\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/LoadingManager.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.LoadingManager = function ( onLoad, onProgress, onError ) {\r\n\r\n\tvar scope = this;\r\n\r\n\tvar loaded = 0, total = 0;\r\n\r\n\tthis.onLoad = onLoad;\r\n\tthis.onProgress = onProgress;\r\n\tthis.onError = onError;\r\n\r\n\tthis.itemStart = function ( url ) {\r\n\r\n\t\ttotal ++;\r\n\r\n\t};\r\n\r\n\tthis.itemEnd = function ( url ) {\r\n\r\n\t\tloaded ++;\r\n\r\n\t\tif ( scope.onProgress !== undefined ) {\r\n\r\n\t\t\tscope.onProgress( url, loaded, total );\r\n\r\n\t\t}\r\n\r\n\t\tif ( loaded === total && scope.onLoad !== undefined ) {\r\n\r\n\t\t\tscope.onLoad();\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.DefaultLoadingManager = new THREE.LoadingManager();\r\n\r\n// File:src/loaders/BufferGeometryLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BufferGeometryLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.BufferGeometryLoader.prototype = {\r\n\r\n\tconstructor: THREE.BufferGeometryLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tparse: function ( json ) {\r\n\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\t\tvar attributes = json.data.attributes;\r\n\r\n\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\tvar attribute = attributes[ key ];\r\n\t\t\tvar typedArray = new self[ attribute.type ]( attribute.array );\r\n\r\n\t\t\tgeometry.addAttribute( key, new THREE.BufferAttribute( typedArray, attribute.itemSize ) );\r\n\r\n\t\t}\r\n\r\n\t\tvar offsets = json.data.offsets;\r\n\r\n\t\tif ( offsets !== undefined ) {\r\n\r\n\t\t\tgeometry.offsets = JSON.parse( JSON.stringify( offsets ) );\r\n\r\n\t\t}\r\n\r\n\t\tvar boundingSphere = json.data.boundingSphere;\r\n\r\n\t\tif ( boundingSphere !== undefined ) {\r\n\r\n\t\t\tvar center = new THREE.Vector3();\r\n\r\n\t\t\tif ( boundingSphere.center !== undefined ) {\r\n\r\n\t\t\t\tcenter.fromArray( boundingSphere.center );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.boundingSphere = new THREE.Sphere( center, boundingSphere.radius );\r\n\r\n\t\t}\r\n\r\n\t\treturn geometry;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/MaterialLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.MaterialLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.MaterialLoader.prototype = {\r\n\r\n\tconstructor: THREE.MaterialLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tparse: function ( json ) {\r\n\r\n\t\tvar material = new THREE[ json.type ];\r\n\r\n\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\r\n\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\r\n\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\r\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\r\n\t\tif ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\r\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\r\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\r\n\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\r\n\t\tif ( json.shading !== undefined ) material.shading = json.shading;\r\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\r\n\t\tif ( json.side !== undefined ) material.side = json.side;\r\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\r\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\r\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\r\n\r\n\t\t// for PointCloudMaterial\r\n\t\tif ( json.size !== undefined ) material.size = json.size;\r\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\r\n\r\n\t\tif ( json.materials !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, l = json.materials.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tmaterial.materials.push( this.parse( json.materials[ i ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn material;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/ObjectLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.ObjectLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\tthis.texturePath = '';\r\n\r\n};\r\n\r\nTHREE.ObjectLoader.prototype = {\r\n\r\n\tconstructor: THREE.ObjectLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tif ( this.texturePath === '' ) {\r\n\r\n\t\t\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\r\n\r\n\t\t}\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tscope.parse( JSON.parse( text ), onLoad );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetTexturePath: function ( value ) {\r\n\r\n\t\tthis.texturePath = value;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tparse: function ( json, onLoad ) {\r\n\r\n\t\tvar geometries = this.parseGeometries( json.geometries );\r\n\r\n\t\tvar images = this.parseImages( json.images, function () {\r\n\r\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\r\n\t\t} );\r\n\t\tvar textures  = this.parseTextures( json.textures, images );\r\n\t\tvar materials = this.parseMaterials( json.materials, textures );\r\n\t\tvar object = this.parseObject( json.object, geometries, materials );\r\n\r\n\t\tif ( json.images === undefined || json.images.length === 0 ) {\r\n\r\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\r\n\t\t}\r\n\r\n\t\treturn object;\r\n\r\n\t},\r\n\r\n\tparseGeometries: function ( json ) {\r\n\r\n\t\tvar geometries = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tvar geometryLoader = new THREE.JSONLoader();\r\n\t\t\tvar bufferGeometryLoader = new THREE.BufferGeometryLoader();\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar geometry;\r\n\t\t\t\tvar data = json[ i ];\r\n\r\n\t\t\t\tswitch ( data.type ) {\r\n\r\n\t\t\t\t\tcase 'PlaneGeometry':\r\n\t\t\t\t\tcase 'PlaneBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'BoxGeometry':\r\n\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.BoxGeometry(\r\n\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\tdata.depth,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.depthSegments\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'CircleGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.CircleGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.segments\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'CylinderGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.CylinderGeometry(\r\n\t\t\t\t\t\t\tdata.radiusTop,\r\n\t\t\t\t\t\t\tdata.radiusBottom,\r\n\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.openEnded\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'SphereGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.SphereGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.phiStart,\r\n\t\t\t\t\t\t\tdata.phiLength,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'IcosahedronGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.IcosahedronGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'TorusGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.TorusGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\tdata.arc\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'TorusKnotGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.TorusKnotGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\tdata.p,\r\n\t\t\t\t\t\t\tdata.q,\r\n\t\t\t\t\t\t\tdata.heightScale\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'BufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'Geometry':\r\n\r\n\t\t\t\t\t\tgeometry = geometryLoader.parse( data.data ).geometry;\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.uuid = data.uuid;\r\n\r\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\r\n\r\n\t\t\t\tgeometries[ data.uuid ] = geometry;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn geometries;\r\n\r\n\t},\r\n\r\n\tparseMaterials: function ( json, textures ) {\r\n\r\n\t\tvar materials = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tvar getTexture = function ( name ) {\r\n\r\n\t\t\t\tif ( textures[ name ] === undefined ) {\r\n\r\n\t\t\t\t\tTHREE.warn( 'THREE.ObjectLoader: Undefined texture', name );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn textures[ name ];\r\n\r\n\t\t\t};\r\n\r\n\t\t\tvar loader = new THREE.MaterialLoader();\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar data = json[ i ];\r\n\t\t\t\tvar material = loader.parse( data );\r\n\r\n\t\t\t\tmaterial.uuid = data.uuid;\r\n\r\n\t\t\t\tif ( data.name !== undefined ) material.name = data.name;\r\n\r\n\t\t\t\tif ( data.map !== undefined ) {\r\n\r\n\t\t\t\t\tmaterial.map = getTexture( data.map );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( data.bumpMap !== undefined ) {\r\n\r\n\t\t\t\t\tmaterial.bumpMap = getTexture( data.bumpMap );\r\n\t\t\t\t\tif ( data.bumpScale ) {\r\n\t\t\t\t\t\tmaterial.bumpScale = new THREE.Vector2( data.bumpScale, data.bumpScale );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( data.alphaMap !== undefined ) {\r\n\r\n\t\t\t\t\tmaterial.alphaMap = getTexture( data.alphaMap );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( data.envMap !== undefined ) {\r\n\r\n\t\t\t\t\tmaterial.envMap = getTexture( data.envMap );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( data.normalMap !== undefined ) {\r\n\r\n\t\t\t\t\tmaterial.normalMap = getTexture( data.normalMap );\r\n\t\t\t\t\tif ( data.normalScale ) {\r\n\t\t\t\t\t\tmaterial.normalScale = new THREE.Vector2( data.normalScale, data.normalScale );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( data.lightMap !== undefined ) {\r\n\r\n\t\t\t\t\tmaterial.lightMap = getTexture( data.lightMap );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( data.specularMap !== undefined ) {\r\n\r\n\t\t\t\t\tmaterial.specularMap = getTexture( data.specularMap );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmaterials[ data.uuid ] = material;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn materials;\r\n\r\n\t},\r\n\r\n\tparseImages: function ( json, onLoad ) {\r\n\r\n\t\tvar scope = this;\r\n\t\tvar images = {};\r\n\r\n\t\tif ( json !== undefined && json.length > 0 ) {\r\n\r\n\t\t\tvar manager = new THREE.LoadingManager( onLoad );\r\n\r\n\t\t\tvar loader = new THREE.ImageLoader( manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\r\n\t\t\tvar loadImage = function ( url ) {\r\n\r\n\t\t\t\tscope.manager.itemStart( url );\r\n\r\n\t\t\t\treturn loader.load( url, function () {\r\n\r\n\t\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t};\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar image = json[ i ];\r\n\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\r\n\r\n\t\t\t\timages[ image.uuid ] = loadImage( path );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn images;\r\n\r\n\t},\r\n\r\n\tparseTextures: function ( json, images ) {\r\n\r\n\t\tvar textures = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar data = json[ i ];\r\n\r\n\t\t\t\tif ( data.image === undefined ) {\r\n\r\n\t\t\t\t\tTHREE.warn( 'THREE.ObjectLoader: No \"image\" speficied for', data.uuid );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( images[ data.image ] === undefined ) {\r\n\r\n\t\t\t\t\tTHREE.warn( 'THREE.ObjectLoader: Undefined image', data.image );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar texture = new THREE.Texture( images[ data.image ] );\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\ttexture.uuid = data.uuid;\r\n\r\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\r\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat = new THREE.Vector2( data.repeat[ 0 ], data.repeat[ 1 ] );\r\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = THREE[ data.minFilter ];\r\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = THREE[ data.magFilter ];\r\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\r\n\t\t\t\tif ( data.wrap instanceof Array ) {\r\n\r\n\t\t\t\t\ttexture.wrapS = THREE[ data.wrap[ 0 ] ];\r\n\t\t\t\t\ttexture.wrapT = THREE[ data.wrap[ 1 ] ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttextures[ data.uuid ] = texture;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn textures;\r\n\r\n\t},\r\n\r\n\tparseObject: function () {\r\n\r\n\t\tvar matrix = new THREE.Matrix4();\r\n\r\n\t\treturn function ( data, geometries, materials ) {\r\n\r\n\t\t\tvar object;\r\n\r\n\t\t\tvar getGeometry = function ( name ) {\r\n\r\n\t\t\t\tif ( geometries[ name ] === undefined ) {\r\n\r\n\t\t\t\t\tTHREE.warn( 'THREE.ObjectLoader: Undefined geometry', name );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn geometries[ name ];\r\n\r\n\t\t\t};\r\n\r\n\t\t\tvar getMaterial = function ( name ) {\r\n\r\n\t\t\t\tif ( materials[ name ] === undefined ) {\r\n\r\n\t\t\t\t\tTHREE.warn( 'THREE.ObjectLoader: Undefined material', name );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn materials[ name ];\r\n\r\n\t\t\t};\r\n\r\n\t\t\tswitch ( data.type ) {\r\n\r\n\t\t\t\tcase 'Scene':\r\n\r\n\t\t\t\t\tobject = new THREE.Scene();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PerspectiveCamera':\r\n\r\n\t\t\t\t\tobject = new THREE.PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'OrthographicCamera':\r\n\r\n\t\t\t\t\tobject = new THREE.OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'AmbientLight':\r\n\r\n\t\t\t\t\tobject = new THREE.AmbientLight( data.color );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'DirectionalLight':\r\n\r\n\t\t\t\t\tobject = new THREE.DirectionalLight( data.color, data.intensity );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PointLight':\r\n\r\n\t\t\t\t\tobject = new THREE.PointLight( data.color, data.intensity, data.distance, data.decay );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'SpotLight':\r\n\r\n\t\t\t\t\tobject = new THREE.SpotLight( data.color, data.intensity, data.distance, data.angle, data.exponent, data.decay );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'HemisphereLight':\r\n\r\n\t\t\t\t\tobject = new THREE.HemisphereLight( data.color, data.groundColor, data.intensity );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Mesh':\r\n\r\n\t\t\t\t\tobject = new THREE.Mesh( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Line':\r\n\r\n\t\t\t\t\tobject = new THREE.Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PointCloud':\r\n\r\n\t\t\t\t\tobject = new THREE.PointCloud( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Sprite':\r\n\r\n\t\t\t\t\tobject = new THREE.Sprite( getMaterial( data.material ) );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Group':\r\n\r\n\t\t\t\t\tobject = new THREE.Group();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tobject = new THREE.Object3D();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobject.uuid = data.uuid;\r\n\r\n\t\t\tif ( data.name !== undefined ) object.name = data.name;\r\n\t\t\tif ( data.matrix !== undefined ) {\r\n\r\n\t\t\t\tmatrix.fromArray( data.matrix );\r\n\t\t\t\tmatrix.decompose( object.position, object.quaternion, object.scale );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\r\n\t\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\r\n\t\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( data.visible !== undefined ) object.visible = data.visible;\r\n\t\t\tif ( data.userData !== undefined ) object.userData = data.userData;\r\n\r\n\t\t\tif ( data.children !== undefined ) {\r\n\r\n\t\t\t\tfor ( var child in data.children ) {\r\n\r\n\t\t\t\t\tobject.add( this.parseObject( data.children[ child ], geometries, materials ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn object;\r\n\r\n\t\t}\r\n\r\n\t}()\r\n\r\n};\r\n\r\n// File:src/loaders/TextureLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.TextureLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.TextureLoader.prototype = {\r\n\r\n\tconstructor: THREE.TextureLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.ImageLoader( scope.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( image ) {\r\n\r\n\t\t\tvar texture = new THREE.Texture( image );\r\n\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\tif ( onLoad !== undefined ) {\r\n\r\n\t\t\t\tonLoad( texture );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/BinaryTextureLoader.js\r\n\r\n/**\r\n * @author Nikos M. / https://github.com/foo123/\r\n *\r\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\r\n */\r\n\r\nTHREE.DataTextureLoader = THREE.BinaryTextureLoader = function () {\r\n\r\n\t// override in sub classes\r\n\tthis._parser = null;\r\n\r\n};\r\n\r\nTHREE.BinaryTextureLoader.prototype = {\r\n\r\n\tconstructor: THREE.BinaryTextureLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar texture = new THREE.DataTexture( );\r\n\r\n\t\tvar loader = new THREE.XHRLoader();\r\n\t\tloader.setResponseType( 'arraybuffer' );\r\n\r\n\t\tloader.load( url, function ( buffer ) {\r\n\r\n\t\t\tvar texData = scope._parser( buffer );\r\n\r\n\t\t\tif ( !texData ) return;\r\n\r\n\t\t\tif ( undefined !== texData.image ) {\r\n\r\n\t\t\t\ttexture.image = texData.image;\r\n\r\n\t\t\t} else if ( undefined !== texData.data ) {\r\n\r\n\t\t\t\ttexture.image.width = texData.width;\r\n\t\t\t\ttexture.image.height = texData.height;\r\n\t\t\t\ttexture.image.data = texData.data;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : THREE.ClampToEdgeWrapping;\r\n\t\t\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : THREE.ClampToEdgeWrapping;\r\n\r\n\t\t\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : THREE.LinearFilter;\r\n\t\t\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : THREE.LinearMipMapLinearFilter;\r\n\r\n\t\t\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\r\n\r\n\t\t\tif ( undefined !== texData.format ) {\r\n\r\n\t\t\t\ttexture.format = texData.format;\r\n\r\n\t\t\t}\r\n\t\t\tif ( undefined !== texData.type ) {\r\n\r\n\t\t\t\ttexture.type = texData.type;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( undefined !== texData.mipmaps ) {\r\n\r\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( 1 === texData.mipmapCount ) {\r\n\r\n\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\tif ( onLoad ) onLoad( texture, texData );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\r\n\t\treturn texture;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/CompressedTextureLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n *\r\n * Abstract Base class to block based textures loader (dds, pvr, ...)\r\n */\r\n\r\nTHREE.CompressedTextureLoader = function () {\r\n\r\n\t// override in sub classes\r\n\tthis._parser = null;\r\n\r\n};\r\n\r\n\r\nTHREE.CompressedTextureLoader.prototype = {\r\n\r\n\tconstructor: THREE.CompressedTextureLoader,\r\n\r\n\tload: function ( url, onLoad, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar images = [];\r\n\r\n\t\tvar texture = new THREE.CompressedTexture();\r\n\t\ttexture.image = images;\r\n\r\n\t\tvar loader = new THREE.XHRLoader();\r\n\t\tloader.setResponseType( 'arraybuffer' );\r\n\r\n\t\tif ( url instanceof Array ) {\r\n\r\n\t\t\tvar loaded = 0;\r\n\r\n\t\t\tvar loadTexture = function ( i ) {\r\n\r\n\t\t\t\tloader.load( url[ i ], function ( buffer ) {\r\n\r\n\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\r\n\t\t\t\t\timages[ i ] = {\r\n\t\t\t\t\t\twidth: texDatas.width,\r\n\t\t\t\t\t\theight: texDatas.height,\r\n\t\t\t\t\t\tformat: texDatas.format,\r\n\t\t\t\t\t\tmipmaps: texDatas.mipmaps\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tloaded += 1;\r\n\r\n\t\t\t\t\tif ( loaded === 6 ) {\r\n\r\n\t\t\t\t\t\tif (texDatas.mipmapCount == 1)\r\n \t\t\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\r\n\t\t\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t};\r\n\r\n\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\r\n\r\n\t\t\t\tloadTexture( i );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// compressed cubemap texture stored in a single DDS file\r\n\r\n\t\t\tloader.load( url, function ( buffer ) {\r\n\r\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\r\n\t\t\t\tif ( texDatas.isCubemap ) {\r\n\r\n\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\r\n\r\n\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\r\n\r\n\t\t\t\t\t\timages[ f ] = { mipmaps : [] };\r\n\r\n\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\r\n\r\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\r\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\r\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\r\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttexture.image.width = texDatas.width;\r\n\t\t\t\t\ttexture.image.height = texDatas.height;\r\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\r\n\r\n\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\treturn texture;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/materials/Material.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Material = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.MaterialIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'Material';\r\n\r\n\tthis.side = THREE.FrontSide;\r\n\r\n\tthis.opacity = 1;\r\n\tthis.transparent = false;\r\n\r\n\tthis.blending = THREE.NormalBlending;\r\n\r\n\tthis.blendSrc = THREE.SrcAlphaFactor;\r\n\tthis.blendDst = THREE.OneMinusSrcAlphaFactor;\r\n\tthis.blendEquation = THREE.AddEquation;\r\n\tthis.blendSrcAlpha = null;\r\n\tthis.blendDstAlpha = null;\r\n\tthis.blendEquationAlpha = null;\r\n\r\n\tthis.depthTest = true;\r\n\tthis.depthWrite = true;\r\n\r\n\tthis.colorWrite = true;\r\n\r\n\tthis.polygonOffset = false;\r\n\tthis.polygonOffsetFactor = 0;\r\n\tthis.polygonOffsetUnits = 0;\r\n\r\n\tthis.alphaTest = 0;\r\n\r\n\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\r\n\r\n\tthis.visible = true;\r\n\r\n\tthis._needsUpdate = true;\r\n\r\n};\r\n\r\nTHREE.Material.prototype = {\r\n\r\n\tconstructor: THREE.Material,\r\n\r\n\tget needsUpdate () {\r\n\r\n\t\treturn this._needsUpdate;\r\n\r\n\t},\r\n\r\n\tset needsUpdate ( value ) {\r\n\r\n\t\tif ( value === true ) this.update();\r\n\r\n\t\tthis._needsUpdate = value;\r\n\r\n\t},\r\n\r\n\tsetValues: function ( values ) {\r\n\r\n\t\tif ( values === undefined ) return;\r\n\r\n\t\tfor ( var key in values ) {\r\n\r\n\t\t\tvar newValue = values[ key ];\r\n\r\n\t\t\tif ( newValue === undefined ) {\r\n\r\n\t\t\t\tTHREE.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( key in this ) {\r\n\r\n\t\t\t\tvar currentValue = this[ key ];\r\n\r\n\t\t\t\tif ( currentValue instanceof THREE.Color ) {\r\n\r\n\t\t\t\t\tcurrentValue.set( newValue );\r\n\r\n\t\t\t\t} else if ( currentValue instanceof THREE.Vector3 && newValue instanceof THREE.Vector3 ) {\r\n\r\n\t\t\t\t\tcurrentValue.copy( newValue );\r\n\r\n\t\t\t\t} else if ( key == 'overdraw' ) {\r\n\r\n\t\t\t\t\t// ensure overdraw is backwards-compatable with legacy boolean type\r\n\t\t\t\t\tthis[ key ] = Number( newValue );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis[ key ] = newValue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttoJSON: function () {\r\n\r\n\t\tvar output = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.2,\r\n\t\t\t\ttype: 'material',\r\n\t\t\t\tgenerator: 'MaterialExporter'\r\n\t\t\t},\r\n\t\t\tuuid: this.uuid,\r\n\t\t\ttype: this.type\r\n\t\t};\r\n\r\n\t\tif ( this.name !== \"\" ) output.name = this.name;\r\n\r\n\t\tif ( this instanceof THREE.MeshBasicMaterial ) {\r\n\r\n\t\t\toutput.color = this.color.getHex();\r\n\t\t\tif ( this.vertexColors !== THREE.NoColors ) output.vertexColors = this.vertexColors;\r\n\t\t\tif ( this.blending !== THREE.NormalBlending ) output.blending = this.blending;\r\n\t\t\tif ( this.side !== THREE.FrontSide ) output.side = this.side;\r\n\r\n\t\t} else if ( this instanceof THREE.MeshLambertMaterial ) {\r\n\r\n\t\t\toutput.color = this.color.getHex();\r\n\t\t\toutput.emissive = this.emissive.getHex();\r\n\t\t\tif ( this.vertexColors !== THREE.NoColors ) output.vertexColors = this.vertexColors;\r\n\t\t\tif ( this.shading !== THREE.SmoothShading ) output.shading = this.shading;\r\n\t\t\tif ( this.blending !== THREE.NormalBlending ) output.blending = this.blending;\r\n\t\t\tif ( this.side !== THREE.FrontSide ) output.side = this.side;\r\n\r\n\t\t} else if ( this instanceof THREE.MeshPhongMaterial ) {\r\n\r\n\t\t\toutput.color = this.color.getHex();\r\n\t\t\toutput.emissive = this.emissive.getHex();\r\n\t\t\toutput.specular = this.specular.getHex();\r\n\t\t\toutput.shininess = this.shininess;\r\n\t\t\tif ( this.vertexColors !== THREE.NoColors ) output.vertexColors = this.vertexColors;\r\n\t\t\tif ( this.shading !== THREE.SmoothShading ) output.shading = this.shading;\r\n\t\t\tif ( this.blending !== THREE.NormalBlending ) output.blending = this.blending;\r\n\t\t\tif ( this.side !== THREE.FrontSide ) output.side = this.side;\r\n\r\n\t\t} else if ( this instanceof THREE.MeshNormalMaterial ) {\r\n\r\n\t\t\tif ( this.blending !== THREE.NormalBlending ) output.blending = this.blending;\r\n\t\t\tif ( this.side !== THREE.FrontSide ) output.side = this.side;\r\n\r\n\t\t} else if ( this instanceof THREE.MeshDepthMaterial ) {\r\n\r\n\t\t\tif ( this.blending !== THREE.NormalBlending ) output.blending = this.blending;\r\n\t\t\tif ( this.side !== THREE.FrontSide ) output.side = this.side;\r\n\r\n\t\t} else if ( this instanceof THREE.PointCloudMaterial ) {\r\n\r\n\t\t\toutput.size  = this.size;\r\n\t\t\toutput.sizeAttenuation = this.sizeAttenuation;\r\n\t\t\toutput.color = this.color.getHex();\r\n\r\n\t\t\tif ( this.vertexColors !== THREE.NoColors ) output.vertexColors = this.vertexColors;\r\n\t\t\tif ( this.blending !== THREE.NormalBlending ) output.blending = this.blending;\r\n\r\n\t\t} else if ( this instanceof THREE.ShaderMaterial ) {\r\n\r\n\t\t\toutput.uniforms = this.uniforms;\r\n\t\t\toutput.vertexShader = this.vertexShader;\r\n\t\t\toutput.fragmentShader = this.fragmentShader;\r\n\r\n\t\t} else if ( this instanceof THREE.SpriteMaterial ) {\r\n\r\n\t\t\toutput.color = this.color.getHex();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.opacity < 1 ) output.opacity = this.opacity;\r\n\t\tif ( this.transparent !== false ) output.transparent = this.transparent;\r\n\t\tif ( this.wireframe !== false ) output.wireframe = this.wireframe;\r\n\r\n\t\treturn output;\r\n\r\n\t},\r\n\r\n\tclone: function ( material ) {\r\n\r\n\t\tif ( material === undefined ) material = new THREE.Material();\r\n\r\n\t\tmaterial.name = this.name;\r\n\r\n\t\tmaterial.side = this.side;\r\n\r\n\t\tmaterial.opacity = this.opacity;\r\n\t\tmaterial.transparent = this.transparent;\r\n\r\n\t\tmaterial.blending = this.blending;\r\n\r\n\t\tmaterial.blendSrc = this.blendSrc;\r\n\t\tmaterial.blendDst = this.blendDst;\r\n\t\tmaterial.blendEquation = this.blendEquation;\r\n\t\tmaterial.blendSrcAlpha = this.blendSrcAlpha;\r\n\t\tmaterial.blendDstAlpha = this.blendDstAlpha;\r\n\t\tmaterial.blendEquationAlpha = this.blendEquationAlpha;\r\n\r\n\t\tmaterial.depthTest = this.depthTest;\r\n\t\tmaterial.depthWrite = this.depthWrite;\r\n\r\n\t\tmaterial.polygonOffset = this.polygonOffset;\r\n\t\tmaterial.polygonOffsetFactor = this.polygonOffsetFactor;\r\n\t\tmaterial.polygonOffsetUnits = this.polygonOffsetUnits;\r\n\r\n\t\tmaterial.alphaTest = this.alphaTest;\r\n\r\n\t\tmaterial.overdraw = this.overdraw;\r\n\r\n\t\tmaterial.visible = this.visible;\r\n\r\n\t\treturn material;\r\n\r\n\t},\r\n\r\n\tupdate: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'update' } );\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Material.prototype );\r\n\r\nTHREE.MaterialIdCount = 0;\r\n\r\n// File:src/materials/LineBasicMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  linewidth: <float>,\r\n *  linecap: \"round\",\r\n *  linejoin: \"round\",\r\n *\r\n *  vertexColors: <bool>\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.LineBasicMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'LineBasicMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\r\n\tthis.linewidth = 1;\r\n\tthis.linecap = 'round';\r\n\tthis.linejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.LineBasicMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.LineBasicMaterial.prototype.constructor = THREE.LineBasicMaterial;\r\n\r\nTHREE.LineBasicMaterial.prototype.clone = function () {\r\n\r\n\tvar material = new THREE.LineBasicMaterial();\r\n\r\n\tTHREE.Material.prototype.clone.call( this, material );\r\n\r\n\tmaterial.color.copy( this.color );\r\n\r\n\tmaterial.linewidth = this.linewidth;\r\n\tmaterial.linecap = this.linecap;\r\n\tmaterial.linejoin = this.linejoin;\r\n\r\n\tmaterial.vertexColors = this.vertexColors;\r\n\r\n\tmaterial.fog = this.fog;\r\n\r\n\treturn material;\r\n\r\n};\r\n\r\n// File:src/materials/LineDashedMaterial.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  linewidth: <float>,\r\n *\r\n *  scale: <float>,\r\n *  dashSize: <float>,\r\n *  gapSize: <float>,\r\n *\r\n *  vertexColors: <bool>\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.LineDashedMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'LineDashedMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\r\n\tthis.linewidth = 1;\r\n\r\n\tthis.scale = 1;\r\n\tthis.dashSize = 3;\r\n\tthis.gapSize = 1;\r\n\r\n\tthis.vertexColors = false;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.LineDashedMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.LineDashedMaterial.prototype.constructor = THREE.LineDashedMaterial;\r\n\r\nTHREE.LineDashedMaterial.prototype.clone = function () {\r\n\r\n\tvar material = new THREE.LineDashedMaterial();\r\n\r\n\tTHREE.Material.prototype.clone.call( this, material );\r\n\r\n\tmaterial.color.copy( this.color );\r\n\r\n\tmaterial.linewidth = this.linewidth;\r\n\r\n\tmaterial.scale = this.scale;\r\n\tmaterial.dashSize = this.dashSize;\r\n\tmaterial.gapSize = this.gapSize;\r\n\r\n\tmaterial.vertexColors = this.vertexColors;\r\n\r\n\tmaterial.fog = this.fog;\r\n\r\n\treturn material;\r\n\r\n};\r\n\r\n// File:src/materials/MeshBasicMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  lightMap: new THREE.Texture( <Image> ),\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshBasicMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshBasicMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff ); // emissive\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.lightMap = null;\r\n\r\n\tthis.specularMap = null;\r\n\r\n\tthis.alphaMap = null;\r\n\r\n\tthis.envMap = null;\r\n\tthis.combine = THREE.MultiplyOperation;\r\n\tthis.reflectivity = 1;\r\n\tthis.refractionRatio = 0.98;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.shading = THREE.SmoothShading;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\tthis.wireframeLinecap = 'round';\r\n\tthis.wireframeLinejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshBasicMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshBasicMaterial.prototype.constructor = THREE.MeshBasicMaterial;\r\n\r\nTHREE.MeshBasicMaterial.prototype.clone = function () {\r\n\r\n\tvar material = new THREE.MeshBasicMaterial();\r\n\r\n\tTHREE.Material.prototype.clone.call( this, material );\r\n\r\n\tmaterial.color.copy( this.color );\r\n\r\n\tmaterial.map = this.map;\r\n\r\n\tmaterial.lightMap = this.lightMap;\r\n\r\n\tmaterial.specularMap = this.specularMap;\r\n\r\n\tmaterial.alphaMap = this.alphaMap;\r\n\r\n\tmaterial.envMap = this.envMap;\r\n\tmaterial.combine = this.combine;\r\n\tmaterial.reflectivity = this.reflectivity;\r\n\tmaterial.refractionRatio = this.refractionRatio;\r\n\r\n\tmaterial.fog = this.fog;\r\n\r\n\tmaterial.shading = this.shading;\r\n\r\n\tmaterial.wireframe = this.wireframe;\r\n\tmaterial.wireframeLinewidth = this.wireframeLinewidth;\r\n\tmaterial.wireframeLinecap = this.wireframeLinecap;\r\n\tmaterial.wireframeLinejoin = this.wireframeLinejoin;\r\n\r\n\tmaterial.vertexColors = this.vertexColors;\r\n\r\n\tmaterial.skinning = this.skinning;\r\n\tmaterial.morphTargets = this.morphTargets;\r\n\r\n\treturn material;\r\n\r\n};\r\n\r\n// File:src/materials/MeshLambertMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  emissive: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  lightMap: new THREE.Texture( <Image> ),\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>,\r\n *\r\n *\tfog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshLambertMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshLambertMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\tthis.emissive = new THREE.Color( 0x000000 );\r\n\r\n\tthis.wrapAround = false;\r\n\tthis.wrapRGB = new THREE.Vector3( 1, 1, 1 );\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.lightMap = null;\r\n\r\n\tthis.specularMap = null;\r\n\r\n\tthis.alphaMap = null;\r\n\r\n\tthis.envMap = null;\r\n\tthis.combine = THREE.MultiplyOperation;\r\n\tthis.reflectivity = 1;\r\n\tthis.refractionRatio = 0.98;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.shading = THREE.SmoothShading;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\tthis.wireframeLinecap = 'round';\r\n\tthis.wireframeLinejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\tthis.morphNormals = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshLambertMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshLambertMaterial.prototype.constructor = THREE.MeshLambertMaterial;\r\n\r\nTHREE.MeshLambertMaterial.prototype.clone = function () {\r\n\r\n\tvar material = new THREE.MeshLambertMaterial();\r\n\r\n\tTHREE.Material.prototype.clone.call( this, material );\r\n\r\n\tmaterial.color.copy( this.color );\r\n\tmaterial.emissive.copy( this.emissive );\r\n\r\n\tmaterial.wrapAround = this.wrapAround;\r\n\tmaterial.wrapRGB.copy( this.wrapRGB );\r\n\r\n\tmaterial.map = this.map;\r\n\r\n\tmaterial.lightMap = this.lightMap;\r\n\r\n\tmaterial.specularMap = this.specularMap;\r\n\r\n\tmaterial.alphaMap = this.alphaMap;\r\n\r\n\tmaterial.envMap = this.envMap;\r\n\tmaterial.combine = this.combine;\r\n\tmaterial.reflectivity = this.reflectivity;\r\n\tmaterial.refractionRatio = this.refractionRatio;\r\n\r\n\tmaterial.fog = this.fog;\r\n\r\n\tmaterial.shading = this.shading;\r\n\r\n\tmaterial.wireframe = this.wireframe;\r\n\tmaterial.wireframeLinewidth = this.wireframeLinewidth;\r\n\tmaterial.wireframeLinecap = this.wireframeLinecap;\r\n\tmaterial.wireframeLinejoin = this.wireframeLinejoin;\r\n\r\n\tmaterial.vertexColors = this.vertexColors;\r\n\r\n\tmaterial.skinning = this.skinning;\r\n\tmaterial.morphTargets = this.morphTargets;\r\n\tmaterial.morphNormals = this.morphNormals;\r\n\r\n\treturn material;\r\n\r\n};\r\n\r\n// File:src/materials/MeshPhongMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  emissive: <hex>,\r\n *  specular: <hex>,\r\n *  shininess: <float>,\r\n *  opacity: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  lightMap: new THREE.Texture( <Image> ),\r\n *\r\n *  bumpMap: new THREE.Texture( <Image> ),\r\n *  bumpScale: <float>,\r\n *\r\n *  normalMap: new THREE.Texture( <Image> ),\r\n *  normalScale: <Vector2>,\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>,\r\n *\r\n *\tfog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshPhongMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshPhongMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\tthis.emissive = new THREE.Color( 0x000000 );\r\n\tthis.specular = new THREE.Color( 0x111111 );\r\n\tthis.shininess = 30;\r\n\r\n\tthis.metal = false;\r\n\r\n\tthis.wrapAround = false;\r\n\tthis.wrapRGB = new THREE.Vector3( 1, 1, 1 );\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.lightMap = null;\r\n\r\n\tthis.bumpMap = null;\r\n\tthis.bumpScale = 1;\r\n\r\n\tthis.normalMap = null;\r\n\tthis.normalScale = new THREE.Vector2( 1, 1 );\r\n\r\n\tthis.specularMap = null;\r\n\r\n\tthis.alphaMap = null;\r\n\r\n\tthis.envMap = null;\r\n\tthis.combine = THREE.MultiplyOperation;\r\n\tthis.reflectivity = 1;\r\n\tthis.refractionRatio = 0.98;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.shading = THREE.SmoothShading;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\tthis.wireframeLinecap = 'round';\r\n\tthis.wireframeLinejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\tthis.morphNormals = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshPhongMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshPhongMaterial.prototype.constructor = THREE.MeshPhongMaterial;\r\n\r\nTHREE.MeshPhongMaterial.prototype.clone = function () {\r\n\r\n\tvar material = new THREE.MeshPhongMaterial();\r\n\r\n\tTHREE.Material.prototype.clone.call( this, material );\r\n\r\n\tmaterial.color.copy( this.color );\r\n\tmaterial.emissive.copy( this.emissive );\r\n\tmaterial.specular.copy( this.specular );\r\n\tmaterial.shininess = this.shininess;\r\n\r\n\tmaterial.metal = this.metal;\r\n\r\n\tmaterial.wrapAround = this.wrapAround;\r\n\tmaterial.wrapRGB.copy( this.wrapRGB );\r\n\r\n\tmaterial.map = this.map;\r\n\r\n\tmaterial.lightMap = this.lightMap;\r\n\r\n\tmaterial.bumpMap = this.bumpMap;\r\n\tmaterial.bumpScale = this.bumpScale;\r\n\r\n\tmaterial.normalMap = this.normalMap;\r\n\tmaterial.normalScale.copy( this.normalScale );\r\n\r\n\tmaterial.specularMap = this.specularMap;\r\n\r\n\tmaterial.alphaMap = this.alphaMap;\r\n\r\n\tmaterial.envMap = this.envMap;\r\n\tmaterial.combine = this.combine;\r\n\tmaterial.reflectivity = this.reflectivity;\r\n\tmaterial.refractionRatio = this.refractionRatio;\r\n\r\n\tmaterial.fog = this.fog;\r\n\r\n\tmaterial.shading = this.shading;\r\n\r\n\tmaterial.wireframe = this.wireframe;\r\n\tmaterial.wireframeLinewidth = this.wireframeLinewidth;\r\n\tmaterial.wireframeLinecap = this.wireframeLinecap;\r\n\tmaterial.wireframeLinejoin = this.wireframeLinejoin;\r\n\r\n\tmaterial.vertexColors = this.vertexColors;\r\n\r\n\tmaterial.skinning = this.skinning;\r\n\tmaterial.morphTargets = this.morphTargets;\r\n\tmaterial.morphNormals = this.morphNormals;\r\n\r\n\treturn material;\r\n\r\n};\r\n\r\n// File:src/materials/MeshDepthMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  opacity: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>\r\n * }\r\n */\r\n\r\nTHREE.MeshDepthMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshDepthMaterial';\r\n\r\n\tthis.morphTargets = false;\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshDepthMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshDepthMaterial.prototype.constructor = THREE.MeshDepthMaterial;\r\n\r\nTHREE.MeshDepthMaterial.prototype.clone = function () {\r\n\r\n\tvar material = new THREE.MeshDepthMaterial();\r\n\r\n\tTHREE.Material.prototype.clone.call( this, material );\r\n\r\n\tmaterial.wireframe = this.wireframe;\r\n\tmaterial.wireframeLinewidth = this.wireframeLinewidth;\r\n\r\n\treturn material;\r\n\r\n};\r\n\r\n// File:src/materials/MeshNormalMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n *\r\n * parameters = {\r\n *  opacity: <float>,\r\n *\r\n *  shading: THREE.FlatShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>\r\n * }\r\n */\r\n\r\nTHREE.MeshNormalMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this, parameters );\r\n\r\n\tthis.type = 'MeshNormalMaterial';\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\r\n\tthis.morphTargets = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshNormalMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshNormalMaterial.prototype.constructor = THREE.MeshNormalMaterial;\r\n\r\nTHREE.MeshNormalMaterial.prototype.clone = function () {\r\n\r\n\tvar material = new THREE.MeshNormalMaterial();\r\n\r\n\tTHREE.Material.prototype.clone.call( this, material );\r\n\r\n\tmaterial.wireframe = this.wireframe;\r\n\tmaterial.wireframeLinewidth = this.wireframeLinewidth;\r\n\r\n\treturn material;\r\n\r\n};\r\n\r\n// File:src/materials/MeshFaceMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.MeshFaceMaterial = function ( materials ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.type = 'MeshFaceMaterial';\r\n\t\r\n\tthis.materials = materials instanceof Array ? materials : [];\r\n\r\n};\r\n\r\nTHREE.MeshFaceMaterial.prototype = {\r\n\r\n\tconstructor: THREE.MeshFaceMaterial,\r\n\r\n\ttoJSON: function () {\r\n\r\n\t\tvar output = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.2,\r\n\t\t\t\ttype: 'material',\r\n\t\t\t\tgenerator: 'MaterialExporter'\r\n\t\t\t},\r\n\t\t\tuuid: this.uuid,\r\n\t\t\ttype: this.type,\r\n\t\t\tmaterials: []\r\n\t\t};\r\n\r\n\t\tfor ( var i = 0, l = this.materials.length; i < l; i ++ ) {\r\n\r\n\t\t\toutput.materials.push( this.materials[ i ].toJSON() );\r\n\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\tvar material = new THREE.MeshFaceMaterial();\r\n\r\n\t\tfor ( var i = 0; i < this.materials.length; i ++ ) {\r\n\r\n\t\t\tmaterial.materials.push( this.materials[ i ].clone() );\r\n\r\n\t\t}\r\n\r\n\t\treturn material;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/materials/PointCloudMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  size: <float>,\r\n *  sizeAttenuation: <bool>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  vertexColors: <bool>,\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.PointCloudMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'PointCloudMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.size = 1;\r\n\tthis.sizeAttenuation = true;\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.PointCloudMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.PointCloudMaterial.prototype.constructor = THREE.PointCloudMaterial;\r\n\r\nTHREE.PointCloudMaterial.prototype.clone = function () {\r\n\r\n\tvar material = new THREE.PointCloudMaterial();\r\n\r\n\tTHREE.Material.prototype.clone.call( this, material );\r\n\r\n\tmaterial.color.copy( this.color );\r\n\r\n\tmaterial.map = this.map;\r\n\r\n\tmaterial.size = this.size;\r\n\tmaterial.sizeAttenuation = this.sizeAttenuation;\r\n\r\n\tmaterial.vertexColors = this.vertexColors;\r\n\r\n\tmaterial.fog = this.fog;\r\n\r\n\treturn material;\r\n\r\n};\r\n\r\n// backwards compatibility\r\n\r\nTHREE.ParticleBasicMaterial = function ( parameters ) {\r\n\r\n\tTHREE.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointCloudMaterial.' );\r\n\treturn new THREE.PointCloudMaterial( parameters );\r\n\r\n};\r\n\r\nTHREE.ParticleSystemMaterial = function ( parameters ) {\r\n\r\n\tTHREE.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointCloudMaterial.' );\r\n\treturn new THREE.PointCloudMaterial( parameters );\r\n\r\n};\r\n\r\n// File:src/materials/ShaderMaterial.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  defines: { \"label\" : \"value\" },\r\n *  uniforms: { \"parameter1\": { type: \"f\", value: 1.0 }, \"parameter2\": { type: \"i\" value2: 2 } },\r\n *\r\n *  fragmentShader: <string>,\r\n *  vertexShader: <string>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  lights: <bool>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>,\r\n *\r\n *\tfog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.ShaderMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'ShaderMaterial';\r\n\r\n\tthis.defines = {};\r\n\tthis.uniforms = {};\r\n\tthis.attributes = null;\r\n\r\n\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\r\n\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\r\n\r\n\tthis.shading = THREE.SmoothShading;\r\n\r\n\tthis.linewidth = 1;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\r\n\tthis.fog = false; // set to use scene fog\r\n\r\n\tthis.lights = false; // set to use scene lights\r\n\r\n\tthis.vertexColors = THREE.NoColors; // set to use \"color\" attribute stream\r\n\r\n\tthis.skinning = false; // set to use skinning attribute streams\r\n\r\n\tthis.morphTargets = false; // set to use morph targets\r\n\tthis.morphNormals = false; // set to use morph normals\r\n\r\n\t// When rendered geometry doesn't include these attributes but the material does,\r\n\t// use these default values in WebGL. This avoids errors when buffer data is missing.\r\n\tthis.defaultAttributeValues = {\r\n\t\t'color': [ 1, 1, 1 ],\r\n\t\t'uv': [ 0, 0 ],\r\n\t\t'uv2': [ 0, 0 ]\r\n\t};\r\n\r\n\tthis.index0AttributeName = undefined;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.ShaderMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.ShaderMaterial.prototype.constructor = THREE.ShaderMaterial;\r\n\r\nTHREE.ShaderMaterial.prototype.clone = function () {\r\n\r\n\tvar material = new THREE.ShaderMaterial();\r\n\r\n\tTHREE.Material.prototype.clone.call( this, material );\r\n\r\n\tmaterial.fragmentShader = this.fragmentShader;\r\n\tmaterial.vertexShader = this.vertexShader;\r\n\r\n\tmaterial.uniforms = THREE.UniformsUtils.clone( this.uniforms );\r\n\r\n\tmaterial.attributes = this.attributes;\r\n\tmaterial.defines = this.defines;\r\n\r\n\tmaterial.shading = this.shading;\r\n\r\n\tmaterial.wireframe = this.wireframe;\r\n\tmaterial.wireframeLinewidth = this.wireframeLinewidth;\r\n\r\n\tmaterial.fog = this.fog;\r\n\r\n\tmaterial.lights = this.lights;\r\n\r\n\tmaterial.vertexColors = this.vertexColors;\r\n\r\n\tmaterial.skinning = this.skinning;\r\n\r\n\tmaterial.morphTargets = this.morphTargets;\r\n\tmaterial.morphNormals = this.morphNormals;\r\n\r\n\treturn material;\r\n\r\n};\r\n\r\n// File:src/materials/RawShaderMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.RawShaderMaterial = function ( parameters ) {\r\n\r\n\tTHREE.ShaderMaterial.call( this, parameters );\r\n\r\n\tthis.type = 'RawShaderMaterial';\r\n\r\n};\r\n\r\nTHREE.RawShaderMaterial.prototype = Object.create( THREE.ShaderMaterial.prototype );\r\nTHREE.RawShaderMaterial.prototype.constructor = THREE.RawShaderMaterial;\r\n\r\nTHREE.RawShaderMaterial.prototype.clone = function () {\r\n\r\n\tvar material = new THREE.RawShaderMaterial();\r\n\r\n\tTHREE.ShaderMaterial.prototype.clone.call( this, material );\r\n\r\n\treturn material;\r\n\r\n};\r\n\r\n// File:src/materials/SpriteMaterial.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *\tuvOffset: new THREE.Vector2(),\r\n *\tuvScale: new THREE.Vector2(),\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.SpriteMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'SpriteMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\tthis.map = null;\r\n\r\n\tthis.rotation = 0;\r\n\r\n\tthis.fog = false;\r\n\r\n\t// set parameters\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.SpriteMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.SpriteMaterial.prototype.constructor = THREE.SpriteMaterial;\r\n\r\nTHREE.SpriteMaterial.prototype.clone = function () {\r\n\r\n\tvar material = new THREE.SpriteMaterial();\r\n\r\n\tTHREE.Material.prototype.clone.call( this, material );\r\n\r\n\tmaterial.color.copy( this.color );\r\n\tmaterial.map = this.map;\r\n\r\n\tmaterial.rotation = this.rotation;\r\n\r\n\tmaterial.fog = this.fog;\r\n\r\n\treturn material;\r\n\r\n};\r\n\r\n// File:src/textures/Texture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author szimek / https://github.com/szimek/\r\n */\r\n\r\nTHREE.Texture = function ( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.TextureIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.sourceFile = '';\r\n\r\n\tthis.image = image !== undefined ? image : THREE.Texture.DEFAULT_IMAGE;\r\n\tthis.mipmaps = [];\r\n\r\n\tthis.mapping = mapping !== undefined ? mapping : THREE.Texture.DEFAULT_MAPPING;\r\n\r\n\tthis.wrapS = wrapS !== undefined ? wrapS : THREE.ClampToEdgeWrapping;\r\n\tthis.wrapT = wrapT !== undefined ? wrapT : THREE.ClampToEdgeWrapping;\r\n\r\n\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.LinearFilter;\r\n\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.LinearMipMapLinearFilter;\r\n\r\n\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\r\n\r\n\tthis.format = format !== undefined ? format : THREE.RGBAFormat;\r\n\tthis.type = type !== undefined ? type : THREE.UnsignedByteType;\r\n\r\n\tthis.offset = new THREE.Vector2( 0, 0 );\r\n\tthis.repeat = new THREE.Vector2( 1, 1 );\r\n\r\n\tthis.generateMipmaps = true;\r\n\tthis.premultiplyAlpha = false;\r\n\tthis.flipY = true;\r\n\tthis.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\r\n\r\n\tthis._needsUpdate = false;\r\n\tthis.onUpdate = null;\r\n\r\n};\r\n\r\nTHREE.Texture.DEFAULT_IMAGE = undefined;\r\nTHREE.Texture.DEFAULT_MAPPING = THREE.UVMapping;\r\n\r\nTHREE.Texture.prototype = {\r\n\r\n\tconstructor: THREE.Texture,\r\n\r\n\tget needsUpdate () {\r\n\r\n\t\treturn this._needsUpdate;\r\n\r\n\t},\r\n\r\n\tset needsUpdate ( value ) {\r\n\r\n\t\tif ( value === true ) this.update();\r\n\r\n\t\tthis._needsUpdate = value;\r\n\r\n\t},\r\n\r\n\tclone: function ( texture ) {\r\n\r\n\t\tif ( texture === undefined ) texture = new THREE.Texture();\r\n\r\n\t\ttexture.image = this.image;\r\n\t\ttexture.mipmaps = this.mipmaps.slice( 0 );\r\n\r\n\t\ttexture.mapping = this.mapping;\r\n\r\n\t\ttexture.wrapS = this.wrapS;\r\n\t\ttexture.wrapT = this.wrapT;\r\n\r\n\t\ttexture.magFilter = this.magFilter;\r\n\t\ttexture.minFilter = this.minFilter;\r\n\r\n\t\ttexture.anisotropy = this.anisotropy;\r\n\r\n\t\ttexture.format = this.format;\r\n\t\ttexture.type = this.type;\r\n\r\n\t\ttexture.offset.copy( this.offset );\r\n\t\ttexture.repeat.copy( this.repeat );\r\n\r\n\t\ttexture.generateMipmaps = this.generateMipmaps;\r\n\t\ttexture.premultiplyAlpha = this.premultiplyAlpha;\r\n\t\ttexture.flipY = this.flipY;\r\n\t\ttexture.unpackAlignment = this.unpackAlignment;\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tupdate: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'update' } );\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Texture.prototype );\r\n\r\nTHREE.TextureIdCount = 0;\r\n\r\n// File:src/textures/CubeTexture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.CubeTexture = function ( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\tmapping = mapping !== undefined ? mapping : THREE.CubeReflectionMapping;\r\n\t\r\n\tTHREE.Texture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.images = images;\r\n\r\n};\r\n\r\nTHREE.CubeTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.CubeTexture.prototype.constructor = THREE.CubeTexture;\r\n\r\nTHREE.CubeTexture.clone = function ( texture ) {\r\n\r\n\tif ( texture === undefined ) texture = new THREE.CubeTexture();\r\n\r\n\tTHREE.Texture.prototype.clone.call( this, texture );\r\n\r\n\ttexture.images = this.images;\r\n\r\n\treturn texture;\r\n\r\n};\r\n\r\n// File:src/textures/CompressedTexture.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.CompressedTexture = function ( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.image = { width: width, height: height };\r\n\tthis.mipmaps = mipmaps;\r\n\r\n\t// no flipping for cube textures\r\n\t// (also flipping doesn't work for compressed textures )\r\n\r\n\tthis.flipY = false;\r\n\r\n\t// can't generate mipmaps for compressed textures\r\n\t// mips must be embedded in DDS files\r\n\r\n\tthis.generateMipmaps = false;\r\n\r\n};\r\n\r\nTHREE.CompressedTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.CompressedTexture.prototype.constructor = THREE.CompressedTexture;\r\n\r\nTHREE.CompressedTexture.prototype.clone = function () {\r\n\r\n\tvar texture = new THREE.CompressedTexture();\r\n\r\n\tTHREE.Texture.prototype.clone.call( this, texture );\r\n\r\n\treturn texture;\r\n\r\n};\r\n\r\n// File:src/textures/DataTexture.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.DataTexture = function ( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.image = { data: data, width: width, height: height };\r\n\r\n};\r\n\r\nTHREE.DataTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.DataTexture.prototype.constructor = THREE.DataTexture;\r\n\r\nTHREE.DataTexture.prototype.clone = function () {\r\n\r\n\tvar texture = new THREE.DataTexture();\r\n\r\n\tTHREE.Texture.prototype.clone.call( this, texture );\r\n\r\n\treturn texture;\r\n\r\n};\r\n\r\n// File:src/textures/VideoTexture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.VideoTexture = function ( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.generateMipmaps = false;\r\n\r\n\tvar scope = this;\r\n\r\n\tvar update = function () {\r\n\r\n\t\trequestAnimationFrame( update );\r\n\r\n\t\tif ( video.readyState === video.HAVE_ENOUGH_DATA ) {\r\n\r\n\t\t\tscope.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tupdate();\r\n\r\n};\r\n\r\nTHREE.VideoTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.VideoTexture.prototype.constructor = THREE.VideoTexture;\r\n\r\n// File:src/objects/Group.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Group = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Group';\r\n\r\n};\r\n\r\nTHREE.Group.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Group.prototype.constructor = THREE.Group;\r\n\r\n// File:src/objects/PointCloud.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.PointCloud = function ( geometry, material ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'PointCloud';\r\n\r\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\tthis.material = material !== undefined ? material : new THREE.PointCloudMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n};\r\n\r\nTHREE.PointCloud.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.PointCloud.prototype.constructor = THREE.PointCloud;\r\n\r\nTHREE.PointCloud.prototype.raycast = ( function () {\r\n\r\n\tvar inverseMatrix = new THREE.Matrix4();\r\n\tvar ray = new THREE.Ray();\r\n\r\n\treturn function ( raycaster, intersects ) {\r\n\r\n\t\tvar object = this;\r\n\t\tvar geometry = object.geometry;\r\n\t\tvar threshold = raycaster.params.PointCloud.threshold;\r\n\r\n\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tif ( ray.isIntersectionBox( geometry.boundingBox ) === false ) {\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\r\n\t\tvar position = new THREE.Vector3();\r\n\r\n\t\tvar testPoint = function ( point, index ) {\r\n\r\n\t\t\tvar rayPointDistance = ray.distanceToPoint( point );\r\n\r\n\t\t\tif ( rayPointDistance < localThreshold ) {\r\n\r\n\t\t\t\tvar intersectPoint = ray.closestPointToPoint( point );\r\n\t\t\t\tintersectPoint.applyMatrix4( object.matrixWorld );\r\n\r\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\r\n\r\n\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\tdistanceToRay: rayPointDistance,\r\n\t\t\t\t\tpoint: intersectPoint.clone(),\r\n\t\t\t\t\tindex: index,\r\n\t\t\t\t\tface: null,\r\n\t\t\t\t\tobject: object\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar attributes = geometry.attributes;\r\n\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\tif ( attributes.index !== undefined ) {\r\n\r\n\t\t\t\tvar indices = attributes.index.array;\r\n\t\t\t\tvar offsets = geometry.offsets;\r\n\r\n\t\t\t\tif ( offsets.length === 0 ) {\r\n\r\n\t\t\t\t\tvar offset = {\r\n\t\t\t\t\t\tstart: 0,\r\n\t\t\t\t\t\tcount: indices.length,\r\n\t\t\t\t\t\tindex: 0\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\toffsets = [ offset ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( var oi = 0, ol = offsets.length; oi < ol; ++ oi ) {\r\n\r\n\t\t\t\t\tvar start = offsets[ oi ].start;\r\n\t\t\t\t\tvar count = offsets[ oi ].count;\r\n\t\t\t\t\tvar index = offsets[ oi ].index;\r\n\r\n\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvar a = index + indices[ i ];\r\n\r\n\t\t\t\t\t\tposition.fromArray( positions, a * 3 );\r\n\r\n\t\t\t\t\t\ttestPoint( position, a );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar pointCount = positions.length / 3;\r\n\r\n\t\t\t\tfor ( var i = 0; i < pointCount; i ++ ) {\r\n\r\n\t\t\t\t\tposition.set(\r\n\t\t\t\t\t\tpositions[ 3 * i ],\r\n\t\t\t\t\t\tpositions[ 3 * i + 1 ],\r\n\t\t\t\t\t\tpositions[ 3 * i + 2 ]\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\ttestPoint( position, i );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar vertices = this.geometry.vertices;\r\n\r\n\t\t\tfor ( var i = 0; i < vertices.length; i ++ ) {\r\n\r\n\t\t\t\ttestPoint( vertices[ i ], i );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.PointCloud.prototype.clone = function ( object ) {\r\n\r\n\tif ( object === undefined ) object = new THREE.PointCloud( this.geometry, this.material );\r\n\r\n\tTHREE.Object3D.prototype.clone.call( this, object );\r\n\r\n\treturn object;\r\n\r\n};\r\n\r\n// Backwards compatibility\r\n\r\nTHREE.ParticleSystem = function ( geometry, material ) {\r\n\r\n\tTHREE.warn( 'THREE.ParticleSystem has been renamed to THREE.PointCloud.' );\r\n\treturn new THREE.PointCloud( geometry, material );\r\n\r\n};\r\n\r\n// File:src/objects/Line.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Line = function ( geometry, material, mode ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Line';\r\n\r\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\tthis.material = material !== undefined ? material : new THREE.LineBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n\tthis.mode = mode !== undefined ? mode : THREE.LineStrip;\r\n\r\n};\r\n\r\nTHREE.LineStrip = 0;\r\nTHREE.LinePieces = 1;\r\n\r\nTHREE.Line.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Line.prototype.constructor = THREE.Line;\r\n\r\nTHREE.Line.prototype.raycast = ( function () {\r\n\r\n\tvar inverseMatrix = new THREE.Matrix4();\r\n\tvar ray = new THREE.Ray();\r\n\tvar sphere = new THREE.Sphere();\r\n\r\n\treturn function ( raycaster, intersects ) {\r\n\r\n\t\tvar precision = raycaster.linePrecision;\r\n\t\tvar precisionSq = precision * precision;\r\n\r\n\t\tvar geometry = this.geometry;\r\n\r\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\t// Checking boundingSphere distance to ray\r\n\r\n\t\tsphere.copy( geometry.boundingSphere );\r\n\t\tsphere.applyMatrix4( this.matrixWorld );\r\n\r\n\t\tif ( raycaster.ray.isIntersectionSphere( sphere ) === false ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\tvar vStart = new THREE.Vector3();\r\n\t\tvar vEnd = new THREE.Vector3();\r\n\t\tvar interSegment = new THREE.Vector3();\r\n\t\tvar interRay = new THREE.Vector3();\r\n\t\tvar step = this.mode === THREE.LineStrip ? 1 : 2;\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar attributes = geometry.attributes;\r\n\r\n\t\t\tif ( attributes.index !== undefined ) {\r\n\r\n\t\t\t\tvar indices = attributes.index.array;\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\t\t\t\tvar offsets = geometry.offsets;\r\n\r\n\t\t\t\tif ( offsets.length === 0 ) {\r\n\r\n\t\t\t\t\toffsets = [ { start: 0, count: indices.length, index: 0 } ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( var oi = 0; oi < offsets.length; oi ++) {\r\n\r\n\t\t\t\t\tvar start = offsets[ oi ].start;\r\n\t\t\t\t\tvar count = offsets[ oi ].count;\r\n\t\t\t\t\tvar index = offsets[ oi ].index;\r\n\r\n\t\t\t\t\tfor ( var i = start; i < start + count - 1; i += step ) {\r\n\r\n\t\t\t\t\t\tvar a = index + indices[ i ];\r\n\t\t\t\t\t\tvar b = index + indices[ i + 1 ];\r\n\r\n\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\r\n\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\r\n\r\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\r\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n\t\t\t\t\t\tvar distance = ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\t\toffsetIndex: oi,\r\n\t\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\tfor ( var i = 0; i < positions.length / 3 - 1; i += step ) {\r\n\r\n\t\t\t\t\tvStart.fromArray( positions, 3 * i );\r\n\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\r\n\r\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\r\n\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n\t\t\t\t\tvar distance = ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\t\tvar nbVertices = vertices.length;\r\n\r\n\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\r\n\r\n\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\r\n\r\n\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n\t\t\t\tvar distance = ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\tindex: i,\r\n\t\t\t\t\tface: null,\r\n\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.Line.prototype.clone = function ( object ) {\r\n\r\n\tif ( object === undefined ) object = new THREE.Line( this.geometry, this.material, this.mode );\r\n\r\n\tTHREE.Object3D.prototype.clone.call( this, object );\r\n\r\n\treturn object;\r\n\r\n};\r\n\r\n// File:src/objects/Mesh.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author jonobr1 / http://jonobr1.com/\r\n */\r\n\r\nTHREE.Mesh = function ( geometry, material ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Mesh';\r\n\t\r\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\tthis.material = material !== undefined ? material : new THREE.MeshBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n\tthis.updateMorphTargets();\r\n\r\n};\r\n\r\nTHREE.Mesh.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Mesh.prototype.constructor = THREE.Mesh;\r\n\r\nTHREE.Mesh.prototype.updateMorphTargets = function () {\r\n\r\n\tif ( this.geometry.morphTargets !== undefined && this.geometry.morphTargets.length > 0 ) {\r\n\r\n\t\tthis.morphTargetBase = - 1;\r\n\t\tthis.morphTargetForcedOrder = [];\r\n\t\tthis.morphTargetInfluences = [];\r\n\t\tthis.morphTargetDictionary = {};\r\n\r\n\t\tfor ( var m = 0, ml = this.geometry.morphTargets.length; m < ml; m ++ ) {\r\n\r\n\t\t\tthis.morphTargetInfluences.push( 0 );\r\n\t\t\tthis.morphTargetDictionary[ this.geometry.morphTargets[ m ].name ] = m;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Mesh.prototype.getMorphTargetIndexByName = function ( name ) {\r\n\r\n\tif ( this.morphTargetDictionary[ name ] !== undefined ) {\r\n\r\n\t\treturn this.morphTargetDictionary[ name ];\r\n\r\n\t}\r\n\r\n\tTHREE.warn( 'THREE.Mesh.getMorphTargetIndexByName: morph target ' + name + ' does not exist. Returning 0.' );\r\n\r\n\treturn 0;\r\n\r\n};\r\n\r\n\r\nTHREE.Mesh.prototype.raycast = ( function () {\r\n\r\n\tvar inverseMatrix = new THREE.Matrix4();\r\n\tvar ray = new THREE.Ray();\r\n\tvar sphere = new THREE.Sphere();\r\n\r\n\tvar vA = new THREE.Vector3();\r\n\tvar vB = new THREE.Vector3();\r\n\tvar vC = new THREE.Vector3();\r\n\r\n\treturn function ( raycaster, intersects ) {\r\n\r\n\t\tvar geometry = this.geometry;\r\n\r\n\t\t// Checking boundingSphere distance to ray\r\n\r\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\tsphere.copy( geometry.boundingSphere );\r\n\t\tsphere.applyMatrix4( this.matrixWorld );\r\n\r\n\t\tif ( raycaster.ray.isIntersectionSphere( sphere ) === false ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\t// Check boundingBox before continuing\r\n\r\n\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tif ( ray.isIntersectionBox( geometry.boundingBox ) === false ) {\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar material = this.material;\r\n\r\n\t\t\tif ( material === undefined ) return;\r\n\r\n\t\t\tvar attributes = geometry.attributes;\r\n\r\n\t\t\tvar a, b, c;\r\n\t\t\tvar precision = raycaster.precision;\r\n\r\n\t\t\tif ( attributes.index !== undefined ) {\r\n\r\n\t\t\t\tvar indices = attributes.index.array;\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\t\t\t\tvar offsets = geometry.offsets;\r\n\r\n\t\t\t\tif ( offsets.length === 0 ) {\r\n\r\n\t\t\t\t\toffsets = [ { start: 0, count: indices.length, index: 0 } ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( var oi = 0, ol = offsets.length; oi < ol; ++ oi ) {\r\n\r\n\t\t\t\t\tvar start = offsets[ oi ].start;\r\n\t\t\t\t\tvar count = offsets[ oi ].count;\r\n\t\t\t\t\tvar index = offsets[ oi ].index;\r\n\r\n\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\t\ta = index + indices[ i ];\r\n\t\t\t\t\t\tb = index + indices[ i + 1 ];\r\n\t\t\t\t\t\tc = index + indices[ i + 2 ];\r\n\r\n\t\t\t\t\t\tvA.fromArray( positions, a * 3 );\r\n\t\t\t\t\t\tvB.fromArray( positions, b * 3 );\r\n\t\t\t\t\t\tvC.fromArray( positions, c * 3 );\r\n\r\n\t\t\t\t\t\tif ( material.side === THREE.BackSide ) {\r\n\r\n\t\t\t\t\t\t\tvar intersectionPoint = ray.intersectTriangle( vC, vB, vA, true );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tvar intersectionPoint = ray.intersectTriangle( vA, vB, vC, material.side !== THREE.DoubleSide );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( intersectionPoint === null ) continue;\r\n\r\n\t\t\t\t\t\tintersectionPoint.applyMatrix4( this.matrixWorld );\r\n\r\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPoint );\r\n\r\n\t\t\t\t\t\tif ( distance < precision || distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\tpoint: intersectionPoint,\r\n\t\t\t\t\t\t\tface: new THREE.Face3( a, b, c, THREE.Triangle.normal( vA, vB, vC ) ),\r\n\t\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\tfor ( var i = 0, j = 0, il = positions.length; i < il; i += 3, j += 9 ) {\r\n\r\n\t\t\t\t\ta = i;\r\n\t\t\t\t\tb = i + 1;\r\n\t\t\t\t\tc = i + 2;\r\n\r\n\t\t\t\t\tvA.fromArray( positions, j );\r\n\t\t\t\t\tvB.fromArray( positions, j + 3 );\r\n\t\t\t\t\tvC.fromArray( positions, j + 6 );\r\n\r\n\t\t\t\t\tif ( material.side === THREE.BackSide ) {\r\n\r\n\t\t\t\t\t\tvar intersectionPoint = ray.intersectTriangle( vC, vB, vA, true );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tvar intersectionPoint = ray.intersectTriangle( vA, vB, vC, material.side !== THREE.DoubleSide );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( intersectionPoint === null ) continue;\r\n\r\n\t\t\t\t\tintersectionPoint.applyMatrix4( this.matrixWorld );\r\n\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPoint );\r\n\r\n\t\t\t\t\tif ( distance < precision || distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\tpoint: intersectionPoint,\r\n\t\t\t\t\t\tface: new THREE.Face3( a, b, c, THREE.Triangle.normal( vA, vB, vC ) ),\r\n\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tvar isFaceMaterial = this.material instanceof THREE.MeshFaceMaterial;\r\n\t\t\tvar objectMaterials = isFaceMaterial === true ? this.material.materials : null;\r\n\r\n\t\t\tvar a, b, c;\r\n\t\t\tvar precision = raycaster.precision;\r\n\r\n\t\t\tvar vertices = geometry.vertices;\r\n\r\n\t\t\tfor ( var f = 0, fl = geometry.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tvar face = geometry.faces[ f ];\r\n\r\n\t\t\t\tvar material = isFaceMaterial === true ? objectMaterials[ face.materialIndex ] : this.material;\r\n\r\n\t\t\t\tif ( material === undefined ) continue;\r\n\r\n\t\t\t\ta = vertices[ face.a ];\r\n\t\t\t\tb = vertices[ face.b ];\r\n\t\t\t\tc = vertices[ face.c ];\r\n\r\n\t\t\t\tif ( material.morphTargets === true ) {\r\n\r\n\t\t\t\t\tvar morphTargets = geometry.morphTargets;\r\n\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\r\n\r\n\t\t\t\t\tvA.set( 0, 0, 0 );\r\n\t\t\t\t\tvB.set( 0, 0, 0 );\r\n\t\t\t\t\tvC.set( 0, 0, 0 );\r\n\r\n\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\r\n\r\n\t\t\t\t\t\tvar influence = morphInfluences[ t ];\r\n\r\n\t\t\t\t\t\tif ( influence === 0 ) continue;\r\n\r\n\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\r\n\r\n\t\t\t\t\t\tvA.x += ( targets[ face.a ].x - a.x ) * influence;\r\n\t\t\t\t\t\tvA.y += ( targets[ face.a ].y - a.y ) * influence;\r\n\t\t\t\t\t\tvA.z += ( targets[ face.a ].z - a.z ) * influence;\r\n\r\n\t\t\t\t\t\tvB.x += ( targets[ face.b ].x - b.x ) * influence;\r\n\t\t\t\t\t\tvB.y += ( targets[ face.b ].y - b.y ) * influence;\r\n\t\t\t\t\t\tvB.z += ( targets[ face.b ].z - b.z ) * influence;\r\n\r\n\t\t\t\t\t\tvC.x += ( targets[ face.c ].x - c.x ) * influence;\r\n\t\t\t\t\t\tvC.y += ( targets[ face.c ].y - c.y ) * influence;\r\n\t\t\t\t\t\tvC.z += ( targets[ face.c ].z - c.z ) * influence;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvA.add( a );\r\n\t\t\t\t\tvB.add( b );\r\n\t\t\t\t\tvC.add( c );\r\n\r\n\t\t\t\t\ta = vA;\r\n\t\t\t\t\tb = vB;\r\n\t\t\t\t\tc = vC;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( material.side === THREE.BackSide ) {\r\n\r\n\t\t\t\t\tvar intersectionPoint = ray.intersectTriangle( c, b, a, true );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tvar intersectionPoint = ray.intersectTriangle( a, b, c, material.side !== THREE.DoubleSide );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( intersectionPoint === null ) continue;\r\n\r\n\t\t\t\tintersectionPoint.applyMatrix4( this.matrixWorld );\r\n\r\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPoint );\r\n\r\n\t\t\t\tif ( distance < precision || distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\tpoint: intersectionPoint,\r\n\t\t\t\t\tface: face,\r\n\t\t\t\t\tfaceIndex: f,\r\n\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.Mesh.prototype.clone = function ( object, recursive ) {\r\n\r\n\tif ( object === undefined ) object = new THREE.Mesh( this.geometry, this.material );\r\n\r\n\tTHREE.Object3D.prototype.clone.call( this, object, recursive );\r\n\r\n\treturn object;\r\n\r\n};\r\n\r\n// File:src/objects/Bone.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.Bone = function ( skin ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Bone';\r\n\r\n\tthis.skin = skin;\r\n\r\n};\r\n\r\nTHREE.Bone.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Bone.prototype.constructor = THREE.Bone;\r\n\r\n// File:src/objects/Skeleton.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author michael guerrero / http://realitymeltdown.com\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.Skeleton = function ( bones, boneInverses, useVertexTexture ) {\r\n\r\n\tthis.useVertexTexture = useVertexTexture !== undefined ? useVertexTexture : true;\r\n\r\n\tthis.identityMatrix = new THREE.Matrix4();\r\n\r\n\t// copy the bone array\r\n\r\n\tbones = bones || [];\r\n\r\n\tthis.bones = bones.slice( 0 );\r\n\r\n\t// create a bone texture or an array of floats\r\n\r\n\tif ( this.useVertexTexture ) {\r\n\r\n\t\t// layout (1 matrix = 4 pixels)\r\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\r\n\t\t//  with  8x8  pixel texture max   16 bones  (8 * 8  / 4)\r\n\t\t//       16x16 pixel texture max   64 bones (16 * 16 / 4)\r\n\t\t//       32x32 pixel texture max  256 bones (32 * 32 / 4)\r\n\t\t//       64x64 pixel texture max 1024 bones (64 * 64 / 4)\r\n\r\n\t\tvar size;\r\n\r\n\t\tif ( this.bones.length > 256 )\r\n\t\t\tsize = 64;\r\n\t\telse if ( this.bones.length > 64 )\r\n\t\t\tsize = 32;\r\n\t\telse if ( this.bones.length > 16 )\r\n\t\t\tsize = 16;\r\n\t\telse\r\n\t\t\tsize = 8;\r\n\r\n\t\tthis.boneTextureWidth = size;\r\n\t\tthis.boneTextureHeight = size;\r\n\r\n\t\tthis.boneMatrices = new Float32Array( this.boneTextureWidth * this.boneTextureHeight * 4 ); // 4 floats per RGBA pixel\r\n\t\tthis.boneTexture = new THREE.DataTexture( this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, THREE.RGBAFormat, THREE.FloatType );\r\n\t\tthis.boneTexture.minFilter = THREE.NearestFilter;\r\n\t\tthis.boneTexture.magFilter = THREE.NearestFilter;\r\n\t\tthis.boneTexture.generateMipmaps = false;\r\n\t\tthis.boneTexture.flipY = false;\r\n\r\n\t} else {\r\n\r\n\t\tthis.boneMatrices = new Float32Array( 16 * this.bones.length );\r\n\r\n\t}\r\n\r\n\t// use the supplied bone inverses or calculate the inverses\r\n\r\n\tif ( boneInverses === undefined ) {\r\n\r\n\t\tthis.calculateInverses();\r\n\r\n\t} else {\r\n\r\n\t\tif ( this.bones.length === boneInverses.length ) {\r\n\r\n\t\t\tthis.boneInverses = boneInverses.slice( 0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tTHREE.warn( 'THREE.Skeleton bonInverses is the wrong length.' );\r\n\r\n\t\t\tthis.boneInverses = [];\r\n\r\n\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\t\t\tthis.boneInverses.push( new THREE.Matrix4() );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Skeleton.prototype.calculateInverses = function () {\r\n\r\n\tthis.boneInverses = [];\r\n\r\n\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\tvar inverse = new THREE.Matrix4();\r\n\r\n\t\tif ( this.bones[ b ] ) {\r\n\r\n\t\t\tinverse.getInverse( this.bones[ b ].matrixWorld );\r\n\r\n\t\t}\r\n\r\n\t\tthis.boneInverses.push( inverse );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Skeleton.prototype.pose = function () {\r\n\r\n\tvar bone;\r\n\r\n\t// recover the bind-time world matrices\r\n\r\n\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\tbone = this.bones[ b ];\r\n\r\n\t\tif ( bone ) {\r\n\r\n\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ b ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// compute the local matrices, positions, rotations and scales\r\n\r\n\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\tbone = this.bones[ b ];\r\n\r\n\t\tif ( bone ) {\r\n\r\n\t\t\tif ( bone.parent ) {\r\n\r\n\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\r\n\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tbone.matrix.copy( bone.matrixWorld );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Skeleton.prototype.update = ( function () {\r\n\r\n\tvar offsetMatrix = new THREE.Matrix4();\r\n\t\r\n\treturn function () {\r\n\r\n\t\t// flatten bone matrices to array\r\n\r\n\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\t\t// compute the offset between the current and the original transform\r\n\r\n\t\t\tvar matrix = this.bones[ b ] ? this.bones[ b ].matrixWorld : this.identityMatrix;\r\n\r\n\t\t\toffsetMatrix.multiplyMatrices( matrix, this.boneInverses[ b ] );\r\n\t\t\toffsetMatrix.flattenToArrayOffset( this.boneMatrices, b * 16 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.useVertexTexture ) {\r\n\r\n\t\t\tthis.boneTexture.needsUpdate = true;\r\n\r\n\t\t}\r\n\t\t\r\n\t};\r\n\r\n} )();\r\n\r\n\r\n// File:src/objects/SkinnedMesh.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.SkinnedMesh = function ( geometry, material, useVertexTexture ) {\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.type = 'SkinnedMesh';\r\n\r\n\tthis.bindMode = \"attached\";\r\n\tthis.bindMatrix = new THREE.Matrix4();\r\n\tthis.bindMatrixInverse = new THREE.Matrix4();\r\n\r\n\t// init bones\r\n\r\n\t// TODO: remove bone creation as there is no reason (other than\r\n\t// convenience) for THREE.SkinnedMesh to do this.\r\n\r\n\tvar bones = [];\r\n\r\n\tif ( this.geometry && this.geometry.bones !== undefined ) {\r\n\r\n\t\tvar bone, gbone, p, q, s;\r\n\r\n\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\r\n\r\n\t\t\tgbone = this.geometry.bones[ b ];\r\n\r\n\t\t\tp = gbone.pos;\r\n\t\t\tq = gbone.rotq;\r\n\t\t\ts = gbone.scl;\r\n\r\n\t\t\tbone = new THREE.Bone( this );\r\n\t\t\tbones.push( bone );\r\n\r\n\t\t\tbone.name = gbone.name;\r\n\t\t\tbone.position.set( p[ 0 ], p[ 1 ], p[ 2 ] );\r\n\t\t\tbone.quaternion.set( q[ 0 ], q[ 1 ], q[ 2 ], q[ 3 ] );\r\n\r\n\t\t\tif ( s !== undefined ) {\r\n\r\n\t\t\t\tbone.scale.set( s[ 0 ], s[ 1 ], s[ 2 ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tbone.scale.set( 1, 1, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\r\n\r\n\t\t\tgbone = this.geometry.bones[ b ];\r\n\r\n\t\t\tif ( gbone.parent !== - 1 ) {\r\n\r\n\t\t\t\tbones[ gbone.parent ].add( bones[ b ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.add( bones[ b ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.normalizeSkinWeights();\r\n\r\n\tthis.updateMatrixWorld( true );\r\n\tthis.bind( new THREE.Skeleton( bones, undefined, useVertexTexture ) );\r\n\r\n};\r\n\r\n\r\nTHREE.SkinnedMesh.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.SkinnedMesh.prototype.constructor = THREE.SkinnedMesh;\r\n\r\nTHREE.SkinnedMesh.prototype.bind = function( skeleton, bindMatrix ) {\r\n\r\n\tthis.skeleton = skeleton;\r\n\r\n\tif ( bindMatrix === undefined ) {\r\n\r\n\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\tbindMatrix = this.matrixWorld;\r\n\r\n\t}\r\n\r\n\tthis.bindMatrix.copy( bindMatrix );\r\n\tthis.bindMatrixInverse.getInverse( bindMatrix );\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.pose = function () {\r\n\r\n\tthis.skeleton.pose();\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.normalizeSkinWeights = function () {\r\n\r\n\tif ( this.geometry instanceof THREE.Geometry ) {\r\n\r\n\t\tfor ( var i = 0; i < this.geometry.skinIndices.length; i ++ ) {\r\n\r\n\t\t\tvar sw = this.geometry.skinWeights[ i ];\r\n\r\n\t\t\tvar scale = 1.0 / sw.lengthManhattan();\r\n\r\n\t\t\tif ( scale !== Infinity ) {\r\n\r\n\t\t\t\tsw.multiplyScalar( scale );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tsw.set( 1 ); // this will be normalized by the shader anyway\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\t// skinning weights assumed to be normalized for THREE.BufferGeometry\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.updateMatrixWorld = function( force ) {\r\n\r\n\tTHREE.Mesh.prototype.updateMatrixWorld.call( this, true );\r\n\r\n\tif ( this.bindMode === \"attached\" ) {\r\n\r\n\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\r\n\r\n\t} else if ( this.bindMode === \"detached\" ) {\r\n\r\n\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\r\n\r\n\t} else {\r\n\r\n\t\tTHREE.warn( 'THREE.SkinnedMesh unreckognized bindMode: ' + this.bindMode );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.clone = function( object ) {\r\n\r\n\tif ( object === undefined ) {\r\n\r\n\t\tobject = new THREE.SkinnedMesh( this.geometry, this.material, this.useVertexTexture );\r\n\r\n\t}\r\n\r\n\tTHREE.Mesh.prototype.clone.call( this, object );\r\n\r\n\treturn object;\r\n\r\n};\r\n\r\n\r\n// File:src/objects/MorphAnimMesh.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.MorphAnimMesh = function ( geometry, material ) {\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.type = 'MorphAnimMesh';\r\n\r\n\t// API\r\n\r\n\tthis.duration = 1000; // milliseconds\r\n\tthis.mirroredLoop = false;\r\n\tthis.time = 0;\r\n\r\n\t// internals\r\n\r\n\tthis.lastKeyframe = 0;\r\n\tthis.currentKeyframe = 0;\r\n\r\n\tthis.direction = 1;\r\n\tthis.directionBackwards = false;\r\n\r\n\tthis.setFrameRange( 0, this.geometry.morphTargets.length - 1 );\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.MorphAnimMesh.prototype.constructor = THREE.MorphAnimMesh;\r\n\r\nTHREE.MorphAnimMesh.prototype.setFrameRange = function ( start, end ) {\r\n\r\n\tthis.startKeyframe = start;\r\n\tthis.endKeyframe = end;\r\n\r\n\tthis.length = this.endKeyframe - this.startKeyframe + 1;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.setDirectionForward = function () {\r\n\r\n\tthis.direction = 1;\r\n\tthis.directionBackwards = false;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.setDirectionBackward = function () {\r\n\r\n\tthis.direction = - 1;\r\n\tthis.directionBackwards = true;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.parseAnimations = function () {\r\n\r\n\tvar geometry = this.geometry;\r\n\r\n\tif ( ! geometry.animations ) geometry.animations = {};\r\n\r\n\tvar firstAnimation, animations = geometry.animations;\r\n\r\n\tvar pattern = /([a-z]+)_?(\\d+)/;\r\n\r\n\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\tvar morph = geometry.morphTargets[ i ];\r\n\t\tvar parts = morph.name.match( pattern );\r\n\r\n\t\tif ( parts && parts.length > 1 ) {\r\n\r\n\t\t\tvar label = parts[ 1 ];\r\n\r\n\t\t\tif ( ! animations[ label ] ) animations[ label ] = { start: Infinity, end: - Infinity };\r\n\r\n\t\t\tvar animation = animations[ label ];\r\n\r\n\t\t\tif ( i < animation.start ) animation.start = i;\r\n\t\t\tif ( i > animation.end ) animation.end = i;\r\n\r\n\t\t\tif ( ! firstAnimation ) firstAnimation = label;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgeometry.firstAnimation = firstAnimation;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.setAnimationLabel = function ( label, start, end ) {\r\n\r\n\tif ( ! this.geometry.animations ) this.geometry.animations = {};\r\n\r\n\tthis.geometry.animations[ label ] = { start: start, end: end };\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.playAnimation = function ( label, fps ) {\r\n\r\n\tvar animation = this.geometry.animations[ label ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tthis.setFrameRange( animation.start, animation.end );\r\n\t\tthis.duration = 1000 * ( ( animation.end - animation.start ) / fps );\r\n\t\tthis.time = 0;\r\n\r\n\t} else {\r\n\r\n\t\tTHREE.warn( 'THREE.MorphAnimMesh: animation[' + label + '] undefined in .playAnimation()' );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.updateAnimation = function ( delta ) {\r\n\r\n\tvar frameTime = this.duration / this.length;\r\n\r\n\tthis.time += this.direction * delta;\r\n\r\n\tif ( this.mirroredLoop ) {\r\n\r\n\t\tif ( this.time > this.duration || this.time < 0 ) {\r\n\r\n\t\t\tthis.direction *= - 1;\r\n\r\n\t\t\tif ( this.time > this.duration ) {\r\n\r\n\t\t\t\tthis.time = this.duration;\r\n\t\t\t\tthis.directionBackwards = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.time < 0 ) {\r\n\r\n\t\t\t\tthis.time = 0;\r\n\t\t\t\tthis.directionBackwards = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\tthis.time = this.time % this.duration;\r\n\r\n\t\tif ( this.time < 0 ) this.time += this.duration;\r\n\r\n\t}\r\n\r\n\tvar keyframe = this.startKeyframe + THREE.Math.clamp( Math.floor( this.time / frameTime ), 0, this.length - 1 );\r\n\r\n\tif ( keyframe !== this.currentKeyframe ) {\r\n\r\n\t\tthis.morphTargetInfluences[ this.lastKeyframe ] = 0;\r\n\t\tthis.morphTargetInfluences[ this.currentKeyframe ] = 1;\r\n\r\n\t\tthis.morphTargetInfluences[ keyframe ] = 0;\r\n\r\n\t\tthis.lastKeyframe = this.currentKeyframe;\r\n\t\tthis.currentKeyframe = keyframe;\r\n\r\n\t}\r\n\r\n\tvar mix = ( this.time % frameTime ) / frameTime;\r\n\r\n\tif ( this.directionBackwards ) {\r\n\r\n\t\tmix = 1 - mix;\r\n\r\n\t}\r\n\r\n\tthis.morphTargetInfluences[ this.currentKeyframe ] = mix;\r\n\tthis.morphTargetInfluences[ this.lastKeyframe ] = 1 - mix;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.interpolateTargets = function ( a, b, t ) {\r\n\r\n\tvar influences = this.morphTargetInfluences;\r\n\r\n\tfor ( var i = 0, l = influences.length; i < l; i ++ ) {\r\n\r\n\t\tinfluences[ i ] = 0;\r\n\r\n\t}\r\n\r\n\tif ( a > -1 ) influences[ a ] = 1 - t;\r\n\tif ( b > -1 ) influences[ b ] = t;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.clone = function ( object ) {\r\n\r\n\tif ( object === undefined ) object = new THREE.MorphAnimMesh( this.geometry, this.material );\r\n\r\n\tobject.duration = this.duration;\r\n\tobject.mirroredLoop = this.mirroredLoop;\r\n\tobject.time = this.time;\r\n\r\n\tobject.lastKeyframe = this.lastKeyframe;\r\n\tobject.currentKeyframe = this.currentKeyframe;\r\n\r\n\tobject.direction = this.direction;\r\n\tobject.directionBackwards = this.directionBackwards;\r\n\r\n\tTHREE.Mesh.prototype.clone.call( this, object );\r\n\r\n\treturn object;\r\n\r\n};\r\n\r\n// File:src/objects/LOD.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.LOD = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.objects = [];\r\n\r\n};\r\n\r\n\r\nTHREE.LOD.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.LOD.prototype.constructor = THREE.LOD;\r\n\r\nTHREE.LOD.prototype.addLevel = function ( object, distance ) {\r\n\r\n\tif ( distance === undefined ) distance = 0;\r\n\r\n\tdistance = Math.abs( distance );\r\n\r\n\tfor ( var l = 0; l < this.objects.length; l ++ ) {\r\n\r\n\t\tif ( distance < this.objects[ l ].distance ) {\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.objects.splice( l, 0, { distance: distance, object: object } );\r\n\tthis.add( object );\r\n\r\n};\r\n\r\nTHREE.LOD.prototype.getObjectForDistance = function ( distance ) {\r\n\r\n\tfor ( var i = 1, l = this.objects.length; i < l; i ++ ) {\r\n\r\n\t\tif ( distance < this.objects[ i ].distance ) {\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn this.objects[ i - 1 ].object;\r\n\r\n};\r\n\r\nTHREE.LOD.prototype.raycast = ( function () {\r\n\r\n\tvar matrixPosition = new THREE.Vector3();\r\n\r\n\treturn function ( raycaster, intersects ) {\r\n\r\n\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\r\n\r\n\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.LOD.prototype.update = function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\r\n\treturn function ( camera ) {\r\n\r\n\t\tif ( this.objects.length > 1 ) {\r\n\r\n\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\t\tvar distance = v1.distanceTo( v2 );\r\n\r\n\t\t\tthis.objects[ 0 ].object.visible = true;\r\n\r\n\t\t\tfor ( var i = 1, l = this.objects.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tif ( distance >= this.objects[ i ].distance ) {\r\n\r\n\t\t\t\t\tthis.objects[ i - 1 ].object.visible = false;\r\n\t\t\t\t\tthis.objects[ i     ].object.visible = true;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( ; i < l; i ++ ) {\r\n\r\n\t\t\t\tthis.objects[ i ].object.visible = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.LOD.prototype.clone = function ( object ) {\r\n\r\n\tif ( object === undefined ) object = new THREE.LOD();\r\n\r\n\tTHREE.Object3D.prototype.clone.call( this, object );\r\n\r\n\tfor ( var i = 0, l = this.objects.length; i < l; i ++ ) {\r\n\t\tvar x = this.objects[ i ].object.clone();\r\n\t\tx.visible = i === 0;\r\n\t\tobject.addLevel( x, this.objects[ i ].distance );\r\n\t}\r\n\r\n\treturn object;\r\n\r\n};\r\n\r\n// File:src/objects/Sprite.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Sprite = ( function () {\r\n\r\n\tvar indices = new Uint16Array( [ 0, 1, 2,  0, 2, 3 ] );\r\n\tvar vertices = new Float32Array( [ - 0.5, - 0.5, 0,   0.5, - 0.5, 0,   0.5, 0.5, 0,   - 0.5, 0.5, 0 ] );\r\n\tvar uvs = new Float32Array( [ 0, 0,   1, 0,   1, 1,   0, 1 ] );\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\tgeometry.addAttribute( 'index', new THREE.BufferAttribute( indices, 1 ) );\r\n\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\tgeometry.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\r\n\treturn function ( material ) {\r\n\r\n\t\tTHREE.Object3D.call( this );\r\n\r\n\t\tthis.type = 'Sprite';\r\n\r\n\t\tthis.geometry = geometry;\r\n\t\tthis.material = ( material !== undefined ) ? material : new THREE.SpriteMaterial();\r\n\r\n\t};\r\n\r\n} )();\r\n\r\nTHREE.Sprite.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Sprite.prototype.constructor = THREE.Sprite;\r\n\r\nTHREE.Sprite.prototype.raycast = ( function () {\r\n\r\n\tvar matrixPosition = new THREE.Vector3();\r\n\r\n\treturn function ( raycaster, intersects ) {\r\n\r\n\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\tvar distance = raycaster.ray.distanceToPoint( matrixPosition );\r\n\r\n\t\tif ( distance > this.scale.x ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tintersects.push( {\r\n\r\n\t\t\tdistance: distance,\r\n\t\t\tpoint: this.position,\r\n\t\t\tface: null,\r\n\t\t\tobject: this\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.Sprite.prototype.clone = function ( object ) {\r\n\r\n\tif ( object === undefined ) object = new THREE.Sprite( this.material );\r\n\r\n\tTHREE.Object3D.prototype.clone.call( this, object );\r\n\r\n\treturn object;\r\n\r\n};\r\n\r\n// Backwards compatibility\r\n\r\nTHREE.Particle = THREE.Sprite;\r\n\r\n// File:src/objects/LensFlare.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.LensFlare = function ( texture, size, distance, blending, color ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.lensFlares = [];\r\n\r\n\tthis.positionScreen = new THREE.Vector3();\r\n\tthis.customUpdateCallback = undefined;\r\n\r\n\tif ( texture !== undefined ) {\r\n\r\n\t\tthis.add( texture, size, distance, blending, color );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.LensFlare.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.LensFlare.prototype.constructor = THREE.LensFlare;\r\n\r\n\r\n/*\r\n * Add: adds another flare\r\n */\r\n\r\nTHREE.LensFlare.prototype.add = function ( texture, size, distance, blending, color, opacity ) {\r\n\r\n\tif ( size === undefined ) size = - 1;\r\n\tif ( distance === undefined ) distance = 0;\r\n\tif ( opacity === undefined ) opacity = 1;\r\n\tif ( color === undefined ) color = new THREE.Color( 0xffffff );\r\n\tif ( blending === undefined ) blending = THREE.NormalBlending;\r\n\r\n\tdistance = Math.min( distance, Math.max( 0, distance ) );\r\n\r\n\tthis.lensFlares.push( {\r\n\t\ttexture: texture, \t\t\t// THREE.Texture\r\n\t\tsize: size, \t\t\t\t// size in pixels (-1 = use texture.width)\r\n\t\tdistance: distance, \t\t// distance (0-1) from light source (0=at light source)\r\n\t\tx: 0, y: 0, z: 0,\t\t\t// screen position (-1 => 1) z = 0 is ontop z = 1 is back\r\n\t\tscale: 1, \t\t\t\t\t// scale\r\n\t\trotation: 1, \t\t\t\t// rotation\r\n\t\topacity: opacity,\t\t\t// opacity\r\n\t\tcolor: color,\t\t\t\t// color\r\n\t\tblending: blending\t\t\t// blending\r\n\t} );\r\n\r\n};\r\n\r\n/*\r\n * Update lens flares update positions on all flares based on the screen position\r\n * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\r\n */\r\n\r\nTHREE.LensFlare.prototype.updateLensFlares = function () {\r\n\r\n\tvar f, fl = this.lensFlares.length;\r\n\tvar flare;\r\n\tvar vecX = - this.positionScreen.x * 2;\r\n\tvar vecY = - this.positionScreen.y * 2;\r\n\r\n\tfor ( f = 0; f < fl; f ++ ) {\r\n\r\n\t\tflare = this.lensFlares[ f ];\r\n\r\n\t\tflare.x = this.positionScreen.x + vecX * flare.distance;\r\n\t\tflare.y = this.positionScreen.y + vecY * flare.distance;\r\n\r\n\t\tflare.wantedRotation = flare.x * Math.PI * 0.25;\r\n\t\tflare.rotation += ( flare.wantedRotation - flare.rotation ) * 0.25;\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\n// File:src/scenes/Scene.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Scene = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Scene';\r\n\r\n\tthis.fog = null;\r\n\tthis.overrideMaterial = null;\r\n\r\n\tthis.autoUpdate = true; // checked by the renderer\r\n\r\n};\r\n\r\nTHREE.Scene.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Scene.prototype.constructor = THREE.Scene;\r\n\r\nTHREE.Scene.prototype.clone = function ( object ) {\r\n\r\n\tif ( object === undefined ) object = new THREE.Scene();\r\n\r\n\tTHREE.Object3D.prototype.clone.call( this, object );\r\n\r\n\tif ( this.fog !== null ) object.fog = this.fog.clone();\r\n\tif ( this.overrideMaterial !== null ) object.overrideMaterial = this.overrideMaterial.clone();\r\n\r\n\tobject.autoUpdate = this.autoUpdate;\r\n\tobject.matrixAutoUpdate = this.matrixAutoUpdate;\r\n\r\n\treturn object;\r\n\r\n};\r\n\r\n// File:src/scenes/Fog.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Fog = function ( color, near, far ) {\r\n\r\n\tthis.name = '';\r\n\r\n\tthis.color = new THREE.Color( color );\r\n\r\n\tthis.near = ( near !== undefined ) ? near : 1;\r\n\tthis.far = ( far !== undefined ) ? far : 1000;\r\n\r\n};\r\n\r\nTHREE.Fog.prototype.clone = function () {\r\n\r\n\treturn new THREE.Fog( this.color.getHex(), this.near, this.far );\r\n\r\n};\r\n\r\n// File:src/scenes/FogExp2.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.FogExp2 = function ( color, density ) {\r\n\r\n\tthis.name = '';\r\n\r\n\tthis.color = new THREE.Color( color );\r\n\tthis.density = ( density !== undefined ) ? density : 0.00025;\r\n\r\n};\r\n\r\nTHREE.FogExp2.prototype.clone = function () {\r\n\r\n\treturn new THREE.FogExp2( this.color.getHex(), this.density );\r\n\r\n};\r\n\r\n// File:src/renderers/shaders/ShaderChunk.js\r\n\r\nTHREE.ShaderChunk = {};\r\n\r\n// File:src/renderers/shaders/ShaderChunk/common.glsl\r\n\r\nTHREE.ShaderChunk[ 'common'] = \"#define PI 3.14159\\n#define PI2 6.28318\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n\\nfloat square( in float a ) { return a*a; }\\nvec2  square( in vec2 a )  { return vec2( a.x*a.x, a.y*a.y ); }\\nvec3  square( in vec3 a )  { return vec3( a.x*a.x, a.y*a.y, a.z*a.z ); }\\nvec4  square( in vec4 a )  { return vec4( a.x*a.x, a.y*a.y, a.z*a.z, a.w*a.w ); }\\nfloat saturate( in float a ) { return clamp( a, 0.0, 1.0 ); }\\nvec2  saturate( in vec2 a )  { return clamp( a, 0.0, 1.0 ); }\\nvec3  saturate( in vec3 a )  { return clamp( a, 0.0, 1.0 ); }\\nvec4  saturate( in vec4 a )  { return clamp( a, 0.0, 1.0 ); }\\nfloat average( in float a ) { return a; }\\nfloat average( in vec2 a )  { return ( a.x + a.y) * 0.5; }\\nfloat average( in vec3 a )  { return ( a.x + a.y + a.z) / 3.0; }\\nfloat average( in vec4 a )  { return ( a.x + a.y + a.z + a.w) * 0.25; }\\nfloat whiteCompliment( in float a ) { return saturate( 1.0 - a ); }\\nvec2  whiteCompliment( in vec2 a )  { return saturate( vec2(1.0) - a ); }\\nvec3  whiteCompliment( in vec3 a )  { return saturate( vec3(1.0) - a ); }\\nvec4  whiteCompliment( in vec4 a )  { return saturate( vec4(1.0) - a ); }\\nvec3 transformDirection( in vec3 normal, in mat4 matrix ) {\\n\treturn normalize( ( matrix * vec4( normal, 0.0 ) ).xyz );\\n}\\n// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\\nvec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {\\n\treturn normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal) {\\n\tfloat distance = dot( planeNormal, point-pointOnPlane );\\n\treturn point - distance * planeNormal;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\treturn pointOnLine + lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) );\\n}\\nfloat calcLightAttenuation( float lightDistance, float cutoffDistance, float decayExponent ) {\\n\tif ( decayExponent > 0.0 ) {\\n\t  return pow( saturate( 1.0 - lightDistance / cutoffDistance ), decayExponent );\\n\t}\\n\treturn 1.0;\\n}\\n\\nvec3 inputToLinear( in vec3 a ) {\\n#ifdef GAMMA_INPUT\\n\treturn pow( a, vec3( float( GAMMA_FACTOR ) ) );\\n#else\\n\treturn a;\\n#endif\\n}\\nvec3 linearToOutput( in vec3 a ) {\\n#ifdef GAMMA_OUTPUT\\n\treturn pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );\\n#else\\n\treturn a;\\n#endif\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/alphatest_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'alphatest_fragment'] = \"#ifdef ALPHATEST\\n\\n\tif ( diffuseColor.a < ALPHATEST ) discard;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_lambert_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_lambert_vertex'] = \"vLightFront = vec3( 0.0 );\\n\\n#ifdef DOUBLE_SIDED\\n\\n\tvLightBack = vec3( 0.0 );\\n\\n#endif\\n\\ntransformedNormal = normalize( transformedNormal );\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\tvec3 dirVector = transformDirection( directionalLightDirection[ i ], viewMatrix );\\n\\n\tfloat dotProduct = dot( transformedNormal, dirVector );\\n\tvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\\n\\n\t#ifdef DOUBLE_SIDED\\n\\n\t\tvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\\n\\n\t\t#ifdef WRAP_AROUND\\n\\n\t\t\tvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\\n\\n\t\t#endif\\n\\n\t#endif\\n\\n\t#ifdef WRAP_AROUND\\n\\n\t\tvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\\n\t\tdirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tdirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\\n\\n\t\t#endif\\n\\n\t#endif\\n\\n\tvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\\n\\n\t#ifdef DOUBLE_SIDED\\n\\n\t\tvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\\n\\n\t#endif\\n\\n}\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\\n\t\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\\n\\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\\n\\n\t\tlVector = normalize( lVector );\\n\t\tfloat dotProduct = dot( transformedNormal, lVector );\\n\\n\t\tvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\\n\\n\t\t\t#ifdef WRAP_AROUND\\n\\n\t\t\t\tvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\\n\\n\t\t\t#endif\\n\\n\t\t#endif\\n\\n\t\t#ifdef WRAP_AROUND\\n\\n\t\t\tvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\\n\t\t\tpointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\\n\\n\t\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\t\tpointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\\n\\n\t\t\t#endif\\n\\n\t\t#endif\\n\\n\t\tvLightFront += pointLightColor[ i ] * pointLightWeighting * attenuation;\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tvLightBack += pointLightColor[ i ] * pointLightWeightingBack * attenuation;\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\\n\t\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\\n\\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\\n\\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\t\t\tspotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\\n\\n\t\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\\n\\n\t\t\tlVector = normalize( lVector );\\n\\n\t\t\tfloat dotProduct = dot( transformedNormal, lVector );\\n\t\t\tvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\\n\\n\t\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\t\tvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\\n\\n\t\t\t\t#ifdef WRAP_AROUND\\n\\n\t\t\t\t\tvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\\n\\n\t\t\t\t#endif\\n\\n\t\t\t#endif\\n\\n\t\t\t#ifdef WRAP_AROUND\\n\\n\t\t\t\tvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\\n\t\t\t\tspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\\n\\n\t\t\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\t\t\tspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\\n\\n\t\t\t\t#endif\\n\\n\t\t\t#endif\\n\\n\t\t\tvLightFront += spotLightColor[ i ] * spotLightWeighting * attenuation * spotEffect;\\n\\n\t\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\t\tvLightBack += spotLightColor[ i ] * spotLightWeightingBack * attenuation * spotEffect;\\n\\n\t\t\t#endif\\n\\n\t\t}\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lVector = transformDirection( hemisphereLightDirection[ i ], viewMatrix );\\n\\n\t\tfloat dotProduct = dot( transformedNormal, lVector );\\n\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\t\tfloat hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\\n\\n\t\tvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\nvLightFront += ambientLightColor;\\n\\n#ifdef DOUBLE_SIDED\\n\\n\tvLightBack += ambientLightColor;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_particle_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_particle_pars_fragment'] = \"#ifdef USE_MAP\\n\\n\tuniform vec4 offsetRepeat;\\n\tuniform sampler2D map;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/default_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'default_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tvec4 mvPosition = modelViewMatrix * skinned;\\n\\n#elif defined( USE_MORPHTARGETS )\\n\\n\tvec4 mvPosition = modelViewMatrix * vec4( morphed, 1.0 );\\n\\n#else\\n\\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\n#endif\\n\\ngl_Position = projectionMatrix * mvPosition;\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_pars_fragment'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\\n\\n\tvarying vec2 vUv;\\n\\n#endif\\n\\n#ifdef USE_MAP\\n\\n\tuniform sampler2D map;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinnormal_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tmat4 skinMatrix = mat4( 0.0 );\\n\tskinMatrix += skinWeight.x * boneMatX;\\n\tskinMatrix += skinWeight.y * boneMatY;\\n\tskinMatrix += skinWeight.z * boneMatZ;\\n\tskinMatrix += skinWeight.w * boneMatW;\\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\n\t#ifdef USE_MORPHNORMALS\\n\\n\tvec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\\n\\n\t#else\\n\\n\tvec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_pars_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvarying float vFragDepth;\\n\\n\t#endif\\n\\n\tuniform float logDepthBufFC;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lightmap_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lightmap_pars_vertex'] = \"#ifdef USE_LIGHTMAP\\n\\n\tvarying vec2 vUv2;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_fragment'] = \"#ifndef FLAT_SHADED\\n\\n\tvec3 normal = normalize( vNormal );\\n\\n\t#ifdef DOUBLE_SIDED\\n\\n\t\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\\n\\n\t#endif\\n\\n#else\\n\\n\tvec3 fdx = dFdx( vViewPosition );\\n\tvec3 fdy = dFdy( vViewPosition );\\n\tvec3 normal = normalize( cross( fdx, fdy ) );\\n\\n#endif\\n\\nvec3 viewPosition = normalize( vViewPosition );\\n\\n#ifdef USE_NORMALMAP\\n\\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n\\n#elif defined( USE_BUMPMAP )\\n\\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n\\n#endif\\n\\nvec3 totalDiffuseLight = vec3( 0.0 );\\nvec3 totalSpecularLight = vec3( 0.0 );\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\\n\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\\n\\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\\n\\n\t\tlVector = normalize( lVector );\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lVector );\\n\\n\t\t#ifdef WRAP_AROUND\\n\\n\t\t\tfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\\n\\n\t\t\tvec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\\n\\n\t\t#else\\n\\n\t\t\tfloat pointDiffuseWeight = max( dotProduct, 0.0 );\\n\\n\t\t#endif\\n\\n\t\ttotalDiffuseLight += pointLightColor[ i ] * pointDiffuseWeight * attenuation;\\n\\n\t\t\t\t// specular\\n\\n\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\\n\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\\n\t\tfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\\n\\n\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\\n\\n\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, pointHalfVector ), 0.0 ), 5.0 );\\n\t\ttotalSpecularLight += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * attenuation * specularNormalization;\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\\n\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\\n\\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\\n\\n\t\tlVector = normalize( lVector );\\n\\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\\n\\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\t\t\tspotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\\n\\n\t\t\t// diffuse\\n\\n\t\t\tfloat dotProduct = dot( normal, lVector );\\n\\n\t\t\t#ifdef WRAP_AROUND\\n\\n\t\t\t\tfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\\n\t\t\t\tfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\\n\\n\t\t\t\tvec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\\n\\n\t\t\t#else\\n\\n\t\t\t\tfloat spotDiffuseWeight = max( dotProduct, 0.0 );\\n\\n\t\t\t#endif\\n\\n\t\t\ttotalDiffuseLight += spotLightColor[ i ] * spotDiffuseWeight * attenuation * spotEffect;\\n\\n\t\t\t// specular\\n\\n\t\t\tvec3 spotHalfVector = normalize( lVector + viewPosition );\\n\t\t\tfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\\n\t\t\tfloat spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\\n\\n\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\\n\\n\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, spotHalfVector ), 0.0 ), 5.0 );\\n\t\t\ttotalSpecularLight += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * attenuation * specularNormalization * spotEffect;\\n\\n\t\t}\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\t\tvec3 dirVector = transformDirection( directionalLightDirection[ i ], viewMatrix );\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, dirVector );\\n\\n\t\t#ifdef WRAP_AROUND\\n\\n\t\t\tfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\\n\\n\t\t\tvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\\n\\n\t\t#else\\n\\n\t\t\tfloat dirDiffuseWeight = max( dotProduct, 0.0 );\\n\\n\t\t#endif\\n\\n\t\ttotalDiffuseLight += directionalLightColor[ i ] * dirDiffuseWeight;\\n\\n\t\t// specular\\n\\n\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\\n\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\\n\t\tfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\\n\\n\t\t/*\\n\t\t// fresnel term from skin shader\\n\t\tconst float F0 = 0.128;\\n\\n\t\tfloat base = 1.0 - dot( viewPosition, dirHalfVector );\\n\t\tfloat exponential = pow( base, 5.0 );\\n\\n\t\tfloat fresnel = exponential + F0 * ( 1.0 - exponential );\\n\t\t*/\\n\\n\t\t/*\\n\t\t// fresnel term from fresnel shader\\n\t\tconst float mFresnelBias = 0.08;\\n\t\tconst float mFresnelScale = 0.3;\\n\t\tconst float mFresnelPower = 5.0;\\n\\n\t\tfloat fresnel = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( -viewPosition ), normal ), mFresnelPower );\\n\t\t*/\\n\\n\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\\n\\n\t\t// \t\tdirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization * fresnel;\\n\\n\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\\n\t\ttotalSpecularLight += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\\n\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lVector = transformDirection( hemisphereLightDirection[ i ], viewMatrix );\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lVector );\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\\n\t\tvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\t\ttotalDiffuseLight += hemiColor;\\n\\n\t\t// specular (sky light)\\n\\n\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\\n\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\\n\t\tfloat hemiSpecularWeightSky = specularStrength * max( pow( max( hemiDotNormalHalfSky, 0.0 ), shininess ), 0.0 );\\n\\n\t\t// specular (ground light)\\n\\n\t\tvec3 lVectorGround = -lVector;\\n\\n\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\\n\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\\n\t\tfloat hemiSpecularWeightGround = specularStrength * max( pow( max( hemiDotNormalHalfGround, 0.0 ), shininess ), 0.0 );\\n\\n\t\tfloat dotProductGround = dot( normal, lVectorGround );\\n\\n\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\\n\\n\t\tvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );\\n\t\tvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );\\n\t\ttotalSpecularLight += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\\n\\n\t}\\n\\n#endif\\n\\n#ifdef METAL\\n\\n\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + ambientLightColor ) * specular + totalSpecularLight + emissive;\\n\\n#else\\n\\n\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + ambientLightColor ) + totalSpecularLight + emissive;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/fog_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'fog_pars_fragment'] = \"#ifdef USE_FOG\\n\\n\tuniform vec3 fogColor;\\n\\n\t#ifdef FOG_EXP2\\n\\n\t\tuniform float fogDensity;\\n\\n\t#else\\n\\n\t\tuniform float fogNear;\\n\t\tuniform float fogFar;\\n\t#endif\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/morphnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'morphnormal_vertex'] = \"#ifdef USE_MORPHNORMALS\\n\\n\tvec3 morphedNormal = vec3( 0.0 );\\n\\n\tmorphedNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\tmorphedNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\tmorphedNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\tmorphedNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n\\n\tmorphedNormal += normal;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_pars_fragment'] = \"#ifdef USE_ENVMAP\\n\\n\tuniform float reflectivity;\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tuniform samplerCube envMap;\\n\t#else\\n\t\tuniform sampler2D envMap;\\n\t#endif\\n\tuniform float flipEnvMap;\\n\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\t\tuniform float refractionRatio;\\n\\n\t#else\\n\\n\t\tvarying vec3 vReflect;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_fragment'] = \"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/normalmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'normalmap_pars_fragment'] = \"#ifdef USE_NORMALMAP\\n\\n\tuniform sampler2D normalMap;\\n\tuniform vec2 normalScale;\\n\\n\t// Per-Pixel Tangent Space Normal Mapping\\n\t// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\\n\\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\\n\t\tvec2 st0 = dFdx( vUv.st );\\n\t\tvec2 st1 = dFdy( vUv.st );\\n\\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\t\tvec3 N = normalize( surf_norm );\\n\\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\t\tmapN.xy = normalScale * mapN.xy;\\n\t\tmat3 tsn = mat3( S, T, N );\\n\t\treturn normalize( tsn * mapN );\\n\\n\t}\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_pars_vertex'] = \"#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\\n\\n\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lightmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lightmap_pars_fragment'] = \"#ifdef USE_LIGHTMAP\\n\\n\tvarying vec2 vUv2;\\n\tuniform sampler2D lightMap;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_vertex'] = \"#ifdef USE_SHADOWMAP\\n\\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\\n\\n\t}\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_vertex'] = \"#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\\n\\n\tvWorldPosition = worldPosition.xyz;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_fragment'] = \"#ifdef USE_MAP\\n\\n\tvec4 texelColor = texture2D( map, vUv );\\n\\n\ttexelColor.xyz = inputToLinear( texelColor.xyz );\\n\\n\tdiffuseColor *= texelColor;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lightmap_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lightmap_vertex'] = \"#ifdef USE_LIGHTMAP\\n\\n\tvUv2 = uv2;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_particle_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_particle_fragment'] = \"#ifdef USE_MAP\\n\\n\tdiffuseColor *= texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_pars_fragment'] = \"#ifdef USE_COLOR\\n\\n\tvarying vec3 vColor;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_vertex'] = \"#ifdef USE_COLOR\\n\\n\tvColor.xyz = inputToLinear( color.xyz );\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinning_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinning_vertex'] = \"#ifdef USE_SKINNING\\n\\n\t#ifdef USE_MORPHTARGETS\\n\\n\tvec4 skinVertex = bindMatrix * vec4( morphed, 1.0 );\\n\\n\t#else\\n\\n\tvec4 skinVertex = bindMatrix * vec4( position, 1.0 );\\n\\n\t#endif\\n\\n\tvec4 skinned = vec4( 0.0 );\\n\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\tskinned  = bindMatrixInverse * skinned;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_pars_vertex'] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\tvarying vec3 vReflect;\\n\\n\tuniform float refractionRatio;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/linear_to_gamma_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'linear_to_gamma_fragment'] = \"\\n\toutgoingLight = linearToOutput( outgoingLight );\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_pars_vertex'] = \"#ifdef USE_COLOR\\n\\n\tvarying vec3 vColor;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_lambert_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_lambert_pars_vertex'] = \"uniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\\n#ifdef WRAP_AROUND\\n\\n\tuniform vec3 wrapRGB;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_pars_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\\n\\n\tvarying vec2 vUv;\\n\tuniform vec4 offsetRepeat;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_fragment'] = \"#ifdef USE_ENVMAP\\n\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\n\t\t// Transforming Normal Vectors with the Inverse Transformation\\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\n\t\t#else\\n\\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\t\t#endif\\n\\n\t#else\\n\\n\t\tvec3 reflectVec = vReflect;\\n\\n\t#endif\\n\\n\t#ifdef DOUBLE_SIDED\\n\t\tfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\\n\t#else\\n\t\tfloat flipNormal = 1.0;\\n\t#endif\\n\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\t\tvec2 sampleUV;\\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\n\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\t#endif\\n\\n\tenvColor.xyz = inputToLinear( envColor.xyz );\\n\\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\n\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\n\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/specularmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'specularmap_pars_fragment'] = \"#ifdef USE_SPECULARMAP\\n\\n\tuniform sampler2D specularMap;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvFragDepth = 1.0 + gl_Position.w;\\n\\n#else\\n\\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\\n\t#endif\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/morphtarget_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'morphtarget_pars_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\\n\t#ifndef USE_MORPHNORMALS\\n\\n\tuniform float morphTargetInfluences[ 8 ];\\n\\n\t#else\\n\\n\tuniform float morphTargetInfluences[ 4 ];\\n\\n\t#endif\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/specularmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'specularmap_fragment'] = \"float specularStrength;\\n\\n#ifdef USE_SPECULARMAP\\n\\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\tspecularStrength = texelSpecular.r;\\n\\n#else\\n\\n\tspecularStrength = 1.0;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/fog_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'fog_fragment'] = \"#ifdef USE_FOG\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\\n\t#else\\n\\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\\n\t#endif\\n\\n\t#ifdef FOG_EXP2\\n\\n\t\tfloat fogFactor = exp2( - square( fogDensity ) * square( depth ) * LOG2 );\\n\t\tfogFactor = whiteCompliment( fogFactor );\\n\\n\t#else\\n\\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n\\n\t#endif\\n\t\\n\toutgoingLight = mix( outgoingLight, fogColor, fogFactor );\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/bumpmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'bumpmap_pars_fragment'] = \"#ifdef USE_BUMPMAP\\n\\n\tuniform sampler2D bumpMap;\\n\tuniform float bumpScale;\\n\\n\t// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\\n\t// http://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\\n\\n\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\\n\\n\tvec2 dHdxy_fwd() {\\n\\n\t\tvec2 dSTdx = dFdx( vUv );\\n\t\tvec2 dSTdy = dFdy( vUv );\\n\\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\n\t\treturn vec2( dBx, dBy );\\n\\n\t}\\n\\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\n\t\tvec3 vSigmaX = dFdx( surf_pos );\\n\t\tvec3 vSigmaY = dFdy( surf_pos );\\n\t\tvec3 vN = surf_norm;\t\t// normalized\\n\\n\t\tvec3 R1 = cross( vSigmaY, vN );\\n\t\tvec3 R2 = cross( vN, vSigmaX );\\n\\n\t\tfloat fDet = dot( vSigmaX, R1 );\\n\\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\n\t}\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/defaultnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'defaultnormal_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tvec3 objectNormal = skinnedNormal.xyz;\\n\\n#elif defined( USE_MORPHNORMALS )\\n\\n\tvec3 objectNormal = morphedNormal;\\n\\n#else\\n\\n\tvec3 objectNormal = normal;\\n\\n#endif\\n\\n#ifdef FLIP_SIDED\\n\\n\tobjectNormal = -objectNormal;\\n\\n#endif\\n\\nvec3 transformedNormal = normalMatrix * objectNormal;\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_pars_fragment'] = \"uniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\\n\\n\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\\n#ifdef WRAP_AROUND\\n\\n\tuniform vec3 wrapRGB;\\n\\n#endif\\n\\nvarying vec3 vViewPosition;\\n\\n#ifndef FLAT_SHADED\\n\\n\tvarying vec3 vNormal;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinbase_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinbase_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\\n\\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lightmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lightmap_fragment'] = \"#ifdef USE_LIGHTMAP\\n\\n\toutgoingLight *= diffuseColor.xyz * texture2D( lightMap, vUv2 ).xyz;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_pars_vertex'] = \"#ifdef USE_SHADOWMAP\\n\\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\tuniform mat4 shadowMatrix[ MAX_SHADOWS ];\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_fragment'] = \"#ifdef USE_COLOR\\n\\n\tdiffuseColor.rgb *= vColor;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/morphtarget_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'morphtarget_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\\n\tvec3 morphed = vec3( 0.0 );\\n\tmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\tmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\tmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\tmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\n\t#ifndef USE_MORPHNORMALS\\n\\n\tmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\tmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\tmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\tmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\n\t#endif\\n\\n\tmorphed += position;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_vertex'] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\tvec3 worldNormal = transformDirection( objectNormal, modelMatrix );\\n\\n\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\n\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\t\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\n\t#else\\n\\n\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_fragment'] = \"#ifdef USE_SHADOWMAP\\n\\n\t#ifdef SHADOWMAP_DEBUG\\n\\n\t\tvec3 frustumColors[3];\\n\t\tfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\\n\t\tfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\\n\t\tfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\\n\\n\t#endif\\n\\n\t#ifdef SHADOWMAP_CASCADE\\n\\n\t\tint inFrustumCount = 0;\\n\\n\t#endif\\n\\n\tfloat fDepth;\\n\tvec3 shadowColor = vec3( 1.0 );\\n\\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\t\tvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\\n\\n\t\t\t\t// if ( something && something ) breaks ATI OpenGL shader compiler\\n\t\t\t\t// if ( all( something, something ) ) using this instead\\n\\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\t\tbool inFrustum = all( inFrustumVec );\\n\\n\t\t\t\t// don't shadow pixels outside of light frustum\\n\t\t\t\t// use just first frustum (for cascades)\\n\t\t\t\t// don't shadow pixels behind far plane of light frustum\\n\\n\t\t#ifdef SHADOWMAP_CASCADE\\n\\n\t\t\tinFrustumCount += int( inFrustum );\\n\t\t\tbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\\n\\n\t\t#else\\n\\n\t\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\n\t\t#endif\\n\\n\t\tbool frustumTest = all( frustumTestVec );\\n\\n\t\tif ( frustumTest ) {\\n\\n\t\t\tshadowCoord.z += shadowBias[ i ];\\n\\n\t\t\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\n\t\t\t\t\t\t// Percentage-close filtering\\n\t\t\t\t\t\t// (9 pixel kernel)\\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\\n\\n\t\t\t\tfloat shadow = 0.0;\\n\\n\t\t/*\\n\t\t\t\t\t\t// nested loops breaks shader compiler / validator on some ATI cards when using OpenGL\\n\t\t\t\t\t\t// must enroll loop manually\\n\\n\t\t\t\tfor ( float y = -1.25; y <= 1.25; y += 1.25 )\\n\t\t\t\t\tfor ( float x = -1.25; x <= 1.25; x += 1.25 ) {\\n\\n\t\t\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\\n\\n\t\t\t\t\t\t\t\t// doesn't seem to produce any noticeable visual difference compared to simple texture2D lookup\\n\t\t\t\t\t\t\t\t//vec4 rgbaDepth = texture2DProj( shadowMap[ i ], vec4( vShadowCoord[ i ].w * ( vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy ), 0.05, vShadowCoord[ i ].w ) );\\n\\n\t\t\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\\n\\n\t\t\t\t\t\tif ( fDepth < shadowCoord.z )\\n\t\t\t\t\t\t\tshadow += 1.0;\\n\\n\t\t\t\t}\\n\\n\t\t\t\tshadow /= 9.0;\\n\\n\t\t*/\\n\\n\t\t\t\tconst float shadowDelta = 1.0 / 9.0;\\n\\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\n\\n\t\t\t\tfloat dx0 = -1.25 * xPixelOffset;\\n\t\t\t\tfloat dy0 = -1.25 * yPixelOffset;\\n\t\t\t\tfloat dx1 = 1.25 * xPixelOffset;\\n\t\t\t\tfloat dy1 = 1.25 * yPixelOffset;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n\\n\t\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\n\t\t\t\t\t\t// Percentage-close filtering\\n\t\t\t\t\t\t// (9 pixel kernel)\\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\\n\\n\t\t\t\tfloat shadow = 0.0;\\n\\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\n\\n\t\t\t\tfloat dx0 = -1.0 * xPixelOffset;\\n\t\t\t\tfloat dy0 = -1.0 * yPixelOffset;\\n\t\t\t\tfloat dx1 = 1.0 * xPixelOffset;\\n\t\t\t\tfloat dy1 = 1.0 * yPixelOffset;\\n\\n\t\t\t\tmat3 shadowKernel;\\n\t\t\t\tmat3 depthKernel;\\n\\n\t\t\t\tdepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\t\t\t\tdepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\t\t\t\tdepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\t\t\t\tdepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\t\t\t\tdepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\t\t\t\tdepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\t\t\t\tdepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\t\t\t\tdepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\t\t\t\tdepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\\n\t\t\t\tvec3 shadowZ = vec3( shadowCoord.z );\\n\t\t\t\tshadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\\n\t\t\t\tshadowKernel[0] *= vec3(0.25);\\n\\n\t\t\t\tshadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\\n\t\t\t\tshadowKernel[1] *= vec3(0.25);\\n\\n\t\t\t\tshadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\\n\t\t\t\tshadowKernel[2] *= vec3(0.25);\\n\\n\t\t\t\tvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\\n\\n\t\t\t\tshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\\n\t\t\t\tshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\\n\\n\t\t\t\tvec4 shadowValues;\\n\t\t\t\tshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\\n\t\t\t\tshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\\n\t\t\t\tshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\\n\t\t\t\tshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\\n\\n\t\t\t\tshadow = dot( shadowValues, vec4( 1.0 ) );\\n\\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n\\n\t\t\t#else\\n\\n\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\\n\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\\n\\n\t\t\t\tif ( fDepth < shadowCoord.z )\\n\\n\t\t// spot with multiple shadows is darker\\n\\n\t\t\t\t\tshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\\n\\n\t\t// spot with multiple shadows has the same color as single shadow spot\\n\\n\t\t// \t\t\t\t\tshadowColor = min( shadowColor, vec3( shadowDarkness[ i ] ) );\\n\\n\t\t\t#endif\\n\\n\t\t}\\n\\n\\n\t\t#ifdef SHADOWMAP_DEBUG\\n\\n\t\t\t#ifdef SHADOWMAP_CASCADE\\n\\n\t\t\t\tif ( inFrustum && inFrustumCount == 1 ) outgoingLight *= frustumColors[ i ];\\n\\n\t\t\t#else\\n\\n\t\t\t\tif ( inFrustum ) outgoingLight *= frustumColors[ i ];\\n\\n\t\t\t#endif\\n\\n\t\t#endif\\n\\n\t}\\n\\n\t// NOTE: I am unsure if this is correct in linear space.  -bhouston, Dec 29, 2014\\n\tshadowColor = inputToLinear( shadowColor );\\n\\n\toutgoingLight = outgoingLight * shadowColor;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/worldpos_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'worldpos_vertex'] = \"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\\n\t#ifdef USE_SKINNING\\n\\n\t\tvec4 worldPosition = modelMatrix * skinned;\\n\\n\t#elif defined( USE_MORPHTARGETS )\\n\\n\t\tvec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\\n\\n\t#else\\n\\n\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_pars_fragment'] = \"#ifdef USE_SHADOWMAP\\n\\n\tuniform sampler2D shadowMap[ MAX_SHADOWS ];\\n\tuniform vec2 shadowMapSize[ MAX_SHADOWS ];\\n\\n\tuniform float shadowDarkness[ MAX_SHADOWS ];\\n\tuniform float shadowBias[ MAX_SHADOWS ];\\n\\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\\n\tfloat unpackDepth( const in vec4 rgba_depth ) {\\n\\n\t\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\\n\t\tfloat depth = dot( rgba_depth, bit_shift );\\n\t\treturn depth;\\n\\n\t}\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinning_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinning_pars_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tuniform mat4 bindMatrix;\\n\tuniform mat4 bindMatrixInverse;\\n\\n\t#ifdef BONE_TEXTURE\\n\\n\t\tuniform sampler2D boneTexture;\\n\t\tuniform int boneTextureWidth;\\n\t\tuniform int boneTextureHeight;\\n\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\\n\t\t\tfloat j = i * 4.0;\\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\\n\\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\\n\\n\t\t\ty = dy * ( y + 0.5 );\\n\\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\n\t\t\treturn bone;\\n\\n\t\t}\\n\\n\t#else\\n\\n\t\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\\n\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\\n\t\t\tmat4 bone = boneGlobalMatrices[ int(i) ];\\n\t\t\treturn bone;\\n\\n\t\t}\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_pars_fragment'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\tuniform float logDepthBufFC;\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\t#extension GL_EXT_frag_depth : enable\\n\t\tvarying float vFragDepth;\\n\\n\t#endif\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/alphamap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'alphamap_fragment'] = \"#ifdef USE_ALPHAMAP\\n\\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/alphamap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'alphamap_pars_fragment'] = \"#ifdef USE_ALPHAMAP\\n\\n\tuniform sampler2D alphaMap;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/UniformsUtils.js\r\n\r\n/**\r\n * Uniform Utilities\r\n */\r\n\r\nTHREE.UniformsUtils = {\r\n\r\n\tmerge: function ( uniforms ) {\r\n\r\n\t\tvar merged = {};\r\n\r\n\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\r\n\r\n\t\t\tvar tmp = this.clone( uniforms[ u ] );\r\n\r\n\t\t\tfor ( var p in tmp ) {\r\n\r\n\t\t\t\tmerged[ p ] = tmp[ p ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn merged;\r\n\r\n\t},\r\n\r\n\tclone: function ( uniforms_src ) {\r\n\r\n\t\tvar uniforms_dst = {};\r\n\r\n\t\tfor ( var u in uniforms_src ) {\r\n\r\n\t\t\tuniforms_dst[ u ] = {};\r\n\r\n\t\t\tfor ( var p in uniforms_src[ u ] ) {\r\n\r\n\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\r\n\r\n\t\t\t\tif ( parameter_src instanceof THREE.Color ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Vector2 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Vector3 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Vector4 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Matrix4 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Texture ) {\r\n\r\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\r\n\r\n\t\t\t\t} else if ( parameter_src instanceof Array ) {\r\n\r\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn uniforms_dst;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/shaders/UniformsLib.js\r\n\r\n/**\r\n * Uniforms library for shared webgl shaders\r\n */\r\n\r\nTHREE.UniformsLib = {\r\n\r\n\tcommon: {\r\n\r\n\t\t\"diffuse\" : { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\r\n\t\t\"opacity\" : { type: \"f\", value: 1.0 },\r\n\r\n\t\t\"map\" : { type: \"t\", value: null },\r\n\t\t\"offsetRepeat\" : { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\r\n\r\n\t\t\"lightMap\" : { type: \"t\", value: null },\r\n\t\t\"specularMap\" : { type: \"t\", value: null },\r\n\t\t\"alphaMap\" : { type: \"t\", value: null },\r\n\r\n\t\t\"envMap\" : { type: \"t\", value: null },\r\n\t\t\"flipEnvMap\" : { type: \"f\", value: - 1 },\r\n\t\t\"reflectivity\" : { type: \"f\", value: 1.0 },\r\n\t\t\"refractionRatio\" : { type: \"f\", value: 0.98 },\r\n\r\n\t\t\"morphTargetInfluences\" : { type: \"f\", value: 0 }\r\n\r\n\t},\r\n\r\n\tbump: {\r\n\r\n\t\t\"bumpMap\" : { type: \"t\", value: null },\r\n\t\t\"bumpScale\" : { type: \"f\", value: 1 }\r\n\r\n\t},\r\n\r\n\tnormalmap: {\r\n\r\n\t\t\"normalMap\" : { type: \"t\", value: null },\r\n\t\t\"normalScale\" : { type: \"v2\", value: new THREE.Vector2( 1, 1 ) }\r\n\t},\r\n\r\n\tfog : {\r\n\r\n\t\t\"fogDensity\" : { type: \"f\", value: 0.00025 },\r\n\t\t\"fogNear\" : { type: \"f\", value: 1 },\r\n\t\t\"fogFar\" : { type: \"f\", value: 2000 },\r\n\t\t\"fogColor\" : { type: \"c\", value: new THREE.Color( 0xffffff ) }\r\n\r\n\t},\r\n\r\n\tlights: {\r\n\r\n\t\t\"ambientLightColor\" : { type: \"fv\", value: [] },\r\n\r\n\t\t\"directionalLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\"directionalLightColor\" : { type: \"fv\", value: [] },\r\n\r\n\t\t\"hemisphereLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\"hemisphereLightSkyColor\" : { type: \"fv\", value: [] },\r\n\t\t\"hemisphereLightGroundColor\" : { type: \"fv\", value: [] },\r\n\r\n\t\t\"pointLightColor\" : { type: \"fv\", value: [] },\r\n\t\t\"pointLightPosition\" : { type: \"fv\", value: [] },\r\n\t\t\"pointLightDistance\" : { type: \"fv1\", value: [] },\r\n\t\t\"pointLightDecay\" : { type: \"fv1\", value: [] },\r\n\r\n\t\t\"spotLightColor\" : { type: \"fv\", value: [] },\r\n\t\t\"spotLightPosition\" : { type: \"fv\", value: [] },\r\n\t\t\"spotLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\"spotLightDistance\" : { type: \"fv1\", value: [] },\r\n\t\t\"spotLightAngleCos\" : { type: \"fv1\", value: [] },\r\n\t\t\"spotLightExponent\" : { type: \"fv1\", value: [] },\r\n\t\t\"spotLightDecay\" : { type: \"fv1\", value: [] }\r\n\r\n\t},\r\n\r\n\tparticle: {\r\n\r\n\t\t\"psColor\" : { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\r\n\t\t\"opacity\" : { type: \"f\", value: 1.0 },\r\n\t\t\"size\" : { type: \"f\", value: 1.0 },\r\n\t\t\"scale\" : { type: \"f\", value: 1.0 },\r\n\t\t\"map\" : { type: \"t\", value: null },\r\n\t\t\"offsetRepeat\" : { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\r\n\r\n\t\t\"fogDensity\" : { type: \"f\", value: 0.00025 },\r\n\t\t\"fogNear\" : { type: \"f\", value: 1 },\r\n\t\t\"fogFar\" : { type: \"f\", value: 2000 },\r\n\t\t\"fogColor\" : { type: \"c\", value: new THREE.Color( 0xffffff ) }\r\n\r\n\t},\r\n\r\n\tshadowmap: {\r\n\r\n\t\t\"shadowMap\": { type: \"tv\", value: [] },\r\n\t\t\"shadowMapSize\": { type: \"v2v\", value: [] },\r\n\r\n\t\t\"shadowBias\" : { type: \"fv1\", value: [] },\r\n\t\t\"shadowDarkness\": { type: \"fv1\", value: [] },\r\n\r\n\t\t\"shadowMatrix\" : { type: \"m4v\", value: [] }\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/shaders/ShaderLib.js\r\n\r\n/**\r\n * Webgl Shader Library for three.js\r\n *\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n */\r\n\r\n\r\nTHREE.ShaderLib = {\r\n\r\n\t'basic': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ]\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lightmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lightmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\r\n\t\t\t\"\t#ifdef USE_ENVMAP\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"default_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\"),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lightmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\t// outgoing light does not have an alpha, the surface does\r\n\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\r\n\t\t\t\"\toutgoingLight = diffuseColor.rgb;\", // simple shader\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"lightmap_fragment\" ],\t\t// TODO: Light map on an otherwise unlit surface doesn't make sense.\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\t\t// TODO: Shadows on an otherwise unlit surface doesn't make sense.\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\t// TODO, this should be pre-multiplied to allow for bright highlights on very transparent objects\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\")\r\n\r\n\t},\r\n\r\n\t'lambert': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\tTHREE.UniformsLib[ \"lights\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ],\r\n\r\n\t\t\t{\r\n\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) },\r\n\t\t\t\t\"wrapRGB\"  : { type: \"v3\", value: new THREE.Vector3( 1, 1, 1 ) }\r\n\t\t\t}\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"#define LAMBERT\",\r\n\r\n\t\t\t\"varying vec3 vLightFront;\",\r\n\r\n\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\"\tvarying vec3 vLightBack;\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lightmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lights_lambert_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lightmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"default_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_lambert_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\"),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\"uniform vec3 emissive;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\t\"varying vec3 vLightFront;\",\r\n\r\n\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\"\tvarying vec3 vLightBack;\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lightmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\t// outgoing light does not have an alpha, the surface does\r\n\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\r\n\t\t\t\"\t#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\t\t//\"float isFront = float( gl_FrontFacing );\",\r\n\t\t\t\t\t//\"gl_FragColor.xyz *= isFront * vLightFront + ( 1.0 - isFront ) * vLightBack;\",\r\n\r\n\t\t\t\"\t\tif ( gl_FrontFacing )\",\r\n\t\t\t\"\t\t\toutgoingLight += diffuseColor.rgb * vLightFront + emissive;\",\r\n\t\t\t\"\t\telse\",\r\n\t\t\t\"\t\t\toutgoingLight += diffuseColor.rgb * vLightBack + emissive;\",\r\n\r\n\t\t\t\"\t#else\",\r\n\r\n\t\t\t\"\t\toutgoingLight += diffuseColor.rgb * vLightFront + emissive;\",\r\n\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"lightmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\t// TODO, this should be pre-multiplied to allow for bright highlights on very transparent objects\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\")\r\n\r\n\t},\r\n\r\n\t'phong': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"bump\" ],\r\n\t\t\tTHREE.UniformsLib[ \"normalmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\tTHREE.UniformsLib[ \"lights\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ],\r\n\r\n\t\t\t{\r\n\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) },\r\n\t\t\t\t\"specular\" : { type: \"c\", value: new THREE.Color( 0x111111 ) },\r\n\t\t\t\t\"shininess\": { type: \"f\", value: 30 },\r\n\t\t\t\t\"wrapRGB\"  : { type: \"v3\", value: new THREE.Vector3( 1, 1, 1 ) }\r\n\t\t\t}\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"#define PHONG\",\r\n\r\n\t\t\t\"varying vec3 vViewPosition;\",\r\n\r\n\t\t\t\"#ifndef FLAT_SHADED\",\r\n\r\n\t\t\t\"\tvarying vec3 vNormal;\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lightmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lights_phong_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lightmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\r\n\t\t\t\"#ifndef FLAT_SHADED\", // Normal computed with derivatives when FLAT_SHADED\r\n\r\n\t\t\t\"\tvNormal = normalize( transformedNormal );\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"default_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"\tvViewPosition = -mvPosition.xyz;\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\"),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"#define PHONG\",\r\n\r\n\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\"uniform vec3 emissive;\",\r\n\t\t\t\"uniform vec3 specular;\",\r\n\t\t\t\"uniform float shininess;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lightmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lights_phong_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"bumpmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"normalmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\t// outgoing light does not have an alpha, the surface does\r\n\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"lightmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\t// TODO, this should be pre-multiplied to allow for bright highlights on very transparent objects\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\")\r\n\r\n\t},\r\n\r\n\t'particle_basic': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"particle\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ]\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"uniform float size;\",\r\n\t\t\t\"uniform float scale;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n\t\t\t\"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\t\"\t#ifdef USE_SIZEATTENUATION\",\r\n\t\t\t\"\t\tgl_PointSize = size * ( scale / length( mvPosition.xyz ) );\",\r\n\t\t\t\"\t#else\",\r\n\t\t\t\"\t\tgl_PointSize = size;\",\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\"\tgl_Position = projectionMatrix * mvPosition;\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\"),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform vec3 psColor;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_particle_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\t// outgoing light does not have an alpha, the surface does\r\n\t\t\t\"\tvec4 diffuseColor = vec4( psColor, opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_particle_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\r\n\t\t\t\"\toutgoingLight = diffuseColor.rgb;\", // simple shader\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\t// TODO, this should be pre-multiplied to allow for bright highlights on very transparent objects\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\")\r\n\r\n\t},\r\n\r\n\t'dashed': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\r\n\t\t\t{\r\n\t\t\t\t\"scale\"    : { type: \"f\", value: 1 },\r\n\t\t\t\t\"dashSize\" : { type: \"f\", value: 1 },\r\n\t\t\t\t\"totalSize\": { type: \"f\", value: 2 }\r\n\t\t\t}\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"uniform float scale;\",\r\n\t\t\t\"attribute float lineDistance;\",\r\n\r\n\t\t\t\"varying float vLineDistance;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n\t\t\t\"\tvLineDistance = scale * lineDistance;\",\r\n\r\n\t\t\t\"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\r\n\t\t\t\"\tgl_Position = projectionMatrix * mvPosition;\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\"),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\t\"uniform float dashSize;\",\r\n\t\t\t\"uniform float totalSize;\",\r\n\r\n\t\t\t\"varying float vLineDistance;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\",\r\n\r\n\t\t\t\"\t\tdiscard;\",\r\n\r\n\t\t\t\"\t}\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\t// outgoing light does not have an alpha, the surface does\r\n\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\r\n\t\t\t\"\toutgoingLight = diffuseColor.rgb;\", // simple shader\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\t// TODO, this should be pre-multiplied to allow for bright highlights on very transparent objects\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\")\r\n\r\n\t},\r\n\r\n\t'depth': {\r\n\r\n\t\tuniforms: {\r\n\r\n\t\t\t\"mNear\": { type: \"f\", value: 1.0 },\r\n\t\t\t\"mFar\" : { type: \"f\", value: 2000.0 },\r\n\t\t\t\"opacity\" : { type: \"f\", value: 1.0 }\r\n\r\n\t\t},\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"default_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\"),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform float mNear;\",\r\n\t\t\t\"uniform float mFar;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"\t#ifdef USE_LOGDEPTHBUF_EXT\",\r\n\r\n\t\t\t\"\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\",\r\n\r\n\t\t\t\"\t#else\",\r\n\r\n\t\t\t\"\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\",\r\n\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\"\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\",\r\n\t\t\t\"\tgl_FragColor = vec4( vec3( color ), opacity );\",   // TODO, this should be pre-multiplied to allow for bright highlights on very transparent objects\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\")\r\n\r\n\t},\r\n\r\n\t'normal': {\r\n\r\n\t\tuniforms: {\r\n\r\n\t\t\t\"opacity\" : { type: \"f\", value: 1.0 }\r\n\r\n\t\t},\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"varying vec3 vNormal;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvNormal = normalize( normalMatrix * normal );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"default_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\"),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform float opacity;\",\r\n\t\t\t\"varying vec3 vNormal;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\")\r\n\r\n\t},\r\n\r\n\t/* -------------------------------------------------------------------------\r\n\t//\tCube map shader\r\n\t ------------------------------------------------------------------------- */\r\n\r\n\t'cube': {\r\n\r\n\t\tuniforms: { \"tCube\": { type: \"t\", value: null },\r\n\t\t\t\t\t\"tFlip\": { type: \"f\", value: - 1 } },\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvWorldPosition = transformDirection( position, modelMatrix );\",\r\n\r\n\t\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\"),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform samplerCube tCube;\",\r\n\t\t\t\"uniform float tFlip;\",\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\")\r\n\r\n\t},\r\n\r\n\t/* -------------------------------------------------------------------------\r\n\t//\tCube map shader\r\n\t ------------------------------------------------------------------------- */\r\n\r\n\t'equirect': {\r\n\r\n\t\tuniforms: { \"tEquirect\": { type: \"t\", value: null },\r\n\t\t\t\t\t\"tFlip\": { type: \"f\", value: - 1 } },\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvWorldPosition = transformDirection( position, modelMatrix );\",\r\n\r\n\t\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\"),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform sampler2D tEquirect;\",\r\n\t\t\t\"uniform float tFlip;\",\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t// \"\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\",\r\n\t\t\t\t\"vec3 direction = normalize( vWorldPosition );\",\r\n\t\t\t\t\"vec2 sampleUV;\",\r\n\t\t\t\t\"sampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\",\r\n\t\t\t\t\"sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\",\r\n\t\t\t\t\"gl_FragColor = texture2D( tEquirect, sampleUV );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\")\r\n\r\n\t},\r\n\r\n\t/* Depth encoding into RGBA texture\r\n\t *\r\n\t * based on SpiderGL shadow map example\r\n\t * http://spidergl.org/example.php?id=6\r\n\t *\r\n\t * originally from\r\n\t * http://www.gamedev.net/topic/442138-packing-a-float-into-a-a8r8g8b8-texture-shader/page__whichpage__1%25EF%25BF%25BD\r\n\t *\r\n\t * see also\r\n\t * http://aras-p.info/blog/2009/07/30/encoding-floats-to-rgba-the-final/\r\n\t */\r\n\r\n\t'depthRGBA': {\r\n\r\n\t\tuniforms: {},\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"default_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\"),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"vec4 pack_depth( const in float depth ) {\",\r\n\r\n\t\t\t\"\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\",\r\n\t\t\t\"\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\",\r\n\t\t\t\"\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\", // \"\tvec4 res = fract( depth * bit_shift );\",\r\n\t\t\t\"\tres -= res.xxyz * bit_mask;\",\r\n\t\t\t\"\treturn res;\",\r\n\r\n\t\t\t\"}\",\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"\t#ifdef USE_LOGDEPTHBUF_EXT\",\r\n\r\n\t\t\t\"\t\tgl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );\",\r\n\r\n\t\t\t\"\t#else\",\r\n\r\n\t\t\t\"\t\tgl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\",\r\n\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\t//\"gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z / gl_FragCoord.w );\",\r\n\t\t\t\t//\"float z = ( ( gl_FragCoord.z / gl_FragCoord.w ) - 3.0 ) / ( 4000.0 - 3.0 );\",\r\n\t\t\t\t//\"gl_FragData[ 0 ] = pack_depth( z );\",\r\n\t\t\t\t//\"gl_FragData[ 0 ] = vec4( z, z, z, 1.0 );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\")\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/WebGLRenderer.js\r\n\r\n/**\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author szimek / https://github.com/szimek/\r\n */\r\n\r\nTHREE.WebGLRenderer = function ( parameters ) {\r\n\r\n\tconsole.log( 'THREE.WebGLRenderer', THREE.REVISION );\r\n\r\n\tparameters = parameters || {};\r\n\r\n\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElement( 'canvas' ),\r\n\t_context = parameters.context !== undefined ? parameters.context : null,\r\n\r\n\tpixelRatio = 1,\r\n\r\n\t_precision = parameters.precision !== undefined ? parameters.precision : 'highp',\r\n\r\n\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\r\n\t_depth = parameters.depth !== undefined ? parameters.depth : true,\r\n\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\r\n\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\r\n\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\r\n\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\r\n\t_logarithmicDepthBuffer = parameters.logarithmicDepthBuffer !== undefined ? parameters.logarithmicDepthBuffer : false,\r\n\r\n\t_clearColor = new THREE.Color( 0x000000 ),\r\n\t_clearAlpha = 0;\r\n\r\n\tvar lights = [];\r\n\r\n\tvar _webglObjects = {};\r\n\tvar _webglObjectsImmediate = [];\r\n\r\n\tvar opaqueObjects = [];\r\n\tvar transparentObjects = [];\r\n\r\n\tvar sprites = [];\r\n\tvar lensFlares = [];\r\n\r\n\t// public properties\r\n\r\n\tthis.domElement = _canvas;\r\n\tthis.context = null;\r\n\r\n\t// clearing\r\n\r\n\tthis.autoClear = true;\r\n\tthis.autoClearColor = true;\r\n\tthis.autoClearDepth = true;\r\n\tthis.autoClearStencil = true;\r\n\r\n\t// scene graph\r\n\r\n\tthis.sortObjects = true;\r\n\r\n\t// physically based shading\r\n\r\n\tthis.gammaFactor = 2.0;\t// for backwards compatibility\r\n\tthis.gammaInput = false;\r\n\tthis.gammaOutput = false;\r\n\r\n\t// shadow map\r\n\r\n\tthis.shadowMapEnabled = false;\r\n\tthis.shadowMapType = THREE.PCFShadowMap;\r\n\tthis.shadowMapCullFace = THREE.CullFaceFront;\r\n\tthis.shadowMapDebug = false;\r\n\tthis.shadowMapCascade = false;\r\n\r\n\t// morphs\r\n\r\n\tthis.maxMorphTargets = 8;\r\n\tthis.maxMorphNormals = 4;\r\n\r\n\t// flags\r\n\r\n\tthis.autoScaleCubemaps = true;\r\n\r\n\t// info\r\n\r\n\tthis.info = {\r\n\r\n\t\tmemory: {\r\n\r\n\t\t\tprograms: 0,\r\n\t\t\tgeometries: 0,\r\n\t\t\ttextures: 0\r\n\r\n\t\t},\r\n\r\n\t\trender: {\r\n\r\n\t\t\tcalls: 0,\r\n\t\t\tvertices: 0,\r\n\t\t\tfaces: 0,\r\n\t\t\tpoints: 0\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// internal properties\r\n\r\n\tvar _this = this,\r\n\r\n\t_programs = [],\r\n\r\n\t// internal state cache\r\n\r\n\t_currentProgram = null,\r\n\t_currentFramebuffer = null,\r\n\t_currentMaterialId = - 1,\r\n\t_currentGeometryProgram = '',\r\n\t_currentCamera = null,\r\n\r\n\t_usedTextureUnits = 0,\r\n\r\n\t_viewportX = 0,\r\n\t_viewportY = 0,\r\n\t_viewportWidth = _canvas.width,\r\n\t_viewportHeight = _canvas.height,\r\n\t_currentWidth = 0,\r\n\t_currentHeight = 0,\r\n\r\n\t// frustum\r\n\r\n\t_frustum = new THREE.Frustum(),\r\n\r\n\t // camera matrices cache\r\n\r\n\t_projScreenMatrix = new THREE.Matrix4(),\r\n\r\n\t_vector3 = new THREE.Vector3(),\r\n\r\n\t// light arrays cache\r\n\r\n\t_direction = new THREE.Vector3(),\r\n\r\n\t_lightsNeedUpdate = true,\r\n\r\n\t_lights = {\r\n\r\n\t\tambient: [ 0, 0, 0 ],\r\n\t\tdirectional: { length: 0, colors:[], positions: [] },\r\n\t\tpoint: { length: 0, colors: [], positions: [], distances: [], decays: [] },\r\n\t\tspot: { length: 0, colors: [], positions: [], distances: [], directions: [], anglesCos: [], exponents: [], decays: [] },\r\n\t\themi: { length: 0, skyColors: [], groundColors: [], positions: [] }\r\n\r\n\t};\r\n\r\n\t// initialize\r\n\r\n\tvar _gl;\r\n\r\n\ttry {\r\n\r\n\t\tvar attributes = {\r\n\t\t\talpha: _alpha,\r\n\t\t\tdepth: _depth,\r\n\t\t\tstencil: _stencil,\r\n\t\t\tantialias: _antialias,\r\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\r\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer\r\n\t\t};\r\n\r\n\t\t_gl = _context || _canvas.getContext( 'webgl', attributes ) || _canvas.getContext( 'experimental-webgl', attributes );\r\n\r\n\t\tif ( _gl === null ) {\r\n\r\n\t\t\tif ( _canvas.getContext( 'webgl') !== null ) {\r\n\r\n\t\t\t\tthrow 'Error creating WebGL context with your selected attributes.';\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthrow 'Error creating WebGL context.';\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t_canvas.addEventListener( 'webglcontextlost', function ( event ) {\r\n\r\n\t\t\tevent.preventDefault();\r\n\r\n\t\t\tresetGLState();\r\n\t\t\tsetDefaultGLState();\r\n\r\n\t\t\t_webglObjects = {};\r\n\r\n\t\t}, false);\r\n\r\n\t} catch ( error ) {\r\n\r\n\t\tTHREE.error( 'THREE.WebGLRenderer: ' + error );\r\n\r\n\t}\r\n\r\n\tvar state = new THREE.WebGLState( _gl, paramThreeToGL );\r\n\r\n\tif ( _gl.getShaderPrecisionFormat === undefined ) {\r\n\r\n\t\t_gl.getShaderPrecisionFormat = function () {\r\n\r\n\t\t\treturn {\r\n\t\t\t\t'rangeMin': 1,\r\n\t\t\t\t'rangeMax': 1,\r\n\t\t\t\t'precision': 1\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar extensions = new THREE.WebGLExtensions( _gl );\r\n\r\n\textensions.get( 'OES_texture_float' );\r\n\textensions.get( 'OES_texture_float_linear' );\r\n\textensions.get( 'OES_texture_half_float' );\r\n\textensions.get( 'OES_texture_half_float_linear' );\r\n\textensions.get( 'OES_standard_derivatives' );\r\n\r\n\tif ( _logarithmicDepthBuffer ) {\r\n\r\n\t\textensions.get( 'EXT_frag_depth' );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar glClearColor = function ( r, g, b, a ) {\r\n\r\n\t\tif ( _premultipliedAlpha === true ) {\r\n\r\n\t\t\tr *= a; g *= a; b *= a;\r\n\r\n\t\t}\r\n\r\n\t\t_gl.clearColor( r, g, b, a );\r\n\r\n\t};\r\n\r\n\tvar setDefaultGLState = function () {\r\n\r\n\t\t_gl.clearColor( 0, 0, 0, 1 );\r\n\t\t_gl.clearDepth( 1 );\r\n\t\t_gl.clearStencil( 0 );\r\n\r\n\t\t_gl.enable( _gl.DEPTH_TEST );\r\n\t\t_gl.depthFunc( _gl.LEQUAL );\r\n\r\n\t\t_gl.frontFace( _gl.CCW );\r\n\t\t_gl.cullFace( _gl.BACK );\r\n\t\t_gl.enable( _gl.CULL_FACE );\r\n\r\n\t\t_gl.enable( _gl.BLEND );\r\n\t\t_gl.blendEquation( _gl.FUNC_ADD );\r\n\t\t_gl.blendFunc( _gl.SRC_ALPHA, _gl.ONE_MINUS_SRC_ALPHA );\r\n\r\n\t\t_gl.viewport( _viewportX, _viewportY, _viewportWidth, _viewportHeight );\r\n\r\n\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\r\n\t};\r\n\r\n\tvar resetGLState = function () {\r\n\r\n\t\t_currentProgram = null;\r\n\t\t_currentCamera = null;\r\n\r\n\t\t_currentGeometryProgram = '';\r\n\t\t_currentMaterialId = - 1;\r\n\r\n\t\t_lightsNeedUpdate = true;\r\n\r\n\t\tstate.reset();\r\n\r\n\t};\r\n\r\n\tsetDefaultGLState();\r\n\r\n\tthis.context = _gl;\r\n\tthis.state = state;\r\n\r\n\t// GPU capabilities\r\n\r\n\tvar _maxTextures = _gl.getParameter( _gl.MAX_TEXTURE_IMAGE_UNITS );\r\n\tvar _maxVertexTextures = _gl.getParameter( _gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\r\n\tvar _maxTextureSize = _gl.getParameter( _gl.MAX_TEXTURE_SIZE );\r\n\tvar _maxCubemapSize = _gl.getParameter( _gl.MAX_CUBE_MAP_TEXTURE_SIZE );\r\n\r\n\tvar _supportsVertexTextures = _maxVertexTextures > 0;\r\n\tvar _supportsBoneTextures = _supportsVertexTextures && extensions.get( 'OES_texture_float' );\r\n\r\n\t//\r\n\r\n\tvar _vertexShaderPrecisionHighpFloat = _gl.getShaderPrecisionFormat( _gl.VERTEX_SHADER, _gl.HIGH_FLOAT );\r\n\tvar _vertexShaderPrecisionMediumpFloat = _gl.getShaderPrecisionFormat( _gl.VERTEX_SHADER, _gl.MEDIUM_FLOAT );\r\n\r\n\tvar _fragmentShaderPrecisionHighpFloat = _gl.getShaderPrecisionFormat( _gl.FRAGMENT_SHADER, _gl.HIGH_FLOAT );\r\n\tvar _fragmentShaderPrecisionMediumpFloat = _gl.getShaderPrecisionFormat( _gl.FRAGMENT_SHADER, _gl.MEDIUM_FLOAT );\r\n\r\n\tvar getCompressedTextureFormats = ( function () {\r\n\r\n\t\tvar array;\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tif ( array !== undefined ) {\r\n\r\n\t\t\t\treturn array;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray = [];\r\n\r\n\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) || extensions.get( 'WEBGL_compressed_texture_s3tc' ) ) {\r\n\r\n\t\t\t\tvar formats = _gl.getParameter( _gl.COMPRESSED_TEXTURE_FORMATS );\r\n\r\n\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\r\n\r\n\t\t\t\t\tarray.push( formats[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t};\r\n\r\n\t} )();\r\n\r\n\t// clamp precision to maximum available\r\n\r\n\tvar highpAvailable = _vertexShaderPrecisionHighpFloat.precision > 0 && _fragmentShaderPrecisionHighpFloat.precision > 0;\r\n\tvar mediumpAvailable = _vertexShaderPrecisionMediumpFloat.precision > 0 && _fragmentShaderPrecisionMediumpFloat.precision > 0;\r\n\r\n\tif ( _precision === 'highp' && ! highpAvailable ) {\r\n\r\n\t\tif ( mediumpAvailable ) {\r\n\r\n\t\t\t_precision = 'mediump';\r\n\t\t\tTHREE.warn( 'THREE.WebGLRenderer: highp not supported, using mediump.' );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_precision = 'lowp';\r\n\t\t\tTHREE.warn( 'THREE.WebGLRenderer: highp and mediump not supported, using lowp.' );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tif ( _precision === 'mediump' && ! mediumpAvailable ) {\r\n\r\n\t\t_precision = 'lowp';\r\n\t\tTHREE.warn( 'THREE.WebGLRenderer: mediump not supported, using lowp.' );\r\n\r\n\t}\r\n\r\n\t// Plugins\r\n\r\n\tvar shadowMapPlugin = new THREE.ShadowMapPlugin( this, lights, _webglObjects, _webglObjectsImmediate );\r\n\r\n\tvar spritePlugin = new THREE.SpritePlugin( this, sprites );\r\n\tvar lensFlarePlugin = new THREE.LensFlarePlugin( this, lensFlares );\r\n\r\n\t// API\r\n\r\n\tthis.getContext = function () {\r\n\r\n\t\treturn _gl;\r\n\r\n\t};\r\n\r\n\tthis.forceContextLoss = function () {\r\n\r\n\t\textensions.get( 'WEBGL_lose_context' ).loseContext();\r\n\r\n\t};\r\n\r\n\tthis.supportsVertexTextures = function () {\r\n\r\n\t\treturn _supportsVertexTextures;\r\n\r\n\t};\r\n\r\n\tthis.supportsFloatTextures = function () {\r\n\r\n\t\treturn extensions.get( 'OES_texture_float' );\r\n\r\n\t};\r\n\r\n\tthis.supportsHalfFloatTextures = function () {\r\n\r\n\t\treturn extensions.get( 'OES_texture_half_float' );\r\n\r\n\t};\r\n\r\n\tthis.supportsStandardDerivatives = function () {\r\n\r\n\t\treturn extensions.get( 'OES_standard_derivatives' );\r\n\r\n\t};\r\n\r\n\tthis.supportsCompressedTextureS3TC = function () {\r\n\r\n\t\treturn extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\r\n\t};\r\n\r\n\tthis.supportsCompressedTexturePVRTC = function () {\r\n\r\n\t\treturn extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\r\n\t};\r\n\r\n\tthis.supportsBlendMinMax = function () {\r\n\r\n\t\treturn extensions.get( 'EXT_blend_minmax' );\r\n\r\n\t};\r\n\r\n\tthis.getMaxAnisotropy = ( function () {\r\n\r\n\t\tvar value;\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tif ( value !== undefined ) {\r\n\r\n\t\t\t\treturn value;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\r\n\t\t\tvalue = extension !== null ? _gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT ) : 0;\r\n\r\n\t\t\treturn value;\r\n\r\n\t\t}\r\n\r\n\t} )();\r\n\r\n\tthis.getPrecision = function () {\r\n\r\n\t\treturn _precision;\r\n\r\n\t};\r\n\r\n\tthis.getPixelRatio = function () {\r\n\r\n\t\treturn pixelRatio;\r\n\r\n\t};\r\n\r\n\tthis.setPixelRatio = function ( value ) {\r\n\r\n\t\tpixelRatio = value;\r\n\r\n\t};\r\n\r\n\tthis.setSize = function ( width, height, updateStyle ) {\r\n\r\n\t\t_canvas.width = width * pixelRatio;\r\n\t\t_canvas.height = height * pixelRatio;\r\n\r\n\t\tif ( updateStyle !== false ) {\r\n\r\n\t\t\t_canvas.style.width = width + 'px';\r\n\t\t\t_canvas.style.height = height + 'px';\r\n\r\n\t\t}\r\n\r\n\t\tthis.setViewport( 0, 0, width, height );\r\n\r\n\t};\r\n\r\n\tthis.setViewport = function ( x, y, width, height ) {\r\n\r\n\t\t_viewportX = x * pixelRatio;\r\n\t\t_viewportY = y * pixelRatio;\r\n\r\n\t\t_viewportWidth = width * pixelRatio;\r\n\t\t_viewportHeight = height * pixelRatio;\r\n\r\n\t\t_gl.viewport( _viewportX, _viewportY, _viewportWidth, _viewportHeight );\r\n\r\n\t};\r\n\r\n\tthis.setScissor = function ( x, y, width, height ) {\r\n\r\n\t\t_gl.scissor(\r\n\t\t\tx * pixelRatio,\r\n\t\t\ty * pixelRatio,\r\n\t\t\twidth * pixelRatio,\r\n\t\t\theight * pixelRatio\r\n\t\t);\r\n\r\n\t};\r\n\r\n\tthis.enableScissorTest = function ( enable ) {\r\n\r\n\t\tenable ? _gl.enable( _gl.SCISSOR_TEST ) : _gl.disable( _gl.SCISSOR_TEST );\r\n\r\n\t};\r\n\r\n\t// Clearing\r\n\r\n\tthis.getClearColor = function () {\r\n\r\n\t\treturn _clearColor;\r\n\r\n\t};\r\n\r\n\tthis.setClearColor = function ( color, alpha ) {\r\n\r\n\t\t_clearColor.set( color );\r\n\r\n\t\t_clearAlpha = alpha !== undefined ? alpha : 1;\r\n\r\n\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\r\n\t};\r\n\r\n\tthis.getClearAlpha = function () {\r\n\r\n\t\treturn _clearAlpha;\r\n\r\n\t};\r\n\r\n\tthis.setClearAlpha = function ( alpha ) {\r\n\r\n\t\t_clearAlpha = alpha;\r\n\r\n\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\r\n\t};\r\n\r\n\tthis.clear = function ( color, depth, stencil ) {\r\n\r\n\t\tvar bits = 0;\r\n\r\n\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\r\n\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\r\n\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\r\n\r\n\t\t_gl.clear( bits );\r\n\r\n\t};\r\n\r\n\tthis.clearColor = function () {\r\n\r\n\t\t_gl.clear( _gl.COLOR_BUFFER_BIT );\r\n\r\n\t};\r\n\r\n\tthis.clearDepth = function () {\r\n\r\n\t\t_gl.clear( _gl.DEPTH_BUFFER_BIT );\r\n\r\n\t};\r\n\r\n\tthis.clearStencil = function () {\r\n\r\n\t\t_gl.clear( _gl.STENCIL_BUFFER_BIT );\r\n\r\n\t};\r\n\r\n\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\r\n\r\n\t\tthis.setRenderTarget( renderTarget );\r\n\t\tthis.clear( color, depth, stencil );\r\n\r\n\t};\r\n\r\n\t// Reset\r\n\r\n\tthis.resetGLState = resetGLState;\r\n\r\n\t// Buffer allocation\r\n\r\n\tfunction createParticleBuffers ( geometry ) {\r\n\r\n\t\tgeometry.__webglVertexBuffer = _gl.createBuffer();\r\n\t\tgeometry.__webglColorBuffer = _gl.createBuffer();\r\n\r\n\t\t_this.info.memory.geometries ++;\r\n\r\n\t};\r\n\r\n\tfunction createLineBuffers ( geometry ) {\r\n\r\n\t\tgeometry.__webglVertexBuffer = _gl.createBuffer();\r\n\t\tgeometry.__webglColorBuffer = _gl.createBuffer();\r\n\t\tgeometry.__webglLineDistanceBuffer = _gl.createBuffer();\r\n\r\n\t\t_this.info.memory.geometries ++;\r\n\r\n\t};\r\n\r\n\tfunction createMeshBuffers ( geometryGroup ) {\r\n\r\n\t\tgeometryGroup.__webglVertexBuffer = _gl.createBuffer();\r\n\t\tgeometryGroup.__webglNormalBuffer = _gl.createBuffer();\r\n\t\tgeometryGroup.__webglTangentBuffer = _gl.createBuffer();\r\n\t\tgeometryGroup.__webglColorBuffer = _gl.createBuffer();\r\n\t\tgeometryGroup.__webglUVBuffer = _gl.createBuffer();\r\n\t\tgeometryGroup.__webglUV2Buffer = _gl.createBuffer();\r\n\r\n\t\tgeometryGroup.__webglSkinIndicesBuffer = _gl.createBuffer();\r\n\t\tgeometryGroup.__webglSkinWeightsBuffer = _gl.createBuffer();\r\n\r\n\t\tgeometryGroup.__webglFaceBuffer = _gl.createBuffer();\r\n\t\tgeometryGroup.__webglLineBuffer = _gl.createBuffer();\r\n\r\n\t\tvar numMorphTargets = geometryGroup.numMorphTargets;\r\n\r\n\t\tif ( numMorphTargets ) {\r\n\r\n\t\t\tgeometryGroup.__webglMorphTargetsBuffers = [];\r\n\r\n\t\t\tfor ( var m = 0, ml = numMorphTargets; m < ml; m ++ ) {\r\n\r\n\t\t\t\tgeometryGroup.__webglMorphTargetsBuffers.push( _gl.createBuffer() );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar numMorphNormals = geometryGroup.numMorphNormals;\r\n\r\n\t\tif ( numMorphNormals ) {\r\n\r\n\t\t\tgeometryGroup.__webglMorphNormalsBuffers = [];\r\n\r\n\t\t\tfor ( var m = 0, ml = numMorphNormals; m < ml; m ++ ) {\r\n\r\n\t\t\t\tgeometryGroup.__webglMorphNormalsBuffers.push( _gl.createBuffer() );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t_this.info.memory.geometries ++;\r\n\r\n\t};\r\n\r\n\t// Events\r\n\r\n\tvar onObjectRemoved = function ( event ) {\r\n\r\n\t\tvar object = event.target;\r\n\r\n\t\tobject.traverse( function ( child ) {\r\n\r\n\t\t\tchild.removeEventListener( 'remove', onObjectRemoved );\r\n\r\n\t\t\tremoveObject( child );\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\tvar onGeometryDispose = function ( event ) {\r\n\r\n\t\tvar geometry = event.target;\r\n\r\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\r\n\r\n\t\tdeallocateGeometry( geometry );\r\n\r\n\t};\r\n\r\n\tvar onTextureDispose = function ( event ) {\r\n\r\n\t\tvar texture = event.target;\r\n\r\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\tdeallocateTexture( texture );\r\n\r\n\t\t_this.info.memory.textures --;\r\n\r\n\r\n\t};\r\n\r\n\tvar onRenderTargetDispose = function ( event ) {\r\n\r\n\t\tvar renderTarget = event.target;\r\n\r\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\r\n\r\n\t\tdeallocateRenderTarget( renderTarget );\r\n\r\n\t\t_this.info.memory.textures --;\r\n\r\n\t};\r\n\r\n\tvar onMaterialDispose = function ( event ) {\r\n\r\n\t\tvar material = event.target;\r\n\r\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\r\n\r\n\t\tdeallocateMaterial( material );\r\n\r\n\t};\r\n\r\n\t// Buffer deallocation\r\n\r\n\tvar deleteBuffers = function ( geometry ) {\r\n\r\n\t\tvar buffers = [\r\n\t\t\t'__webglVertexBuffer',\r\n\t\t\t'__webglNormalBuffer',\r\n\t\t\t'__webglTangentBuffer',\r\n\t\t\t'__webglColorBuffer',\r\n\t\t\t'__webglUVBuffer',\r\n\t\t\t'__webglUV2Buffer',\r\n\r\n\t\t\t'__webglSkinIndicesBuffer',\r\n\t\t\t'__webglSkinWeightsBuffer',\r\n\r\n\t\t\t'__webglFaceBuffer',\r\n\t\t\t'__webglLineBuffer',\r\n\r\n\t\t\t'__webglLineDistanceBuffer'\r\n\t\t];\r\n\r\n\t\tfor ( var i = 0, l = buffers.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar name = buffers[ i ];\r\n\r\n\t\t\tif ( geometry[ name ] !== undefined ) {\r\n\r\n\t\t\t\t_gl.deleteBuffer( geometry[ name ] );\r\n\r\n\t\t\t\tdelete geometry[ name ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// custom attributes\r\n\r\n\t\tif ( geometry.__webglCustomAttributesList !== undefined ) {\r\n\r\n\t\t\tfor ( var name in geometry.__webglCustomAttributesList ) {\r\n\r\n\t\t\t\t_gl.deleteBuffer( geometry.__webglCustomAttributesList[ name ].buffer );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdelete geometry.__webglCustomAttributesList;\r\n\r\n\t\t}\r\n\r\n\t\t_this.info.memory.geometries --;\r\n\r\n\t};\r\n\r\n\tvar deallocateGeometry = function ( geometry ) {\r\n\r\n\t\tdelete geometry.__webglInit;\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tfor ( var name in geometry.attributes ) {\r\n\r\n\t\t\t\tvar attribute = geometry.attributes[ name ];\r\n\r\n\t\t\t\tif ( attribute.buffer !== undefined ) {\r\n\r\n\t\t\t\t\t_gl.deleteBuffer( attribute.buffer );\r\n\r\n\t\t\t\t\tdelete attribute.buffer;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_this.info.memory.geometries --;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar geometryGroupsList = geometryGroups[ geometry.id ];\r\n\r\n\t\t\tif ( geometryGroupsList !== undefined ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = geometryGroupsList.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tvar geometryGroup = geometryGroupsList[ i ];\r\n\r\n\t\t\t\t\tif ( geometryGroup.numMorphTargets !== undefined ) {\r\n\r\n\t\t\t\t\t\tfor ( var m = 0, ml = geometryGroup.numMorphTargets; m < ml; m ++ ) {\r\n\r\n\t\t\t\t\t\t\t_gl.deleteBuffer( geometryGroup.__webglMorphTargetsBuffers[ m ] );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tdelete geometryGroup.__webglMorphTargetsBuffers;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( geometryGroup.numMorphNormals !== undefined ) {\r\n\r\n\t\t\t\t\t\tfor ( var m = 0, ml = geometryGroup.numMorphNormals; m < ml; m ++ ) {\r\n\r\n\t\t\t\t\t\t\t_gl.deleteBuffer( geometryGroup.__webglMorphNormalsBuffers[ m ] );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tdelete geometryGroup.__webglMorphNormalsBuffers;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdeleteBuffers( geometryGroup );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdelete geometryGroups[ geometry.id ];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tdeleteBuffers( geometry );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// TOFIX: Workaround for deleted geometry being currently bound\r\n\r\n\t\t_currentGeometryProgram = '';\r\n\r\n\t};\r\n\r\n\tvar deallocateTexture = function ( texture ) {\r\n\r\n\t\tif ( texture.image && texture.image.__webglTextureCube ) {\r\n\r\n\t\t\t// cube texture\r\n\r\n\t\t\t_gl.deleteTexture( texture.image.__webglTextureCube );\r\n\r\n\t\t\tdelete texture.image.__webglTextureCube;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// 2D texture\r\n\r\n\t\t\tif ( texture.__webglInit === undefined ) return;\r\n\r\n\t\t\t_gl.deleteTexture( texture.__webglTexture );\r\n\r\n\t\t\tdelete texture.__webglTexture;\r\n\t\t\tdelete texture.__webglInit;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tvar deallocateRenderTarget = function ( renderTarget ) {\r\n\r\n\t\tif ( ! renderTarget || renderTarget.__webglTexture === undefined ) return;\r\n\r\n\t\t_gl.deleteTexture( renderTarget.__webglTexture );\r\n\r\n\t\tdelete renderTarget.__webglTexture;\r\n\r\n\t\tif ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\r\n\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t_gl.deleteFramebuffer( renderTarget.__webglFramebuffer[ i ] );\r\n\t\t\t\t_gl.deleteRenderbuffer( renderTarget.__webglRenderbuffer[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.deleteFramebuffer( renderTarget.__webglFramebuffer );\r\n\t\t\t_gl.deleteRenderbuffer( renderTarget.__webglRenderbuffer );\r\n\r\n\t\t}\r\n\r\n\t\tdelete renderTarget.__webglFramebuffer;\r\n\t\tdelete renderTarget.__webglRenderbuffer;\r\n\r\n\t};\r\n\r\n\tvar deallocateMaterial = function ( material ) {\r\n\r\n\t\tvar program = material.program.program;\r\n\r\n\t\tif ( program === undefined ) return;\r\n\r\n\t\tmaterial.program = undefined;\r\n\r\n\t\t// only deallocate GL program if this was the last use of shared program\r\n\t\t// assumed there is only single copy of any program in the _programs list\r\n\t\t// (that's how it's constructed)\r\n\r\n\t\tvar i, il, programInfo;\r\n\t\tvar deleteProgram = false;\r\n\r\n\t\tfor ( i = 0, il = _programs.length; i < il; i ++ ) {\r\n\r\n\t\t\tprogramInfo = _programs[ i ];\r\n\r\n\t\t\tif ( programInfo.program === program ) {\r\n\r\n\t\t\t\tprogramInfo.usedTimes --;\r\n\r\n\t\t\t\tif ( programInfo.usedTimes === 0 ) {\r\n\r\n\t\t\t\t\tdeleteProgram = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( deleteProgram === true ) {\r\n\r\n\t\t\t// avoid using array.splice, this is costlier than creating new array from scratch\r\n\r\n\t\t\tvar newPrograms = [];\r\n\r\n\t\t\tfor ( i = 0, il = _programs.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tprogramInfo = _programs[ i ];\r\n\r\n\t\t\t\tif ( programInfo.program !== program ) {\r\n\r\n\t\t\t\t\tnewPrograms.push( programInfo );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_programs = newPrograms;\r\n\r\n\t\t\t_gl.deleteProgram( program );\r\n\r\n\t\t\t_this.info.memory.programs --;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// Buffer initialization\r\n\r\n\tfunction initCustomAttributes ( object ) {\r\n\r\n\t\tvar geometry = object.geometry;\r\n\t\tvar material = object.material;\r\n\r\n\t\tvar nvertices = geometry.vertices.length;\r\n\r\n\t\tif ( material.attributes ) {\r\n\r\n\t\t\tif ( geometry.__webglCustomAttributesList === undefined ) {\r\n\r\n\t\t\t\tgeometry.__webglCustomAttributesList = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var name in material.attributes ) {\r\n\r\n\t\t\t\tvar attribute = material.attributes[ name ];\r\n\r\n\t\t\t\tif ( ! attribute.__webglInitialized || attribute.createUniqueBuffers ) {\r\n\r\n\t\t\t\t\tattribute.__webglInitialized = true;\r\n\r\n\t\t\t\t\tvar size = 1;   // \"f\" and \"i\"\r\n\r\n\t\t\t\t\tif ( attribute.type === 'v2' ) size = 2;\r\n\t\t\t\t\telse if ( attribute.type === 'v3' ) size = 3;\r\n\t\t\t\t\telse if ( attribute.type === 'v4' ) size = 4;\r\n\t\t\t\t\telse if ( attribute.type === 'c'  ) size = 3;\r\n\r\n\t\t\t\t\tattribute.size = size;\r\n\r\n\t\t\t\t\tattribute.array = new Float32Array( nvertices * size );\r\n\r\n\t\t\t\t\tattribute.buffer = _gl.createBuffer();\r\n\t\t\t\t\tattribute.buffer.belongsToAttribute = name;\r\n\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.__webglCustomAttributesList.push( attribute );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction initParticleBuffers ( geometry, object ) {\r\n\r\n\t\tvar nvertices = geometry.vertices.length;\r\n\r\n\t\tgeometry.__vertexArray = new Float32Array( nvertices * 3 );\r\n\t\tgeometry.__colorArray = new Float32Array( nvertices * 3 );\r\n\r\n\t\tgeometry.__webglParticleCount = nvertices;\r\n\r\n\t\tinitCustomAttributes( object );\r\n\r\n\t};\r\n\r\n\tfunction initLineBuffers ( geometry, object ) {\r\n\r\n\t\tvar nvertices = geometry.vertices.length;\r\n\r\n\t\tgeometry.__vertexArray = new Float32Array( nvertices * 3 );\r\n\t\tgeometry.__colorArray = new Float32Array( nvertices * 3 );\r\n\t\tgeometry.__lineDistanceArray = new Float32Array( nvertices * 1 );\r\n\r\n\t\tgeometry.__webglLineCount = nvertices;\r\n\r\n\t\tinitCustomAttributes( object );\r\n\r\n\t};\r\n\r\n\tfunction initMeshBuffers ( geometryGroup, object ) {\r\n\r\n\t\tvar geometry = object.geometry,\r\n\t\t\tfaces3 = geometryGroup.faces3,\r\n\r\n\t\t\tnvertices = faces3.length * 3,\r\n\t\t\tntris     = faces3.length * 1,\r\n\t\t\tnlines    = faces3.length * 3,\r\n\r\n\t\t\tmaterial = getBufferMaterial( object, geometryGroup );\r\n\r\n\t\tgeometryGroup.__vertexArray = new Float32Array( nvertices * 3 );\r\n\t\tgeometryGroup.__normalArray = new Float32Array( nvertices * 3 );\r\n\t\tgeometryGroup.__colorArray = new Float32Array( nvertices * 3 );\r\n\t\tgeometryGroup.__uvArray = new Float32Array( nvertices * 2 );\r\n\r\n\t\tif ( geometry.faceVertexUvs.length > 1 ) {\r\n\r\n\t\t\tgeometryGroup.__uv2Array = new Float32Array( nvertices * 2 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.hasTangents ) {\r\n\r\n\t\t\tgeometryGroup.__tangentArray = new Float32Array( nvertices * 4 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.geometry.skinWeights.length && object.geometry.skinIndices.length ) {\r\n\r\n\t\t\tgeometryGroup.__skinIndexArray = new Float32Array( nvertices * 4 );\r\n\t\t\tgeometryGroup.__skinWeightArray = new Float32Array( nvertices * 4 );\r\n\r\n\t\t}\r\n\r\n\t\tvar UintArray = extensions.get( 'OES_element_index_uint' ) !== null && ntris > 21845 ? Uint32Array : Uint16Array; // 65535 / 3\r\n\r\n\t\tgeometryGroup.__typeArray = UintArray;\r\n\t\tgeometryGroup.__faceArray = new UintArray( ntris * 3 );\r\n\t\tgeometryGroup.__lineArray = new UintArray( nlines * 2 );\r\n\r\n\t\tvar numMorphTargets = geometryGroup.numMorphTargets;\r\n\r\n\t\tif ( numMorphTargets ) {\r\n\r\n\t\t\tgeometryGroup.__morphTargetsArrays = [];\r\n\r\n\t\t\tfor ( var m = 0, ml = numMorphTargets; m < ml; m ++ ) {\r\n\r\n\t\t\t\tgeometryGroup.__morphTargetsArrays.push( new Float32Array( nvertices * 3 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar numMorphNormals = geometryGroup.numMorphNormals;\r\n\r\n\t\tif ( numMorphNormals ) {\r\n\r\n\t\t\tgeometryGroup.__morphNormalsArrays = [];\r\n\r\n\t\t\tfor ( var m = 0, ml = numMorphNormals; m < ml; m ++ ) {\r\n\r\n\t\t\t\tgeometryGroup.__morphNormalsArrays.push( new Float32Array( nvertices * 3 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tgeometryGroup.__webglFaceCount = ntris * 3;\r\n\t\tgeometryGroup.__webglLineCount = nlines * 2;\r\n\r\n\r\n\t\t// custom attributes\r\n\r\n\t\tif ( material.attributes ) {\r\n\r\n\t\t\tif ( geometryGroup.__webglCustomAttributesList === undefined ) {\r\n\r\n\t\t\t\tgeometryGroup.__webglCustomAttributesList = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var name in material.attributes ) {\r\n\r\n\t\t\t\t// Do a shallow copy of the attribute object so different geometryGroup chunks use different\r\n\t\t\t\t// attribute buffers which are correctly indexed in the setMeshBuffers function\r\n\r\n\t\t\t\tvar originalAttribute = material.attributes[ name ];\r\n\r\n\t\t\t\tvar attribute = {};\r\n\r\n\t\t\t\tfor ( var property in originalAttribute ) {\r\n\r\n\t\t\t\t\tattribute[ property ] = originalAttribute[ property ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( ! attribute.__webglInitialized || attribute.createUniqueBuffers ) {\r\n\r\n\t\t\t\t\tattribute.__webglInitialized = true;\r\n\r\n\t\t\t\t\tvar size = 1;   // \"f\" and \"i\"\r\n\r\n\t\t\t\t\tif ( attribute.type === 'v2' ) size = 2;\r\n\t\t\t\t\telse if ( attribute.type === 'v3' ) size = 3;\r\n\t\t\t\t\telse if ( attribute.type === 'v4' ) size = 4;\r\n\t\t\t\t\telse if ( attribute.type === 'c'  ) size = 3;\r\n\r\n\t\t\t\t\tattribute.size = size;\r\n\r\n\t\t\t\t\tattribute.array = new Float32Array( nvertices * size );\r\n\r\n\t\t\t\t\tattribute.buffer = _gl.createBuffer();\r\n\t\t\t\t\tattribute.buffer.belongsToAttribute = name;\r\n\r\n\t\t\t\t\toriginalAttribute.needsUpdate = true;\r\n\t\t\t\t\tattribute.__original = originalAttribute;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometryGroup.__webglCustomAttributesList.push( attribute );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tgeometryGroup.__inittedArrays = true;\r\n\r\n\t};\r\n\r\n\tfunction getBufferMaterial( object, geometryGroup ) {\r\n\r\n\t\treturn object.material instanceof THREE.MeshFaceMaterial\r\n\t\t\t ? object.material.materials[ geometryGroup.materialIndex ]\r\n\t\t\t : object.material;\r\n\r\n\t}\r\n\r\n\tfunction materialNeedsFaceNormals ( material ) {\r\n\r\n\t\treturn material instanceof THREE.MeshPhongMaterial === false && material.shading === THREE.FlatShading;\r\n\r\n\t}\r\n\r\n\t// Buffer setting\r\n\r\n\tfunction setParticleBuffers ( geometry, hint, object ) {\r\n\r\n\t\tvar v, c, vertex, offset, color,\r\n\r\n\t\tvertices = geometry.vertices,\r\n\t\tvl = vertices.length,\r\n\r\n\t\tcolors = geometry.colors,\r\n\t\tcl = colors.length,\r\n\r\n\t\tvertexArray = geometry.__vertexArray,\r\n\t\tcolorArray = geometry.__colorArray,\r\n\r\n\t\tdirtyVertices = geometry.verticesNeedUpdate,\r\n\t\tdirtyColors = geometry.colorsNeedUpdate,\r\n\r\n\t\tcustomAttributes = geometry.__webglCustomAttributesList,\r\n\t\ti, il,\r\n\t\tca, cal, value,\r\n\t\tcustomAttribute;\r\n\r\n\t\tif ( dirtyVertices ) {\r\n\r\n\t\t\tfor ( v = 0; v < vl; v ++ ) {\r\n\r\n\t\t\t\tvertex = vertices[ v ];\r\n\r\n\t\t\t\toffset = v * 3;\r\n\r\n\t\t\t\tvertexArray[ offset ]     = vertex.x;\r\n\t\t\t\tvertexArray[ offset + 1 ] = vertex.y;\r\n\t\t\t\tvertexArray[ offset + 2 ] = vertex.z;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometry.__webglVertexBuffer );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, vertexArray, hint );\r\n\r\n\t\t}\r\n\r\n\t\tif ( dirtyColors ) {\r\n\r\n\t\t\tfor ( c = 0; c < cl; c ++ ) {\r\n\r\n\t\t\t\tcolor = colors[ c ];\r\n\r\n\t\t\t\toffset = c * 3;\r\n\r\n\t\t\t\tcolorArray[ offset ]     = color.r;\r\n\t\t\t\tcolorArray[ offset + 1 ] = color.g;\r\n\t\t\t\tcolorArray[ offset + 2 ] = color.b;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometry.__webglColorBuffer );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, colorArray, hint );\r\n\r\n\t\t}\r\n\r\n\t\tif ( customAttributes ) {\r\n\r\n\t\t\tfor ( i = 0, il = customAttributes.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tcustomAttribute = customAttributes[ i ];\r\n\r\n\t\t\t\tif ( customAttribute.needsUpdate && ( customAttribute.boundTo === undefined ||  customAttribute.boundTo === 'vertices' ) ) {\r\n\r\n\t\t\t\t\tcal = customAttribute.value.length;\r\n\r\n\t\t\t\t\toffset = 0;\r\n\r\n\t\t\t\t\tif ( customAttribute.size === 1 ) {\r\n\r\n\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ ca ] = customAttribute.value[ ca ];\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( customAttribute.size === 2 ) {\r\n\r\n\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n\t\t\t\t\t\t\tvalue = customAttribute.value[ ca ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset ]   = value.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset + 1 ] = value.y;\r\n\r\n\t\t\t\t\t\t\toffset += 2;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( customAttribute.size === 3 ) {\r\n\r\n\t\t\t\t\t\tif ( customAttribute.type === 'c' ) {\r\n\r\n\t\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tvalue = customAttribute.value[ ca ];\r\n\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset ]   = value.r;\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 1 ] = value.g;\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 2 ] = value.b;\r\n\r\n\t\t\t\t\t\t\t\toffset += 3;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tvalue = customAttribute.value[ ca ];\r\n\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset ]   = value.x;\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 1 ] = value.y;\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 2 ] = value.z;\r\n\r\n\t\t\t\t\t\t\t\toffset += 3;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( customAttribute.size === 4 ) {\r\n\r\n\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n\t\t\t\t\t\t\tvalue = customAttribute.value[ ca ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset ]      = value.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset + 1  ] = value.y;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset + 2  ] = value.z;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset + 3  ] = value.w;\r\n\r\n\t\t\t\t\t\t\toffset += 4;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, customAttribute.buffer );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, customAttribute.array, hint );\r\n\r\n\t\t\t\tcustomAttribute.needsUpdate = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setLineBuffers ( geometry, hint ) {\r\n\r\n\t\tvar v, c, d, vertex, offset, color,\r\n\r\n\t\tvertices = geometry.vertices,\r\n\t\tcolors = geometry.colors,\r\n\t\tlineDistances = geometry.lineDistances,\r\n\r\n\t\tvl = vertices.length,\r\n\t\tcl = colors.length,\r\n\t\tdl = lineDistances.length,\r\n\r\n\t\tvertexArray = geometry.__vertexArray,\r\n\t\tcolorArray = geometry.__colorArray,\r\n\t\tlineDistanceArray = geometry.__lineDistanceArray,\r\n\r\n\t\tdirtyVertices = geometry.verticesNeedUpdate,\r\n\t\tdirtyColors = geometry.colorsNeedUpdate,\r\n\t\tdirtyLineDistances = geometry.lineDistancesNeedUpdate,\r\n\r\n\t\tcustomAttributes = geometry.__webglCustomAttributesList,\r\n\r\n\t\ti, il,\r\n\t\tca, cal, value,\r\n\t\tcustomAttribute;\r\n\r\n\t\tif ( dirtyVertices ) {\r\n\r\n\t\t\tfor ( v = 0; v < vl; v ++ ) {\r\n\r\n\t\t\t\tvertex = vertices[ v ];\r\n\r\n\t\t\t\toffset = v * 3;\r\n\r\n\t\t\t\tvertexArray[ offset ]     = vertex.x;\r\n\t\t\t\tvertexArray[ offset + 1 ] = vertex.y;\r\n\t\t\t\tvertexArray[ offset + 2 ] = vertex.z;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometry.__webglVertexBuffer );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, vertexArray, hint );\r\n\r\n\t\t}\r\n\r\n\t\tif ( dirtyColors ) {\r\n\r\n\t\t\tfor ( c = 0; c < cl; c ++ ) {\r\n\r\n\t\t\t\tcolor = colors[ c ];\r\n\r\n\t\t\t\toffset = c * 3;\r\n\r\n\t\t\t\tcolorArray[ offset ]     = color.r;\r\n\t\t\t\tcolorArray[ offset + 1 ] = color.g;\r\n\t\t\t\tcolorArray[ offset + 2 ] = color.b;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometry.__webglColorBuffer );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, colorArray, hint );\r\n\r\n\t\t}\r\n\r\n\t\tif ( dirtyLineDistances ) {\r\n\r\n\t\t\tfor ( d = 0; d < dl; d ++ ) {\r\n\r\n\t\t\t\tlineDistanceArray[ d ] = lineDistances[ d ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometry.__webglLineDistanceBuffer );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, lineDistanceArray, hint );\r\n\r\n\t\t}\r\n\r\n\t\tif ( customAttributes ) {\r\n\r\n\t\t\tfor ( i = 0, il = customAttributes.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tcustomAttribute = customAttributes[ i ];\r\n\r\n\t\t\t\tif ( customAttribute.needsUpdate && ( customAttribute.boundTo === undefined || customAttribute.boundTo === 'vertices' ) ) {\r\n\r\n\t\t\t\t\toffset = 0;\r\n\r\n\t\t\t\t\tcal = customAttribute.value.length;\r\n\r\n\t\t\t\t\tif ( customAttribute.size === 1 ) {\r\n\r\n\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ ca ] = customAttribute.value[ ca ];\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( customAttribute.size === 2 ) {\r\n\r\n\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n\t\t\t\t\t\t\tvalue = customAttribute.value[ ca ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset ]   = value.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset + 1 ] = value.y;\r\n\r\n\t\t\t\t\t\t\toffset += 2;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( customAttribute.size === 3 ) {\r\n\r\n\t\t\t\t\t\tif ( customAttribute.type === 'c' ) {\r\n\r\n\t\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tvalue = customAttribute.value[ ca ];\r\n\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset ]   = value.r;\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 1 ] = value.g;\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 2 ] = value.b;\r\n\r\n\t\t\t\t\t\t\t\toffset += 3;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tvalue = customAttribute.value[ ca ];\r\n\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset ]   = value.x;\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 1 ] = value.y;\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 2 ] = value.z;\r\n\r\n\t\t\t\t\t\t\t\toffset += 3;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( customAttribute.size === 4 ) {\r\n\r\n\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n\t\t\t\t\t\t\tvalue = customAttribute.value[ ca ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset ]    = value.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset + 1  ] = value.y;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset + 2  ] = value.z;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset + 3  ] = value.w;\r\n\r\n\t\t\t\t\t\t\toffset += 4;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, customAttribute.buffer );\r\n\t\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, customAttribute.array, hint );\r\n\r\n\t\t\t\t\tcustomAttribute.needsUpdate = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setMeshBuffers( geometryGroup, object, hint, dispose, material ) {\r\n\r\n\t\tif ( ! geometryGroup.__inittedArrays ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar needsFaceNormals = materialNeedsFaceNormals( material );\r\n\r\n\t\tvar f, fl, fi, face,\r\n\t\tvertexNormals, faceNormal,\r\n\t\tvertexColors, faceColor,\r\n\t\tvertexTangents,\r\n\t\tuv, uv2, v1, v2, v3, t1, t2, t3, n1, n2, n3,\r\n\t\tc1, c2, c3,\r\n\t\tsw1, sw2, sw3,\r\n\t\tsi1, si2, si3,\r\n\t\ti, il,\r\n\t\tvn, uvi, uv2i,\r\n\t\tvk, vkl, vka,\r\n\t\tnka, chf, faceVertexNormals,\r\n\r\n\t\tvertexIndex = 0,\r\n\r\n\t\toffset = 0,\r\n\t\toffset_uv = 0,\r\n\t\toffset_uv2 = 0,\r\n\t\toffset_face = 0,\r\n\t\toffset_normal = 0,\r\n\t\toffset_tangent = 0,\r\n\t\toffset_line = 0,\r\n\t\toffset_color = 0,\r\n\t\toffset_skin = 0,\r\n\t\toffset_morphTarget = 0,\r\n\t\toffset_custom = 0,\r\n\r\n\t\tvalue,\r\n\r\n\t\tvertexArray = geometryGroup.__vertexArray,\r\n\t\tuvArray = geometryGroup.__uvArray,\r\n\t\tuv2Array = geometryGroup.__uv2Array,\r\n\t\tnormalArray = geometryGroup.__normalArray,\r\n\t\ttangentArray = geometryGroup.__tangentArray,\r\n\t\tcolorArray = geometryGroup.__colorArray,\r\n\r\n\t\tskinIndexArray = geometryGroup.__skinIndexArray,\r\n\t\tskinWeightArray = geometryGroup.__skinWeightArray,\r\n\r\n\t\tmorphTargetsArrays = geometryGroup.__morphTargetsArrays,\r\n\t\tmorphNormalsArrays = geometryGroup.__morphNormalsArrays,\r\n\r\n\t\tcustomAttributes = geometryGroup.__webglCustomAttributesList,\r\n\t\tcustomAttribute,\r\n\r\n\t\tfaceArray = geometryGroup.__faceArray,\r\n\t\tlineArray = geometryGroup.__lineArray,\r\n\r\n\t\tgeometry = object.geometry, // this is shared for all chunks\r\n\r\n\t\tdirtyVertices = geometry.verticesNeedUpdate,\r\n\t\tdirtyElements = geometry.elementsNeedUpdate,\r\n\t\tdirtyUvs = geometry.uvsNeedUpdate,\r\n\t\tdirtyNormals = geometry.normalsNeedUpdate,\r\n\t\tdirtyTangents = geometry.tangentsNeedUpdate,\r\n\t\tdirtyColors = geometry.colorsNeedUpdate,\r\n\t\tdirtyMorphTargets = geometry.morphTargetsNeedUpdate,\r\n\r\n\t\tvertices = geometry.vertices,\r\n\t\tchunk_faces3 = geometryGroup.faces3,\r\n\t\tobj_faces = geometry.faces,\r\n\r\n\t\tobj_uvs  = geometry.faceVertexUvs[ 0 ],\r\n\t\tobj_uvs2 = geometry.faceVertexUvs[ 1 ],\r\n\r\n\t\tobj_skinIndices = geometry.skinIndices,\r\n\t\tobj_skinWeights = geometry.skinWeights,\r\n\r\n\t\tmorphTargets = geometry.morphTargets,\r\n\t\tmorphNormals = geometry.morphNormals;\r\n\r\n\t\tif ( dirtyVertices ) {\r\n\r\n\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = obj_faces[ chunk_faces3[ f ] ];\r\n\r\n\t\t\t\tv1 = vertices[ face.a ];\r\n\t\t\t\tv2 = vertices[ face.b ];\r\n\t\t\t\tv3 = vertices[ face.c ];\r\n\r\n\t\t\t\tvertexArray[ offset ]     = v1.x;\r\n\t\t\t\tvertexArray[ offset + 1 ] = v1.y;\r\n\t\t\t\tvertexArray[ offset + 2 ] = v1.z;\r\n\r\n\t\t\t\tvertexArray[ offset + 3 ] = v2.x;\r\n\t\t\t\tvertexArray[ offset + 4 ] = v2.y;\r\n\t\t\t\tvertexArray[ offset + 5 ] = v2.z;\r\n\r\n\t\t\t\tvertexArray[ offset + 6 ] = v3.x;\r\n\t\t\t\tvertexArray[ offset + 7 ] = v3.y;\r\n\t\t\t\tvertexArray[ offset + 8 ] = v3.z;\r\n\r\n\t\t\t\toffset += 9;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglVertexBuffer );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, vertexArray, hint );\r\n\r\n\t\t}\r\n\r\n\t\tif ( dirtyMorphTargets ) {\r\n\r\n\t\t\tfor ( vk = 0, vkl = morphTargets.length; vk < vkl; vk ++ ) {\r\n\r\n\t\t\t\toffset_morphTarget = 0;\r\n\r\n\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\tchf = chunk_faces3[ f ];\r\n\t\t\t\t\tface = obj_faces[ chf ];\r\n\r\n\t\t\t\t\t// morph positions\r\n\r\n\t\t\t\t\tv1 = morphTargets[ vk ].vertices[ face.a ];\r\n\t\t\t\t\tv2 = morphTargets[ vk ].vertices[ face.b ];\r\n\t\t\t\t\tv3 = morphTargets[ vk ].vertices[ face.c ];\r\n\r\n\t\t\t\t\tvka = morphTargetsArrays[ vk ];\r\n\r\n\t\t\t\t\tvka[ offset_morphTarget ]     = v1.x;\r\n\t\t\t\t\tvka[ offset_morphTarget + 1 ] = v1.y;\r\n\t\t\t\t\tvka[ offset_morphTarget + 2 ] = v1.z;\r\n\r\n\t\t\t\t\tvka[ offset_morphTarget + 3 ] = v2.x;\r\n\t\t\t\t\tvka[ offset_morphTarget + 4 ] = v2.y;\r\n\t\t\t\t\tvka[ offset_morphTarget + 5 ] = v2.z;\r\n\r\n\t\t\t\t\tvka[ offset_morphTarget + 6 ] = v3.x;\r\n\t\t\t\t\tvka[ offset_morphTarget + 7 ] = v3.y;\r\n\t\t\t\t\tvka[ offset_morphTarget + 8 ] = v3.z;\r\n\r\n\t\t\t\t\t// morph normals\r\n\r\n\t\t\t\t\tif ( material.morphNormals ) {\r\n\r\n\t\t\t\t\t\tif ( needsFaceNormals ) {\r\n\r\n\t\t\t\t\t\t\tn1 = morphNormals[ vk ].faceNormals[ chf ];\r\n\t\t\t\t\t\t\tn2 = n1;\r\n\t\t\t\t\t\t\tn3 = n1;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tfaceVertexNormals = morphNormals[ vk ].vertexNormals[ chf ];\r\n\r\n\t\t\t\t\t\t\tn1 = faceVertexNormals.a;\r\n\t\t\t\t\t\t\tn2 = faceVertexNormals.b;\r\n\t\t\t\t\t\t\tn3 = faceVertexNormals.c;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tnka = morphNormalsArrays[ vk ];\r\n\r\n\t\t\t\t\t\tnka[ offset_morphTarget ]     = n1.x;\r\n\t\t\t\t\t\tnka[ offset_morphTarget + 1 ] = n1.y;\r\n\t\t\t\t\t\tnka[ offset_morphTarget + 2 ] = n1.z;\r\n\r\n\t\t\t\t\t\tnka[ offset_morphTarget + 3 ] = n2.x;\r\n\t\t\t\t\t\tnka[ offset_morphTarget + 4 ] = n2.y;\r\n\t\t\t\t\t\tnka[ offset_morphTarget + 5 ] = n2.z;\r\n\r\n\t\t\t\t\t\tnka[ offset_morphTarget + 6 ] = n3.x;\r\n\t\t\t\t\t\tnka[ offset_morphTarget + 7 ] = n3.y;\r\n\t\t\t\t\t\tnka[ offset_morphTarget + 8 ] = n3.z;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//\r\n\r\n\t\t\t\t\toffset_morphTarget += 9;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphTargetsBuffers[ vk ] );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, morphTargetsArrays[ vk ], hint );\r\n\r\n\t\t\t\tif ( material.morphNormals ) {\r\n\r\n\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphNormalsBuffers[ vk ] );\r\n\t\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, morphNormalsArrays[ vk ], hint );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( obj_skinWeights.length ) {\r\n\r\n\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = obj_faces[ chunk_faces3[ f ] ];\r\n\r\n\t\t\t\t// weights\r\n\r\n\t\t\t\tsw1 = obj_skinWeights[ face.a ];\r\n\t\t\t\tsw2 = obj_skinWeights[ face.b ];\r\n\t\t\t\tsw3 = obj_skinWeights[ face.c ];\r\n\r\n\t\t\t\tskinWeightArray[ offset_skin ]     = sw1.x;\r\n\t\t\t\tskinWeightArray[ offset_skin + 1 ] = sw1.y;\r\n\t\t\t\tskinWeightArray[ offset_skin + 2 ] = sw1.z;\r\n\t\t\t\tskinWeightArray[ offset_skin + 3 ] = sw1.w;\r\n\r\n\t\t\t\tskinWeightArray[ offset_skin + 4 ] = sw2.x;\r\n\t\t\t\tskinWeightArray[ offset_skin + 5 ] = sw2.y;\r\n\t\t\t\tskinWeightArray[ offset_skin + 6 ] = sw2.z;\r\n\t\t\t\tskinWeightArray[ offset_skin + 7 ] = sw2.w;\r\n\r\n\t\t\t\tskinWeightArray[ offset_skin + 8 ]  = sw3.x;\r\n\t\t\t\tskinWeightArray[ offset_skin + 9 ]  = sw3.y;\r\n\t\t\t\tskinWeightArray[ offset_skin + 10 ] = sw3.z;\r\n\t\t\t\tskinWeightArray[ offset_skin + 11 ] = sw3.w;\r\n\r\n\t\t\t\t// indices\r\n\r\n\t\t\t\tsi1 = obj_skinIndices[ face.a ];\r\n\t\t\t\tsi2 = obj_skinIndices[ face.b ];\r\n\t\t\t\tsi3 = obj_skinIndices[ face.c ];\r\n\r\n\t\t\t\tskinIndexArray[ offset_skin ]     = si1.x;\r\n\t\t\t\tskinIndexArray[ offset_skin + 1 ] = si1.y;\r\n\t\t\t\tskinIndexArray[ offset_skin + 2 ] = si1.z;\r\n\t\t\t\tskinIndexArray[ offset_skin + 3 ] = si1.w;\r\n\r\n\t\t\t\tskinIndexArray[ offset_skin + 4 ] = si2.x;\r\n\t\t\t\tskinIndexArray[ offset_skin + 5 ] = si2.y;\r\n\t\t\t\tskinIndexArray[ offset_skin + 6 ] = si2.z;\r\n\t\t\t\tskinIndexArray[ offset_skin + 7 ] = si2.w;\r\n\r\n\t\t\t\tskinIndexArray[ offset_skin + 8 ]  = si3.x;\r\n\t\t\t\tskinIndexArray[ offset_skin + 9 ]  = si3.y;\r\n\t\t\t\tskinIndexArray[ offset_skin + 10 ] = si3.z;\r\n\t\t\t\tskinIndexArray[ offset_skin + 11 ] = si3.w;\r\n\r\n\t\t\t\toffset_skin += 12;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( offset_skin > 0 ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglSkinIndicesBuffer );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, skinIndexArray, hint );\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglSkinWeightsBuffer );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, skinWeightArray, hint );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( dirtyColors ) {\r\n\r\n\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = obj_faces[ chunk_faces3[ f ] ];\r\n\r\n\t\t\t\tvertexColors = face.vertexColors;\r\n\t\t\t\tfaceColor = face.color;\r\n\r\n\t\t\t\tif ( vertexColors.length === 3 && material.vertexColors === THREE.VertexColors ) {\r\n\r\n\t\t\t\t\tc1 = vertexColors[ 0 ];\r\n\t\t\t\t\tc2 = vertexColors[ 1 ];\r\n\t\t\t\t\tc3 = vertexColors[ 2 ];\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tc1 = faceColor;\r\n\t\t\t\t\tc2 = faceColor;\r\n\t\t\t\t\tc3 = faceColor;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcolorArray[ offset_color ]     = c1.r;\r\n\t\t\t\tcolorArray[ offset_color + 1 ] = c1.g;\r\n\t\t\t\tcolorArray[ offset_color + 2 ] = c1.b;\r\n\r\n\t\t\t\tcolorArray[ offset_color + 3 ] = c2.r;\r\n\t\t\t\tcolorArray[ offset_color + 4 ] = c2.g;\r\n\t\t\t\tcolorArray[ offset_color + 5 ] = c2.b;\r\n\r\n\t\t\t\tcolorArray[ offset_color + 6 ] = c3.r;\r\n\t\t\t\tcolorArray[ offset_color + 7 ] = c3.g;\r\n\t\t\t\tcolorArray[ offset_color + 8 ] = c3.b;\r\n\r\n\t\t\t\toffset_color += 9;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( offset_color > 0 ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglColorBuffer );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, colorArray, hint );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( dirtyTangents && geometry.hasTangents ) {\r\n\r\n\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = obj_faces[ chunk_faces3[ f ] ];\r\n\r\n\t\t\t\tvertexTangents = face.vertexTangents;\r\n\r\n\t\t\t\tt1 = vertexTangents[ 0 ];\r\n\t\t\t\tt2 = vertexTangents[ 1 ];\r\n\t\t\t\tt3 = vertexTangents[ 2 ];\r\n\r\n\t\t\t\ttangentArray[ offset_tangent ]     = t1.x;\r\n\t\t\t\ttangentArray[ offset_tangent + 1 ] = t1.y;\r\n\t\t\t\ttangentArray[ offset_tangent + 2 ] = t1.z;\r\n\t\t\t\ttangentArray[ offset_tangent + 3 ] = t1.w;\r\n\r\n\t\t\t\ttangentArray[ offset_tangent + 4 ] = t2.x;\r\n\t\t\t\ttangentArray[ offset_tangent + 5 ] = t2.y;\r\n\t\t\t\ttangentArray[ offset_tangent + 6 ] = t2.z;\r\n\t\t\t\ttangentArray[ offset_tangent + 7 ] = t2.w;\r\n\r\n\t\t\t\ttangentArray[ offset_tangent + 8 ]  = t3.x;\r\n\t\t\t\ttangentArray[ offset_tangent + 9 ]  = t3.y;\r\n\t\t\t\ttangentArray[ offset_tangent + 10 ] = t3.z;\r\n\t\t\t\ttangentArray[ offset_tangent + 11 ] = t3.w;\r\n\r\n\t\t\t\toffset_tangent += 12;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglTangentBuffer );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, tangentArray, hint );\r\n\r\n\t\t}\r\n\r\n\t\tif ( dirtyNormals ) {\r\n\r\n\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = obj_faces[ chunk_faces3[ f ] ];\r\n\r\n\t\t\t\tvertexNormals = face.vertexNormals;\r\n\t\t\t\tfaceNormal = face.normal;\r\n\r\n\t\t\t\tif ( vertexNormals.length === 3 && needsFaceNormals === false ) {\r\n\r\n\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\t\tvn = vertexNormals[ i ];\r\n\r\n\t\t\t\t\t\tnormalArray[ offset_normal ]     = vn.x;\r\n\t\t\t\t\t\tnormalArray[ offset_normal + 1 ] = vn.y;\r\n\t\t\t\t\t\tnormalArray[ offset_normal + 2 ] = vn.z;\r\n\r\n\t\t\t\t\t\toffset_normal += 3;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\t\tnormalArray[ offset_normal ]     = faceNormal.x;\r\n\t\t\t\t\t\tnormalArray[ offset_normal + 1 ] = faceNormal.y;\r\n\t\t\t\t\t\tnormalArray[ offset_normal + 2 ] = faceNormal.z;\r\n\r\n\t\t\t\t\t\toffset_normal += 3;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglNormalBuffer );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, normalArray, hint );\r\n\r\n\t\t}\r\n\r\n\t\tif ( dirtyUvs && obj_uvs ) {\r\n\r\n\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tfi = chunk_faces3[ f ];\r\n\r\n\t\t\t\tuv = obj_uvs[ fi ];\r\n\r\n\t\t\t\tif ( uv === undefined ) continue;\r\n\r\n\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\tuvi = uv[ i ];\r\n\r\n\t\t\t\t\tuvArray[ offset_uv ]     = uvi.x;\r\n\t\t\t\t\tuvArray[ offset_uv + 1 ] = uvi.y;\r\n\r\n\t\t\t\t\toffset_uv += 2;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( offset_uv > 0 ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglUVBuffer );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, uvArray, hint );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( dirtyUvs && obj_uvs2 ) {\r\n\r\n\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tfi = chunk_faces3[ f ];\r\n\r\n\t\t\t\tuv2 = obj_uvs2[ fi ];\r\n\r\n\t\t\t\tif ( uv2 === undefined ) continue;\r\n\r\n\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\tuv2i = uv2[ i ];\r\n\r\n\t\t\t\t\tuv2Array[ offset_uv2 ]     = uv2i.x;\r\n\t\t\t\t\tuv2Array[ offset_uv2 + 1 ] = uv2i.y;\r\n\r\n\t\t\t\t\toffset_uv2 += 2;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( offset_uv2 > 0 ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglUV2Buffer );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, uv2Array, hint );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( dirtyElements ) {\r\n\r\n\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tfaceArray[ offset_face ]   = vertexIndex;\r\n\t\t\t\tfaceArray[ offset_face + 1 ] = vertexIndex + 1;\r\n\t\t\t\tfaceArray[ offset_face + 2 ] = vertexIndex + 2;\r\n\r\n\t\t\t\toffset_face += 3;\r\n\r\n\t\t\t\tlineArray[ offset_line ]     = vertexIndex;\r\n\t\t\t\tlineArray[ offset_line + 1 ] = vertexIndex + 1;\r\n\r\n\t\t\t\tlineArray[ offset_line + 2 ] = vertexIndex;\r\n\t\t\t\tlineArray[ offset_line + 3 ] = vertexIndex + 2;\r\n\r\n\t\t\t\tlineArray[ offset_line + 4 ] = vertexIndex + 1;\r\n\t\t\t\tlineArray[ offset_line + 5 ] = vertexIndex + 2;\r\n\r\n\t\t\t\toffset_line += 6;\r\n\r\n\t\t\t\tvertexIndex += 3;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, geometryGroup.__webglFaceBuffer );\r\n\t\t\t_gl.bufferData( _gl.ELEMENT_ARRAY_BUFFER, faceArray, hint );\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, geometryGroup.__webglLineBuffer );\r\n\t\t\t_gl.bufferData( _gl.ELEMENT_ARRAY_BUFFER, lineArray, hint );\r\n\r\n\t\t}\r\n\r\n\t\tif ( customAttributes ) {\r\n\r\n\t\t\tfor ( i = 0, il = customAttributes.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tcustomAttribute = customAttributes[ i ];\r\n\r\n\t\t\t\tif ( ! customAttribute.__original.needsUpdate ) continue;\r\n\r\n\t\t\t\toffset_custom = 0;\r\n\r\n\t\t\t\tif ( customAttribute.size === 1 ) {\r\n\r\n\t\t\t\t\tif ( customAttribute.boundTo === undefined || customAttribute.boundTo === 'vertices' ) {\r\n\r\n\t\t\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\t\t\tface = obj_faces[ chunk_faces3[ f ] ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom ]     = customAttribute.value[ face.a ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 1 ] = customAttribute.value[ face.b ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 2 ] = customAttribute.value[ face.c ];\r\n\r\n\t\t\t\t\t\t\toffset_custom += 3;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( customAttribute.boundTo === 'faces' ) {\r\n\r\n\t\t\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\t\t\tvalue = customAttribute.value[ chunk_faces3[ f ] ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom ]     = value;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 1 ] = value;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 2 ] = value;\r\n\r\n\t\t\t\t\t\t\toffset_custom += 3;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( customAttribute.size === 2 ) {\r\n\r\n\t\t\t\t\tif ( customAttribute.boundTo === undefined || customAttribute.boundTo === 'vertices' ) {\r\n\r\n\t\t\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\t\t\tface = obj_faces[ chunk_faces3[ f ] ];\r\n\r\n\t\t\t\t\t\t\tv1 = customAttribute.value[ face.a ];\r\n\t\t\t\t\t\t\tv2 = customAttribute.value[ face.b ];\r\n\t\t\t\t\t\t\tv3 = customAttribute.value[ face.c ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom ]     = v1.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 1 ] = v1.y;\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 2 ] = v2.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 3 ] = v2.y;\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 4 ] = v3.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 5 ] = v3.y;\r\n\r\n\t\t\t\t\t\t\toffset_custom += 6;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( customAttribute.boundTo === 'faces' ) {\r\n\r\n\t\t\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\t\t\tvalue = customAttribute.value[ chunk_faces3[ f ] ];\r\n\r\n\t\t\t\t\t\t\tv1 = value;\r\n\t\t\t\t\t\t\tv2 = value;\r\n\t\t\t\t\t\t\tv3 = value;\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom ]     = v1.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 1 ] = v1.y;\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 2 ] = v2.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 3 ] = v2.y;\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 4 ] = v3.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 5 ] = v3.y;\r\n\r\n\t\t\t\t\t\t\toffset_custom += 6;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( customAttribute.size === 3 ) {\r\n\r\n\t\t\t\t\tvar pp;\r\n\r\n\t\t\t\t\tif ( customAttribute.type === 'c' ) {\r\n\r\n\t\t\t\t\t\tpp = [ 'r', 'g', 'b' ];\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpp = [ 'x', 'y', 'z' ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( customAttribute.boundTo === undefined || customAttribute.boundTo === 'vertices' ) {\r\n\r\n\t\t\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\t\t\tface = obj_faces[ chunk_faces3[ f ] ];\r\n\r\n\t\t\t\t\t\t\tv1 = customAttribute.value[ face.a ];\r\n\t\t\t\t\t\t\tv2 = customAttribute.value[ face.b ];\r\n\t\t\t\t\t\t\tv3 = customAttribute.value[ face.c ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom ]     = v1[ pp[ 0 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 1 ] = v1[ pp[ 1 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 2 ] = v1[ pp[ 2 ] ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 3 ] = v2[ pp[ 0 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 4 ] = v2[ pp[ 1 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 5 ] = v2[ pp[ 2 ] ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 6 ] = v3[ pp[ 0 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 7 ] = v3[ pp[ 1 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 8 ] = v3[ pp[ 2 ] ];\r\n\r\n\t\t\t\t\t\t\toffset_custom += 9;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( customAttribute.boundTo === 'faces' ) {\r\n\r\n\t\t\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\t\t\tvalue = customAttribute.value[ chunk_faces3[ f ] ];\r\n\r\n\t\t\t\t\t\t\tv1 = value;\r\n\t\t\t\t\t\t\tv2 = value;\r\n\t\t\t\t\t\t\tv3 = value;\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom ]     = v1[ pp[ 0 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 1 ] = v1[ pp[ 1 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 2 ] = v1[ pp[ 2 ] ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 3 ] = v2[ pp[ 0 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 4 ] = v2[ pp[ 1 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 5 ] = v2[ pp[ 2 ] ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 6 ] = v3[ pp[ 0 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 7 ] = v3[ pp[ 1 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 8 ] = v3[ pp[ 2 ] ];\r\n\r\n\t\t\t\t\t\t\toffset_custom += 9;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( customAttribute.boundTo === 'faceVertices' ) {\r\n\r\n\t\t\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\t\t\tvalue = customAttribute.value[ chunk_faces3[ f ] ];\r\n\r\n\t\t\t\t\t\t\tv1 = value[ 0 ];\r\n\t\t\t\t\t\t\tv2 = value[ 1 ];\r\n\t\t\t\t\t\t\tv3 = value[ 2 ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom ]     = v1[ pp[ 0 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 1 ] = v1[ pp[ 1 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 2 ] = v1[ pp[ 2 ] ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 3 ] = v2[ pp[ 0 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 4 ] = v2[ pp[ 1 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 5 ] = v2[ pp[ 2 ] ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 6 ] = v3[ pp[ 0 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 7 ] = v3[ pp[ 1 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 8 ] = v3[ pp[ 2 ] ];\r\n\r\n\t\t\t\t\t\t\toffset_custom += 9;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( customAttribute.size === 4 ) {\r\n\r\n\t\t\t\t\tif ( customAttribute.boundTo === undefined || customAttribute.boundTo === 'vertices' ) {\r\n\r\n\t\t\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\t\t\tface = obj_faces[ chunk_faces3[ f ] ];\r\n\r\n\t\t\t\t\t\t\tv1 = customAttribute.value[ face.a ];\r\n\t\t\t\t\t\t\tv2 = customAttribute.value[ face.b ];\r\n\t\t\t\t\t\t\tv3 = customAttribute.value[ face.c ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom  ]   = v1.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 1  ] = v1.y;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 2  ] = v1.z;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 3  ] = v1.w;\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 4  ] = v2.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 5  ] = v2.y;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 6  ] = v2.z;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 7  ] = v2.w;\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 8  ] = v3.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 9  ] = v3.y;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 10 ] = v3.z;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 11 ] = v3.w;\r\n\r\n\t\t\t\t\t\t\toffset_custom += 12;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( customAttribute.boundTo === 'faces' ) {\r\n\r\n\t\t\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\t\t\tvalue = customAttribute.value[ chunk_faces3[ f ] ];\r\n\r\n\t\t\t\t\t\t\tv1 = value;\r\n\t\t\t\t\t\t\tv2 = value;\r\n\t\t\t\t\t\t\tv3 = value;\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom  ]   = v1.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 1  ] = v1.y;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 2  ] = v1.z;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 3  ] = v1.w;\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 4  ] = v2.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 5  ] = v2.y;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 6  ] = v2.z;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 7  ] = v2.w;\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 8  ] = v3.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 9  ] = v3.y;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 10 ] = v3.z;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 11 ] = v3.w;\r\n\r\n\t\t\t\t\t\t\toffset_custom += 12;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( customAttribute.boundTo === 'faceVertices' ) {\r\n\r\n\t\t\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\t\t\tvalue = customAttribute.value[ chunk_faces3[ f ] ];\r\n\r\n\t\t\t\t\t\t\tv1 = value[ 0 ];\r\n\t\t\t\t\t\t\tv2 = value[ 1 ];\r\n\t\t\t\t\t\t\tv3 = value[ 2 ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom  ]   = v1.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 1  ] = v1.y;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 2  ] = v1.z;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 3  ] = v1.w;\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 4  ] = v2.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 5  ] = v2.y;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 6  ] = v2.z;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 7  ] = v2.w;\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 8  ] = v3.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 9  ] = v3.y;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 10 ] = v3.z;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 11 ] = v3.w;\r\n\r\n\t\t\t\t\t\t\toffset_custom += 12;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, customAttribute.buffer );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, customAttribute.array, hint );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( dispose ) {\r\n\r\n\t\t\tdelete geometryGroup.__inittedArrays;\r\n\t\t\tdelete geometryGroup.__colorArray;\r\n\t\t\tdelete geometryGroup.__normalArray;\r\n\t\t\tdelete geometryGroup.__tangentArray;\r\n\t\t\tdelete geometryGroup.__uvArray;\r\n\t\t\tdelete geometryGroup.__uv2Array;\r\n\t\t\tdelete geometryGroup.__faceArray;\r\n\t\t\tdelete geometryGroup.__vertexArray;\r\n\t\t\tdelete geometryGroup.__lineArray;\r\n\t\t\tdelete geometryGroup.__skinIndexArray;\r\n\t\t\tdelete geometryGroup.__skinWeightArray;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// Buffer rendering\r\n\r\n\tthis.renderBufferImmediate = function ( object, program, material ) {\r\n\r\n\t\tstate.initAttributes();\r\n\r\n\t\tif ( object.hasPositions && ! object.__webglVertexBuffer ) object.__webglVertexBuffer = _gl.createBuffer();\r\n\t\tif ( object.hasNormals && ! object.__webglNormalBuffer ) object.__webglNormalBuffer = _gl.createBuffer();\r\n\t\tif ( object.hasUvs && ! object.__webglUvBuffer ) object.__webglUvBuffer = _gl.createBuffer();\r\n\t\tif ( object.hasColors && ! object.__webglColorBuffer ) object.__webglColorBuffer = _gl.createBuffer();\r\n\r\n\t\tif ( object.hasPositions ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, object.__webglVertexBuffer );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( program.attributes.position );\r\n\r\n\t\t\t_gl.vertexAttribPointer( program.attributes.position, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.hasNormals ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, object.__webglNormalBuffer );\r\n\r\n\t\t\tif ( material instanceof THREE.MeshPhongMaterial === false &&\r\n\t\t\t\t   material.shading === THREE.FlatShading ) {\r\n\r\n\t\t\t\tvar nx, ny, nz,\r\n\t\t\t\t\tnax, nbx, ncx, nay, nby, ncy, naz, nbz, ncz,\r\n\t\t\t\t\tnormalArray,\r\n\t\t\t\t\ti, il = object.count * 3;\r\n\r\n\t\t\t\tfor ( i = 0; i < il; i += 9 ) {\r\n\r\n\t\t\t\t\tnormalArray = object.normalArray;\r\n\r\n\t\t\t\t\tnax  = normalArray[ i ];\r\n\t\t\t\t\tnay  = normalArray[ i + 1 ];\r\n\t\t\t\t\tnaz  = normalArray[ i + 2 ];\r\n\r\n\t\t\t\t\tnbx  = normalArray[ i + 3 ];\r\n\t\t\t\t\tnby  = normalArray[ i + 4 ];\r\n\t\t\t\t\tnbz  = normalArray[ i + 5 ];\r\n\r\n\t\t\t\t\tncx  = normalArray[ i + 6 ];\r\n\t\t\t\t\tncy  = normalArray[ i + 7 ];\r\n\t\t\t\t\tncz  = normalArray[ i + 8 ];\r\n\r\n\t\t\t\t\tnx = ( nax + nbx + ncx ) / 3;\r\n\t\t\t\t\tny = ( nay + nby + ncy ) / 3;\r\n\t\t\t\t\tnz = ( naz + nbz + ncz ) / 3;\r\n\r\n\t\t\t\t\tnormalArray[ i ]   = nx;\r\n\t\t\t\t\tnormalArray[ i + 1 ] = ny;\r\n\t\t\t\t\tnormalArray[ i + 2 ] = nz;\r\n\r\n\t\t\t\t\tnormalArray[ i + 3 ] = nx;\r\n\t\t\t\t\tnormalArray[ i + 4 ] = ny;\r\n\t\t\t\t\tnormalArray[ i + 5 ] = nz;\r\n\r\n\t\t\t\t\tnormalArray[ i + 6 ] = nx;\r\n\t\t\t\t\tnormalArray[ i + 7 ] = ny;\r\n\t\t\t\t\tnormalArray[ i + 8 ] = nz;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( program.attributes.normal );\r\n\r\n\t\t\t_gl.vertexAttribPointer( program.attributes.normal, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.hasUvs && material.map ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, object.__webglUvBuffer );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( program.attributes.uv );\r\n\r\n\t\t\t_gl.vertexAttribPointer( program.attributes.uv, 2, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.hasColors && material.vertexColors !== THREE.NoColors ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, object.__webglColorBuffer );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( program.attributes.color );\r\n\r\n\t\t\t_gl.vertexAttribPointer( program.attributes.color, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\r\n\r\n\t\tobject.count = 0;\r\n\r\n\t};\r\n\r\n\tfunction setupVertexAttributes( material, program, geometry, startIndex ) {\r\n\r\n\t\tvar geometryAttributes = geometry.attributes;\r\n\r\n\t\tvar programAttributes = program.attributes;\r\n\t\tvar programAttributesKeys = program.attributesKeys;\r\n\r\n\t\tfor ( var i = 0, l = programAttributesKeys.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar key = programAttributesKeys[ i ];\r\n\t\t\tvar programAttribute = programAttributes[ key ];\r\n\r\n\t\t\tif ( programAttribute >= 0 ) {\r\n\r\n\t\t\t\tvar geometryAttribute = geometryAttributes[ key ];\r\n\r\n\t\t\t\tif ( geometryAttribute !== undefined ) {\r\n\r\n\t\t\t\t\tvar size = geometryAttribute.itemSize;\r\n\r\n\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryAttribute.buffer );\r\n\r\n\t\t\t\t\tstate.enableAttribute( programAttribute );\r\n\r\n\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, _gl.FLOAT, false, 0, startIndex * size * 4 ); // 4 bytes per Float32\r\n\r\n\t\t\t\t} else if ( material.defaultAttributeValues !== undefined ) {\r\n\r\n\t\t\t\t\tif ( material.defaultAttributeValues[ key ].length === 2 ) {\r\n\r\n\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, material.defaultAttributeValues[ key ] );\r\n\r\n\t\t\t\t\t} else if ( material.defaultAttributeValues[ key ].length === 3 ) {\r\n\r\n\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, material.defaultAttributeValues[ key ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t}\r\n\r\n\tthis.renderBufferDirect = function ( camera, lights, fog, material, geometry, object ) {\r\n\r\n\t\tif ( material.visible === false ) return;\r\n\r\n\t\tupdateObject( object );\r\n\r\n\t\tvar program = setProgram( camera, lights, fog, material, object );\r\n\r\n\t\tvar updateBuffers = false,\r\n\t\t\twireframeBit = material.wireframe ? 1 : 0,\r\n\t\t\tgeometryProgram = 'direct_' + geometry.id + '_' + program.id + '_' + wireframeBit;\r\n\r\n\t\tif ( geometryProgram !== _currentGeometryProgram ) {\r\n\r\n\t\t\t_currentGeometryProgram = geometryProgram;\r\n\t\t\tupdateBuffers = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( updateBuffers ) {\r\n\r\n\t\t\tstate.initAttributes();\r\n\r\n\t\t}\r\n\r\n\t\t// render mesh\r\n\r\n\t\tif ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\tvar mode = material.wireframe === true ? _gl.LINES : _gl.TRIANGLES;\r\n\r\n\t\t\tvar index = geometry.attributes.index;\r\n\r\n\t\t\tif ( index ) {\r\n\r\n\t\t\t\t// indexed triangles\r\n\r\n\t\t\t\tvar type, size;\r\n\r\n\t\t\t\tif ( index.array instanceof Uint32Array && extensions.get( 'OES_element_index_uint' ) ) {\r\n\r\n\t\t\t\t\ttype = _gl.UNSIGNED_INT;\r\n\t\t\t\t\tsize = 4;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttype = _gl.UNSIGNED_SHORT;\r\n\t\t\t\t\tsize = 2;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar offsets = geometry.offsets;\r\n\r\n\t\t\t\tif ( offsets.length === 0 ) {\r\n\r\n\t\t\t\t\tif ( updateBuffers ) {\r\n\r\n\t\t\t\t\t\tsetupVertexAttributes( material, program, geometry, 0 );\r\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, index.buffer );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.drawElements( mode, index.array.length, type, 0 );\r\n\r\n\t\t\t\t\t_this.info.render.calls ++;\r\n\t\t\t\t\t_this.info.render.vertices += index.array.length; // not really true, here vertices can be shared\r\n\t\t\t\t\t_this.info.render.faces += index.array.length / 3;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// if there is more than 1 chunk\r\n\t\t\t\t\t// must set attribute pointers to use new offsets for each chunk\r\n\t\t\t\t\t// even if geometry and materials didn't change\r\n\r\n\t\t\t\t\tupdateBuffers = true;\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = offsets.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvar startIndex = offsets[ i ].index;\r\n\r\n\t\t\t\t\t\tif ( updateBuffers ) {\r\n\r\n\t\t\t\t\t\t\tsetupVertexAttributes( material, program, geometry, startIndex );\r\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, index.buffer );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// render indexed triangles\r\n\r\n\t\t\t\t\t\t_gl.drawElements( mode, offsets[ i ].count, type, offsets[ i ].start * size );\r\n\r\n\t\t\t\t\t\t_this.info.render.calls ++;\r\n\t\t\t\t\t\t_this.info.render.vertices += offsets[ i ].count; // not really true, here vertices can be shared\r\n\t\t\t\t\t\t_this.info.render.faces += offsets[ i ].count / 3;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// non-indexed triangles\r\n\r\n\t\t\t\tif ( updateBuffers ) {\r\n\r\n\t\t\t\t\tsetupVertexAttributes( material, program, geometry, 0 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar position = geometry.attributes[ 'position' ];\r\n\r\n\t\t\t\t// render non-indexed triangles\r\n\r\n\t\t\t\t_gl.drawArrays( mode, 0, position.array.length / position.itemSize );\r\n\r\n\t\t\t\t_this.info.render.calls ++;\r\n\t\t\t\t_this.info.render.vertices += position.array.length / position.itemSize;\r\n\t\t\t\t_this.info.render.faces += position.array.length / ( 3 * position.itemSize );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( object instanceof THREE.PointCloud ) {\r\n\r\n\t\t\t// render particles\r\n\r\n\t\t\tvar mode = _gl.POINTS;\r\n\r\n\t\t\tvar index = geometry.attributes.index;\r\n\r\n\t\t\tif ( index ) {\r\n\r\n\t\t\t\t// indexed points\r\n\r\n\t\t\t\tvar type, size;\r\n\r\n\t\t\t\tif ( index.array instanceof Uint32Array && extensions.get( 'OES_element_index_uint' ) ) {\r\n\r\n\t\t\t\t\ttype = _gl.UNSIGNED_INT;\r\n\t\t\t\t\tsize = 4;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttype = _gl.UNSIGNED_SHORT;\r\n\t\t\t\t\tsize = 2;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar offsets = geometry.offsets;\r\n\r\n\t\t\t\tif ( offsets.length === 0 ) {\r\n\r\n\t\t\t\t\tif ( updateBuffers ) {\r\n\r\n\t\t\t\t\t\tsetupVertexAttributes( material, program, geometry, 0 );\r\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, index.buffer );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.drawElements( mode, index.array.length, type, 0);\r\n\r\n\t\t\t\t\t_this.info.render.calls ++;\r\n\t\t\t\t\t_this.info.render.points += index.array.length;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// if there is more than 1 chunk\r\n\t\t\t\t\t// must set attribute pointers to use new offsets for each chunk\r\n\t\t\t\t\t// even if geometry and materials didn't change\r\n\r\n\t\t\t\t\tif ( offsets.length > 1 ) updateBuffers = true;\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = offsets.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvar startIndex = offsets[ i ].index;\r\n\r\n\t\t\t\t\t\tif ( updateBuffers ) {\r\n\r\n\t\t\t\t\t\t\tsetupVertexAttributes( material, program, geometry, startIndex );\r\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, index.buffer );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// render indexed points\r\n\r\n\t\t\t\t\t\t_gl.drawElements( mode, offsets[ i ].count, type, offsets[ i ].start * size );\r\n\r\n\t\t\t\t\t\t_this.info.render.calls ++;\r\n\t\t\t\t\t\t_this.info.render.points += offsets[ i ].count;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// non-indexed points\r\n\r\n\t\t\t\tif ( updateBuffers ) {\r\n\r\n\t\t\t\t\tsetupVertexAttributes( material, program, geometry, 0 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar position = geometry.attributes.position;\r\n\t\t\t\tvar offsets = geometry.offsets;\r\n\r\n\t\t\t\tif ( offsets.length === 0 ) {\r\n\r\n\t\t\t\t\t_gl.drawArrays( mode, 0, position.array.length / 3 );\r\n\r\n\t\t\t\t\t_this.info.render.calls ++;\r\n\t\t\t\t\t_this.info.render.points += position.array.length / 3;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = offsets.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\t_gl.drawArrays( mode, offsets[ i ].index, offsets[ i ].count );\r\n\r\n\t\t\t\t\t\t_this.info.render.calls ++;\r\n\t\t\t\t\t\t_this.info.render.points += offsets[ i ].count;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( object instanceof THREE.Line ) {\r\n\r\n\t\t\tvar mode = ( object.mode === THREE.LineStrip ) ? _gl.LINE_STRIP : _gl.LINES;\r\n\r\n\t\t\tstate.setLineWidth( material.linewidth * pixelRatio );\r\n\r\n\t\t\tvar index = geometry.attributes.index;\r\n\r\n\t\t\tif ( index ) {\r\n\r\n\t\t\t\t// indexed lines\r\n\r\n\t\t\t\tvar type, size;\r\n\r\n\t\t\t\tif ( index.array instanceof Uint32Array ) {\r\n\r\n\t\t\t\t\ttype = _gl.UNSIGNED_INT;\r\n\t\t\t\t\tsize = 4;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttype = _gl.UNSIGNED_SHORT;\r\n\t\t\t\t\tsize = 2;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar offsets = geometry.offsets;\r\n\r\n\t\t\t\tif ( offsets.length === 0 ) {\r\n\r\n\t\t\t\t\tif ( updateBuffers ) {\r\n\r\n\t\t\t\t\t\tsetupVertexAttributes( material, program, geometry, 0 );\r\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, index.buffer );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.drawElements( mode, index.array.length, type, 0 ); // 2 bytes per Uint16Array\r\n\r\n\t\t\t\t\t_this.info.render.calls ++;\r\n\t\t\t\t\t_this.info.render.vertices += index.array.length; // not really true, here vertices can be shared\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// if there is more than 1 chunk\r\n\t\t\t\t\t// must set attribute pointers to use new offsets for each chunk\r\n\t\t\t\t\t// even if geometry and materials didn't change\r\n\r\n\t\t\t\t\tif ( offsets.length > 1 ) updateBuffers = true;\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = offsets.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvar startIndex = offsets[ i ].index;\r\n\r\n\t\t\t\t\t\tif ( updateBuffers ) {\r\n\r\n\t\t\t\t\t\t\tsetupVertexAttributes( material, program, geometry, startIndex );\r\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, index.buffer );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// render indexed lines\r\n\r\n\t\t\t\t\t\t_gl.drawElements( mode, offsets[ i ].count, type, offsets[ i ].start * size ); // 2 bytes per Uint16Array\r\n\r\n\t\t\t\t\t\t_this.info.render.calls ++;\r\n\t\t\t\t\t\t_this.info.render.vertices += offsets[ i ].count; // not really true, here vertices can be shared\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// non-indexed lines\r\n\r\n\t\t\t\tif ( updateBuffers ) {\r\n\r\n\t\t\t\t\tsetupVertexAttributes( material, program, geometry, 0 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar position = geometry.attributes.position;\r\n\t\t\t\tvar offsets = geometry.offsets;\r\n\r\n\t\t\t\tif ( offsets.length === 0 ) {\r\n\r\n\t\t\t\t\t_gl.drawArrays( mode, 0, position.array.length / 3 );\r\n\r\n\t\t\t\t\t_this.info.render.calls ++;\r\n\t\t\t\t\t_this.info.render.vertices += position.array.length / 3;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = offsets.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\t_gl.drawArrays( mode, offsets[ i ].index, offsets[ i ].count );\r\n\r\n\t\t\t\t\t\t_this.info.render.calls ++;\r\n\t\t\t\t\t\t_this.info.render.vertices += offsets[ i ].count;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.renderBuffer = function ( camera, lights, fog, material, geometryGroup, object ) {\r\n\r\n\t\tif ( material.visible === false ) return;\r\n\r\n\t\tupdateObject( object );\r\n\r\n\t\tvar program = setProgram( camera, lights, fog, material, object );\r\n\r\n\t\tvar attributes = program.attributes;\r\n\r\n\t\tvar updateBuffers = false,\r\n\t\t\twireframeBit = material.wireframe ? 1 : 0,\r\n\t\t\tgeometryProgram = geometryGroup.id + '_' + program.id + '_' + wireframeBit;\r\n\r\n\t\tif ( geometryProgram !== _currentGeometryProgram ) {\r\n\r\n\t\t\t_currentGeometryProgram = geometryProgram;\r\n\t\t\tupdateBuffers = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( updateBuffers ) {\r\n\r\n\t\t\tstate.initAttributes();\r\n\r\n\t\t}\r\n\r\n\t\t// vertices\r\n\r\n\t\tif ( ! material.morphTargets && attributes.position >= 0 ) {\r\n\r\n\t\t\tif ( updateBuffers ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglVertexBuffer );\r\n\r\n\t\t\t\tstate.enableAttribute( attributes.position );\r\n\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( object.morphTargetBase ) {\r\n\r\n\t\t\t\tsetupMorphTargets( material, geometryGroup, object );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\t\tif ( updateBuffers ) {\r\n\r\n\t\t\t// custom attributes\r\n\r\n\t\t\t// Use the per-geometryGroup custom attribute arrays which are setup in initMeshBuffers\r\n\r\n\t\t\tif ( geometryGroup.__webglCustomAttributesList ) {\r\n\r\n\t\t\t\tfor ( var i = 0, il = geometryGroup.__webglCustomAttributesList.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tvar attribute = geometryGroup.__webglCustomAttributesList[ i ];\r\n\r\n\t\t\t\t\tif ( attributes[ attribute.buffer.belongsToAttribute ] >= 0 ) {\r\n\r\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, attribute.buffer );\r\n\r\n\t\t\t\t\t\tstate.enableAttribute( attributes[ attribute.buffer.belongsToAttribute ] );\r\n\r\n\t\t\t\t\t\t_gl.vertexAttribPointer( attributes[ attribute.buffer.belongsToAttribute ], attribute.size, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// colors\r\n\r\n\t\t\tif ( attributes.color >= 0 ) {\r\n\r\n\t\t\t\tif ( object.geometry.colors.length > 0 || object.geometry.faces.length > 0 ) {\r\n\r\n\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglColorBuffer );\r\n\r\n\t\t\t\t\tstate.enableAttribute( attributes.color );\r\n\r\n\t\t\t\t\t_gl.vertexAttribPointer( attributes.color, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t\t} else if ( material.defaultAttributeValues !== undefined ) {\r\n\r\n\r\n\t\t\t\t\t_gl.vertexAttrib3fv( attributes.color, material.defaultAttributeValues.color );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// normals\r\n\r\n\t\t\tif ( attributes.normal >= 0 ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglNormalBuffer );\r\n\r\n\t\t\t\tstate.enableAttribute( attributes.normal );\r\n\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.normal, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// tangents\r\n\r\n\t\t\tif ( attributes.tangent >= 0 ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglTangentBuffer );\r\n\r\n\t\t\t\tstate.enableAttribute( attributes.tangent );\r\n\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.tangent, 4, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// uvs\r\n\r\n\t\t\tif ( attributes.uv >= 0 ) {\r\n\r\n\t\t\t\tif ( object.geometry.faceVertexUvs[ 0 ] ) {\r\n\r\n\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglUVBuffer );\r\n\r\n\t\t\t\t\tstate.enableAttribute( attributes.uv );\r\n\r\n\t\t\t\t\t_gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t\t} else if ( material.defaultAttributeValues !== undefined ) {\r\n\r\n\r\n\t\t\t\t\t_gl.vertexAttrib2fv( attributes.uv, material.defaultAttributeValues.uv );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( attributes.uv2 >= 0 ) {\r\n\r\n\t\t\t\tif ( object.geometry.faceVertexUvs[ 1 ] ) {\r\n\r\n\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglUV2Buffer );\r\n\r\n\t\t\t\t\tstate.enableAttribute( attributes.uv2 );\r\n\r\n\t\t\t\t\t_gl.vertexAttribPointer( attributes.uv2, 2, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t\t} else if ( material.defaultAttributeValues !== undefined ) {\r\n\r\n\r\n\t\t\t\t\t_gl.vertexAttrib2fv( attributes.uv2, material.defaultAttributeValues.uv2 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.skinning &&\r\n\t\t\t\t attributes.skinIndex >= 0 && attributes.skinWeight >= 0 ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglSkinIndicesBuffer );\r\n\r\n\t\t\t\tstate.enableAttribute( attributes.skinIndex );\r\n\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.skinIndex, 4, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglSkinWeightsBuffer );\r\n\r\n\t\t\t\tstate.enableAttribute( attributes.skinWeight );\r\n\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.skinWeight, 4, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// line distances\r\n\r\n\t\t\tif ( attributes.lineDistance >= 0 ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglLineDistanceBuffer );\r\n\r\n\t\t\t\tstate.enableAttribute( attributes.lineDistance );\r\n\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.lineDistance, 1, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t\t// render mesh\r\n\r\n\t\tif ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\tvar type = geometryGroup.__typeArray === Uint32Array ? _gl.UNSIGNED_INT : _gl.UNSIGNED_SHORT;\r\n\r\n\t\t\t// wireframe\r\n\r\n\t\t\tif ( material.wireframe ) {\r\n\r\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * pixelRatio );\r\n\r\n\t\t\t\tif ( updateBuffers ) _gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, geometryGroup.__webglLineBuffer );\r\n\t\t\t\t_gl.drawElements( _gl.LINES, geometryGroup.__webglLineCount, type, 0 );\r\n\r\n\t\t\t// triangles\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( updateBuffers ) _gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, geometryGroup.__webglFaceBuffer );\r\n\t\t\t\t_gl.drawElements( _gl.TRIANGLES, geometryGroup.__webglFaceCount, type, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_this.info.render.calls ++;\r\n\t\t\t_this.info.render.vertices += geometryGroup.__webglFaceCount;\r\n\t\t\t_this.info.render.faces += geometryGroup.__webglFaceCount / 3;\r\n\r\n\t\t// render lines\r\n\r\n\t\t} else if ( object instanceof THREE.Line ) {\r\n\r\n\t\t\tvar mode = ( object.mode === THREE.LineStrip ) ? _gl.LINE_STRIP : _gl.LINES;\r\n\r\n\t\t\tstate.setLineWidth( material.linewidth * pixelRatio );\r\n\r\n\t\t\t_gl.drawArrays( mode, 0, geometryGroup.__webglLineCount );\r\n\r\n\t\t\t_this.info.render.calls ++;\r\n\r\n\t\t// render particles\r\n\r\n\t\t} else if ( object instanceof THREE.PointCloud ) {\r\n\r\n\t\t\t_gl.drawArrays( _gl.POINTS, 0, geometryGroup.__webglParticleCount );\r\n\r\n\t\t\t_this.info.render.calls ++;\r\n\t\t\t_this.info.render.points += geometryGroup.__webglParticleCount;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction setupMorphTargets ( material, geometryGroup, object ) {\r\n\r\n\t\t// set base\r\n\r\n\t\tvar attributes = material.program.attributes;\r\n\r\n\t\tif ( object.morphTargetBase !== - 1 && attributes.position >= 0 ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphTargetsBuffers[ object.morphTargetBase ] );\r\n\r\n\t\t\tstate.enableAttribute( attributes.position );\r\n\r\n\t\t\t_gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t} else if ( attributes.position >= 0 ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglVertexBuffer );\r\n\r\n\t\t\tstate.enableAttribute( attributes.position );\r\n\r\n\t\t\t_gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.morphTargetForcedOrder.length ) {\r\n\r\n\t\t\t// set forced order\r\n\r\n\t\t\tvar m = 0;\r\n\t\t\tvar order = object.morphTargetForcedOrder;\r\n\t\t\tvar influences = object.morphTargetInfluences;\r\n\r\n\t\t\tvar attribute;\r\n\r\n\t\t\twhile ( m < material.numSupportedMorphTargets && m < order.length ) {\r\n\r\n\t\t\t\tattribute = attributes[ 'morphTarget' + m ];\r\n\r\n\t\t\t\tif ( attribute >= 0 ) {\r\n\r\n\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphTargetsBuffers[ order[ m ] ] );\r\n\r\n\t\t\t\t\tstate.enableAttribute( attribute );\r\n\r\n\t\t\t\t\t_gl.vertexAttribPointer( attribute, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tattribute = attributes[ 'morphNormal' + m ];\r\n\r\n\t\t\t\tif ( attribute >= 0 && material.morphNormals ) {\r\n\r\n\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphNormalsBuffers[ order[ m ] ] );\r\n\r\n\t\t\t\t\tstate.enableAttribute( attribute );\r\n\r\n\t\t\t\t\t_gl.vertexAttribPointer( attribute, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tobject.__webglMorphTargetInfluences[ m ] = influences[ order[ m ] ];\r\n\r\n\t\t\t\tm ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// find the most influencing\r\n\r\n\t\t\tvar activeInfluenceIndices = [];\r\n\t\t\tvar influences = object.morphTargetInfluences;\r\n\t\t\tvar morphTargets = object.geometry.morphTargets;\r\n\r\n\t\t\tif ( influences.length > morphTargets.length ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Influences array is bigger than morphTargets array.' );\r\n\t\t\t\tinfluences.length = morphTargets.length;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0, il = influences.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar influence = influences[ i ];\r\n\r\n\t\t\t\tactiveInfluenceIndices.push( [ influence, i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( activeInfluenceIndices.length > material.numSupportedMorphTargets ) {\r\n\r\n\t\t\t\tactiveInfluenceIndices.sort( numericalSort );\r\n\t\t\t\tactiveInfluenceIndices.length = material.numSupportedMorphTargets;\r\n\r\n\t\t\t} else if ( activeInfluenceIndices.length > material.numSupportedMorphNormals ) {\r\n\r\n\t\t\t\tactiveInfluenceIndices.sort( numericalSort );\r\n\r\n\t\t\t} else if ( activeInfluenceIndices.length === 0 ) {\r\n\r\n\t\t\t\tactiveInfluenceIndices.push( [ 0, 0 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar attribute;\r\n\r\n\t\t\tfor ( var m = 0, ml = material.numSupportedMorphTargets; m < ml; m ++ ) {\r\n\r\n\t\t\t\tif ( activeInfluenceIndices[ m ] ) {\r\n\r\n\t\t\t\t\tvar influenceIndex = activeInfluenceIndices[ m ][ 1 ];\r\n\r\n\t\t\t\t\tattribute = attributes[ 'morphTarget' + m ];\r\n\r\n\t\t\t\t\tif ( attribute >= 0 ) {\r\n\r\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphTargetsBuffers[ influenceIndex ] );\r\n\r\n\t\t\t\t\t\tstate.enableAttribute( attribute );\r\n\r\n\t\t\t\t\t\t_gl.vertexAttribPointer( attribute, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tattribute = attributes[ 'morphNormal' + m ];\r\n\r\n\t\t\t\t\tif ( attribute >= 0 && material.morphNormals ) {\r\n\r\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphNormalsBuffers[ influenceIndex ] );\r\n\r\n\t\t\t\t\t\tstate.enableAttribute( attribute );\r\n\r\n\t\t\t\t\t\t_gl.vertexAttribPointer( attribute, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tobject.__webglMorphTargetInfluences[ m ] = influences[ influenceIndex ];\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t/*\r\n\t\t\t\t\t_gl.vertexAttribPointer( attributes[ \"morphTarget\" + m ], 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t\t\tif ( material.morphNormals ) {\r\n\r\n\t\t\t\t\t\t_gl.vertexAttribPointer( attributes[ \"morphNormal\" + m ], 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\t*/\r\n\r\n\t\t\t\t\tobject.__webglMorphTargetInfluences[ m ] = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// load updated influences uniform\r\n\r\n\t\tif ( material.program.uniforms.morphTargetInfluences !== null ) {\r\n\r\n\t\t\t_gl.uniform1fv( material.program.uniforms.morphTargetInfluences, object.__webglMorphTargetInfluences );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Sorting\r\n\r\n\tfunction painterSortStable ( a, b ) {\r\n\r\n\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\r\n\r\n\t\t\treturn a.object.renderOrder - b.object.renderOrder;\r\n\r\n\t\t} else if ( a.material.id !== b.material.id ) {\r\n\r\n\t\t\treturn a.material.id - b.material.id;\r\n\r\n\t\t} else if ( a.z !== b.z ) {\r\n\r\n\t\t\treturn a.z - b.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn a.id - b.id;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction reversePainterSortStable ( a, b ) {\r\n\r\n\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\r\n\r\n\t\t\treturn a.object.renderOrder - b.object.renderOrder;\r\n\r\n\t\t} if ( a.z !== b.z ) {\r\n\r\n\t\t\treturn b.z - a.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn a.id - b.id;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction numericalSort ( a, b ) {\r\n\r\n\t\treturn b[ 0 ] - a[ 0 ];\r\n\r\n\t}\r\n\r\n\t// Rendering\r\n\r\n\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\r\n\r\n\t\tif ( camera instanceof THREE.Camera === false ) {\r\n\r\n\t\t\tTHREE.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar fog = scene.fog;\r\n\r\n\t\t// reset caching for this frame\r\n\r\n\t\t_currentGeometryProgram = '';\r\n\t\t_currentMaterialId = - 1;\r\n\t\t_currentCamera = null;\r\n\t\t_lightsNeedUpdate = true;\r\n\r\n\t\t// update scene graph\r\n\r\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\r\n\t\t// update camera matrices and frustum\r\n\r\n\t\tif ( camera.parent === undefined ) camera.updateMatrixWorld();\r\n\r\n\t\t// update Skeleton objects\r\n\r\n\t\tscene.traverse( function ( object ) {\r\n\r\n\t\t\tif ( object instanceof THREE.SkinnedMesh ) {\r\n\r\n\t\t\t\tobject.skeleton.update();\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\r\n\r\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\r\n\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\r\n\t\tlights.length = 0;\r\n\t\topaqueObjects.length = 0;\r\n\t\ttransparentObjects.length = 0;\r\n\r\n\t\tsprites.length = 0;\r\n\t\tlensFlares.length = 0;\r\n\r\n\t\tprojectObject( scene );\r\n\r\n\t\tif ( _this.sortObjects === true ) {\r\n\r\n\t\t\topaqueObjects.sort( painterSortStable );\r\n\t\t\ttransparentObjects.sort( reversePainterSortStable );\r\n\r\n\t\t}\r\n\r\n\t\t// custom render plugins (pre pass)\r\n\r\n\t\tshadowMapPlugin.render( scene, camera );\r\n\r\n\t\t//\r\n\r\n\t\t_this.info.render.calls = 0;\r\n\t\t_this.info.render.vertices = 0;\r\n\t\t_this.info.render.faces = 0;\r\n\t\t_this.info.render.points = 0;\r\n\r\n\t\tthis.setRenderTarget( renderTarget );\r\n\r\n\t\tif ( this.autoClear || forceClear ) {\r\n\r\n\t\t\tthis.clear( this.autoClearColor, this.autoClearDepth, this.autoClearStencil );\r\n\r\n\t\t}\r\n\r\n\t\t// set matrices for immediate objects\r\n\r\n\t\tfor ( var i = 0, il = _webglObjectsImmediate.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar webglObject = _webglObjectsImmediate[ i ];\r\n\t\t\tvar object = webglObject.object;\r\n\r\n\t\t\tif ( object.visible ) {\r\n\r\n\t\t\t\tsetupMatrices( object, camera );\r\n\r\n\t\t\t\tunrollImmediateBufferMaterial( webglObject );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( scene.overrideMaterial ) {\r\n\r\n\t\t\tvar overrideMaterial = scene.overrideMaterial;\r\n\r\n\t\t\tsetMaterial( overrideMaterial );\r\n\r\n\t\t\trenderObjects( opaqueObjects, camera, lights, fog, overrideMaterial );\r\n\t\t\trenderObjects( transparentObjects, camera, lights, fog, overrideMaterial );\r\n\t\t\trenderObjectsImmediate( _webglObjectsImmediate, '', camera, lights, fog, overrideMaterial );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// opaque pass (front-to-back order)\r\n\r\n\t\t\tstate.setBlending( THREE.NoBlending );\r\n\r\n\t\t\trenderObjects( opaqueObjects, camera, lights, fog, null );\r\n\t\t\trenderObjectsImmediate( _webglObjectsImmediate, 'opaque', camera, lights, fog, null );\r\n\r\n\t\t\t// transparent pass (back-to-front order)\r\n\r\n\t\t\trenderObjects( transparentObjects, camera, lights, fog, null );\r\n\t\t\trenderObjectsImmediate( _webglObjectsImmediate, 'transparent', camera, lights, fog, null );\r\n\r\n\t\t}\r\n\r\n\t\t// custom render plugins (post pass)\r\n\r\n\t\tspritePlugin.render( scene, camera );\r\n\t\tlensFlarePlugin.render( scene, camera, _currentWidth, _currentHeight );\r\n\r\n\t\t// Generate mipmap if we're using any kind of mipmap filtering\r\n\r\n\t\tif ( renderTarget && renderTarget.generateMipmaps && renderTarget.minFilter !== THREE.NearestFilter && renderTarget.minFilter !== THREE.LinearFilter ) {\r\n\r\n\t\t\tupdateRenderTargetMipmap( renderTarget );\r\n\r\n\t\t}\r\n\r\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\r\n\r\n\t\tstate.setDepthTest( true );\r\n\t\tstate.setDepthWrite( true );\r\n\t\tstate.setColorWrite( true );\r\n\r\n\t\t// _gl.finish();\r\n\r\n\t};\r\n\r\n\tfunction projectObject( object ) {\r\n\r\n\t\tif ( object.visible === false ) return;\r\n\r\n\t\tif ( object instanceof THREE.Scene || object instanceof THREE.Group ) {\r\n\r\n\t\t\t// skip\r\n\r\n\t\t} else {\r\n\r\n\t\t\tinitObject( object );\r\n\r\n\t\t\tif ( object instanceof THREE.Light ) {\r\n\r\n\t\t\t\tlights.push( object );\r\n\r\n\t\t\t} else if ( object instanceof THREE.Sprite ) {\r\n\r\n\t\t\t\tsprites.push( object );\r\n\r\n\t\t\t} else if ( object instanceof THREE.LensFlare ) {\r\n\r\n\t\t\t\tlensFlares.push( object );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar webglObjects = _webglObjects[ object.id ];\r\n\r\n\t\t\t\tif ( webglObjects && ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) ) {\r\n\r\n\t\t\t\t\tfor ( var i = 0, l = webglObjects.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\tvar webglObject = webglObjects[ i ];\r\n\r\n\t\t\t\t\t\tunrollBufferMaterial( webglObject );\r\n\r\n\t\t\t\t\t\twebglObject.render = true;\r\n\r\n\t\t\t\t\t\tif ( _this.sortObjects === true ) {\r\n\r\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\r\n\t\t\t\t\t\t\t_vector3.applyProjection( _projScreenMatrix );\r\n\r\n\t\t\t\t\t\t\twebglObject.z = _vector3.z;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, l = object.children.length; i < l; i ++ ) {\r\n\r\n\t\t\tprojectObject( object.children[ i ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction renderObjects( renderList, camera, lights, fog, overrideMaterial ) {\r\n\r\n\t\tvar material;\r\n\r\n\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar webglObject = renderList[ i ];\r\n\r\n\t\t\tvar object = webglObject.object;\r\n\t\t\tvar buffer = webglObject.buffer;\r\n\r\n\t\t\tsetupMatrices( object, camera );\r\n\r\n\t\t\tif ( overrideMaterial ) {\r\n\r\n\t\t\t\tmaterial = overrideMaterial;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmaterial = webglObject.material;\r\n\r\n\t\t\t\tif ( ! material ) continue;\r\n\r\n\t\t\t\tsetMaterial( material );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_this.setMaterialFaces( material );\r\n\r\n\t\t\tif ( buffer instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\t\t_this.renderBufferDirect( camera, lights, fog, material, buffer, object );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_this.renderBuffer( camera, lights, fog, material, buffer, object );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction renderObjectsImmediate ( renderList, materialType, camera, lights, fog, overrideMaterial ) {\r\n\r\n\t\tvar material;\r\n\r\n\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar webglObject = renderList[ i ];\r\n\t\t\tvar object = webglObject.object;\r\n\r\n\t\t\tif ( object.visible ) {\r\n\r\n\t\t\t\tif ( overrideMaterial ) {\r\n\r\n\t\t\t\t\tmaterial = overrideMaterial;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tmaterial = webglObject[ materialType ];\r\n\r\n\t\t\t\t\tif ( ! material ) continue;\r\n\r\n\t\t\t\t\tsetMaterial( material );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_this.renderImmediateObject( camera, lights, fog, material, object );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.renderImmediateObject = function ( camera, lights, fog, material, object ) {\r\n\r\n\t\tvar program = setProgram( camera, lights, fog, material, object );\r\n\r\n\t\t_currentGeometryProgram = '';\r\n\r\n\t\t_this.setMaterialFaces( material );\r\n\r\n\t\tif ( object.immediateRenderCallback ) {\r\n\r\n\t\t\tobject.immediateRenderCallback( program, _gl, _frustum );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tobject.render( function ( object ) { _this.renderBufferImmediate( object, program, material ); } );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction unrollImmediateBufferMaterial ( globject ) {\r\n\r\n\t\tvar object = globject.object,\r\n\t\t\tmaterial = object.material;\r\n\r\n\t\tif ( material.transparent ) {\r\n\r\n\t\t\tglobject.transparent = material;\r\n\t\t\tglobject.opaque = null;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tglobject.opaque = material;\r\n\t\t\tglobject.transparent = null;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction unrollBufferMaterial ( globject ) {\r\n\r\n\t\tvar object = globject.object;\r\n\t\tvar buffer = globject.buffer;\r\n\r\n\t\tvar geometry = object.geometry;\r\n\t\tvar material = object.material;\r\n\r\n\t\tif ( material instanceof THREE.MeshFaceMaterial ) {\r\n\r\n\t\t\tvar materialIndex = geometry instanceof THREE.BufferGeometry ? 0 : buffer.materialIndex;\r\n\r\n\t\t\tmaterial = material.materials[ materialIndex ];\r\n\r\n\t\t\tglobject.material = material;\r\n\r\n\t\t\tif ( material.transparent ) {\r\n\r\n\t\t\t\ttransparentObjects.push( globject );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\topaqueObjects.push( globject );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( material ) {\r\n\r\n\t\t\tglobject.material = material;\r\n\r\n\t\t\tif ( material.transparent ) {\r\n\r\n\t\t\t\ttransparentObjects.push( globject );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\topaqueObjects.push( globject );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction initObject( object ) {\r\n\r\n\t\tif ( object.__webglInit === undefined ) {\r\n\r\n\t\t\tobject.__webglInit = true;\r\n\t\t\tobject._modelViewMatrix = new THREE.Matrix4();\r\n\t\t\tobject._normalMatrix = new THREE.Matrix3();\r\n\r\n\t\t\tobject.addEventListener( 'removed', onObjectRemoved );\r\n\r\n\t\t}\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tif ( geometry === undefined ) {\r\n\r\n\t\t\t// ImmediateRenderObject\r\n\r\n\t\t} else if ( geometry.__webglInit === undefined ) {\r\n\r\n\t\t\tgeometry.__webglInit = true;\r\n\t\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\r\n\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\t\t_this.info.memory.geometries ++;\r\n\r\n\t\t\t} else if ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\t\tinitGeometryGroups( object, geometry );\r\n\r\n\t\t\t} else if ( object instanceof THREE.Line ) {\r\n\r\n\t\t\t\tif ( geometry.__webglVertexBuffer === undefined ) {\r\n\r\n\t\t\t\t\tcreateLineBuffers( geometry );\r\n\t\t\t\t\tinitLineBuffers( geometry, object );\r\n\r\n\t\t\t\t\tgeometry.verticesNeedUpdate = true;\r\n\t\t\t\t\tgeometry.colorsNeedUpdate = true;\r\n\t\t\t\t\tgeometry.lineDistancesNeedUpdate = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( object instanceof THREE.PointCloud ) {\r\n\r\n\t\t\t\tif ( geometry.__webglVertexBuffer === undefined ) {\r\n\r\n\t\t\t\t\tcreateParticleBuffers( geometry );\r\n\t\t\t\t\tinitParticleBuffers( geometry, object );\r\n\r\n\t\t\t\t\tgeometry.verticesNeedUpdate = true;\r\n\t\t\t\t\tgeometry.colorsNeedUpdate = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.__webglActive === undefined) {\r\n\r\n\t\t\tobject.__webglActive = true;\r\n\r\n\t\t\tif ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\t\t\taddBuffer( _webglObjects, geometry, object );\r\n\r\n\t\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\t\t\tvar geometryGroupsList = geometryGroups[ geometry.id ];\r\n\r\n\t\t\t\t\tfor ( var i = 0,l = geometryGroupsList.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\taddBuffer( _webglObjects, geometryGroupsList[ i ], object );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( object instanceof THREE.Line || object instanceof THREE.PointCloud ) {\r\n\r\n\t\t\t\taddBuffer( _webglObjects, geometry, object );\r\n\r\n\t\t\t} else if ( object instanceof THREE.ImmediateRenderObject || object.immediateRenderCallback ) {\r\n\r\n\t\t\t\taddBufferImmediate( _webglObjectsImmediate, object );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Geometry splitting\r\n\r\n\tvar geometryGroups = {};\r\n\tvar geometryGroupCounter = 0;\r\n\r\n\tfunction makeGroups( geometry, usesFaceMaterial ) {\r\n\r\n\t\tvar maxVerticesInGroup = extensions.get( 'OES_element_index_uint' ) ? 4294967296 : 65535;\r\n\r\n\t\tvar groupHash, hash_map = {};\r\n\r\n\t\tvar numMorphTargets = geometry.morphTargets.length;\r\n\t\tvar numMorphNormals = geometry.morphNormals.length;\r\n\r\n\t\tvar group;\r\n\t\tvar groups = {};\r\n\t\tvar groupsList = [];\r\n\r\n\t\tfor ( var f = 0, fl = geometry.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tvar face = geometry.faces[ f ];\r\n\t\t\tvar materialIndex = usesFaceMaterial ? face.materialIndex : 0;\r\n\r\n\t\t\tif ( ! ( materialIndex in hash_map ) ) {\r\n\r\n\t\t\t\thash_map[ materialIndex ] = { hash: materialIndex, counter: 0 };\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgroupHash = hash_map[ materialIndex ].hash + '_' + hash_map[ materialIndex ].counter;\r\n\r\n\t\t\tif ( ! ( groupHash in groups ) ) {\r\n\r\n\t\t\t\tgroup = {\r\n\t\t\t\t\tid: geometryGroupCounter ++,\r\n\t\t\t\t\tfaces3: [],\r\n\t\t\t\t\tmaterialIndex: materialIndex,\r\n\t\t\t\t\tvertices: 0,\r\n\t\t\t\t\tnumMorphTargets: numMorphTargets,\r\n\t\t\t\t\tnumMorphNormals: numMorphNormals\r\n\t\t\t\t};\r\n\r\n\t\t\t\tgroups[ groupHash ] = group;\r\n\t\t\t\tgroupsList.push( group );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( groups[ groupHash ].vertices + 3 > maxVerticesInGroup ) {\r\n\r\n\t\t\t\thash_map[ materialIndex ].counter += 1;\r\n\t\t\t\tgroupHash = hash_map[ materialIndex ].hash + '_' + hash_map[ materialIndex ].counter;\r\n\r\n\t\t\t\tif ( ! ( groupHash in groups ) ) {\r\n\r\n\t\t\t\t\tgroup = {\r\n\t\t\t\t\t\tid: geometryGroupCounter ++,\r\n\t\t\t\t\t\tfaces3: [],\r\n\t\t\t\t\t\tmaterialIndex: materialIndex,\r\n\t\t\t\t\t\tvertices: 0,\r\n\t\t\t\t\t\tnumMorphTargets: numMorphTargets,\r\n\t\t\t\t\t\tnumMorphNormals: numMorphNormals\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tgroups[ groupHash ] = group;\r\n\t\t\t\t\tgroupsList.push( group );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgroups[ groupHash ].faces3.push( f );\r\n\t\t\tgroups[ groupHash ].vertices += 3;\r\n\r\n\t\t}\r\n\r\n\t\treturn groupsList;\r\n\r\n\t}\r\n\r\n\tfunction initGeometryGroups( object, geometry ) {\r\n\r\n\t\tvar material = object.material, addBuffers = false;\r\n\r\n\t\tif ( geometryGroups[ geometry.id ] === undefined || geometry.groupsNeedUpdate === true ) {\r\n\r\n\t\t\tdelete _webglObjects[ object.id ];\r\n\r\n\t\t\tgeometryGroups[ geometry.id ] = makeGroups( geometry, material instanceof THREE.MeshFaceMaterial );\r\n\r\n\t\t\tgeometry.groupsNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tvar geometryGroupsList = geometryGroups[ geometry.id ];\r\n\r\n\t\t// create separate VBOs per geometry chunk\r\n\r\n\t\tfor ( var i = 0, il = geometryGroupsList.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar geometryGroup = geometryGroupsList[ i ];\r\n\r\n\t\t\t// initialise VBO on the first access\r\n\r\n\t\t\tif ( geometryGroup.__webglVertexBuffer === undefined ) {\r\n\r\n\t\t\t\tcreateMeshBuffers( geometryGroup );\r\n\t\t\t\tinitMeshBuffers( geometryGroup, object );\r\n\r\n\t\t\t\tgeometry.verticesNeedUpdate = true;\r\n\t\t\t\tgeometry.morphTargetsNeedUpdate = true;\r\n\t\t\t\tgeometry.elementsNeedUpdate = true;\r\n\t\t\t\tgeometry.uvsNeedUpdate = true;\r\n\t\t\t\tgeometry.normalsNeedUpdate = true;\r\n\t\t\t\tgeometry.tangentsNeedUpdate = true;\r\n\t\t\t\tgeometry.colorsNeedUpdate = true;\r\n\r\n\t\t\t\taddBuffers = true;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\taddBuffers = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( addBuffers || object.__webglActive === undefined ) {\r\n\r\n\t\t\t\taddBuffer( _webglObjects, geometryGroup, object );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tobject.__webglActive = true;\r\n\r\n\t}\r\n\r\n\tfunction addBuffer( objlist, buffer, object ) {\r\n\r\n\t\tvar id = object.id;\r\n\t\tobjlist[id] = objlist[id] || [];\r\n\t\tobjlist[id].push(\r\n\t\t\t{\r\n\t\t\t\tid: id,\r\n\t\t\t\tbuffer: buffer,\r\n\t\t\t\tobject: object,\r\n\t\t\t\tmaterial: null,\r\n\t\t\t\tz: 0\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t};\r\n\r\n\tfunction addBufferImmediate( objlist, object ) {\r\n\r\n\t\tobjlist.push(\r\n\t\t\t{\r\n\t\t\t\tid: null,\r\n\t\t\t\tobject: object,\r\n\t\t\t\topaque: null,\r\n\t\t\t\ttransparent: null,\r\n\t\t\t\tz: 0\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t};\r\n\r\n\t// Objects updates\r\n\r\n\tfunction updateObject( object ) {\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar attributes = geometry.attributes;\r\n\t\t\tvar attributesKeys = geometry.attributesKeys;\r\n\r\n\t\t\tfor ( var i = 0, l = attributesKeys.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar key = attributesKeys[ i ];\r\n\t\t\t\tvar attribute = attributes[ key ];\r\n\t\t\t\tvar bufferType = ( key === 'index' ) ? _gl.ELEMENT_ARRAY_BUFFER : _gl.ARRAY_BUFFER;\r\n\r\n\t\t\t\tif ( attribute.buffer === undefined ) {\r\n\r\n\t\t\t\t\tattribute.buffer = _gl.createBuffer();\r\n\t\t\t\t\t_gl.bindBuffer( bufferType, attribute.buffer );\r\n\t\t\t\t\t_gl.bufferData( bufferType, attribute.array, ( attribute instanceof THREE.DynamicBufferAttribute ) ? _gl.DYNAMIC_DRAW : _gl.STATIC_DRAW );\r\n\r\n\t\t\t\t\tattribute.needsUpdate = false;\r\n\r\n\t\t\t\t} else if ( attribute.needsUpdate === true ) {\r\n\r\n\t\t\t\t\t_gl.bindBuffer( bufferType, attribute.buffer );\r\n\r\n\t\t\t\t\tif ( attribute.updateRange === undefined || attribute.updateRange.count === -1 ) { // Not using update ranges\r\n\r\n\t\t\t\t\t\t_gl.bufferSubData( bufferType, 0, attribute.array );\r\n\r\n\t\t\t\t\t} else if ( attribute.updateRange.count === 0 ) {\r\n\r\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.updateObject: using updateRange for THREE.DynamicBufferAttribute and marked as needsUpdate but count is 0, ensure you are using set methods or updating manually.' );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t_gl.bufferSubData( bufferType, attribute.updateRange.offset * attribute.array.BYTES_PER_ELEMENT,\r\n\t\t\t\t\t\t\t\t\t\t   attribute.array.subarray( attribute.updateRange.offset, attribute.updateRange.offset + attribute.updateRange.count ) );\r\n\r\n\t\t\t\t\t\tattribute.updateRange.count = 0; // reset range\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tattribute.needsUpdate = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\t// check all geometry groups\r\n\r\n\t\t\tif ( geometry.groupsNeedUpdate === true ) {\r\n\r\n\t\t\t\tinitGeometryGroups( object, geometry );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar geometryGroupsList = geometryGroups[ geometry.id ];\r\n\r\n\t\t\tfor ( var i = 0, il = geometryGroupsList.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar geometryGroup = geometryGroupsList[ i ];\r\n\t\t\t\tvar material = getBufferMaterial( object, geometryGroup );\r\n\r\n\t\t\t\tvar customAttributesDirty = material.attributes && areCustomAttributesDirty( material );\r\n\r\n\t\t\t\tif ( geometry.verticesNeedUpdate || geometry.morphTargetsNeedUpdate || geometry.elementsNeedUpdate ||\r\n\t\t\t\t\t geometry.uvsNeedUpdate || geometry.normalsNeedUpdate ||\r\n\t\t\t\t\t geometry.colorsNeedUpdate || geometry.tangentsNeedUpdate || customAttributesDirty ) {\r\n\r\n\t\t\t\t\tsetMeshBuffers( geometryGroup, object, _gl.DYNAMIC_DRAW, ! geometry.dynamic, material );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.verticesNeedUpdate = false;\r\n\t\t\tgeometry.morphTargetsNeedUpdate = false;\r\n\t\t\tgeometry.elementsNeedUpdate = false;\r\n\t\t\tgeometry.uvsNeedUpdate = false;\r\n\t\t\tgeometry.normalsNeedUpdate = false;\r\n\t\t\tgeometry.colorsNeedUpdate = false;\r\n\t\t\tgeometry.tangentsNeedUpdate = false;\r\n\r\n\t\t\tmaterial.attributes && clearCustomAttributes( material );\r\n\r\n\t\t} else if ( object instanceof THREE.Line ) {\r\n\r\n\t\t\tvar material = getBufferMaterial( object, geometry );\r\n\t\t\tvar customAttributesDirty = material.attributes && areCustomAttributesDirty( material );\r\n\r\n\t\t\tif ( geometry.verticesNeedUpdate || geometry.colorsNeedUpdate || geometry.lineDistancesNeedUpdate || customAttributesDirty ) {\r\n\r\n\t\t\t\tsetLineBuffers( geometry, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.verticesNeedUpdate = false;\r\n\t\t\tgeometry.colorsNeedUpdate = false;\r\n\t\t\tgeometry.lineDistancesNeedUpdate = false;\r\n\r\n\t\t\tmaterial.attributes && clearCustomAttributes( material );\r\n\r\n\t\t} else if ( object instanceof THREE.PointCloud ) {\r\n\r\n\t\t\tvar material = getBufferMaterial( object, geometry );\r\n\t\t\tvar customAttributesDirty = material.attributes && areCustomAttributesDirty( material );\r\n\r\n\t\t\tif ( geometry.verticesNeedUpdate || geometry.colorsNeedUpdate || customAttributesDirty ) {\r\n\r\n\t\t\t\tsetParticleBuffers( geometry, _gl.DYNAMIC_DRAW, object );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.verticesNeedUpdate = false;\r\n\t\t\tgeometry.colorsNeedUpdate = false;\r\n\r\n\t\t\tmaterial.attributes && clearCustomAttributes( material );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Objects updates - custom attributes check\r\n\r\n\tfunction areCustomAttributesDirty( material ) {\r\n\r\n\t\tfor ( var name in material.attributes ) {\r\n\r\n\t\t\tif ( material.attributes[ name ].needsUpdate ) return true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\tfunction clearCustomAttributes( material ) {\r\n\r\n\t\tfor ( var name in material.attributes ) {\r\n\r\n\t\t\tmaterial.attributes[ name ].needsUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Objects removal\r\n\r\n\tfunction removeObject( object ) {\r\n\r\n\t\tif ( object instanceof THREE.Mesh  ||\r\n\t\t\t object instanceof THREE.PointCloud ||\r\n\t\t\t object instanceof THREE.Line ) {\r\n\r\n\t\t\tdelete _webglObjects[ object.id ];\r\n\r\n\t\t} else if ( object instanceof THREE.ImmediateRenderObject || object.immediateRenderCallback ) {\r\n\r\n\t\t\tremoveInstances( _webglObjectsImmediate, object );\r\n\r\n\t\t}\r\n\r\n\t\tdelete object.__webglInit;\r\n\t\tdelete object._modelViewMatrix;\r\n\t\tdelete object._normalMatrix;\r\n\r\n\t\tdelete object.__webglActive;\r\n\r\n\t}\r\n\r\n\tfunction removeInstances( objlist, object ) {\r\n\r\n\t\tfor ( var o = objlist.length - 1; o >= 0; o -- ) {\r\n\r\n\t\t\tif ( objlist[ o ].object === object ) {\r\n\r\n\t\t\t\tobjlist.splice( o, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Materials\r\n\r\n\tvar shaderIDs = {\r\n\t\tMeshDepthMaterial: 'depth',\r\n\t\tMeshNormalMaterial: 'normal',\r\n\t\tMeshBasicMaterial: 'basic',\r\n\t\tMeshLambertMaterial: 'lambert',\r\n\t\tMeshPhongMaterial: 'phong',\r\n\t\tLineBasicMaterial: 'basic',\r\n\t\tLineDashedMaterial: 'dashed',\r\n\t\tPointCloudMaterial: 'particle_basic'\r\n\t};\r\n\r\n\tfunction initMaterial( material, lights, fog, object ) {\r\n\r\n\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\r\n\r\n\t\tvar shaderID = shaderIDs[ material.type ];\r\n\r\n\t\tif ( shaderID ) {\r\n\r\n\t\t\tvar shader = THREE.ShaderLib[ shaderID ];\r\n\r\n\t\t\tmaterial.__webglShader = {\r\n\t\t\t\tuniforms: THREE.UniformsUtils.clone( shader.uniforms ),\r\n\t\t\t\tvertexShader: shader.vertexShader,\r\n\t\t\t\tfragmentShader: shader.fragmentShader\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tmaterial.__webglShader = {\r\n\t\t\t\tuniforms: material.uniforms,\r\n\t\t\t\tvertexShader: material.vertexShader,\r\n\t\t\t\tfragmentShader: material.fragmentShader\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// heuristics to create shader parameters according to lights in the scene\r\n\t\t// (not to blow over maxLights budget)\r\n\r\n\t\tvar maxLightCount = allocateLights( lights );\r\n\t\tvar maxShadows = allocateShadows( lights );\r\n\t\tvar maxBones = allocateBones( object );\r\n\r\n\t\tvar parameters = {\r\n\r\n\t\t\tprecision: _precision,\r\n\t\t\tsupportsVertexTextures: _supportsVertexTextures,\r\n\r\n\t\t\tmap: !! material.map,\r\n\t\t\tenvMap: !! material.envMap,\r\n\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\r\n\t\t\tlightMap: !! material.lightMap,\r\n\t\t\tbumpMap: !! material.bumpMap,\r\n\t\t\tnormalMap: !! material.normalMap,\r\n\t\t\tspecularMap: !! material.specularMap,\r\n\t\t\talphaMap: !! material.alphaMap,\r\n\r\n\t\t\tcombine: material.combine,\r\n\r\n\t\t\tvertexColors: material.vertexColors,\r\n\r\n\t\t\tfog: fog,\r\n\t\t\tuseFog: material.fog,\r\n\t\t\tfogExp: fog instanceof THREE.FogExp2,\r\n\r\n\t\t\tflatShading: material.shading === THREE.FlatShading,\r\n\r\n\t\t\tsizeAttenuation: material.sizeAttenuation,\r\n\t\t\tlogarithmicDepthBuffer: _logarithmicDepthBuffer,\r\n\r\n\t\t\tskinning: material.skinning,\r\n\t\t\tmaxBones: maxBones,\r\n\t\t\tuseVertexTexture: _supportsBoneTextures && object && object.skeleton && object.skeleton.useVertexTexture,\r\n\r\n\t\t\tmorphTargets: material.morphTargets,\r\n\t\t\tmorphNormals: material.morphNormals,\r\n\t\t\tmaxMorphTargets: _this.maxMorphTargets,\r\n\t\t\tmaxMorphNormals: _this.maxMorphNormals,\r\n\r\n\t\t\tmaxDirLights: maxLightCount.directional,\r\n\t\t\tmaxPointLights: maxLightCount.point,\r\n\t\t\tmaxSpotLights: maxLightCount.spot,\r\n\t\t\tmaxHemiLights: maxLightCount.hemi,\r\n\r\n\t\t\tmaxShadows: maxShadows,\r\n\t\t\tshadowMapEnabled: _this.shadowMapEnabled && object.receiveShadow && maxShadows > 0,\r\n\t\t\tshadowMapType: _this.shadowMapType,\r\n\t\t\tshadowMapDebug: _this.shadowMapDebug,\r\n\t\t\tshadowMapCascade: _this.shadowMapCascade,\r\n\r\n\t\t\talphaTest: material.alphaTest,\r\n\t\t\tmetal: material.metal,\r\n\t\t\twrapAround: material.wrapAround,\r\n\t\t\tdoubleSided: material.side === THREE.DoubleSide,\r\n\t\t\tflipSided: material.side === THREE.BackSide\r\n\r\n\t\t};\r\n\r\n\t\t// Generate code\r\n\r\n\t\tvar chunks = [];\r\n\r\n\t\tif ( shaderID ) {\r\n\r\n\t\t\tchunks.push( shaderID );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tchunks.push( material.fragmentShader );\r\n\t\t\tchunks.push( material.vertexShader );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.defines !== undefined ) {\r\n\r\n\t\t\tfor ( var name in material.defines ) {\r\n\r\n\t\t\t\tchunks.push( name );\r\n\t\t\t\tchunks.push( material.defines[ name ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var name in parameters ) {\r\n\r\n\t\t\tchunks.push( name );\r\n\t\t\tchunks.push( parameters[ name ] );\r\n\r\n\t\t}\r\n\r\n\t\tvar code = chunks.join();\r\n\r\n\t\tvar program;\r\n\r\n\t\t// Check if code has been already compiled\r\n\r\n\t\tfor ( var p = 0, pl = _programs.length; p < pl; p ++ ) {\r\n\r\n\t\t\tvar programInfo = _programs[ p ];\r\n\r\n\t\t\tif ( programInfo.code === code ) {\r\n\r\n\t\t\t\tprogram = programInfo;\r\n\t\t\t\tprogram.usedTimes ++;\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\tprogram = new THREE.WebGLProgram( _this, code, material, parameters );\r\n\t\t\t_programs.push( program );\r\n\r\n\t\t\t_this.info.memory.programs = _programs.length;\r\n\r\n\t\t}\r\n\r\n\t\tmaterial.program = program;\r\n\r\n\t\tvar attributes = program.attributes;\r\n\r\n\t\tif ( material.morphTargets ) {\r\n\r\n\t\t\tmaterial.numSupportedMorphTargets = 0;\r\n\r\n\t\t\tvar id, base = 'morphTarget';\r\n\r\n\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\r\n\r\n\t\t\t\tid = base + i;\r\n\r\n\t\t\t\tif ( attributes[ id ] >= 0 ) {\r\n\r\n\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.morphNormals ) {\r\n\r\n\t\t\tmaterial.numSupportedMorphNormals = 0;\r\n\r\n\t\t\tvar id, base = 'morphNormal';\r\n\r\n\t\t\tfor ( i = 0; i < _this.maxMorphNormals; i ++ ) {\r\n\r\n\t\t\t\tid = base + i;\r\n\r\n\t\t\t\tif ( attributes[ id ] >= 0 ) {\r\n\r\n\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tmaterial.uniformsList = [];\r\n\r\n\t\tfor ( var u in material.__webglShader.uniforms ) {\r\n\r\n\t\t\tvar location = material.program.uniforms[ u ];\r\n\r\n\t\t\tif ( location ) {\r\n\t\t\t\tmaterial.uniformsList.push( [ material.__webglShader.uniforms[ u ], location ] );\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setMaterial( material ) {\r\n\r\n\t\tif ( material.transparent === true ) {\r\n\r\n\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tstate.setBlending( THREE.NoBlending );\r\n\r\n\t\t}\r\n\r\n\t\tstate.setDepthTest( material.depthTest );\r\n\t\tstate.setDepthWrite( material.depthWrite );\r\n\t\tstate.setColorWrite( material.colorWrite );\r\n\t\tstate.setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\r\n\r\n\t}\r\n\r\n\tfunction setProgram( camera, lights, fog, material, object ) {\r\n\r\n\t\t_usedTextureUnits = 0;\r\n\r\n\t\tif ( material.needsUpdate ) {\r\n\r\n\t\t\tif ( material.program ) deallocateMaterial( material );\r\n\r\n\t\t\tinitMaterial( material, lights, fog, object );\r\n\t\t\tmaterial.needsUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.morphTargets ) {\r\n\r\n\t\t\tif ( ! object.__webglMorphTargetInfluences ) {\r\n\r\n\t\t\t\tobject.__webglMorphTargetInfluences = new Float32Array( _this.maxMorphTargets );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar refreshProgram = false;\r\n\t\tvar refreshMaterial = false;\r\n\t\tvar refreshLights = false;\r\n\r\n\t\tvar program = material.program,\r\n\t\t\tp_uniforms = program.uniforms,\r\n\t\t\tm_uniforms = material.__webglShader.uniforms;\r\n\r\n\t\tif ( program.id !== _currentProgram ) {\r\n\r\n\t\t\t_gl.useProgram( program.program );\r\n\t\t\t_currentProgram = program.id;\r\n\r\n\t\t\trefreshProgram = true;\r\n\t\t\trefreshMaterial = true;\r\n\t\t\trefreshLights = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.id !== _currentMaterialId ) {\r\n\r\n\t\t\tif ( _currentMaterialId === -1 ) refreshLights = true;\r\n\t\t\t_currentMaterialId = material.id;\r\n\r\n\t\t\trefreshMaterial = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( refreshProgram || camera !== _currentCamera ) {\r\n\r\n\t\t\t_gl.uniformMatrix4fv( p_uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\r\n\r\n\t\t\tif ( _logarithmicDepthBuffer ) {\r\n\r\n\t\t\t\t_gl.uniform1f( p_uniforms.logDepthBufFC, 2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif ( camera !== _currentCamera ) _currentCamera = camera;\r\n\r\n\t\t\t// load material specific uniforms\r\n\t\t\t// (shader material also gets them for the sake of genericity)\r\n\r\n\t\t\tif ( material instanceof THREE.ShaderMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t material.envMap ) {\r\n\r\n\t\t\t\tif ( p_uniforms.cameraPosition !== null ) {\r\n\r\n\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\t\t_gl.uniform3f( p_uniforms.cameraPosition, _vector3.x, _vector3.y, _vector3.z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshBasicMaterial ||\r\n\t\t\t\t material instanceof THREE.ShaderMaterial ||\r\n\t\t\t\t material.skinning ) {\r\n\r\n\t\t\t\tif ( p_uniforms.viewMatrix !== null ) {\r\n\r\n\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.viewMatrix, false, camera.matrixWorldInverse.elements );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// skinning uniforms must be set even if material didn't change\r\n\t\t// auto-setting of texture unit for bone texture must go before other textures\r\n\t\t// not sure why, but otherwise weird things happen\r\n\r\n\t\tif ( material.skinning ) {\r\n\r\n\t\t\tif ( object.bindMatrix && p_uniforms.bindMatrix !== null ) {\r\n\r\n\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.bindMatrix, false, object.bindMatrix.elements );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( object.bindMatrixInverse && p_uniforms.bindMatrixInverse !== null ) {\r\n\r\n\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.bindMatrixInverse, false, object.bindMatrixInverse.elements );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( _supportsBoneTextures && object.skeleton && object.skeleton.useVertexTexture ) {\r\n\r\n\t\t\t\tif ( p_uniforms.boneTexture !== null ) {\r\n\r\n\t\t\t\t\tvar textureUnit = getTextureUnit();\r\n\r\n\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTexture, textureUnit );\r\n\t\t\t\t\t_this.setTexture( object.skeleton.boneTexture, textureUnit );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( p_uniforms.boneTextureWidth !== null ) {\r\n\r\n\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTextureWidth, object.skeleton.boneTextureWidth );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( p_uniforms.boneTextureHeight !== null ) {\r\n\r\n\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTextureHeight, object.skeleton.boneTextureHeight );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( object.skeleton && object.skeleton.boneMatrices ) {\r\n\r\n\t\t\t\tif ( p_uniforms.boneGlobalMatrices !== null ) {\r\n\r\n\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.boneGlobalMatrices, false, object.skeleton.boneMatrices );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( refreshMaterial ) {\r\n\r\n\t\t\t// refresh uniforms common to several materials\r\n\r\n\t\t\tif ( fog && material.fog ) {\r\n\r\n\t\t\t\trefreshUniformsFog( m_uniforms, fog );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t material.lights ) {\r\n\r\n\t\t\t\tif ( _lightsNeedUpdate ) {\r\n\r\n\t\t\t\t\trefreshLights = true;\r\n\t\t\t\t\tsetupLights( lights );\r\n\t\t\t\t\t_lightsNeedUpdate = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( refreshLights ) {\r\n\t\t\t\t\trefreshUniformsLights( m_uniforms, _lights );\r\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, true );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, false );\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material instanceof THREE.MeshBasicMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshPhongMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// refresh single material specific uniforms\r\n\r\n\t\t\tif ( material instanceof THREE.LineBasicMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.LineDashedMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\t\t\t\trefreshUniformsDash( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.PointCloudMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsParticle( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshPhongMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsPhong( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshLambertMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsLambert( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshDepthMaterial ) {\r\n\r\n\t\t\t\tm_uniforms.mNear.value = camera.near;\r\n\t\t\t\tm_uniforms.mFar.value = camera.far;\r\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshNormalMaterial ) {\r\n\r\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( object.receiveShadow && ! material._shadowPass ) {\r\n\r\n\t\t\t\trefreshUniformsShadow( m_uniforms, lights );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// load common uniforms\r\n\r\n\t\t\tloadUniformsGeneric( material.uniformsList );\r\n\r\n\t\t}\r\n\r\n\t\tloadUniformsMatrices( p_uniforms, object );\r\n\r\n\t\tif ( p_uniforms.modelMatrix !== null ) {\r\n\r\n\t\t\t_gl.uniformMatrix4fv( p_uniforms.modelMatrix, false, object.matrixWorld.elements );\r\n\r\n\t\t}\r\n\r\n\t\treturn program;\r\n\r\n\t}\r\n\r\n\t// Uniforms (refresh uniforms objects)\r\n\r\n\tfunction refreshUniformsCommon ( uniforms, material ) {\r\n\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\r\n\t\tuniforms.diffuse.value = material.color;\r\n\r\n\t\tuniforms.map.value = material.map;\r\n\t\tuniforms.lightMap.value = material.lightMap;\r\n\t\tuniforms.specularMap.value = material.specularMap;\r\n\t\tuniforms.alphaMap.value = material.alphaMap;\r\n\r\n\t\tif ( material.bumpMap ) {\r\n\r\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.normalMap ) {\r\n\r\n\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\r\n\r\n\t\t}\r\n\r\n\t\t// uv repeat and offset setting priorities\r\n\t\t//  1. color map\r\n\t\t//  2. specular map\r\n\t\t//  3. normal map\r\n\t\t//  4. bump map\r\n\t\t//  5. alpha map\r\n\r\n\t\tvar uvScaleMap;\r\n\r\n\t\tif ( material.map ) {\r\n\r\n\t\t\tuvScaleMap = material.map;\r\n\r\n\t\t} else if ( material.specularMap ) {\r\n\r\n\t\t\tuvScaleMap = material.specularMap;\r\n\r\n\t\t} else if ( material.normalMap ) {\r\n\r\n\t\t\tuvScaleMap = material.normalMap;\r\n\r\n\t\t} else if ( material.bumpMap ) {\r\n\r\n\t\t\tuvScaleMap = material.bumpMap;\r\n\r\n\t\t} else if ( material.alphaMap ) {\r\n\r\n\t\t\tuvScaleMap = material.alphaMap;\r\n\r\n\t\t}\r\n\r\n\t\tif ( uvScaleMap !== undefined ) {\r\n\r\n\t\t\tvar offset = uvScaleMap.offset;\r\n\t\t\tvar repeat = uvScaleMap.repeat;\r\n\r\n\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\r\n\r\n\t\t}\r\n\r\n\t\tuniforms.envMap.value = material.envMap;\r\n\t\tuniforms.flipEnvMap.value = ( material.envMap instanceof THREE.WebGLRenderTargetCube ) ? 1 : - 1;\r\n\r\n\t\tuniforms.reflectivity.value = material.reflectivity;\r\n\t\tuniforms.refractionRatio.value = material.refractionRatio;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsLine ( uniforms, material ) {\r\n\r\n\t\tuniforms.diffuse.value = material.color;\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsDash ( uniforms, material ) {\r\n\r\n\t\tuniforms.dashSize.value = material.dashSize;\r\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\r\n\t\tuniforms.scale.value = material.scale;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsParticle ( uniforms, material ) {\r\n\r\n\t\tuniforms.psColor.value = material.color;\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\t\tuniforms.size.value = material.size;\r\n\t\tuniforms.scale.value = _canvas.height / 2.0; // TODO: Cache this.\r\n\r\n\t\tuniforms.map.value = material.map;\r\n\r\n\t\tif ( material.map !== null ) {\r\n\r\n\t\t\tvar offset = material.map.offset;\r\n\t\t\tvar repeat = material.map.repeat;\r\n\r\n\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsFog ( uniforms, fog ) {\r\n\r\n\t\tuniforms.fogColor.value = fog.color;\r\n\r\n\t\tif ( fog instanceof THREE.Fog ) {\r\n\r\n\t\t\tuniforms.fogNear.value = fog.near;\r\n\t\t\tuniforms.fogFar.value = fog.far;\r\n\r\n\t\t} else if ( fog instanceof THREE.FogExp2 ) {\r\n\r\n\t\t\tuniforms.fogDensity.value = fog.density;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsPhong ( uniforms, material ) {\r\n\r\n\t\tuniforms.shininess.value = material.shininess;\r\n\r\n\t\tuniforms.emissive.value = material.emissive;\r\n\t\tuniforms.specular.value = material.specular;\r\n\r\n\t\tif ( material.wrapAround ) {\r\n\r\n\t\t\tuniforms.wrapRGB.value.copy( material.wrapRGB );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsLambert ( uniforms, material ) {\r\n\r\n\t\tuniforms.emissive.value = material.emissive;\r\n\r\n\t\tif ( material.wrapAround ) {\r\n\r\n\t\t\tuniforms.wrapRGB.value.copy( material.wrapRGB );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsLights ( uniforms, lights ) {\r\n\r\n\t\tuniforms.ambientLightColor.value = lights.ambient;\r\n\r\n\t\tuniforms.directionalLightColor.value = lights.directional.colors;\r\n\t\tuniforms.directionalLightDirection.value = lights.directional.positions;\r\n\r\n\t\tuniforms.pointLightColor.value = lights.point.colors;\r\n\t\tuniforms.pointLightPosition.value = lights.point.positions;\r\n\t\tuniforms.pointLightDistance.value = lights.point.distances;\r\n\t\tuniforms.pointLightDecay.value = lights.point.decays;\r\n\r\n\t\tuniforms.spotLightColor.value = lights.spot.colors;\r\n\t\tuniforms.spotLightPosition.value = lights.spot.positions;\r\n\t\tuniforms.spotLightDistance.value = lights.spot.distances;\r\n\t\tuniforms.spotLightDirection.value = lights.spot.directions;\r\n\t\tuniforms.spotLightAngleCos.value = lights.spot.anglesCos;\r\n\t\tuniforms.spotLightExponent.value = lights.spot.exponents;\r\n\t\tuniforms.spotLightDecay.value = lights.spot.decays;\r\n\r\n\t\tuniforms.hemisphereLightSkyColor.value = lights.hemi.skyColors;\r\n\t\tuniforms.hemisphereLightGroundColor.value = lights.hemi.groundColors;\r\n\t\tuniforms.hemisphereLightDirection.value = lights.hemi.positions;\r\n\r\n\t}\r\n\r\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\r\n\r\n\tfunction markUniformsLightsNeedsUpdate ( uniforms, value ) {\r\n\r\n\t\tuniforms.ambientLightColor.needsUpdate = value;\r\n\r\n\t\tuniforms.directionalLightColor.needsUpdate = value;\r\n\t\tuniforms.directionalLightDirection.needsUpdate = value;\r\n\r\n\t\tuniforms.pointLightColor.needsUpdate = value;\r\n\t\tuniforms.pointLightPosition.needsUpdate = value;\r\n\t\tuniforms.pointLightDistance.needsUpdate = value;\r\n\t\tuniforms.pointLightDecay.needsUpdate = value;\r\n\r\n\t\tuniforms.spotLightColor.needsUpdate = value;\r\n\t\tuniforms.spotLightPosition.needsUpdate = value;\r\n\t\tuniforms.spotLightDistance.needsUpdate = value;\r\n\t\tuniforms.spotLightDirection.needsUpdate = value;\r\n\t\tuniforms.spotLightAngleCos.needsUpdate = value;\r\n\t\tuniforms.spotLightExponent.needsUpdate = value;\r\n\t\tuniforms.spotLightDecay.needsUpdate = value;\r\n\r\n\t\tuniforms.hemisphereLightSkyColor.needsUpdate = value;\r\n\t\tuniforms.hemisphereLightGroundColor.needsUpdate = value;\r\n\t\tuniforms.hemisphereLightDirection.needsUpdate = value;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsShadow ( uniforms, lights ) {\r\n\r\n\t\tif ( uniforms.shadowMatrix ) {\r\n\r\n\t\t\tvar j = 0;\r\n\r\n\t\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar light = lights[ i ];\r\n\r\n\t\t\t\tif ( ! light.castShadow ) continue;\r\n\r\n\t\t\t\tif ( light instanceof THREE.SpotLight || ( light instanceof THREE.DirectionalLight && ! light.shadowCascade ) ) {\r\n\r\n\t\t\t\t\tuniforms.shadowMap.value[ j ] = light.shadowMap;\r\n\t\t\t\t\tuniforms.shadowMapSize.value[ j ] = light.shadowMapSize;\r\n\r\n\t\t\t\t\tuniforms.shadowMatrix.value[ j ] = light.shadowMatrix;\r\n\r\n\t\t\t\t\tuniforms.shadowDarkness.value[ j ] = light.shadowDarkness;\r\n\t\t\t\t\tuniforms.shadowBias.value[ j ] = light.shadowBias;\r\n\r\n\t\t\t\t\tj ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Uniforms (load to GPU)\r\n\r\n\tfunction loadUniformsMatrices ( uniforms, object ) {\r\n\r\n\t\t_gl.uniformMatrix4fv( uniforms.modelViewMatrix, false, object._modelViewMatrix.elements );\r\n\r\n\t\tif ( uniforms.normalMatrix ) {\r\n\r\n\t\t\t_gl.uniformMatrix3fv( uniforms.normalMatrix, false, object._normalMatrix.elements );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction getTextureUnit() {\r\n\r\n\t\tvar textureUnit = _usedTextureUnits;\r\n\r\n\t\tif ( textureUnit >= _maxTextures ) {\r\n\r\n\t\t\tTHREE.warn( 'WebGLRenderer: trying to use ' + textureUnit + ' texture units while this GPU supports only ' + _maxTextures );\r\n\r\n\t\t}\r\n\r\n\t\t_usedTextureUnits += 1;\r\n\r\n\t\treturn textureUnit;\r\n\r\n\t}\r\n\r\n\tfunction loadUniformsGeneric ( uniforms ) {\r\n\r\n\t\tvar texture, textureUnit, offset;\r\n\r\n\t\tfor ( var j = 0, jl = uniforms.length; j < jl; j ++ ) {\r\n\r\n\t\t\tvar uniform = uniforms[ j ][ 0 ];\r\n\r\n\t\t\t// needsUpdate property is not added to all uniforms.\r\n\t\t\tif ( uniform.needsUpdate === false ) continue;\r\n\r\n\t\t\tvar type = uniform.type;\r\n\t\t\tvar value = uniform.value;\r\n\t\t\tvar location = uniforms[ j ][ 1 ];\r\n\r\n\t\t\tswitch ( type ) {\r\n\r\n\t\t\t\tcase '1i':\r\n\t\t\t\t\t_gl.uniform1i( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '1f':\r\n\t\t\t\t\t_gl.uniform1f( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '2f':\r\n\t\t\t\t\t_gl.uniform2f( location, value[ 0 ], value[ 1 ] );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '3f':\r\n\t\t\t\t\t_gl.uniform3f( location, value[ 0 ], value[ 1 ], value[ 2 ] );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '4f':\r\n\t\t\t\t\t_gl.uniform4f( location, value[ 0 ], value[ 1 ], value[ 2 ], value[ 3 ] );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '1iv':\r\n\t\t\t\t\t_gl.uniform1iv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '3iv':\r\n\t\t\t\t\t_gl.uniform3iv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '1fv':\r\n\t\t\t\t\t_gl.uniform1fv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '2fv':\r\n\t\t\t\t\t_gl.uniform2fv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '3fv':\r\n\t\t\t\t\t_gl.uniform3fv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '4fv':\r\n\t\t\t\t\t_gl.uniform4fv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Matrix3fv':\r\n\t\t\t\t\t_gl.uniformMatrix3fv( location, false, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Matrix4fv':\r\n\t\t\t\t\t_gl.uniformMatrix4fv( location, false, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t//\r\n\r\n\t\t\t\tcase 'i':\r\n\r\n\t\t\t\t\t// single integer\r\n\t\t\t\t\t_gl.uniform1i( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'f':\r\n\r\n\t\t\t\t\t// single float\r\n\t\t\t\t\t_gl.uniform1f( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v2':\r\n\r\n\t\t\t\t\t// single THREE.Vector2\r\n\t\t\t\t\t_gl.uniform2f( location, value.x, value.y );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v3':\r\n\r\n\t\t\t\t\t// single THREE.Vector3\r\n\t\t\t\t\t_gl.uniform3f( location, value.x, value.y, value.z );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v4':\r\n\r\n\t\t\t\t\t// single THREE.Vector4\r\n\t\t\t\t\t_gl.uniform4f( location, value.x, value.y, value.z, value.w );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'c':\r\n\r\n\t\t\t\t\t// single THREE.Color\r\n\t\t\t\t\t_gl.uniform3f( location, value.r, value.g, value.b );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'iv1':\r\n\r\n\t\t\t\t\t// flat array of integers (JS or typed array)\r\n\t\t\t\t\t_gl.uniform1iv( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'iv':\r\n\r\n\t\t\t\t\t// flat array of integers with 3 x N size (JS or typed array)\r\n\t\t\t\t\t_gl.uniform3iv( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'fv1':\r\n\r\n\t\t\t\t\t// flat array of floats (JS or typed array)\r\n\t\t\t\t\t_gl.uniform1fv( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'fv':\r\n\r\n\t\t\t\t\t// flat array of floats with 3 x N size (JS or typed array)\r\n\t\t\t\t\t_gl.uniform3fv( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v2v':\r\n\r\n\t\t\t\t\t// array of THREE.Vector2\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 2 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\toffset = i * 2;\r\n\r\n\t\t\t\t\t\tuniform._array[ offset ]   = value[ i ].x;\r\n\t\t\t\t\t\tuniform._array[ offset + 1 ] = value[ i ].y;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniform2fv( location, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v3v':\r\n\r\n\t\t\t\t\t// array of THREE.Vector3\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 3 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\toffset = i * 3;\r\n\r\n\t\t\t\t\t\tuniform._array[ offset ]   = value[ i ].x;\r\n\t\t\t\t\t\tuniform._array[ offset + 1 ] = value[ i ].y;\r\n\t\t\t\t\t\tuniform._array[ offset + 2 ] = value[ i ].z;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniform3fv( location, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v4v':\r\n\r\n\t\t\t\t\t// array of THREE.Vector4\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 4 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\toffset = i * 4;\r\n\r\n\t\t\t\t\t\tuniform._array[ offset ]   = value[ i ].x;\r\n\t\t\t\t\t\tuniform._array[ offset + 1 ] = value[ i ].y;\r\n\t\t\t\t\t\tuniform._array[ offset + 2 ] = value[ i ].z;\r\n\t\t\t\t\t\tuniform._array[ offset + 3 ] = value[ i ].w;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniform4fv( location, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'm3':\r\n\r\n\t\t\t\t\t// single THREE.Matrix3\r\n\t\t\t\t\t_gl.uniformMatrix3fv( location, false, value.elements );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'm3v':\r\n\r\n\t\t\t\t\t// array of THREE.Matrix3\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 9 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvalue[ i ].flattenToArrayOffset( uniform._array, i * 9 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniformMatrix3fv( location, false, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'm4':\r\n\r\n\t\t\t\t\t// single THREE.Matrix4\r\n\t\t\t\t\t_gl.uniformMatrix4fv( location, false, value.elements );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'm4v':\r\n\r\n\t\t\t\t\t// array of THREE.Matrix4\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 16 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvalue[ i ].flattenToArrayOffset( uniform._array, i * 16 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniformMatrix4fv( location, false, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 't':\r\n\r\n\t\t\t\t\t// single THREE.Texture (2d or cube)\r\n\r\n\t\t\t\t\ttexture = value;\r\n\t\t\t\t\ttextureUnit = getTextureUnit();\r\n\r\n\t\t\t\t\t_gl.uniform1i( location, textureUnit );\r\n\r\n\t\t\t\t\tif ( ! texture ) continue;\r\n\r\n\t\t\t\t\tif ( texture instanceof THREE.CubeTexture ||\r\n\t\t\t\t\t   ( texture.image instanceof Array && texture.image.length === 6 ) ) { // CompressedTexture can have Array in image :/\r\n\r\n\t\t\t\t\t\tsetCubeTexture( texture, textureUnit );\r\n\r\n\t\t\t\t\t} else if ( texture instanceof THREE.WebGLRenderTargetCube ) {\r\n\r\n\t\t\t\t\t\tsetCubeTextureDynamic( texture, textureUnit );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t_this.setTexture( texture, textureUnit );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'tv':\r\n\r\n\t\t\t\t\t// array of THREE.Texture (2d)\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = [];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = uniform.value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tuniform._array[ i ] = getTextureUnit();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniform1iv( location, uniform._array );\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = uniform.value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\ttexture = uniform.value[ i ];\r\n\t\t\t\t\t\ttextureUnit = uniform._array[ i ];\r\n\r\n\t\t\t\t\t\tif ( ! texture ) continue;\r\n\r\n\t\t\t\t\t\t_this.setTexture( texture, textureUnit );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tTHREE.warn( 'THREE.WebGLRenderer: Unknown uniform type: ' + type );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setupMatrices ( object, camera ) {\r\n\r\n\t\tobject._modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\tobject._normalMatrix.getNormalMatrix( object._modelViewMatrix );\r\n\r\n\t}\r\n\r\n\tfunction setColorLinear( array, offset, color, intensity ) {\r\n\r\n\t\tarray[ offset ]     = color.r * intensity;\r\n\t\tarray[ offset + 1 ] = color.g * intensity;\r\n\t\tarray[ offset + 2 ] = color.b * intensity;\r\n\r\n\t}\r\n\r\n\tfunction setupLights ( lights ) {\r\n\r\n\t\tvar l, ll, light,\r\n\t\tr = 0, g = 0, b = 0,\r\n\t\tcolor, skyColor, groundColor,\r\n\t\tintensity,\r\n\t\tdistance,\r\n\r\n\t\tzlights = _lights,\r\n\r\n\t\tdirColors = zlights.directional.colors,\r\n\t\tdirPositions = zlights.directional.positions,\r\n\r\n\t\tpointColors = zlights.point.colors,\r\n\t\tpointPositions = zlights.point.positions,\r\n\t\tpointDistances = zlights.point.distances,\r\n\t\tpointDecays = zlights.point.decays,\r\n\r\n\t\tspotColors = zlights.spot.colors,\r\n\t\tspotPositions = zlights.spot.positions,\r\n\t\tspotDistances = zlights.spot.distances,\r\n\t\tspotDirections = zlights.spot.directions,\r\n\t\tspotAnglesCos = zlights.spot.anglesCos,\r\n\t\tspotExponents = zlights.spot.exponents,\r\n\t\tspotDecays = zlights.spot.decays,\r\n\r\n\t\themiSkyColors = zlights.hemi.skyColors,\r\n\t\themiGroundColors = zlights.hemi.groundColors,\r\n\t\themiPositions = zlights.hemi.positions,\r\n\r\n\t\tdirLength = 0,\r\n\t\tpointLength = 0,\r\n\t\tspotLength = 0,\r\n\t\themiLength = 0,\r\n\r\n\t\tdirCount = 0,\r\n\t\tpointCount = 0,\r\n\t\tspotCount = 0,\r\n\t\themiCount = 0,\r\n\r\n\t\tdirOffset = 0,\r\n\t\tpointOffset = 0,\r\n\t\tspotOffset = 0,\r\n\t\themiOffset = 0;\r\n\r\n\t\tfor ( l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\r\n\t\t\tlight = lights[ l ];\r\n\r\n\t\t\tif ( light.onlyShadow ) continue;\r\n\r\n\t\t\tcolor = light.color;\r\n\t\t\tintensity = light.intensity;\r\n\t\t\tdistance = light.distance;\r\n\r\n\t\t\tif ( light instanceof THREE.AmbientLight ) {\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\tr += color.r;\r\n\t\t\t\tg += color.g;\r\n\t\t\t\tb += color.b;\r\n\r\n\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\r\n\r\n\t\t\t\tdirCount += 1;\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t_direction.sub( _vector3 );\r\n\t\t\t\t_direction.normalize();\r\n\r\n\t\t\t\tdirOffset = dirLength * 3;\r\n\r\n\t\t\t\tdirPositions[ dirOffset ]     = _direction.x;\r\n\t\t\t\tdirPositions[ dirOffset + 1 ] = _direction.y;\r\n\t\t\t\tdirPositions[ dirOffset + 2 ] = _direction.z;\r\n\r\n\t\t\t\tsetColorLinear( dirColors, dirOffset, color, intensity );\r\n\r\n\t\t\t\tdirLength += 1;\r\n\r\n\t\t\t} else if ( light instanceof THREE.PointLight ) {\r\n\r\n\t\t\t\tpointCount += 1;\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\tpointOffset = pointLength * 3;\r\n\r\n\t\t\t\tsetColorLinear( pointColors, pointOffset, color, intensity );\r\n\r\n\t\t\t\t_vector3.setFromMatrixPosition( light.matrixWorld );\r\n\r\n\t\t\t\tpointPositions[ pointOffset ]     = _vector3.x;\r\n\t\t\t\tpointPositions[ pointOffset + 1 ] = _vector3.y;\r\n\t\t\t\tpointPositions[ pointOffset + 2 ] = _vector3.z;\r\n\r\n\t\t\t\t// distance is 0 if decay is 0, because there is no attenuation at all.\r\n\t\t\t\tpointDistances[ pointLength ] = distance;\r\n\t\t\t\tpointDecays[ pointLength ] = ( light.distance === 0 ) ? 0.0 : light.decay;\r\n\r\n\t\t\t\tpointLength += 1;\r\n\r\n\t\t\t} else if ( light instanceof THREE.SpotLight ) {\r\n\r\n\t\t\t\tspotCount += 1;\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\tspotOffset = spotLength * 3;\r\n\r\n\t\t\t\tsetColorLinear( spotColors, spotOffset, color, intensity );\r\n\r\n\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\r\n\t\t\t\tspotPositions[ spotOffset ]     = _direction.x;\r\n\t\t\t\tspotPositions[ spotOffset + 1 ] = _direction.y;\r\n\t\t\t\tspotPositions[ spotOffset + 2 ] = _direction.z;\r\n\r\n\t\t\t\tspotDistances[ spotLength ] = distance;\r\n\r\n\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t_direction.sub( _vector3 );\r\n\t\t\t\t_direction.normalize();\r\n\r\n\t\t\t\tspotDirections[ spotOffset ]     = _direction.x;\r\n\t\t\t\tspotDirections[ spotOffset + 1 ] = _direction.y;\r\n\t\t\t\tspotDirections[ spotOffset + 2 ] = _direction.z;\r\n\r\n\t\t\t\tspotAnglesCos[ spotLength ] = Math.cos( light.angle );\r\n\t\t\t\tspotExponents[ spotLength ] = light.exponent;\r\n\t\t\t\tspotDecays[ spotLength ] = ( light.distance === 0 ) ? 0.0 : light.decay;\r\n\r\n\t\t\t\tspotLength += 1;\r\n\r\n\t\t\t} else if ( light instanceof THREE.HemisphereLight ) {\r\n\r\n\t\t\t\themiCount += 1;\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_direction.normalize();\r\n\r\n\t\t\t\themiOffset = hemiLength * 3;\r\n\r\n\t\t\t\themiPositions[ hemiOffset ]     = _direction.x;\r\n\t\t\t\themiPositions[ hemiOffset + 1 ] = _direction.y;\r\n\t\t\t\themiPositions[ hemiOffset + 2 ] = _direction.z;\r\n\r\n\t\t\t\tskyColor = light.color;\r\n\t\t\t\tgroundColor = light.groundColor;\r\n\r\n\t\t\t\tsetColorLinear( hemiSkyColors, hemiOffset, skyColor, intensity );\r\n\t\t\t\tsetColorLinear( hemiGroundColors, hemiOffset, groundColor, intensity );\r\n\r\n\t\t\t\themiLength += 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// null eventual remains from removed lights\r\n\t\t// (this is to avoid if in shader)\r\n\r\n\t\tfor ( l = dirLength * 3, ll = Math.max( dirColors.length, dirCount * 3 ); l < ll; l ++ ) dirColors[ l ] = 0.0;\r\n\t\tfor ( l = pointLength * 3, ll = Math.max( pointColors.length, pointCount * 3 ); l < ll; l ++ ) pointColors[ l ] = 0.0;\r\n\t\tfor ( l = spotLength * 3, ll = Math.max( spotColors.length, spotCount * 3 ); l < ll; l ++ ) spotColors[ l ] = 0.0;\r\n\t\tfor ( l = hemiLength * 3, ll = Math.max( hemiSkyColors.length, hemiCount * 3 ); l < ll; l ++ ) hemiSkyColors[ l ] = 0.0;\r\n\t\tfor ( l = hemiLength * 3, ll = Math.max( hemiGroundColors.length, hemiCount * 3 ); l < ll; l ++ ) hemiGroundColors[ l ] = 0.0;\r\n\r\n\t\tzlights.directional.length = dirLength;\r\n\t\tzlights.point.length = pointLength;\r\n\t\tzlights.spot.length = spotLength;\r\n\t\tzlights.hemi.length = hemiLength;\r\n\r\n\t\tzlights.ambient[ 0 ] = r;\r\n\t\tzlights.ambient[ 1 ] = g;\r\n\t\tzlights.ambient[ 2 ] = b;\r\n\r\n\t}\r\n\r\n\t// GL state setting\r\n\r\n\tthis.setFaceCulling = function ( cullFace, frontFaceDirection ) {\r\n\r\n\t\tif ( cullFace === THREE.CullFaceNone ) {\r\n\r\n\t\t\t_gl.disable( _gl.CULL_FACE );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( frontFaceDirection === THREE.FrontFaceDirectionCW ) {\r\n\r\n\t\t\t\t_gl.frontFace( _gl.CW );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.frontFace( _gl.CCW );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( cullFace === THREE.CullFaceBack ) {\r\n\r\n\t\t\t\t_gl.cullFace( _gl.BACK );\r\n\r\n\t\t\t} else if ( cullFace === THREE.CullFaceFront ) {\r\n\r\n\t\t\t\t_gl.cullFace( _gl.FRONT );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.cullFace( _gl.FRONT_AND_BACK );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.enable( _gl.CULL_FACE );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setMaterialFaces = function ( material ) {\r\n\r\n\t\tstate.setDoubleSided( material.side === THREE.DoubleSide );\r\n\t\tstate.setFlipSided( material.side === THREE.BackSide );\r\n\r\n\t};\r\n\r\n\t// Textures\r\n\r\n\tfunction setTextureParameters ( textureType, texture, isImagePowerOfTwo ) {\r\n\r\n\t\tvar extension;\r\n\r\n\t\tif ( isImagePowerOfTwo ) {\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, paramThreeToGL( texture.wrapS ) );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, paramThreeToGL( texture.wrapT ) );\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, paramThreeToGL( texture.magFilter ) );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, paramThreeToGL( texture.minFilter ) );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\r\n\r\n\t\t\tif ( texture.wrapS !== THREE.ClampToEdgeWrapping || texture.wrapT !== THREE.ClampToEdgeWrapping ) {\r\n\r\n\t\t\t\tTHREE.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping. ( ' + texture.sourceFile + ' )' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\r\n\r\n\t\t\tif ( texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter ) {\r\n\r\n\t\t\t\tTHREE.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter. ( ' + texture.sourceFile + ' )' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\r\n\t\tif ( extension && texture.type !== THREE.FloatType && texture.type !== THREE.HalfFloatType ) {\r\n\r\n\t\t\tif ( texture.anisotropy > 1 || texture.__currentAnisotropy ) {\r\n\r\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, _this.getMaxAnisotropy() ) );\r\n\t\t\t\ttexture.__currentAnisotropy = texture.anisotropy;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.uploadTexture = function ( texture ) {\r\n\r\n\t\tif ( texture.__webglInit === undefined ) {\r\n\r\n\t\t\ttexture.__webglInit = true;\r\n\r\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\t\ttexture.__webglTexture = _gl.createTexture();\r\n\r\n\t\t\t_this.info.memory.textures ++;\r\n\r\n\t\t}\r\n\r\n\t\t_gl.bindTexture( _gl.TEXTURE_2D, texture.__webglTexture );\r\n\r\n\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\r\n\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\r\n\r\n\t\ttexture.image = clampToMaxSize( texture.image, _maxTextureSize );\r\n\r\n\t\tvar image = texture.image,\r\n\t\tisImagePowerOfTwo = THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height ),\r\n\t\tglFormat = paramThreeToGL( texture.format ),\r\n\t\tglType = paramThreeToGL( texture.type );\r\n\r\n\t\tsetTextureParameters( _gl.TEXTURE_2D, texture, isImagePowerOfTwo );\r\n\r\n\t\tvar mipmap, mipmaps = texture.mipmaps;\r\n\r\n\t\tif ( texture instanceof THREE.DataTexture ) {\r\n\r\n\t\t\t// use manually created mipmaps if available\r\n\t\t\t// if there are no manual mipmaps\r\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\r\n\t\t\tif ( mipmaps.length > 0 && isImagePowerOfTwo ) {\r\n\r\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\t_gl.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.generateMipmaps = false;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( texture instanceof THREE.CompressedTexture ) {\r\n\r\n\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tmipmap = mipmaps[ i ];\r\n\r\n\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\r\n\r\n\t\t\t\t\tif ( getCompressedTextureFormats().indexOf( glFormat ) > -1 ) {\r\n\r\n\t\t\t\t\t\t_gl.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tTHREE.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\" );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t_gl.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else { // regular Texture (image, video, canvas)\r\n\r\n\t\t\t// use manually created mipmaps if available\r\n\t\t\t// if there are no manual mipmaps\r\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\r\n\t\t\tif ( mipmaps.length > 0 && isImagePowerOfTwo ) {\r\n\r\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\t_gl.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.generateMipmaps = false;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, texture.image );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( texture.generateMipmaps && isImagePowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\r\n\t\ttexture.needsUpdate = false;\r\n\r\n\t\tif ( texture.onUpdate ) texture.onUpdate();\r\n\r\n\t};\r\n\r\n\tthis.setTexture = function ( texture, slot ) {\r\n\r\n\t\t_gl.activeTexture( _gl.TEXTURE0 + slot );\r\n\r\n\t\tif ( texture.needsUpdate ) {\r\n\r\n\t\t\t_this.uploadTexture( texture );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.bindTexture( _gl.TEXTURE_2D, texture.__webglTexture );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction clampToMaxSize ( image, maxSize ) {\r\n\r\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\r\n\r\n\t\t\t// Warning: Scaling through the canvas will only work with images that use\r\n\t\t\t// premultiplied alpha.\r\n\r\n\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\r\n\r\n\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\tcanvas.width = Math.floor( image.width * scale );\r\n\t\t\tcanvas.height = Math.floor( image.height * scale );\r\n\r\n\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\r\n\r\n\t\t\tTHREE.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\r\n\r\n\t\t\treturn canvas;\r\n\r\n\t\t}\r\n\r\n\t\treturn image;\r\n\r\n\t}\r\n\r\n\tfunction setCubeTexture ( texture, slot ) {\r\n\r\n\t\tif ( texture.image.length === 6 ) {\r\n\r\n\t\t\tif ( texture.needsUpdate ) {\r\n\r\n\t\t\t\tif ( ! texture.image.__webglTextureCube ) {\r\n\r\n\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\t\t\t\ttexture.image.__webglTextureCube = _gl.createTexture();\r\n\r\n\t\t\t\t\t_this.info.memory.textures ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_gl.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\t_gl.bindTexture( _gl.TEXTURE_CUBE_MAP, texture.image.__webglTextureCube );\r\n\r\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\r\n\t\t\t\tvar isCompressed = texture instanceof THREE.CompressedTexture;\r\n\t\t\t\tvar isDataTexture = texture.image[ 0 ] instanceof THREE.DataTexture;\r\n\r\n\t\t\t\tvar cubeImage = [];\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\tif ( _this.autoScaleCubemaps && ! isCompressed && ! isDataTexture ) {\r\n\r\n\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], _maxCubemapSize );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar image = cubeImage[ 0 ],\r\n\t\t\t\tisImagePowerOfTwo = THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height ),\r\n\t\t\t\tglFormat = paramThreeToGL( texture.format ),\r\n\t\t\t\tglType = paramThreeToGL( texture.type );\r\n\r\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isImagePowerOfTwo );\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\tif ( ! isCompressed ) {\r\n\r\n\t\t\t\t\t\tif ( isDataTexture ) {\r\n\r\n\t\t\t\t\t\t\t_gl.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t_gl.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\r\n\r\n\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\r\n\r\n\t\t\t\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( getCompressedTextureFormats().indexOf( glFormat ) > -1 ) {\r\n\r\n\t\t\t\t\t\t\t\t\t_gl.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\tTHREE.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setCubeTexture()\" );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t_gl.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( texture.generateMipmaps && isImagePowerOfTwo ) {\r\n\r\n\t\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.needsUpdate = false;\r\n\r\n\t\t\t\tif ( texture.onUpdate ) texture.onUpdate();\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\t_gl.bindTexture( _gl.TEXTURE_CUBE_MAP, texture.image.__webglTextureCube );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setCubeTextureDynamic ( texture, slot ) {\r\n\r\n\t\t_gl.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t_gl.bindTexture( _gl.TEXTURE_CUBE_MAP, texture.__webglTexture );\r\n\r\n\t}\r\n\r\n\t// Render targets\r\n\r\n\tfunction setupFrameBuffer ( framebuffer, renderTarget, textureTarget ) {\r\n\r\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureTarget, renderTarget.__webglTexture, 0 );\r\n\r\n\t}\r\n\r\n\tfunction setupRenderBuffer ( renderbuffer, renderTarget  ) {\r\n\r\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\r\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\t/* For some reason this is not working. Defaulting to RGBA4.\r\n\t\t} else if ( ! renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.STENCIL_INDEX8, renderTarget.width, renderTarget.height );\r\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\t\t*/\r\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\r\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.setRenderTarget = function ( renderTarget ) {\r\n\r\n\t\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\r\n\r\n\t\tif ( renderTarget && renderTarget.__webglFramebuffer === undefined ) {\r\n\r\n\t\t\tif ( renderTarget.depthBuffer === undefined ) renderTarget.depthBuffer = true;\r\n\t\t\tif ( renderTarget.stencilBuffer === undefined ) renderTarget.stencilBuffer = true;\r\n\r\n\t\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\r\n\r\n\t\t\trenderTarget.__webglTexture = _gl.createTexture();\r\n\r\n\t\t\t_this.info.memory.textures ++;\r\n\r\n\t\t\t// Setup texture, create render and frame buffers\r\n\r\n\t\t\tvar isTargetPowerOfTwo = THREE.Math.isPowerOfTwo( renderTarget.width ) && THREE.Math.isPowerOfTwo( renderTarget.height ),\r\n\t\t\t\tglFormat = paramThreeToGL( renderTarget.format ),\r\n\t\t\t\tglType = paramThreeToGL( renderTarget.type );\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\trenderTarget.__webglFramebuffer = [];\r\n\t\t\t\trenderTarget.__webglRenderbuffer = [];\r\n\r\n\t\t\t\t_gl.bindTexture( _gl.TEXTURE_CUBE_MAP, renderTarget.__webglTexture );\r\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget, isTargetPowerOfTwo );\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\trenderTarget.__webglFramebuffer[ i ] = _gl.createFramebuffer();\r\n\t\t\t\t\trenderTarget.__webglRenderbuffer[ i ] = _gl.createRenderbuffer();\r\n\r\n\t\t\t\t\t_gl.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\r\n\r\n\t\t\t\t\tsetupFrameBuffer( renderTarget.__webglFramebuffer[ i ], renderTarget, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\r\n\t\t\t\t\tsetupRenderBuffer( renderTarget.__webglRenderbuffer[ i ], renderTarget );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderTarget.__webglFramebuffer = _gl.createFramebuffer();\r\n\r\n\t\t\t\tif ( renderTarget.shareDepthFrom ) {\r\n\r\n\t\t\t\t\trenderTarget.__webglRenderbuffer = renderTarget.shareDepthFrom.__webglRenderbuffer;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\trenderTarget.__webglRenderbuffer = _gl.createRenderbuffer();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_gl.bindTexture( _gl.TEXTURE_2D, renderTarget.__webglTexture );\r\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget, isTargetPowerOfTwo );\r\n\r\n\t\t\t\t_gl.texImage2D( _gl.TEXTURE_2D, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\r\n\r\n\t\t\t\tsetupFrameBuffer( renderTarget.__webglFramebuffer, renderTarget, _gl.TEXTURE_2D );\r\n\r\n\t\t\t\tif ( renderTarget.shareDepthFrom ) {\r\n\r\n\t\t\t\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderTarget.__webglRenderbuffer );\r\n\r\n\t\t\t\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderTarget.__webglRenderbuffer );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tsetupRenderBuffer( renderTarget.__webglRenderbuffer, renderTarget );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Release everything\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\t_gl.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.bindTexture( _gl.TEXTURE_2D, null );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\r\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\r\n\r\n\t\t}\r\n\r\n\t\tvar framebuffer, width, height, vx, vy;\r\n\r\n\t\tif ( renderTarget ) {\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\tframebuffer = renderTarget.__webglFramebuffer[ renderTarget.activeCubeFace ];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tframebuffer = renderTarget.__webglFramebuffer;\r\n\r\n\t\t\t}\r\n\r\n\t\t\twidth = renderTarget.width;\r\n\t\t\theight = renderTarget.height;\r\n\r\n\t\t\tvx = 0;\r\n\t\t\tvy = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tframebuffer = null;\r\n\r\n\t\t\twidth = _viewportWidth;\r\n\t\t\theight = _viewportHeight;\r\n\r\n\t\t\tvx = _viewportX;\r\n\t\t\tvy = _viewportY;\r\n\r\n\t\t}\r\n\r\n\t\tif ( framebuffer !== _currentFramebuffer ) {\r\n\r\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t\t_gl.viewport( vx, vy, width, height );\r\n\r\n\t\t\t_currentFramebuffer = framebuffer;\r\n\r\n\t\t}\r\n\r\n\t\t_currentWidth = width;\r\n\t\t_currentHeight = height;\r\n\r\n\t};\r\n\r\n\tthis.readRenderTargetPixels = function( renderTarget, x, y, width, height, buffer ) {\r\n\r\n\t\tif ( ! ( renderTarget instanceof THREE.WebGLRenderTarget ) ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( renderTarget.__webglFramebuffer ) {\r\n\r\n\t\t\tif ( renderTarget.format !== THREE.RGBAFormat ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA format. readPixels can read only RGBA format.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar restore = false;\r\n\r\n\t\t\tif ( renderTarget.__webglFramebuffer !== _currentFramebuffer ) {\r\n\r\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTarget.__webglFramebuffer );\r\n\r\n\t\t\t\trestore = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\r\n\r\n\t\t\t\t_gl.readPixels( x, y, width, height, _gl.RGBA, _gl.UNSIGNED_BYTE, buffer );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( restore ) {\r\n\r\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction updateRenderTargetMipmap ( renderTarget ) {\r\n\r\n\t\tif ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\r\n\r\n\t\t\t_gl.bindTexture( _gl.TEXTURE_CUBE_MAP, renderTarget.__webglTexture );\r\n\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\t\t\t_gl.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.bindTexture( _gl.TEXTURE_2D, renderTarget.__webglTexture );\r\n\t\t\t_gl.generateMipmap( _gl.TEXTURE_2D );\r\n\t\t\t_gl.bindTexture( _gl.TEXTURE_2D, null );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Fallback filters for non-power-of-2 textures\r\n\r\n\tfunction filterFallback ( f ) {\r\n\r\n\t\tif ( f === THREE.NearestFilter || f === THREE.NearestMipMapNearestFilter || f === THREE.NearestMipMapLinearFilter ) {\r\n\r\n\t\t\treturn _gl.NEAREST;\r\n\r\n\t\t}\r\n\r\n\t\treturn _gl.LINEAR;\r\n\r\n\t}\r\n\r\n\t// Map three.js constants to WebGL constants\r\n\r\n\tfunction paramThreeToGL ( p ) {\r\n\r\n\t\tvar extension;\r\n\r\n\t\tif ( p === THREE.RepeatWrapping ) return _gl.REPEAT;\r\n\t\tif ( p === THREE.ClampToEdgeWrapping ) return _gl.CLAMP_TO_EDGE;\r\n\t\tif ( p === THREE.MirroredRepeatWrapping ) return _gl.MIRRORED_REPEAT;\r\n\r\n\t\tif ( p === THREE.NearestFilter ) return _gl.NEAREST;\r\n\t\tif ( p === THREE.NearestMipMapNearestFilter ) return _gl.NEAREST_MIPMAP_NEAREST;\r\n\t\tif ( p === THREE.NearestMipMapLinearFilter ) return _gl.NEAREST_MIPMAP_LINEAR;\r\n\r\n\t\tif ( p === THREE.LinearFilter ) return _gl.LINEAR;\r\n\t\tif ( p === THREE.LinearMipMapNearestFilter ) return _gl.LINEAR_MIPMAP_NEAREST;\r\n\t\tif ( p === THREE.LinearMipMapLinearFilter ) return _gl.LINEAR_MIPMAP_LINEAR;\r\n\r\n\t\tif ( p === THREE.UnsignedByteType ) return _gl.UNSIGNED_BYTE;\r\n\t\tif ( p === THREE.UnsignedShort4444Type ) return _gl.UNSIGNED_SHORT_4_4_4_4;\r\n\t\tif ( p === THREE.UnsignedShort5551Type ) return _gl.UNSIGNED_SHORT_5_5_5_1;\r\n\t\tif ( p === THREE.UnsignedShort565Type ) return _gl.UNSIGNED_SHORT_5_6_5;\r\n\r\n\t\tif ( p === THREE.ByteType ) return _gl.BYTE;\r\n\t\tif ( p === THREE.ShortType ) return _gl.SHORT;\r\n\t\tif ( p === THREE.UnsignedShortType ) return _gl.UNSIGNED_SHORT;\r\n\t\tif ( p === THREE.IntType ) return _gl.INT;\r\n\t\tif ( p === THREE.UnsignedIntType ) return _gl.UNSIGNED_INT;\r\n\t\tif ( p === THREE.FloatType ) return _gl.FLOAT;\r\n\r\n\t\textension = extensions.get( 'OES_texture_half_float' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.HalfFloatType ) return extension.HALF_FLOAT_OES;\r\n\r\n\t\t}\r\n\r\n\t\tif ( p === THREE.AlphaFormat ) return _gl.ALPHA;\r\n\t\tif ( p === THREE.RGBFormat ) return _gl.RGB;\r\n\t\tif ( p === THREE.RGBAFormat ) return _gl.RGBA;\r\n\t\tif ( p === THREE.LuminanceFormat ) return _gl.LUMINANCE;\r\n\t\tif ( p === THREE.LuminanceAlphaFormat ) return _gl.LUMINANCE_ALPHA;\r\n\r\n\t\tif ( p === THREE.AddEquation ) return _gl.FUNC_ADD;\r\n\t\tif ( p === THREE.SubtractEquation ) return _gl.FUNC_SUBTRACT;\r\n\t\tif ( p === THREE.ReverseSubtractEquation ) return _gl.FUNC_REVERSE_SUBTRACT;\r\n\r\n\t\tif ( p === THREE.ZeroFactor ) return _gl.ZERO;\r\n\t\tif ( p === THREE.OneFactor ) return _gl.ONE;\r\n\t\tif ( p === THREE.SrcColorFactor ) return _gl.SRC_COLOR;\r\n\t\tif ( p === THREE.OneMinusSrcColorFactor ) return _gl.ONE_MINUS_SRC_COLOR;\r\n\t\tif ( p === THREE.SrcAlphaFactor ) return _gl.SRC_ALPHA;\r\n\t\tif ( p === THREE.OneMinusSrcAlphaFactor ) return _gl.ONE_MINUS_SRC_ALPHA;\r\n\t\tif ( p === THREE.DstAlphaFactor ) return _gl.DST_ALPHA;\r\n\t\tif ( p === THREE.OneMinusDstAlphaFactor ) return _gl.ONE_MINUS_DST_ALPHA;\r\n\r\n\t\tif ( p === THREE.DstColorFactor ) return _gl.DST_COLOR;\r\n\t\tif ( p === THREE.OneMinusDstColorFactor ) return _gl.ONE_MINUS_DST_COLOR;\r\n\t\tif ( p === THREE.SrcAlphaSaturateFactor ) return _gl.SRC_ALPHA_SATURATE;\r\n\r\n\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\r\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\r\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\r\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\r\n\r\n\t\t}\r\n\r\n\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\r\n\t\t\tif ( p === THREE.RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\r\n\t\t\tif ( p === THREE.RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\r\n\t\t\tif ( p === THREE.RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\r\n\r\n\t\t}\r\n\r\n\t\textension = extensions.get( 'EXT_blend_minmax' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.MinEquation ) return extension.MIN_EXT;\r\n\t\t\tif ( p === THREE.MaxEquation ) return extension.MAX_EXT;\r\n\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\r\n\t}\r\n\r\n\t// Allocations\r\n\r\n\tfunction allocateBones ( object ) {\r\n\r\n\t\tif ( _supportsBoneTextures && object && object.skeleton && object.skeleton.useVertexTexture ) {\r\n\r\n\t\t\treturn 1024;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// default for when object is not specified\r\n\t\t\t// ( for example when prebuilding shader\r\n\t\t\t//   to be used with multiple objects )\r\n\t\t\t//\r\n\t\t\t//  - leave some extra space for other uniforms\r\n\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\r\n\t\t\t//    (up to 54 should be safe)\r\n\r\n\t\t\tvar nVertexUniforms = _gl.getParameter( _gl.MAX_VERTEX_UNIFORM_VECTORS );\r\n\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\r\n\r\n\t\t\tvar maxBones = nVertexMatrices;\r\n\r\n\t\t\tif ( object !== undefined && object instanceof THREE.SkinnedMesh ) {\r\n\r\n\t\t\t\tmaxBones = Math.min( object.skeleton.bones.length, maxBones );\r\n\r\n\t\t\t\tif ( maxBones < object.skeleton.bones.length ) {\r\n\r\n\t\t\t\t\tTHREE.warn( 'WebGLRenderer: too many bones - ' + object.skeleton.bones.length + ', this GPU supports just ' + maxBones + ' (try OpenGL instead of ANGLE)' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn maxBones;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction allocateLights( lights ) {\r\n\r\n\t\tvar dirLights = 0;\r\n\t\tvar pointLights = 0;\r\n\t\tvar spotLights = 0;\r\n\t\tvar hemiLights = 0;\r\n\r\n\t\tfor ( var l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\r\n\t\t\tvar light = lights[ l ];\r\n\r\n\t\t\tif ( light.onlyShadow || light.visible === false ) continue;\r\n\r\n\t\t\tif ( light instanceof THREE.DirectionalLight ) dirLights ++;\r\n\t\t\tif ( light instanceof THREE.PointLight ) pointLights ++;\r\n\t\t\tif ( light instanceof THREE.SpotLight ) spotLights ++;\r\n\t\t\tif ( light instanceof THREE.HemisphereLight ) hemiLights ++;\r\n\r\n\t\t}\r\n\r\n\t\treturn { 'directional': dirLights, 'point': pointLights, 'spot': spotLights, 'hemi': hemiLights };\r\n\r\n\t}\r\n\r\n\tfunction allocateShadows( lights ) {\r\n\r\n\t\tvar maxShadows = 0;\r\n\r\n\t\tfor ( var l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\r\n\t\t\tvar light = lights[ l ];\r\n\r\n\t\t\tif ( ! light.castShadow ) continue;\r\n\r\n\t\t\tif ( light instanceof THREE.SpotLight ) maxShadows ++;\r\n\t\t\tif ( light instanceof THREE.DirectionalLight && ! light.shadowCascade ) maxShadows ++;\r\n\r\n\t\t}\r\n\r\n\t\treturn maxShadows;\r\n\r\n\t}\r\n\r\n\t// DEPRECATED\r\n\r\n\tthis.initMaterial = function () {\r\n\r\n\t\tTHREE.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\r\n\r\n\t};\r\n\r\n\tthis.addPrePlugin = function () {\r\n\r\n\t\tTHREE.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\r\n\r\n\t};\r\n\r\n\tthis.addPostPlugin = function () {\r\n\r\n\t\tTHREE.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\r\n\r\n\t};\r\n\r\n\tthis.updateShadowMap = function () {\r\n\r\n\t\tTHREE.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/renderers/WebGLRenderTarget.js\r\n\r\n/**\r\n * @author szimek / https://github.com/szimek/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.WebGLRenderTarget = function ( width, height, options ) {\r\n\r\n\tthis.width = width;\r\n\tthis.height = height;\r\n\r\n\toptions = options || {};\r\n\r\n\tthis.wrapS = options.wrapS !== undefined ? options.wrapS : THREE.ClampToEdgeWrapping;\r\n\tthis.wrapT = options.wrapT !== undefined ? options.wrapT : THREE.ClampToEdgeWrapping;\r\n\r\n\tthis.magFilter = options.magFilter !== undefined ? options.magFilter : THREE.LinearFilter;\r\n\tthis.minFilter = options.minFilter !== undefined ? options.minFilter : THREE.LinearMipMapLinearFilter;\r\n\r\n\tthis.anisotropy = options.anisotropy !== undefined ? options.anisotropy : 1;\r\n\r\n\tthis.offset = new THREE.Vector2( 0, 0 );\r\n\tthis.repeat = new THREE.Vector2( 1, 1 );\r\n\r\n\tthis.format = options.format !== undefined ? options.format : THREE.RGBAFormat;\r\n\tthis.type = options.type !== undefined ? options.type : THREE.UnsignedByteType;\r\n\r\n\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\r\n\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\r\n\r\n\tthis.generateMipmaps = true;\r\n\r\n\tthis.shareDepthFrom = options.shareDepthFrom !== undefined ? options.shareDepthFrom : null;\r\n\r\n};\r\n\r\nTHREE.WebGLRenderTarget.prototype = {\r\n\r\n\tconstructor: THREE.WebGLRenderTarget,\r\n\r\n\tsetSize: function ( width, height ) {\r\n\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\tvar tmp = new THREE.WebGLRenderTarget( this.width, this.height );\r\n\r\n\t\ttmp.wrapS = this.wrapS;\r\n\t\ttmp.wrapT = this.wrapT;\r\n\r\n\t\ttmp.magFilter = this.magFilter;\r\n\t\ttmp.minFilter = this.minFilter;\r\n\r\n\t\ttmp.anisotropy = this.anisotropy;\r\n\r\n\t\ttmp.offset.copy( this.offset );\r\n\t\ttmp.repeat.copy( this.repeat );\r\n\r\n\t\ttmp.format = this.format;\r\n\t\ttmp.type = this.type;\r\n\r\n\t\ttmp.depthBuffer = this.depthBuffer;\r\n\t\ttmp.stencilBuffer = this.stencilBuffer;\r\n\r\n\t\ttmp.generateMipmaps = this.generateMipmaps;\r\n\r\n\t\ttmp.shareDepthFrom = this.shareDepthFrom;\r\n\r\n\t\treturn tmp;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.WebGLRenderTarget.prototype );\r\n\r\n// File:src/renderers/WebGLRenderTargetCube.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com\r\n */\r\n\r\nTHREE.WebGLRenderTargetCube = function ( width, height, options ) {\r\n\r\n\tTHREE.WebGLRenderTarget.call( this, width, height, options );\r\n\r\n\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\r\n\r\n};\r\n\r\nTHREE.WebGLRenderTargetCube.prototype = Object.create( THREE.WebGLRenderTarget.prototype );\r\nTHREE.WebGLRenderTargetCube.prototype.constructor = THREE.WebGLRenderTargetCube;\r\n\r\n// File:src/renderers/webgl/WebGLExtensions.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLExtensions = function ( gl ) {\r\n\r\n\tvar extensions = {};\r\n\r\n\tthis.get = function ( name ) {\r\n\r\n\t\tif ( extensions[ name ] !== undefined ) {\r\n\r\n\t\t\treturn extensions[ name ];\r\n\r\n\t\t}\r\n\r\n\t\tvar extension;\r\n\r\n\t\tswitch ( name ) {\r\n\r\n\t\t\tcase 'EXT_texture_filter_anisotropic':\r\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\r\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\r\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\textension = gl.getExtension( name );\r\n\r\n\t\t}\r\n\r\n\t\tif ( extension === null ) {\r\n\r\n\t\t\tTHREE.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\r\n\r\n\t\t}\r\n\r\n\t\textensions[ name ] = extension;\r\n\r\n\t\treturn extension;\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLProgram.js\r\n\r\nTHREE.WebGLProgram = ( function () {\r\n\r\n\tvar programIdCount = 0;\r\n\r\n\tvar generateDefines = function ( defines ) {\r\n\r\n\t\tvar value, chunk, chunks = [];\r\n\r\n\t\tfor ( var d in defines ) {\r\n\r\n\t\t\tvalue = defines[ d ];\r\n\t\t\tif ( value === false ) continue;\r\n\r\n\t\t\tchunk = '#define ' + d + ' ' + value;\r\n\t\t\tchunks.push( chunk );\r\n\r\n\t\t}\r\n\r\n\t\treturn chunks.join( '\\n' );\r\n\r\n\t};\r\n\r\n\tvar cacheUniformLocations = function ( gl, program, identifiers ) {\r\n\r\n\t\tvar uniforms = {};\r\n\r\n\t\tfor ( var i = 0, l = identifiers.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar id = identifiers[ i ];\r\n\t\t\tuniforms[ id ] = gl.getUniformLocation( program, id );\r\n\r\n\t\t}\r\n\r\n\t\treturn uniforms;\r\n\r\n\t};\r\n\r\n\tvar cacheAttributeLocations = function ( gl, program, identifiers ) {\r\n\r\n\t\tvar attributes = {};\r\n\r\n\t\tfor ( var i = 0, l = identifiers.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar id = identifiers[ i ];\r\n\t\t\tattributes[ id ] = gl.getAttribLocation( program, id );\r\n\r\n\t\t}\r\n\r\n\t\treturn attributes;\r\n\r\n\t};\r\n\r\n\treturn function ( renderer, code, material, parameters ) {\r\n\r\n\t\tvar _this = renderer;\r\n\t\tvar _gl = _this.context;\r\n\r\n\t\tvar defines = material.defines;\r\n\t\tvar uniforms = material.__webglShader.uniforms;\r\n\t\tvar attributes = material.attributes;\r\n\r\n\t\tvar vertexShader = material.__webglShader.vertexShader;\r\n\t\tvar fragmentShader = material.__webglShader.fragmentShader;\r\n\r\n\t\tvar index0AttributeName = material.index0AttributeName;\r\n\r\n\t\tif ( index0AttributeName === undefined && parameters.morphTargets === true ) {\r\n\r\n\t\t\t// programs with morphTargets displace position out of attribute 0\r\n\r\n\t\t\tindex0AttributeName = 'position';\r\n\r\n\t\t}\r\n\r\n\t\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\r\n\r\n\t\tif ( parameters.shadowMapType === THREE.PCFShadowMap ) {\r\n\r\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\r\n\r\n\t\t} else if ( parameters.shadowMapType === THREE.PCFSoftShadowMap ) {\r\n\r\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\r\n\r\n\t\t}\r\n\r\n\t\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\r\n\t\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\r\n\t\tif ( parameters.envMap ) {\r\n\r\n\t\t\tswitch ( material.envMap.mapping ) {\r\n\r\n\t\t\t\tcase THREE.CubeReflectionMapping:\r\n\t\t\t\tcase THREE.CubeRefractionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.EquirectangularReflectionMapping:\r\n\t\t\t\tcase THREE.EquirectangularRefractionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.SphericalReflectionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tswitch ( material.envMap.mapping ) {\r\n\r\n\t\t\t\tcase THREE.CubeRefractionMapping:\r\n\t\t\t\tcase THREE.EquirectangularRefractionMapping:\r\n\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tswitch ( material.combine ) {\r\n\r\n\t\t\t\tcase THREE.MultiplyOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.MixOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.AddOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\r\n\r\n\t\t// console.log( 'building new program ' );\r\n\r\n\t\t//\r\n\r\n\t\tvar customDefines = generateDefines( defines );\r\n\r\n\t\t//\r\n\r\n\t\tvar program = _gl.createProgram();\r\n\r\n\t\tvar prefix_vertex, prefix_fragment;\r\n\r\n\t\tif ( material instanceof THREE.RawShaderMaterial ) {\r\n\r\n\t\t\tprefix_vertex = '';\r\n\t\t\tprefix_fragment = '';\r\n\r\n\t\t} else {\r\n\r\n\t\t\tprefix_vertex = [\r\n\r\n\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\r\n\t\t\t\tcustomDefines,\r\n\r\n\t\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\r\n\r\n\t\t\t\t_this.gammaInput ? '#define GAMMA_INPUT' : '',\r\n\t\t\t\t_this.gammaOutput ? '#define GAMMA_OUTPUT' : '',\r\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\r\n\t\t\t\t'#define MAX_DIR_LIGHTS ' + parameters.maxDirLights,\r\n\t\t\t\t'#define MAX_POINT_LIGHTS ' + parameters.maxPointLights,\r\n\t\t\t\t'#define MAX_SPOT_LIGHTS ' + parameters.maxSpotLights,\r\n\t\t\t\t'#define MAX_HEMI_LIGHTS ' + parameters.maxHemiLights,\r\n\r\n\t\t\t\t'#define MAX_SHADOWS ' + parameters.maxShadows,\r\n\r\n\t\t\t\t'#define MAX_BONES ' + parameters.maxBones,\r\n\r\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\r\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED': '',\r\n\r\n\t\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\r\n\t\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\r\n\r\n\t\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\r\n\t\t\t\tparameters.morphNormals ? '#define USE_MORPHNORMALS' : '',\r\n\t\t\t\tparameters.wrapAround ? '#define WRAP_AROUND' : '',\r\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\t\t\t\tparameters.shadowMapDebug ? '#define SHADOWMAP_DEBUG' : '',\r\n\t\t\t\tparameters.shadowMapCascade ? '#define SHADOWMAP_CASCADE' : '',\r\n\r\n\t\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\r\n\r\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\t//_this._glExtensionFragDepth ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\r\n\r\n\t\t\t\t'uniform mat4 modelMatrix;',\r\n\t\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t'uniform mat3 normalMatrix;',\r\n\t\t\t\t'uniform vec3 cameraPosition;',\r\n\r\n\t\t\t\t'attribute vec3 position;',\r\n\t\t\t\t'attribute vec3 normal;',\r\n\t\t\t\t'attribute vec2 uv;',\r\n\t\t\t\t'attribute vec2 uv2;',\r\n\r\n\t\t\t\t'#ifdef USE_COLOR',\r\n\r\n\t\t\t\t'\tattribute vec3 color;',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t'#ifdef USE_MORPHTARGETS',\r\n\r\n\t\t\t\t'\tattribute vec3 morphTarget0;',\r\n\t\t\t\t'\tattribute vec3 morphTarget1;',\r\n\t\t\t\t'\tattribute vec3 morphTarget2;',\r\n\t\t\t\t'\tattribute vec3 morphTarget3;',\r\n\r\n\t\t\t\t'\t#ifdef USE_MORPHNORMALS',\r\n\r\n\t\t\t\t'\t\tattribute vec3 morphNormal0;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal1;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal2;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal3;',\r\n\r\n\t\t\t\t'\t#else',\r\n\r\n\t\t\t\t'\t\tattribute vec3 morphTarget4;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget5;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget6;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget7;',\r\n\r\n\t\t\t\t'\t#endif',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t'#ifdef USE_SKINNING',\r\n\r\n\t\t\t\t'\tattribute vec4 skinIndex;',\r\n\t\t\t\t'\tattribute vec4 skinWeight;',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t''\r\n\r\n\t\t\t].join( '\\n' );\r\n\r\n\t\t\tprefix_fragment = [\r\n\r\n\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\r\n\t\t\t\t( parameters.bumpMap || parameters.normalMap || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '',\r\n\r\n\t\t\t\tcustomDefines,\r\n\r\n\t\t\t\t'#define MAX_DIR_LIGHTS ' + parameters.maxDirLights,\r\n\t\t\t\t'#define MAX_POINT_LIGHTS ' + parameters.maxPointLights,\r\n\t\t\t\t'#define MAX_SPOT_LIGHTS ' + parameters.maxSpotLights,\r\n\t\t\t\t'#define MAX_HEMI_LIGHTS ' + parameters.maxHemiLights,\r\n\r\n\t\t\t\t'#define MAX_SHADOWS ' + parameters.maxShadows,\r\n\r\n\t\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '',\r\n\r\n\t\t\t\t_this.gammaInput ? '#define GAMMA_INPUT' : '',\r\n\t\t\t\t_this.gammaOutput ? '#define GAMMA_OUTPUT' : '',\r\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\r\n\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\r\n\t\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\r\n\r\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\r\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\r\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED': '',\r\n\r\n\t\t\t\tparameters.metal ? '#define METAL' : '',\r\n\t\t\t\tparameters.wrapAround ? '#define WRAP_AROUND' : '',\r\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\t\t\t\tparameters.shadowMapDebug ? '#define SHADOWMAP_DEBUG' : '',\r\n\t\t\t\tparameters.shadowMapCascade ? '#define SHADOWMAP_CASCADE' : '',\r\n\r\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\t//_this._glExtensionFragDepth ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\r\n\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t'uniform vec3 cameraPosition;',\r\n\t\t\t\t''\r\n\r\n\t\t\t].join( '\\n' );\r\n\r\n\t\t}\r\n\r\n\t\tvar glVertexShader = new THREE.WebGLShader( _gl, _gl.VERTEX_SHADER, prefix_vertex + vertexShader );\r\n\t\tvar glFragmentShader = new THREE.WebGLShader( _gl, _gl.FRAGMENT_SHADER, prefix_fragment + fragmentShader );\r\n\r\n\t\t_gl.attachShader( program, glVertexShader );\r\n\t\t_gl.attachShader( program, glFragmentShader );\r\n\r\n\t\tif ( index0AttributeName !== undefined ) {\r\n\r\n\t\t\t// Force a particular attribute to index 0.\r\n\t\t\t// because potentially expensive emulation is done by browser if attribute 0 is disabled.\r\n\t\t\t// And, color, for example is often automatically bound to index 0 so disabling it\r\n\r\n\t\t\t_gl.bindAttribLocation( program, 0, index0AttributeName );\r\n\r\n\t\t}\r\n\r\n\t\t_gl.linkProgram( program );\r\n\r\n\t\tvar programLogInfo = _gl.getProgramInfoLog( program );\r\n\r\n\t\tif ( _gl.getProgramParameter( program, _gl.LINK_STATUS ) === false ) {\r\n\r\n\t\t\tTHREE.error( 'THREE.WebGLProgram: shader error: ' + _gl.getError(), 'gl.VALIDATE_STATUS', _gl.getProgramParameter( program, _gl.VALIDATE_STATUS ), 'gl.getPRogramInfoLog', programLogInfo );\r\n\r\n\t\t}\r\n\r\n\t\tif ( programLogInfo !== '' ) {\r\n\r\n\t\t\tTHREE.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()' + programLogInfo );\r\n\t\t\t// THREE.warn( _gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\r\n\t\t\t// THREE.warn( _gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\r\n\r\n\t\t}\r\n\r\n\t\t// clean up\r\n\r\n\t\t_gl.deleteShader( glVertexShader );\r\n\t\t_gl.deleteShader( glFragmentShader );\r\n\r\n\t\t// cache uniform locations\r\n\r\n\t\tvar identifiers = [\r\n\r\n\t\t\t'viewMatrix',\r\n\t\t\t'modelViewMatrix',\r\n\t\t\t'projectionMatrix',\r\n\t\t\t'normalMatrix',\r\n\t\t\t'modelMatrix',\r\n\t\t\t'cameraPosition',\r\n\t\t\t'morphTargetInfluences',\r\n\t\t\t'bindMatrix',\r\n\t\t\t'bindMatrixInverse'\r\n\r\n\t\t];\r\n\r\n\t\tif ( parameters.useVertexTexture ) {\r\n\r\n\t\t\tidentifiers.push( 'boneTexture' );\r\n\t\t\tidentifiers.push( 'boneTextureWidth' );\r\n\t\t\tidentifiers.push( 'boneTextureHeight' );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tidentifiers.push( 'boneGlobalMatrices' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( parameters.logarithmicDepthBuffer ) {\r\n\r\n\t\t\tidentifiers.push('logDepthBufFC');\r\n\r\n\t\t}\r\n\r\n\r\n\t\tfor ( var u in uniforms ) {\r\n\r\n\t\t\tidentifiers.push( u );\r\n\r\n\t\t}\r\n\r\n\t\tthis.uniforms = cacheUniformLocations( _gl, program, identifiers );\r\n\r\n\t\t// cache attributes locations\r\n\r\n\t\tidentifiers = [\r\n\r\n\t\t\t'position',\r\n\t\t\t'normal',\r\n\t\t\t'uv',\r\n\t\t\t'uv2',\r\n\t\t\t'tangent',\r\n\t\t\t'color',\r\n\t\t\t'skinIndex',\r\n\t\t\t'skinWeight',\r\n\t\t\t'lineDistance'\r\n\r\n\t\t];\r\n\r\n\t\tfor ( var i = 0; i < parameters.maxMorphTargets; i ++ ) {\r\n\r\n\t\t\tidentifiers.push( 'morphTarget' + i );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i < parameters.maxMorphNormals; i ++ ) {\r\n\r\n\t\t\tidentifiers.push( 'morphNormal' + i );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var a in attributes ) {\r\n\r\n\t\t\tidentifiers.push( a );\r\n\r\n\t\t}\r\n\r\n\t\tthis.attributes = cacheAttributeLocations( _gl, program, identifiers );\r\n\t\tthis.attributesKeys = Object.keys( this.attributes );\r\n\r\n\t\t//\r\n\r\n\t\tthis.id = programIdCount ++;\r\n\t\tthis.code = code;\r\n\t\tthis.usedTimes = 1;\r\n\t\tthis.program = program;\r\n\t\tthis.vertexShader = glVertexShader;\r\n\t\tthis.fragmentShader = glFragmentShader;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/renderers/webgl/WebGLShader.js\r\n\r\nTHREE.WebGLShader = ( function () {\r\n\r\n\tvar addLineNumbers = function ( string ) {\r\n\r\n\t\tvar lines = string.split( '\\n' );\r\n\r\n\t\tfor ( var i = 0; i < lines.length; i ++ ) {\r\n\r\n\t\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn lines.join( '\\n' );\r\n\r\n\t};\r\n\r\n\treturn function ( gl, type, string ) {\r\n\r\n\t\tvar shader = gl.createShader( type ); \r\n\r\n\t\tgl.shaderSource( shader, string );\r\n\t\tgl.compileShader( shader );\r\n\r\n\t\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\r\n\r\n\t\t\tTHREE.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\r\n\r\n\t\t\tTHREE.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\r\n\r\n\t\t}\r\n\r\n\t\t// --enable-privileged-webgl-extension\r\n\t\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\r\n\r\n\t\treturn shader;\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/renderers/webgl/WebGLState.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLState = function ( gl, paramThreeToGL ) {\r\n\r\n\tvar newAttributes = new Uint8Array( 16 );\r\n\tvar enabledAttributes = new Uint8Array( 16 );\r\n\r\n\tvar currentBlending = null;\r\n\tvar currentBlendEquation = null;\r\n\tvar currentBlendSrc = null;\r\n\tvar currentBlendDst = null;\r\n\tvar currentBlendEquationAlpha = null;\r\n\tvar currentBlendSrcAlpha = null;\r\n\tvar currentBlendDstAlpha = null;\r\n\r\n\tvar currentDepthTest = null;\r\n\tvar currentDepthWrite = null;\r\n\r\n\tvar currentColorWrite = null;\r\n\r\n\tvar currentDoubleSided = null;\r\n\tvar currentFlipSided = null;\r\n\r\n\tvar currentLineWidth = null;\r\n\r\n\tvar currentPolygonOffset = null;\r\n\tvar currentPolygonOffsetFactor = null;\r\n\tvar currentPolygonOffsetUnits = null;\r\n\r\n\tthis.initAttributes = function () {\r\n\r\n\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\r\n\r\n\t\t\tnewAttributes[ i ] = 0;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.enableAttribute = function ( attribute ) {\r\n\r\n\t\tnewAttributes[ attribute ] = 1;\r\n\r\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\r\n\r\n\t\t\tgl.enableVertexAttribArray( attribute );\r\n\t\t\tenabledAttributes[ attribute ] = 1;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.disableUnusedAttributes = function () {\r\n\r\n\t\tfor ( var i = 0, l = enabledAttributes.length; i < l; i ++ ) {\r\n\r\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\r\n\r\n\t\t\t\tgl.disableVertexAttribArray( i );\r\n\t\t\t\tenabledAttributes[ i ] = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setBlending = function ( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha ) {\r\n\r\n\t\tif ( blending !== currentBlending ) {\r\n\r\n\t\t\tif ( blending === THREE.NoBlending ) {\r\n\r\n\t\t\t\tgl.disable( gl.BLEND );\r\n\r\n\t\t\t} else if ( blending === THREE.AdditiveBlending ) {\r\n\r\n\t\t\t\tgl.enable( gl.BLEND );\r\n\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\r\n\r\n\t\t\t} else if ( blending === THREE.SubtractiveBlending ) {\r\n\r\n\t\t\t\t// TODO: Find blendFuncSeparate() combination\r\n\t\t\t\tgl.enable( gl.BLEND );\r\n\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\r\n\r\n\t\t\t} else if ( blending === THREE.MultiplyBlending ) {\r\n\r\n\t\t\t\t// TODO: Find blendFuncSeparate() combination\r\n\t\t\t\tgl.enable( gl.BLEND );\r\n\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\r\n\r\n\t\t\t} else if ( blending === THREE.CustomBlending ) {\r\n\r\n\t\t\t\tgl.enable( gl.BLEND );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.enable( gl.BLEND );\r\n\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\r\n\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentBlending = blending;\r\n\r\n\t\t}\r\n\r\n\t\tif ( blending === THREE.CustomBlending ) {\r\n\r\n\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\r\n\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\r\n\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\r\n\r\n\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\r\n\r\n\t\t\t\tgl.blendEquationSeparate( paramThreeToGL( blendEquation ), paramThreeToGL( blendEquationAlpha ) );\r\n\r\n\t\t\t\tcurrentBlendEquation = blendEquation;\r\n\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\r\n\r\n\t\t\t\tgl.blendFuncSeparate( paramThreeToGL( blendSrc ), paramThreeToGL( blendDst ), paramThreeToGL( blendSrcAlpha ), paramThreeToGL( blendDstAlpha ) );\r\n\r\n\t\t\t\tcurrentBlendSrc = blendSrc;\r\n\t\t\t\tcurrentBlendDst = blendDst;\r\n\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\r\n\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tcurrentBlendEquation = null;\r\n\t\t\tcurrentBlendSrc = null;\r\n\t\t\tcurrentBlendDst = null;\r\n\t\t\tcurrentBlendEquationAlpha = null;\r\n\t\t\tcurrentBlendSrcAlpha = null;\r\n\t\t\tcurrentBlendDstAlpha = null;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setDepthTest = function ( depthTest ) {\r\n\r\n\t\tif ( currentDepthTest !== depthTest ) {\r\n\r\n\t\t\tif ( depthTest ) {\r\n\r\n\t\t\t\tgl.enable( gl.DEPTH_TEST );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.disable( gl.DEPTH_TEST );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentDepthTest = depthTest;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setDepthWrite = function ( depthWrite ) {\r\n\r\n\t\tif ( currentDepthWrite !== depthWrite ) {\r\n\r\n\t\t\tgl.depthMask( depthWrite );\r\n\t\t\tcurrentDepthWrite = depthWrite;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setColorWrite = function ( colorWrite ) {\r\n\r\n\t\tif ( currentColorWrite !== colorWrite ) {\r\n\r\n\t\t\tgl.colorMask( colorWrite, colorWrite, colorWrite, colorWrite );\r\n\t\t\tcurrentColorWrite = colorWrite;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setDoubleSided = function ( doubleSided ) {\r\n\r\n\t\tif ( currentDoubleSided !== doubleSided ) {\r\n\r\n\t\t\tif ( doubleSided ) {\r\n\r\n\t\t\t\tgl.disable( gl.CULL_FACE );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.enable( gl.CULL_FACE );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentDoubleSided = doubleSided;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setFlipSided = function ( flipSided ) {\r\n\r\n\t\tif ( currentFlipSided !== flipSided ) {\r\n\r\n\t\t\tif ( flipSided ) {\r\n\r\n\t\t\t\tgl.frontFace( gl.CW );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.frontFace( gl.CCW );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentFlipSided = flipSided;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setLineWidth = function ( width ) {\r\n\r\n\t\tif ( width !== currentLineWidth ) {\r\n\r\n\t\t\tgl.lineWidth( width );\r\n\r\n\t\t\tcurrentLineWidth = width;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setPolygonOffset = function ( polygonoffset, factor, units ) {\r\n\r\n\t\tif ( currentPolygonOffset !== polygonoffset ) {\r\n\r\n\t\t\tif ( polygonoffset ) {\r\n\r\n\t\t\t\tgl.enable( gl.POLYGON_OFFSET_FILL );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.disable( gl.POLYGON_OFFSET_FILL );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentPolygonOffset = polygonoffset;\r\n\r\n\t\t}\r\n\r\n\t\tif ( polygonoffset && ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) ) {\r\n\r\n\t\t\tgl.polygonOffset( factor, units );\r\n\r\n\t\t\tcurrentPolygonOffsetFactor = factor;\r\n\t\t\tcurrentPolygonOffsetUnits = units;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.reset = function () {\r\n\r\n\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\r\n\r\n\t\t\tenabledAttributes[ i ] = 0;\r\n\r\n\t\t}\r\n\r\n\t\tcurrentBlending = null;\r\n\t\tcurrentDepthTest = null;\r\n\t\tcurrentDepthWrite = null;\r\n\t\tcurrentColorWrite = null;\r\n\t\tcurrentDoubleSided = null;\r\n\t\tcurrentFlipSided = null;\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/plugins/LensFlarePlugin.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.LensFlarePlugin = function ( renderer, flares ) {\r\n\r\n\tvar gl = renderer.context;\r\n\r\n\tvar vertexBuffer, elementBuffer;\r\n\tvar program, attributes, uniforms;\r\n\tvar hasVertexTexture;\r\n\r\n\tvar tempTexture, occlusionTexture;\r\n\r\n\tvar init = function () {\r\n\r\n\t\tvar vertices = new Float32Array( [\r\n\t\t\t-1, -1,  0, 0,\r\n\t\t\t 1, -1,  1, 0,\r\n\t\t\t 1,  1,  1, 1,\r\n\t\t\t-1,  1,  0, 1\r\n\t\t] );\r\n\r\n\t\tvar faces = new Uint16Array( [\r\n\t\t\t0, 1, 2,\r\n\t\t\t0, 2, 3\r\n\t\t] );\r\n\r\n\t\t// buffers\r\n\r\n\t\tvertexBuffer     = gl.createBuffer();\r\n\t\telementBuffer    = gl.createBuffer();\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\r\n\r\n\t\t// textures\r\n\r\n\t\ttempTexture      = gl.createTexture();\r\n\t\tocclusionTexture = gl.createTexture();\r\n\r\n\t\tgl.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\r\n\t\tgl.bindTexture( gl.TEXTURE_2D, occlusionTexture );\r\n\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\r\n\t\thasVertexTexture = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS ) > 0;\r\n\r\n\t\tvar shader;\r\n\r\n\t\tif ( hasVertexTexture ) {\r\n\r\n\t\t\tshader = {\r\n\r\n\t\t\t\tvertexShader: [\r\n\r\n\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\t\"uniform vec3 screenPosition;\",\r\n\t\t\t\t\t\"uniform vec2 scale;\",\r\n\t\t\t\t\t\"uniform float rotation;\",\r\n\r\n\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\r\n\r\n\t\t\t\t\t\"attribute vec2 position;\",\r\n\t\t\t\t\t\"attribute vec2 uv;\",\r\n\r\n\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\t\t\t\t\"varying float vVisibility;\",\r\n\r\n\t\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\t\"vUV = uv;\",\r\n\r\n\t\t\t\t\t\t\"vec2 pos = position;\",\r\n\r\n\t\t\t\t\t\t\"if( renderType == 2 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\",\r\n\r\n\t\t\t\t\t\t\t\"vVisibility =        visibility.r / 9.0;\",\r\n\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.g / 9.0;\",\r\n\t\t\t\t\t\t\t\"vVisibility *=       visibility.b / 9.0;\",\r\n\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.a / 9.0;\",\r\n\r\n\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\r\n\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\r\n\r\n\t\t\t\t\t\"}\"\r\n\r\n\t\t\t\t].join( \"\\n\" ),\r\n\r\n\t\t\t\tfragmentShader: [\r\n\r\n\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\t\"uniform sampler2D map;\",\r\n\t\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\t\"uniform vec3 color;\",\r\n\r\n\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\t\t\t\t\"varying float vVisibility;\",\r\n\r\n\t\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\t// pink square\r\n\r\n\t\t\t\t\t\t\"if( renderType == 0 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\",\r\n\r\n\t\t\t\t\t\t// restore\r\n\r\n\t\t\t\t\t\t\"} else if( renderType == 1 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\r\n\r\n\t\t\t\t\t\t// flare\r\n\r\n\t\t\t\t\t\t\"} else {\",\r\n\r\n\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\r\n\t\t\t\t\t\t\t\"texture.a *= opacity * vVisibility;\",\r\n\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\r\n\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\"}\"\r\n\r\n\t\t\t\t].join( \"\\n\" )\r\n\r\n\t\t\t};\r\n\r\n\t\t} else {\r\n\r\n\t\t\tshader = {\r\n\r\n\t\t\t\tvertexShader: [\r\n\r\n\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\t\"uniform vec3 screenPosition;\",\r\n\t\t\t\t\t\"uniform vec2 scale;\",\r\n\t\t\t\t\t\"uniform float rotation;\",\r\n\r\n\t\t\t\t\t\"attribute vec2 position;\",\r\n\t\t\t\t\t\"attribute vec2 uv;\",\r\n\r\n\t\t\t\t\t\"varying vec2 vUV;\",\r\n\r\n\t\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\t\"vUV = uv;\",\r\n\r\n\t\t\t\t\t\t\"vec2 pos = position;\",\r\n\r\n\t\t\t\t\t\t\"if( renderType == 2 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\r\n\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\r\n\r\n\t\t\t\t\t\"}\"\r\n\r\n\t\t\t\t].join( \"\\n\" ),\r\n\r\n\t\t\t\tfragmentShader: [\r\n\r\n\t\t\t\t\t\"precision mediump float;\",\r\n\r\n\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\t\"uniform sampler2D map;\",\r\n\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\r\n\t\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\t\"uniform vec3 color;\",\r\n\r\n\t\t\t\t\t\"varying vec2 vUV;\",\r\n\r\n\t\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\t// pink square\r\n\r\n\t\t\t\t\t\t\"if( renderType == 0 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\",\r\n\r\n\t\t\t\t\t\t// restore\r\n\r\n\t\t\t\t\t\t\"} else if( renderType == 1 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\r\n\r\n\t\t\t\t\t\t// flare\r\n\r\n\t\t\t\t\t\t\"} else {\",\r\n\r\n\t\t\t\t\t\t\t\"float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\",\r\n\t\t\t\t\t\t\t\"visibility = ( 1.0 - visibility / 4.0 );\",\r\n\r\n\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\r\n\t\t\t\t\t\t\t\"texture.a *= opacity * visibility;\",\r\n\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\r\n\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\"}\"\r\n\r\n\t\t\t\t].join( \"\\n\" )\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tprogram = createProgram( shader );\r\n\r\n\t\tattributes = {\r\n\t\t\tvertex: gl.getAttribLocation ( program, \"position\" ),\r\n\t\t\tuv:     gl.getAttribLocation ( program, \"uv\" )\r\n\t\t}\r\n\r\n\t\tuniforms = {\r\n\t\t\trenderType:     gl.getUniformLocation( program, \"renderType\" ),\r\n\t\t\tmap:            gl.getUniformLocation( program, \"map\" ),\r\n\t\t\tocclusionMap:   gl.getUniformLocation( program, \"occlusionMap\" ),\r\n\t\t\topacity:        gl.getUniformLocation( program, \"opacity\" ),\r\n\t\t\tcolor:          gl.getUniformLocation( program, \"color\" ),\r\n\t\t\tscale:          gl.getUniformLocation( program, \"scale\" ),\r\n\t\t\trotation:       gl.getUniformLocation( program, \"rotation\" ),\r\n\t\t\tscreenPosition: gl.getUniformLocation( program, \"screenPosition\" )\r\n\t\t};\r\n\r\n\t};\r\n\r\n\t/*\r\n\t * Render lens flares\r\n\t * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\r\n\t *         reads these back and calculates occlusion.\r\n\t */\r\n\r\n\tthis.render = function ( scene, camera, viewportWidth, viewportHeight ) {\r\n\r\n\t\tif ( flares.length === 0 ) return;\r\n\r\n\t\tvar tempPosition = new THREE.Vector3();\r\n\r\n\t\tvar invAspect = viewportHeight / viewportWidth,\r\n\t\t\thalfViewportWidth = viewportWidth * 0.5,\r\n\t\t\thalfViewportHeight = viewportHeight * 0.5;\r\n\r\n\t\tvar size = 16 / viewportHeight,\r\n\t\t\tscale = new THREE.Vector2( size * invAspect, size );\r\n\r\n\t\tvar screenPosition = new THREE.Vector3( 1, 1, 0 ),\r\n\t\t\tscreenPositionPixels = new THREE.Vector2( 1, 1 );\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\tinit();\r\n\r\n\t\t}\r\n\r\n\t\tgl.useProgram( program );\r\n\r\n\t\tgl.enableVertexAttribArray( attributes.vertex );\r\n\t\tgl.enableVertexAttribArray( attributes.uv );\r\n\r\n\t\t// loop through all lens flares to update their occlusion and positions\r\n\t\t// setup gl and common used attribs/unforms\r\n\r\n\t\tgl.uniform1i( uniforms.occlusionMap, 0 );\r\n\t\tgl.uniform1i( uniforms.map, 1 );\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.vertexAttribPointer( attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0 );\r\n\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\r\n\t\tgl.disable( gl.CULL_FACE );\r\n\t\tgl.depthMask( false );\r\n\r\n\t\tfor ( var i = 0, l = flares.length; i < l; i ++ ) {\r\n\r\n\t\t\tsize = 16 / viewportHeight;\r\n\t\t\tscale.set( size * invAspect, size );\r\n\r\n\t\t\t// calc object screen position\r\n\r\n\t\t\tvar flare = flares[ i ];\r\n\r\n\t\t\ttempPosition.set( flare.matrixWorld.elements[12], flare.matrixWorld.elements[13], flare.matrixWorld.elements[14] );\r\n\r\n\t\t\ttempPosition.applyMatrix4( camera.matrixWorldInverse );\r\n\t\t\ttempPosition.applyProjection( camera.projectionMatrix );\r\n\r\n\t\t\t// setup arrays for gl programs\r\n\r\n\t\t\tscreenPosition.copy( tempPosition )\r\n\r\n\t\t\tscreenPositionPixels.x = screenPosition.x * halfViewportWidth + halfViewportWidth;\r\n\t\t\tscreenPositionPixels.y = screenPosition.y * halfViewportHeight + halfViewportHeight;\r\n\r\n\t\t\t// screen cull\r\n\r\n\t\t\tif ( hasVertexTexture || (\r\n\t\t\t\tscreenPositionPixels.x > 0 &&\r\n\t\t\t\tscreenPositionPixels.x < viewportWidth &&\r\n\t\t\t\tscreenPositionPixels.y > 0 &&\r\n\t\t\t\tscreenPositionPixels.y < viewportHeight ) ) {\r\n\r\n\t\t\t\t// save current RGB to temp texture\r\n\r\n\t\t\t\tgl.activeTexture( gl.TEXTURE1 );\r\n\t\t\t\tgl.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGB, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0 );\r\n\r\n\r\n\t\t\t\t// render pink quad\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.renderType, 0 );\r\n\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n\r\n\t\t\t\tgl.disable( gl.BLEND );\r\n\t\t\t\tgl.enable( gl.DEPTH_TEST );\r\n\r\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\r\n\t\t\t\t// copy result to occlusionMap\r\n\r\n\t\t\t\tgl.activeTexture( gl.TEXTURE0 );\r\n\t\t\t\tgl.bindTexture( gl.TEXTURE_2D, occlusionTexture );\r\n\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGBA, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0 );\r\n\r\n\r\n\t\t\t\t// restore graphics\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.renderType, 1 );\r\n\t\t\t\tgl.disable( gl.DEPTH_TEST );\r\n\r\n\t\t\t\tgl.activeTexture( gl.TEXTURE1 );\r\n\t\t\t\tgl.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\r\n\t\t\t\t// update object positions\r\n\r\n\t\t\t\tflare.positionScreen.copy( screenPosition )\r\n\r\n\t\t\t\tif ( flare.customUpdateCallback ) {\r\n\r\n\t\t\t\t\tflare.customUpdateCallback( flare );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tflare.updateLensFlares();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// render flares\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.renderType, 2 );\r\n\t\t\t\tgl.enable( gl.BLEND );\r\n\r\n\t\t\t\tfor ( var j = 0, jl = flare.lensFlares.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tvar sprite = flare.lensFlares[ j ];\r\n\r\n\t\t\t\t\tif ( sprite.opacity > 0.001 && sprite.scale > 0.001 ) {\r\n\r\n\t\t\t\t\t\tscreenPosition.x = sprite.x;\r\n\t\t\t\t\t\tscreenPosition.y = sprite.y;\r\n\t\t\t\t\t\tscreenPosition.z = sprite.z;\r\n\r\n\t\t\t\t\t\tsize = sprite.size * sprite.scale / viewportHeight;\r\n\r\n\t\t\t\t\t\tscale.x = size * invAspect;\r\n\t\t\t\t\t\tscale.y = size;\r\n\r\n\t\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n\t\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n\t\t\t\t\t\tgl.uniform1f( uniforms.rotation, sprite.rotation );\r\n\r\n\t\t\t\t\t\tgl.uniform1f( uniforms.opacity, sprite.opacity );\r\n\t\t\t\t\t\tgl.uniform3f( uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b );\r\n\r\n\t\t\t\t\t\trenderer.state.setBlending( sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst );\r\n\t\t\t\t\t\trenderer.setTexture( sprite.texture, 1 );\r\n\r\n\t\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// restore gl\r\n\r\n\t\tgl.enable( gl.CULL_FACE );\r\n\t\tgl.enable( gl.DEPTH_TEST );\r\n\t\tgl.depthMask( true );\r\n\r\n\t\trenderer.resetGLState();\r\n\r\n\t};\r\n\r\n\tfunction createProgram ( shader ) {\r\n\r\n\t\tvar program = gl.createProgram();\r\n\r\n\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\r\n\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\r\n\r\n\t\tvar prefix = \"precision \" + renderer.getPrecision() + \" float;\\n\";\r\n\r\n\t\tgl.shaderSource( fragmentShader, prefix + shader.fragmentShader );\r\n\t\tgl.shaderSource( vertexShader, prefix + shader.vertexShader );\r\n\r\n\t\tgl.compileShader( fragmentShader );\r\n\t\tgl.compileShader( vertexShader );\r\n\r\n\t\tgl.attachShader( program, fragmentShader );\r\n\t\tgl.attachShader( program, vertexShader );\r\n\r\n\t\tgl.linkProgram( program );\r\n\r\n\t\treturn program;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/plugins/ShadowMapPlugin.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.ShadowMapPlugin = function ( _renderer, _lights, _webglObjects, _webglObjectsImmediate ) {\r\n\r\n\tvar _gl = _renderer.context;\r\n\r\n\tvar _depthMaterial, _depthMaterialMorph, _depthMaterialSkin, _depthMaterialMorphSkin,\r\n\r\n\t_frustum = new THREE.Frustum(),\r\n\t_projScreenMatrix = new THREE.Matrix4(),\r\n\r\n\t_min = new THREE.Vector3(),\r\n\t_max = new THREE.Vector3(),\r\n\r\n\t_matrixPosition = new THREE.Vector3(),\r\n\r\n\t_renderList = [];\r\n\r\n\t// init\r\n\r\n\tvar depthShader = THREE.ShaderLib[ \"depthRGBA\" ];\r\n\tvar depthUniforms = THREE.UniformsUtils.clone( depthShader.uniforms );\r\n\r\n\t_depthMaterial = new THREE.ShaderMaterial( {\r\n\t\tuniforms: depthUniforms,\r\n\t\tvertexShader: depthShader.vertexShader,\r\n\t\tfragmentShader: depthShader.fragmentShader\r\n\t } );\r\n\r\n\t_depthMaterialMorph = new THREE.ShaderMaterial( {\r\n\t\tuniforms: depthUniforms,\r\n\t\tvertexShader: depthShader.vertexShader,\r\n\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\tmorphTargets: true\r\n\t} );\r\n\r\n\t_depthMaterialSkin = new THREE.ShaderMaterial( {\r\n\t\tuniforms: depthUniforms,\r\n\t\tvertexShader: depthShader.vertexShader,\r\n\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\tskinning: true\r\n\t} );\r\n\r\n\t_depthMaterialMorphSkin = new THREE.ShaderMaterial( {\r\n\t\tuniforms: depthUniforms,\r\n\t\tvertexShader: depthShader.vertexShader,\r\n\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\tmorphTargets: true,\r\n\t\tskinning: true\r\n\t} );\r\n\r\n\t_depthMaterial._shadowPass = true;\r\n\t_depthMaterialMorph._shadowPass = true;\r\n\t_depthMaterialSkin._shadowPass = true;\r\n\t_depthMaterialMorphSkin._shadowPass = true;\r\n\r\n\tthis.render = function ( scene, camera ) {\r\n\r\n\t\tif ( _renderer.shadowMapEnabled === false ) return;\r\n\r\n\t\tvar i, il, j, jl, n,\r\n\r\n\t\tshadowMap, shadowMatrix, shadowCamera,\r\n\t\tbuffer, material,\r\n\t\twebglObject, object, light,\r\n\r\n\t\tlights = [],\r\n\t\tk = 0,\r\n\r\n\t\tfog = null;\r\n\r\n\t\t// set GL state for depth map\r\n\r\n\t\t_gl.clearColor( 1, 1, 1, 1 );\r\n\t\t_gl.disable( _gl.BLEND );\r\n\r\n\t\t_gl.enable( _gl.CULL_FACE );\r\n\t\t_gl.frontFace( _gl.CCW );\r\n\r\n\t\tif ( _renderer.shadowMapCullFace === THREE.CullFaceFront ) {\r\n\r\n\t\t\t_gl.cullFace( _gl.FRONT );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.cullFace( _gl.BACK );\r\n\r\n\t\t}\r\n\r\n\t\t_renderer.state.setDepthTest( true );\r\n\r\n\t\t// preprocess lights\r\n\t\t// \t- skip lights that are not casting shadows\r\n\t\t//\t- create virtual lights for cascaded shadow maps\r\n\r\n\t\tfor ( i = 0, il = _lights.length; i < il; i ++ ) {\r\n\r\n\t\t\tlight = _lights[ i ];\r\n\r\n\t\t\tif ( ! light.castShadow ) continue;\r\n\r\n\t\t\tif ( ( light instanceof THREE.DirectionalLight ) && light.shadowCascade ) {\r\n\r\n\t\t\t\tfor ( n = 0; n < light.shadowCascadeCount; n ++ ) {\r\n\r\n\t\t\t\t\tvar virtualLight;\r\n\r\n\t\t\t\t\tif ( ! light.shadowCascadeArray[ n ] ) {\r\n\r\n\t\t\t\t\t\tvirtualLight = createVirtualLight( light, n );\r\n\t\t\t\t\t\tvirtualLight.originalCamera = camera;\r\n\r\n\t\t\t\t\t\tvar gyro = new THREE.Gyroscope();\r\n\t\t\t\t\t\tgyro.position.copy( light.shadowCascadeOffset );\r\n\r\n\t\t\t\t\t\tgyro.add( virtualLight );\r\n\t\t\t\t\t\tgyro.add( virtualLight.target );\r\n\r\n\t\t\t\t\t\tcamera.add( gyro );\r\n\r\n\t\t\t\t\t\tlight.shadowCascadeArray[ n ] = virtualLight;\r\n\r\n\t\t\t\t\t\t//console.log( \"Created virtualLight\", virtualLight );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tvirtualLight = light.shadowCascadeArray[ n ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tupdateVirtualLight( light, n );\r\n\r\n\t\t\t\t\tlights[ k ] = virtualLight;\r\n\t\t\t\t\tk ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tlights[ k ] = light;\r\n\t\t\t\tk ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// render depth map\r\n\r\n\t\tfor ( i = 0, il = lights.length; i < il; i ++ ) {\r\n\r\n\t\t\tlight = lights[ i ];\r\n\r\n\t\t\tif ( ! light.shadowMap ) {\r\n\r\n\t\t\t\tvar shadowFilter = THREE.LinearFilter;\r\n\r\n\t\t\t\tif ( _renderer.shadowMapType === THREE.PCFSoftShadowMap ) {\r\n\r\n\t\t\t\t\tshadowFilter = THREE.NearestFilter;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar pars = { minFilter: shadowFilter, magFilter: shadowFilter, format: THREE.RGBAFormat };\r\n\r\n\t\t\t\tlight.shadowMap = new THREE.WebGLRenderTarget( light.shadowMapWidth, light.shadowMapHeight, pars );\r\n\t\t\t\tlight.shadowMapSize = new THREE.Vector2( light.shadowMapWidth, light.shadowMapHeight );\r\n\r\n\t\t\t\tlight.shadowMatrix = new THREE.Matrix4();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! light.shadowCamera ) {\r\n\r\n\t\t\t\tif ( light instanceof THREE.SpotLight ) {\r\n\r\n\t\t\t\t\tlight.shadowCamera = new THREE.PerspectiveCamera( light.shadowCameraFov, light.shadowMapWidth / light.shadowMapHeight, light.shadowCameraNear, light.shadowCameraFar );\r\n\r\n\t\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\r\n\r\n\t\t\t\t\tlight.shadowCamera = new THREE.OrthographicCamera( light.shadowCameraLeft, light.shadowCameraRight, light.shadowCameraTop, light.shadowCameraBottom, light.shadowCameraNear, light.shadowCameraFar );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tTHREE.error( \"THREE.ShadowMapPlugin: Unsupported light type for shadow\", light );\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscene.add( light.shadowCamera );\r\n\r\n\t\t\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( light.shadowCameraVisible && ! light.cameraHelper ) {\r\n\r\n\t\t\t\tlight.cameraHelper = new THREE.CameraHelper( light.shadowCamera );\r\n\t\t\t\tscene.add( light.cameraHelper );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( light.isVirtual && virtualLight.originalCamera == camera ) {\r\n\r\n\t\t\t\tupdateShadowCamera( camera, light );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tshadowMap = light.shadowMap;\r\n\t\t\tshadowMatrix = light.shadowMatrix;\r\n\t\t\tshadowCamera = light.shadowCamera;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tshadowCamera.position.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t_matrixPosition.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\tshadowCamera.lookAt( _matrixPosition );\r\n\t\t\tshadowCamera.updateMatrixWorld();\r\n\r\n\t\t\tshadowCamera.matrixWorldInverse.getInverse( shadowCamera.matrixWorld );\r\n\r\n\t\t\t//\r\n\r\n\t\t\tif ( light.cameraHelper ) light.cameraHelper.visible = light.shadowCameraVisible;\r\n\t\t\tif ( light.shadowCameraVisible ) light.cameraHelper.update();\r\n\r\n\t\t\t// compute shadow matrix\r\n\r\n\t\t\tshadowMatrix.set(\r\n\t\t\t\t0.5, 0.0, 0.0, 0.5,\r\n\t\t\t\t0.0, 0.5, 0.0, 0.5,\r\n\t\t\t\t0.0, 0.0, 0.5, 0.5,\r\n\t\t\t\t0.0, 0.0, 0.0, 1.0\r\n\t\t\t);\r\n\r\n\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\r\n\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\r\n\r\n\t\t\t// update camera matrices and frustum\r\n\r\n\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\r\n\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\r\n\t\t\t// render shadow map\r\n\r\n\t\t\t_renderer.setRenderTarget( shadowMap );\r\n\t\t\t_renderer.clear();\r\n\r\n\t\t\t// set object matrices & frustum culling\r\n\r\n\t\t\t_renderList.length = 0;\r\n\r\n\t\t\tprojectObject( scene, scene, shadowCamera );\r\n\r\n\r\n\t\t\t// render regular objects\r\n\r\n\t\t\tvar objectMaterial, useMorphing, useSkinning;\r\n\r\n\t\t\tfor ( j = 0, jl = _renderList.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\twebglObject = _renderList[ j ];\r\n\r\n\t\t\t\tobject = webglObject.object;\r\n\t\t\t\tbuffer = webglObject.buffer;\r\n\r\n\t\t\t\t// culling is overriden globally for all objects\r\n\t\t\t\t// while rendering depth map\r\n\r\n\t\t\t\t// need to deal with MeshFaceMaterial somehow\r\n\t\t\t\t// in that case just use the first of material.materials for now\r\n\t\t\t\t// (proper solution would require to break objects by materials\r\n\t\t\t\t//  similarly to regular rendering and then set corresponding\r\n\t\t\t\t//  depth materials per each chunk instead of just once per object)\r\n\r\n\t\t\t\tobjectMaterial = getObjectMaterial( object );\r\n\r\n\t\t\t\tuseMorphing = object.geometry.morphTargets !== undefined && object.geometry.morphTargets.length > 0 && objectMaterial.morphTargets;\r\n\t\t\t\tuseSkinning = object instanceof THREE.SkinnedMesh && objectMaterial.skinning;\r\n\r\n\t\t\t\tif ( object.customDepthMaterial ) {\r\n\r\n\t\t\t\t\tmaterial = object.customDepthMaterial;\r\n\r\n\t\t\t\t} else if ( useSkinning ) {\r\n\r\n\t\t\t\t\tmaterial = useMorphing ? _depthMaterialMorphSkin : _depthMaterialSkin;\r\n\r\n\t\t\t\t} else if ( useMorphing ) {\r\n\r\n\t\t\t\t\tmaterial = _depthMaterialMorph;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tmaterial = _depthMaterial;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_renderer.setMaterialFaces( objectMaterial );\r\n\r\n\t\t\t\tif ( buffer instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, _lights, fog, material, buffer, object );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t_renderer.renderBuffer( shadowCamera, _lights, fog, material, buffer, object );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// set matrices and render immediate objects\r\n\r\n\t\t\tfor ( j = 0, jl = _webglObjectsImmediate.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\twebglObject = _webglObjectsImmediate[ j ];\r\n\t\t\t\tobject = webglObject.object;\r\n\r\n\t\t\t\tif ( object.visible && object.castShadow ) {\r\n\r\n\t\t\t\t\tobject._modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\r\n\r\n\t\t\t\t\t_renderer.renderImmediateObject( shadowCamera, _lights, fog, _depthMaterial, object );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// restore GL state\r\n\r\n\t\tvar clearColor = _renderer.getClearColor(),\r\n\t\tclearAlpha = _renderer.getClearAlpha();\r\n\r\n\t\t_gl.clearColor( clearColor.r, clearColor.g, clearColor.b, clearAlpha );\r\n\t\t_gl.enable( _gl.BLEND );\r\n\r\n\t\tif ( _renderer.shadowMapCullFace === THREE.CullFaceFront ) {\r\n\r\n\t\t\t_gl.cullFace( _gl.BACK );\r\n\r\n\t\t}\r\n\r\n\t\t_renderer.resetGLState();\r\n\r\n\t};\r\n\r\n\tfunction projectObject( scene, object, shadowCamera ) {\r\n\r\n\t\tif ( object.visible ) {\r\n\r\n\t\t\tvar webglObjects = _webglObjects[ object.id ];\r\n\r\n\t\t\tif ( webglObjects && object.castShadow && (object.frustumCulled === false || _frustum.intersectsObject( object ) === true) ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = webglObjects.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tvar webglObject = webglObjects[ i ];\r\n\r\n\t\t\t\t\tobject._modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\t\t\t_renderList.push( webglObject );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0, l = object.children.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tprojectObject( scene, object.children[ i ], shadowCamera );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction createVirtualLight( light, cascade ) {\r\n\r\n\t\tvar virtualLight = new THREE.DirectionalLight();\r\n\r\n\t\tvirtualLight.isVirtual = true;\r\n\r\n\t\tvirtualLight.onlyShadow = true;\r\n\t\tvirtualLight.castShadow = true;\r\n\r\n\t\tvirtualLight.shadowCameraNear = light.shadowCameraNear;\r\n\t\tvirtualLight.shadowCameraFar = light.shadowCameraFar;\r\n\r\n\t\tvirtualLight.shadowCameraLeft = light.shadowCameraLeft;\r\n\t\tvirtualLight.shadowCameraRight = light.shadowCameraRight;\r\n\t\tvirtualLight.shadowCameraBottom = light.shadowCameraBottom;\r\n\t\tvirtualLight.shadowCameraTop = light.shadowCameraTop;\r\n\r\n\t\tvirtualLight.shadowCameraVisible = light.shadowCameraVisible;\r\n\r\n\t\tvirtualLight.shadowDarkness = light.shadowDarkness;\r\n\r\n\t\tvirtualLight.shadowBias = light.shadowCascadeBias[ cascade ];\r\n\t\tvirtualLight.shadowMapWidth = light.shadowCascadeWidth[ cascade ];\r\n\t\tvirtualLight.shadowMapHeight = light.shadowCascadeHeight[ cascade ];\r\n\r\n\t\tvirtualLight.pointsWorld = [];\r\n\t\tvirtualLight.pointsFrustum = [];\r\n\r\n\t\tvar pointsWorld = virtualLight.pointsWorld,\r\n\t\t\tpointsFrustum = virtualLight.pointsFrustum;\r\n\r\n\t\tfor ( var i = 0; i < 8; i ++ ) {\r\n\r\n\t\t\tpointsWorld[ i ] = new THREE.Vector3();\r\n\t\t\tpointsFrustum[ i ] = new THREE.Vector3();\r\n\r\n\t\t}\r\n\r\n\t\tvar nearZ = light.shadowCascadeNearZ[ cascade ];\r\n\t\tvar farZ = light.shadowCascadeFarZ[ cascade ];\r\n\r\n\t\tpointsFrustum[ 0 ].set( - 1, - 1, nearZ );\r\n\t\tpointsFrustum[ 1 ].set(  1, - 1, nearZ );\r\n\t\tpointsFrustum[ 2 ].set( - 1,  1, nearZ );\r\n\t\tpointsFrustum[ 3 ].set(  1,  1, nearZ );\r\n\r\n\t\tpointsFrustum[ 4 ].set( - 1, - 1, farZ );\r\n\t\tpointsFrustum[ 5 ].set(  1, - 1, farZ );\r\n\t\tpointsFrustum[ 6 ].set( - 1,  1, farZ );\r\n\t\tpointsFrustum[ 7 ].set(  1,  1, farZ );\r\n\r\n\t\treturn virtualLight;\r\n\r\n\t}\r\n\r\n\t// Synchronize virtual light with the original light\r\n\r\n\tfunction updateVirtualLight( light, cascade ) {\r\n\r\n\t\tvar virtualLight = light.shadowCascadeArray[ cascade ];\r\n\r\n\t\tvirtualLight.position.copy( light.position );\r\n\t\tvirtualLight.target.position.copy( light.target.position );\r\n\t\tvirtualLight.lookAt( virtualLight.target );\r\n\r\n\t\tvirtualLight.shadowCameraVisible = light.shadowCameraVisible;\r\n\t\tvirtualLight.shadowDarkness = light.shadowDarkness;\r\n\r\n\t\tvirtualLight.shadowBias = light.shadowCascadeBias[ cascade ];\r\n\r\n\t\tvar nearZ = light.shadowCascadeNearZ[ cascade ];\r\n\t\tvar farZ = light.shadowCascadeFarZ[ cascade ];\r\n\r\n\t\tvar pointsFrustum = virtualLight.pointsFrustum;\r\n\r\n\t\tpointsFrustum[ 0 ].z = nearZ;\r\n\t\tpointsFrustum[ 1 ].z = nearZ;\r\n\t\tpointsFrustum[ 2 ].z = nearZ;\r\n\t\tpointsFrustum[ 3 ].z = nearZ;\r\n\r\n\t\tpointsFrustum[ 4 ].z = farZ;\r\n\t\tpointsFrustum[ 5 ].z = farZ;\r\n\t\tpointsFrustum[ 6 ].z = farZ;\r\n\t\tpointsFrustum[ 7 ].z = farZ;\r\n\r\n\t}\r\n\r\n\t// Fit shadow camera's ortho frustum to camera frustum\r\n\r\n\tfunction updateShadowCamera( camera, light ) {\r\n\r\n\t\tvar shadowCamera = light.shadowCamera,\r\n\t\t\tpointsFrustum = light.pointsFrustum,\r\n\t\t\tpointsWorld = light.pointsWorld;\r\n\r\n\t\t_min.set( Infinity, Infinity, Infinity );\r\n\t\t_max.set( - Infinity, - Infinity, - Infinity );\r\n\r\n\t\tfor ( var i = 0; i < 8; i ++ ) {\r\n\r\n\t\t\tvar p = pointsWorld[ i ];\r\n\r\n\t\t\tp.copy( pointsFrustum[ i ] );\r\n\t\t\tp.unproject( camera );\r\n\r\n\t\t\tp.applyMatrix4( shadowCamera.matrixWorldInverse );\r\n\r\n\t\t\tif ( p.x < _min.x ) _min.x = p.x;\r\n\t\t\tif ( p.x > _max.x ) _max.x = p.x;\r\n\r\n\t\t\tif ( p.y < _min.y ) _min.y = p.y;\r\n\t\t\tif ( p.y > _max.y ) _max.y = p.y;\r\n\r\n\t\t\tif ( p.z < _min.z ) _min.z = p.z;\r\n\t\t\tif ( p.z > _max.z ) _max.z = p.z;\r\n\r\n\t\t}\r\n\r\n\t\tshadowCamera.left = _min.x;\r\n\t\tshadowCamera.right = _max.x;\r\n\t\tshadowCamera.top = _max.y;\r\n\t\tshadowCamera.bottom = _min.y;\r\n\r\n\t\t// can't really fit near/far\r\n\t\t//shadowCamera.near = _min.z;\r\n\t\t//shadowCamera.far = _max.z;\r\n\r\n\t\tshadowCamera.updateProjectionMatrix();\r\n\r\n\t}\r\n\r\n\t// For the moment just ignore objects that have multiple materials with different animation methods\r\n\t// Only the first material will be taken into account for deciding which depth material to use for shadow maps\r\n\r\n\tfunction getObjectMaterial( object ) {\r\n\r\n\t\treturn object.material instanceof THREE.MeshFaceMaterial\r\n\t\t\t? object.material.materials[ 0 ]\r\n\t\t\t: object.material;\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/plugins/SpritePlugin.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SpritePlugin = function ( renderer, sprites ) {\r\n\r\n\tvar gl = renderer.context;\r\n\r\n\tvar vertexBuffer, elementBuffer;\r\n\tvar program, attributes, uniforms;\r\n\r\n\tvar texture;\r\n\r\n\t// decompose matrixWorld\r\n\r\n\tvar spritePosition = new THREE.Vector3();\r\n\tvar spriteRotation = new THREE.Quaternion();\r\n\tvar spriteScale = new THREE.Vector3();\r\n\r\n\tvar init = function () {\r\n\r\n\t\tvar vertices = new Float32Array( [\r\n\t\t\t- 0.5, - 0.5,  0, 0,\r\n\t\t\t  0.5, - 0.5,  1, 0,\r\n\t\t\t  0.5,   0.5,  1, 1,\r\n\t\t\t- 0.5,   0.5,  0, 1\r\n\t\t] );\r\n\r\n\t\tvar faces = new Uint16Array( [\r\n\t\t\t0, 1, 2,\r\n\t\t\t0, 2, 3\r\n\t\t] );\r\n\r\n\t\tvertexBuffer  = gl.createBuffer();\r\n\t\telementBuffer = gl.createBuffer();\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\r\n\r\n\t\tprogram = createProgram();\r\n\r\n\t\tattributes = {\r\n\t\t\tposition:\t\t\tgl.getAttribLocation ( program, 'position' ),\r\n\t\t\tuv:\t\t\t\t\tgl.getAttribLocation ( program, 'uv' )\r\n\t\t};\r\n\r\n\t\tuniforms = {\r\n\t\t\tuvOffset:\t\t\tgl.getUniformLocation( program, 'uvOffset' ),\r\n\t\t\tuvScale:\t\t\tgl.getUniformLocation( program, 'uvScale' ),\r\n\r\n\t\t\trotation:\t\t\tgl.getUniformLocation( program, 'rotation' ),\r\n\t\t\tscale:\t\t\t\tgl.getUniformLocation( program, 'scale' ),\r\n\r\n\t\t\tcolor:\t\t\t\tgl.getUniformLocation( program, 'color' ),\r\n\t\t\tmap:\t\t\t\tgl.getUniformLocation( program, 'map' ),\r\n\t\t\topacity:\t\t\tgl.getUniformLocation( program, 'opacity' ),\r\n\r\n\t\t\tmodelViewMatrix: \tgl.getUniformLocation( program, 'modelViewMatrix' ),\r\n\t\t\tprojectionMatrix:\tgl.getUniformLocation( program, 'projectionMatrix' ),\r\n\r\n\t\t\tfogType:\t\t\tgl.getUniformLocation( program, 'fogType' ),\r\n\t\t\tfogDensity:\t\t\tgl.getUniformLocation( program, 'fogDensity' ),\r\n\t\t\tfogNear:\t\t\tgl.getUniformLocation( program, 'fogNear' ),\r\n\t\t\tfogFar:\t\t\t\tgl.getUniformLocation( program, 'fogFar' ),\r\n\t\t\tfogColor:\t\t\tgl.getUniformLocation( program, 'fogColor' ),\r\n\r\n\t\t\talphaTest:\t\t\tgl.getUniformLocation( program, 'alphaTest' )\r\n\t\t};\r\n\r\n\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\tcanvas.width = 8;\r\n\t\tcanvas.height = 8;\r\n\r\n\t\tvar context = canvas.getContext( '2d' );\r\n\t\tcontext.fillStyle = 'white';\r\n\t\tcontext.fillRect( 0, 0, 8, 8 );\r\n\r\n\t\ttexture = new THREE.Texture( canvas );\r\n\t\ttexture.needsUpdate = true;\r\n\r\n\t};\r\n\r\n\tthis.render = function ( scene, camera ) {\r\n\r\n\t\tif ( sprites.length === 0 ) return;\r\n\r\n\t\t// setup gl\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\tinit();\r\n\r\n\t\t}\r\n\r\n\t\tgl.useProgram( program );\r\n\r\n\t\tgl.enableVertexAttribArray( attributes.position );\r\n\t\tgl.enableVertexAttribArray( attributes.uv );\r\n\r\n\t\tgl.disable( gl.CULL_FACE );\r\n\t\tgl.enable( gl.BLEND );\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );\r\n\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\r\n\t\tgl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\r\n\r\n\t\tgl.activeTexture( gl.TEXTURE0 );\r\n\t\tgl.uniform1i( uniforms.map, 0 );\r\n\r\n\t\tvar oldFogType = 0;\r\n\t\tvar sceneFogType = 0;\r\n\t\tvar fog = scene.fog;\r\n\r\n\t\tif ( fog ) {\r\n\r\n\t\t\tgl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\r\n\r\n\t\t\tif ( fog instanceof THREE.Fog ) {\r\n\r\n\t\t\t\tgl.uniform1f( uniforms.fogNear, fog.near );\r\n\t\t\t\tgl.uniform1f( uniforms.fogFar, fog.far );\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, 1 );\r\n\t\t\t\toldFogType = 1;\r\n\t\t\t\tsceneFogType = 1;\r\n\r\n\t\t\t} else if ( fog instanceof THREE.FogExp2 ) {\r\n\r\n\t\t\t\tgl.uniform1f( uniforms.fogDensity, fog.density );\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, 2 );\r\n\t\t\t\toldFogType = 2;\r\n\t\t\t\tsceneFogType = 2;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tgl.uniform1i( uniforms.fogType, 0 );\r\n\t\t\toldFogType = 0;\r\n\t\t\tsceneFogType = 0;\r\n\r\n\t\t}\r\n\r\n\r\n\t\t// update positions and sort\r\n\r\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar sprite = sprites[ i ];\r\n\r\n\t\t\tsprite._modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\r\n\t\t\tsprite.z = - sprite._modelViewMatrix.elements[ 14 ];\r\n\r\n\t\t}\r\n\r\n\t\tsprites.sort( painterSortStable );\r\n\r\n\t\t// render all sprites\r\n\r\n\t\tvar scale = [];\r\n\r\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar sprite = sprites[ i ];\r\n\t\t\tvar material = sprite.material;\r\n\r\n\t\t\tgl.uniform1f( uniforms.alphaTest, material.alphaTest );\r\n\t\t\tgl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite._modelViewMatrix.elements );\r\n\r\n\t\t\tsprite.matrixWorld.decompose( spritePosition, spriteRotation, spriteScale );\r\n\r\n\t\t\tscale[ 0 ] = spriteScale.x;\r\n\t\t\tscale[ 1 ] = spriteScale.y;\r\n\r\n\t\t\tvar fogType = 0;\r\n\r\n\t\t\tif ( scene.fog && material.fog ) {\r\n\r\n\t\t\t\tfogType = sceneFogType;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( oldFogType !== fogType ) {\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, fogType );\r\n\t\t\t\toldFogType = fogType;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.map !== null ) {\r\n\r\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );\r\n\t\t\t\tgl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, 0, 0 );\r\n\t\t\t\tgl.uniform2f( uniforms.uvScale, 1, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgl.uniform1f( uniforms.opacity, material.opacity );\r\n\t\t\tgl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\r\n\r\n\t\t\tgl.uniform1f( uniforms.rotation, material.rotation );\r\n\t\t\tgl.uniform2fv( uniforms.scale, scale );\r\n\r\n\t\t\trenderer.state.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\r\n\t\t\trenderer.state.setDepthTest( material.depthTest );\r\n\t\t\trenderer.state.setDepthWrite( material.depthWrite );\r\n\r\n\t\t\tif ( material.map && material.map.image && material.map.image.width ) {\r\n\r\n\t\t\t\trenderer.setTexture( material.map, 0 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderer.setTexture( texture, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\t\t}\r\n\r\n\t\t// restore gl\r\n\r\n\t\tgl.enable( gl.CULL_FACE );\r\n\r\n\t\trenderer.resetGLState();\r\n\r\n\t};\r\n\r\n\tfunction createProgram () {\r\n\r\n\t\tvar program = gl.createProgram();\r\n\r\n\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\r\n\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\r\n\r\n\t\tgl.shaderSource( vertexShader, [\r\n\r\n\t\t\t'precision ' + renderer.getPrecision() + ' float;',\r\n\r\n\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t'uniform float rotation;',\r\n\t\t\t'uniform vec2 scale;',\r\n\t\t\t'uniform vec2 uvOffset;',\r\n\t\t\t'uniform vec2 uvScale;',\r\n\r\n\t\t\t'attribute vec2 position;',\r\n\t\t\t'attribute vec2 uv;',\r\n\r\n\t\t\t'varying vec2 vUV;',\r\n\r\n\t\t\t'void main() {',\r\n\r\n\t\t\t\t'vUV = uvOffset + uv * uvScale;',\r\n\r\n\t\t\t\t'vec2 alignedPosition = position * scale;',\r\n\r\n\t\t\t\t'vec2 rotatedPosition;',\r\n\t\t\t\t'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',\r\n\t\t\t\t'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',\r\n\r\n\t\t\t\t'vec4 finalPosition;',\r\n\r\n\t\t\t\t'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',\r\n\t\t\t\t'finalPosition.xy += rotatedPosition;',\r\n\t\t\t\t'finalPosition = projectionMatrix * finalPosition;',\r\n\r\n\t\t\t\t'gl_Position = finalPosition;',\r\n\r\n\t\t\t'}'\r\n\r\n\t\t].join( '\\n' ) );\r\n\r\n\t\tgl.shaderSource( fragmentShader, [\r\n\r\n\t\t\t'precision ' + renderer.getPrecision() + ' float;',\r\n\r\n\t\t\t'uniform vec3 color;',\r\n\t\t\t'uniform sampler2D map;',\r\n\t\t\t'uniform float opacity;',\r\n\r\n\t\t\t'uniform int fogType;',\r\n\t\t\t'uniform vec3 fogColor;',\r\n\t\t\t'uniform float fogDensity;',\r\n\t\t\t'uniform float fogNear;',\r\n\t\t\t'uniform float fogFar;',\r\n\t\t\t'uniform float alphaTest;',\r\n\r\n\t\t\t'varying vec2 vUV;',\r\n\r\n\t\t\t'void main() {',\r\n\r\n\t\t\t\t'vec4 texture = texture2D( map, vUV );',\r\n\r\n\t\t\t\t'if ( texture.a < alphaTest ) discard;',\r\n\r\n\t\t\t\t'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',\r\n\r\n\t\t\t\t'if ( fogType > 0 ) {',\r\n\r\n\t\t\t\t\t'float depth = gl_FragCoord.z / gl_FragCoord.w;',\r\n\t\t\t\t\t'float fogFactor = 0.0;',\r\n\r\n\t\t\t\t\t'if ( fogType == 1 ) {',\r\n\r\n\t\t\t\t\t\t'fogFactor = smoothstep( fogNear, fogFar, depth );',\r\n\r\n\t\t\t\t\t'} else {',\r\n\r\n\t\t\t\t\t\t'const float LOG2 = 1.442695;',\r\n\t\t\t\t\t\t'float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );',\r\n\t\t\t\t\t\t'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',\r\n\r\n\t\t\t\t\t'}',\r\n\r\n\t\t\t\t\t'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );',\r\n\r\n\t\t\t\t'}',\r\n\r\n\t\t\t'}'\r\n\r\n\t\t].join( '\\n' ) );\r\n\r\n\t\tgl.compileShader( vertexShader );\r\n\t\tgl.compileShader( fragmentShader );\r\n\r\n\t\tgl.attachShader( program, vertexShader );\r\n\t\tgl.attachShader( program, fragmentShader );\r\n\r\n\t\tgl.linkProgram( program );\r\n\r\n\t\treturn program;\r\n\r\n\t};\r\n\r\n\tfunction painterSortStable ( a, b ) {\r\n\r\n\t\tif ( a.z !== b.z ) {\r\n\r\n\t\t\treturn b.z - a.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn b.id - a.id;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/extras/GeometryUtils.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.GeometryUtils = {\r\n\r\n\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\r\n\r\n\t\tTHREE.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\r\n\r\n\t\tvar matrix;\r\n\r\n\t\tif ( geometry2 instanceof THREE.Mesh ) {\r\n\r\n\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\r\n\r\n\t\t\tmatrix = geometry2.matrix;\r\n\t\t\tgeometry2 = geometry2.geometry;\r\n\r\n\t\t}\r\n\r\n\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\r\n\r\n\t},\r\n\r\n\tcenter: function ( geometry ) {\r\n\r\n\t\tTHREE.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\r\n\t\treturn geometry.center();\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/ImageUtils.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author Daosheng Mu / https://github.com/DaoshengMu/\r\n */\r\n\r\nTHREE.ImageUtils = {\r\n\r\n\tcrossOrigin: undefined,\r\n\r\n\tloadTexture: function ( url, mapping, onLoad, onError ) {\r\n\r\n\t\tvar loader = new THREE.ImageLoader();\r\n\t\tloader.crossOrigin = this.crossOrigin;\r\n\r\n\t\tvar texture = new THREE.Texture( undefined, mapping );\r\n\r\n\t\tloader.load( url, function ( image ) {\r\n\r\n\t\t\ttexture.image = image;\r\n\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t}, undefined, function ( event ) {\r\n\r\n\t\t\tif ( onError ) onError( event );\r\n\r\n\t\t} );\r\n\r\n\t\ttexture.sourceFile = url;\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tloadTextureCube: function ( array, mapping, onLoad, onError ) {\r\n\r\n\t\tvar images = [];\r\n\r\n\t\tvar loader = new THREE.ImageLoader();\r\n\t\tloader.crossOrigin = this.crossOrigin;\r\n\r\n\t\tvar texture = new THREE.CubeTexture( images, mapping );\r\n\r\n\t\t// no flipping needed for cube textures\r\n\r\n\t\ttexture.flipY = false;\r\n\r\n\t\tvar loaded = 0;\r\n\r\n\t\tvar loadTexture = function ( i ) {\r\n\r\n\t\t\tloader.load( array[ i ], function ( image ) {\r\n\r\n\t\t\t\ttexture.images[ i ] = image;\r\n\r\n\t\t\t\tloaded += 1;\r\n\r\n\t\t\t\tif ( loaded === 6 ) {\r\n\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}, undefined, onError );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = array.length; i < il; ++ i ) {\r\n\r\n\t\t\tloadTexture( i );\r\n\r\n\t\t}\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tloadCompressedTexture: function () {\r\n\r\n\t\tTHREE.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' )\r\n\r\n\t},\r\n\r\n\tloadCompressedTextureCube: function () {\r\n\r\n\t\tTHREE.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' )\r\n\r\n\t},\r\n\r\n\tgetNormalMap: function ( image, depth ) {\r\n\r\n\t\t// Adapted from http://www.paulbrunt.co.uk/lab/heightnormal/\r\n\r\n\t\tvar cross = function ( a, b ) {\r\n\r\n\t\t\treturn [ a[ 1 ] * b[ 2 ] - a[ 2 ] * b[ 1 ], a[ 2 ] * b[ 0 ] - a[ 0 ] * b[ 2 ], a[ 0 ] * b[ 1 ] - a[ 1 ] * b[ 0 ] ];\r\n\r\n\t\t}\r\n\r\n\t\tvar subtract = function ( a, b ) {\r\n\r\n\t\t\treturn [ a[ 0 ] - b[ 0 ], a[ 1 ] - b[ 1 ], a[ 2 ] - b[ 2 ] ];\r\n\r\n\t\t}\r\n\r\n\t\tvar normalize = function ( a ) {\r\n\r\n\t\t\tvar l = Math.sqrt( a[ 0 ] * a[ 0 ] + a[ 1 ] * a[ 1 ] + a[ 2 ] * a[ 2 ] );\r\n\t\t\treturn [ a[ 0 ] / l, a[ 1 ] / l, a[ 2 ] / l ];\r\n\r\n\t\t}\r\n\r\n\t\tdepth = depth | 1;\r\n\r\n\t\tvar width = image.width;\r\n\t\tvar height = image.height;\r\n\r\n\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\tcanvas.width = width;\r\n\t\tcanvas.height = height;\r\n\r\n\t\tvar context = canvas.getContext( '2d' );\r\n\t\tcontext.drawImage( image, 0, 0 );\r\n\r\n\t\tvar data = context.getImageData( 0, 0, width, height ).data;\r\n\t\tvar imageData = context.createImageData( width, height );\r\n\t\tvar output = imageData.data;\r\n\r\n\t\tfor ( var x = 0; x < width; x ++ ) {\r\n\r\n\t\t\tfor ( var y = 0; y < height; y ++ ) {\r\n\r\n\t\t\t\tvar ly = y - 1 < 0 ? 0 : y - 1;\r\n\t\t\t\tvar uy = y + 1 > height - 1 ? height - 1 : y + 1;\r\n\t\t\t\tvar lx = x - 1 < 0 ? 0 : x - 1;\r\n\t\t\t\tvar ux = x + 1 > width - 1 ? width - 1 : x + 1;\r\n\r\n\t\t\t\tvar points = [];\r\n\t\t\t\tvar origin = [ 0, 0, data[ ( y * width + x ) * 4 ] / 255 * depth ];\r\n\t\t\t\tpoints.push( [ - 1, 0, data[ ( y * width + lx ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ - 1, - 1, data[ ( ly * width + lx ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 0, - 1, data[ ( ly * width + x ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 1, - 1, data[ ( ly * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 1, 0, data[ ( y * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 1, 1, data[ ( uy * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 0, 1, data[ ( uy * width + x ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ - 1, 1, data[ ( uy * width + lx ) * 4 ] / 255 * depth ] );\r\n\r\n\t\t\t\tvar normals = [];\r\n\t\t\t\tvar num_points = points.length;\r\n\r\n\t\t\t\tfor ( var i = 0; i < num_points; i ++ ) {\r\n\r\n\t\t\t\t\tvar v1 = points[ i ];\r\n\t\t\t\t\tvar v2 = points[ ( i + 1 ) % num_points ];\r\n\t\t\t\t\tv1 = subtract( v1, origin );\r\n\t\t\t\t\tv2 = subtract( v2, origin );\r\n\t\t\t\t\tnormals.push( normalize( cross( v1, v2 ) ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar normal = [ 0, 0, 0 ];\r\n\r\n\t\t\t\tfor ( var i = 0; i < normals.length; i ++ ) {\r\n\r\n\t\t\t\t\tnormal[ 0 ] += normals[ i ][ 0 ];\r\n\t\t\t\t\tnormal[ 1 ] += normals[ i ][ 1 ];\r\n\t\t\t\t\tnormal[ 2 ] += normals[ i ][ 2 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnormal[ 0 ] /= normals.length;\r\n\t\t\t\tnormal[ 1 ] /= normals.length;\r\n\t\t\t\tnormal[ 2 ] /= normals.length;\r\n\r\n\t\t\t\tvar idx = ( y * width + x ) * 4;\r\n\r\n\t\t\t\toutput[ idx ] = ( ( normal[ 0 ] + 1.0 ) / 2.0 * 255 ) | 0;\r\n\t\t\t\toutput[ idx + 1 ] = ( ( normal[ 1 ] + 1.0 ) / 2.0 * 255 ) | 0;\r\n\t\t\t\toutput[ idx + 2 ] = ( normal[ 2 ] * 255 ) | 0;\r\n\t\t\t\toutput[ idx + 3 ] = 255;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tcontext.putImageData( imageData, 0, 0 );\r\n\r\n\t\treturn canvas;\r\n\r\n\t},\r\n\r\n\tgenerateDataTexture: function ( width, height, color ) {\r\n\r\n\t\tvar size = width * height;\r\n\t\tvar data = new Uint8Array( 3 * size );\r\n\r\n\t\tvar r = Math.floor( color.r * 255 );\r\n\t\tvar g = Math.floor( color.g * 255 );\r\n\t\tvar b = Math.floor( color.b * 255 );\r\n\r\n\t\tfor ( var i = 0; i < size; i ++ ) {\r\n\r\n\t\t\tdata[ i * 3 ] \t   = r;\r\n\t\t\tdata[ i * 3 + 1 ] = g;\r\n\t\t\tdata[ i * 3 + 2 ] = b;\r\n\r\n\t\t}\r\n\r\n\t\tvar texture = new THREE.DataTexture( data, width, height, THREE.RGBFormat );\r\n\t\ttexture.needsUpdate = true;\r\n\r\n\t\treturn texture;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/SceneUtils.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SceneUtils = {\r\n\r\n\tcreateMultiMaterialObject: function ( geometry, materials ) {\r\n\r\n\t\tvar group = new THREE.Object3D();\r\n\r\n\t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\r\n\r\n\t\t\tgroup.add( new THREE.Mesh( geometry, materials[ i ] ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn group;\r\n\r\n\t},\r\n\r\n\tdetach: function ( child, parent, scene ) {\r\n\r\n\t\tchild.applyMatrix( parent.matrixWorld );\r\n\t\tparent.remove( child );\r\n\t\tscene.add( child );\r\n\r\n\t},\r\n\r\n\tattach: function ( child, scene, parent ) {\r\n\r\n\t\tvar matrixWorldInverse = new THREE.Matrix4();\r\n\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\r\n\t\tchild.applyMatrix( matrixWorldInverse );\r\n\r\n\t\tscene.remove( child );\r\n\t\tparent.add( child );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/FontUtils.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * For Text operations in three.js (See TextGeometry)\r\n *\r\n * It uses techniques used in:\r\n *\r\n * \ttypeface.js and canvastext\r\n * \t\tFor converting fonts and rendering with javascript\r\n *\t\thttp://typeface.neocracy.org\r\n *\r\n *\tTriangulation ported from AS3\r\n *\t\tSimple Polygon Triangulation\r\n *\t\thttp://actionsnippet.com/?p=1462\r\n *\r\n * \tA Method to triangulate shapes with holes\r\n *\t\thttp://www.sakri.net/blog/2009/06/12/an-approach-to-triangulating-polygons-with-holes/\r\n *\r\n */\r\n\r\nTHREE.FontUtils = {\r\n\r\n\tfaces: {},\r\n\r\n\t// Just for now. face[weight][style]\r\n\r\n\tface: 'helvetiker',\r\n\tweight: 'normal',\r\n\tstyle: 'normal',\r\n\tsize: 150,\r\n\tdivisions: 10,\r\n\r\n\tgetFace: function () {\r\n\r\n\t\ttry {\r\n\r\n\t\t\treturn this.faces[ this.face ][ this.weight ][ this.style ];\r\n\r\n\t\t} catch (e) {\r\n\r\n\t\t\tthrow \"The font \" + this.face + \" with \" + this.weight + \" weight and \" + this.style + \" style is missing.\"\r\n\r\n\t\t};\r\n\r\n\t},\r\n\r\n\tloadFace: function ( data ) {\r\n\r\n\t\tvar family = data.familyName.toLowerCase();\r\n\r\n\t\tvar ThreeFont = this;\r\n\r\n\t\tThreeFont.faces[ family ] = ThreeFont.faces[ family ] || {};\r\n\r\n\t\tThreeFont.faces[ family ][ data.cssFontWeight ] = ThreeFont.faces[ family ][ data.cssFontWeight ] || {};\r\n\t\tThreeFont.faces[ family ][ data.cssFontWeight ][ data.cssFontStyle ] = data;\r\n\r\n\t\tThreeFont.faces[ family ][ data.cssFontWeight ][ data.cssFontStyle ] = data;\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tdrawText: function ( text ) {\r\n\r\n\t\t// RenderText\r\n\r\n\t\tvar i,\r\n\t\t\tface = this.getFace(),\r\n\t\t\tscale = this.size / face.resolution,\r\n\t\t\toffset = 0,\r\n\t\t\tchars = String( text ).split( '' ),\r\n\t\t\tlength = chars.length;\r\n\r\n\t\tvar fontPaths = [];\r\n\r\n\t\tfor ( i = 0; i < length; i ++ ) {\r\n\r\n\t\t\tvar path = new THREE.Path();\r\n\r\n\t\t\tvar ret = this.extractGlyphPoints( chars[ i ], face, scale, offset, path );\r\n\t\t\toffset += ret.offset;\r\n\r\n\t\t\tfontPaths.push( ret.path );\r\n\r\n\t\t}\r\n\r\n\t\t// get the width\r\n\r\n\t\tvar width = offset / 2;\r\n\t\t//\r\n\t\t// for ( p = 0; p < allPts.length; p++ ) {\r\n\t\t//\r\n\t\t// \tallPts[ p ].x -= width;\r\n\t\t//\r\n\t\t// }\r\n\r\n\t\t//var extract = this.extractPoints( allPts, characterPts );\r\n\t\t//extract.contour = allPts;\r\n\r\n\t\t//extract.paths = fontPaths;\r\n\t\t//extract.offset = width;\r\n\r\n\t\treturn { paths: fontPaths, offset: width };\r\n\r\n\t},\r\n\r\n\r\n\r\n\r\n\textractGlyphPoints: function ( c, face, scale, offset, path ) {\r\n\r\n\t\tvar pts = [];\r\n\r\n\t\tvar i, i2, divisions,\r\n\t\t\toutline, action, length,\r\n\t\t\tscaleX, scaleY,\r\n\t\t\tx, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2,\r\n\t\t\tlaste,\r\n\t\t\tglyph = face.glyphs[ c ] || face.glyphs[ '?' ];\r\n\r\n\t\tif ( ! glyph ) return;\r\n\r\n\t\tif ( glyph.o ) {\r\n\r\n\t\t\toutline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\r\n\t\t\tlength = outline.length;\r\n\r\n\t\t\tscaleX = scale;\r\n\t\t\tscaleY = scale;\r\n\r\n\t\t\tfor ( i = 0; i < length; ) {\r\n\r\n\t\t\t\taction = outline[ i ++ ];\r\n\r\n\t\t\t\t//console.log( action );\r\n\r\n\t\t\t\tswitch ( action ) {\r\n\r\n\t\t\t\tcase 'm':\r\n\r\n\t\t\t\t\t// Move To\r\n\r\n\t\t\t\t\tx = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\ty = outline[ i ++ ] * scaleY;\r\n\r\n\t\t\t\t\tpath.moveTo( x, y );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'l':\r\n\r\n\t\t\t\t\t// Line To\r\n\r\n\t\t\t\t\tx = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\ty = outline[ i ++ ] * scaleY;\r\n\t\t\t\t\tpath.lineTo( x, y );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'q':\r\n\r\n\t\t\t\t\t// QuadraticCurveTo\r\n\r\n\t\t\t\t\tcpx  = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\tcpy  = outline[ i ++ ] * scaleY;\r\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scaleY;\r\n\r\n\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\r\n\r\n\t\t\t\t\tlaste = pts[ pts.length - 1 ];\r\n\r\n\t\t\t\t\tif ( laste ) {\r\n\r\n\t\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t\t\t\tfor ( i2 = 1, divisions = this.divisions; i2 <= divisions; i2 ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar t = i2 / divisions;\r\n\t\t\t\t\t\t\tTHREE.Shape.Utils.b2( t, cpx0, cpx1, cpx );\r\n\t\t\t\t\t\t\tTHREE.Shape.Utils.b2( t, cpy0, cpy1, cpy );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'b':\r\n\r\n\t\t\t\t\t// Cubic Bezier Curve\r\n\r\n\t\t\t\t\tcpx  = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\tcpy  = outline[ i ++ ] *  scaleY;\r\n\t\t\t\t\tcpx1 = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\tcpy1 = outline[ i ++ ] *  scaleY;\r\n\t\t\t\t\tcpx2 = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\tcpy2 = outline[ i ++ ] *  scaleY;\r\n\r\n\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\r\n\r\n\t\t\t\t\tlaste = pts[ pts.length - 1 ];\r\n\r\n\t\t\t\t\tif ( laste ) {\r\n\r\n\t\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t\t\t\tfor ( i2 = 1, divisions = this.divisions; i2 <= divisions; i2 ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar t = i2 / divisions;\r\n\t\t\t\t\t\t\tTHREE.Shape.Utils.b3( t, cpx0, cpx1, cpx2, cpx );\r\n\t\t\t\t\t\t\tTHREE.Shape.Utils.b3( t, cpy0, cpy1, cpy2, cpy );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\r\n\t\treturn { offset: glyph.ha * scale, path:path };\r\n\t}\r\n\r\n};\r\n\r\n\r\nTHREE.FontUtils.generateShapes = function ( text, parameters ) {\r\n\r\n\t// Parameters \r\n\r\n\tparameters = parameters || {};\r\n\r\n\tvar size = parameters.size !== undefined ? parameters.size : 100;\r\n\tvar curveSegments = parameters.curveSegments !== undefined ? parameters.curveSegments : 4;\r\n\r\n\tvar font = parameters.font !== undefined ? parameters.font : 'helvetiker';\r\n\tvar weight = parameters.weight !== undefined ? parameters.weight : 'normal';\r\n\tvar style = parameters.style !== undefined ? parameters.style : 'normal';\r\n\r\n\tTHREE.FontUtils.size = size;\r\n\tTHREE.FontUtils.divisions = curveSegments;\r\n\r\n\tTHREE.FontUtils.face = font;\r\n\tTHREE.FontUtils.weight = weight;\r\n\tTHREE.FontUtils.style = style;\r\n\r\n\t// Get a Font data json object\r\n\r\n\tvar data = THREE.FontUtils.drawText( text );\r\n\r\n\tvar paths = data.paths;\r\n\tvar shapes = [];\r\n\r\n\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\r\n\r\n\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\r\n\r\n\t}\r\n\r\n\treturn shapes;\r\n\r\n};\r\n\r\n\r\n/**\r\n * This code is a quick port of code written in C++ which was submitted to\r\n * flipcode.com by John W. Ratcliff  // July 22, 2000\r\n * See original code and more information here:\r\n * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\r\n *\r\n * ported to actionscript by Zevan Rosser\r\n * www.actionsnippet.com\r\n *\r\n * ported to javascript by Joshua Koo\r\n * http://www.lab4games.net/zz85/blog\r\n *\r\n */\r\n\r\n\r\n( function ( namespace ) {\r\n\r\n\tvar EPSILON = 0.0000000001;\r\n\r\n\t// takes in an contour array and returns\r\n\r\n\tvar process = function ( contour, indices ) {\r\n\r\n\t\tvar n = contour.length;\r\n\r\n\t\tif ( n < 3 ) return null;\r\n\r\n\t\tvar result = [],\r\n\t\t\tverts = [],\r\n\t\t\tvertIndices = [];\r\n\r\n\t\t/* we want a counter-clockwise polygon in verts */\r\n\r\n\t\tvar u, v, w;\r\n\r\n\t\tif ( area( contour ) > 0.0 ) {\r\n\r\n\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = v;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = ( n - 1 ) - v;\r\n\r\n\t\t}\r\n\r\n\t\tvar nv = n;\r\n\r\n\t\t/*  remove nv - 2 vertices, creating 1 triangle every time */\r\n\r\n\t\tvar count = 2 * nv;   /* error detection */\r\n\r\n\t\tfor ( v = nv - 1; nv > 2; ) {\r\n\r\n\t\t\t/* if we loop, it is probably a non-simple polygon */\r\n\r\n\t\t\tif ( ( count -- ) <= 0 ) {\r\n\r\n\t\t\t\t//** Triangulate: ERROR - probable bad polygon!\r\n\r\n\t\t\t\t//throw ( \"Warning, unable to triangulate polygon!\" );\r\n\t\t\t\t//return null;\r\n\t\t\t\t// Sometimes warning is fine, especially polygons are triangulated in reverse.\r\n\t\t\t\tTHREE.warn( 'THREE.FontUtils: Warning, unable to triangulate polygon! in Triangulate.process()' );\r\n\r\n\t\t\t\tif ( indices ) return vertIndices;\r\n\t\t\t\treturn result;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t/* three consecutive vertices in current polygon, <u,v,w> */\r\n\r\n\t\t\tu = v; \t \tif ( nv <= u ) u = 0;     /* previous */\r\n\t\t\tv = u + 1;  if ( nv <= v ) v = 0;     /* new v    */\r\n\t\t\tw = v + 1;  if ( nv <= w ) w = 0;     /* next     */\r\n\r\n\t\t\tif ( snip( contour, u, v, w, nv, verts ) ) {\r\n\r\n\t\t\t\tvar a, b, c, s, t;\r\n\r\n\t\t\t\t/* true names of the vertices */\r\n\r\n\t\t\t\ta = verts[ u ];\r\n\t\t\t\tb = verts[ v ];\r\n\t\t\t\tc = verts[ w ];\r\n\r\n\t\t\t\t/* output Triangle */\r\n\r\n\t\t\t\tresult.push( [ contour[ a ],\r\n\t\t\t\t\tcontour[ b ],\r\n\t\t\t\t\tcontour[ c ] ] );\r\n\r\n\r\n\t\t\t\tvertIndices.push( [ verts[ u ], verts[ v ], verts[ w ] ] );\r\n\r\n\t\t\t\t/* remove v from the remaining polygon */\r\n\r\n\t\t\t\tfor ( s = v, t = v + 1; t < nv; s ++, t ++ ) {\r\n\r\n\t\t\t\t\tverts[ s ] = verts[ t ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnv --;\r\n\r\n\t\t\t\t/* reset error detection counter */\r\n\r\n\t\t\t\tcount = 2 * nv;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( indices ) return vertIndices;\r\n\t\treturn result;\r\n\r\n\t};\r\n\r\n\t// calculate area of the contour polygon\r\n\r\n\tvar area = function ( contour ) {\r\n\r\n\t\tvar n = contour.length;\r\n\t\tvar a = 0.0;\r\n\r\n\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\r\n\r\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\r\n\r\n\t\t}\r\n\r\n\t\treturn a * 0.5;\r\n\r\n\t};\r\n\r\n\tvar snip = function ( contour, u, v, w, n, verts ) {\r\n\r\n\t\tvar p;\r\n\t\tvar ax, ay, bx, by;\r\n\t\tvar cx, cy, px, py;\r\n\r\n\t\tax = contour[ verts[ u ] ].x;\r\n\t\tay = contour[ verts[ u ] ].y;\r\n\r\n\t\tbx = contour[ verts[ v ] ].x;\r\n\t\tby = contour[ verts[ v ] ].y;\r\n\r\n\t\tcx = contour[ verts[ w ] ].x;\r\n\t\tcy = contour[ verts[ w ] ].y;\r\n\r\n\t\tif ( EPSILON > ( ( ( bx - ax ) * ( cy - ay ) ) - ( ( by - ay ) * ( cx - ax ) ) ) ) return false;\r\n\r\n\t\tvar aX, aY, bX, bY, cX, cY;\r\n\t\tvar apx, apy, bpx, bpy, cpx, cpy;\r\n\t\tvar cCROSSap, bCROSScp, aCROSSbp;\r\n\r\n\t\taX = cx - bx;  aY = cy - by;\r\n\t\tbX = ax - cx;  bY = ay - cy;\r\n\t\tcX = bx - ax;  cY = by - ay;\r\n\r\n\t\tfor ( p = 0; p < n; p ++ ) {\r\n\r\n\t\t\tpx = contour[ verts[ p ] ].x\r\n\t\t\tpy = contour[ verts[ p ] ].y\r\n\r\n\t\t\tif ( ( ( px === ax ) && ( py === ay ) ) ||\r\n\t\t\t\t ( ( px === bx ) && ( py === by ) ) ||\r\n\t\t\t\t ( ( px === cx ) && ( py === cy ) ) )\tcontinue;\r\n\r\n\t\t\tapx = px - ax;  apy = py - ay;\r\n\t\t\tbpx = px - bx;  bpy = py - by;\r\n\t\t\tcpx = px - cx;  cpy = py - cy;\r\n\r\n\t\t\t// see if p is inside triangle abc\r\n\r\n\t\t\taCROSSbp = aX * bpy - aY * bpx;\r\n\t\t\tcCROSSap = cX * apy - cY * apx;\r\n\t\t\tbCROSScp = bX * cpy - bY * cpx;\r\n\r\n\t\t\tif ( ( aCROSSbp >= - EPSILON ) && ( bCROSScp >= - EPSILON ) && ( cCROSSap >= - EPSILON ) ) return false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t};\r\n\r\n\r\n\tnamespace.Triangulate = process;\r\n\tnamespace.Triangulate.area = area;\r\n\r\n\treturn namespace;\r\n\r\n} )( THREE.FontUtils );\r\n\r\n// To use the typeface.js face files, hook up the API\r\nself._typeface_js = { faces: THREE.FontUtils.faces, loadFace: THREE.FontUtils.loadFace };\r\nTHREE.typeface_js = self._typeface_js;\r\n\r\n// File:src/extras/audio/Audio.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Audio = function ( listener ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Audio';\r\n\r\n\tthis.context = listener.context;\r\n\tthis.source = this.context.createBufferSource();\r\n\tthis.source.onended = this.onEnded.bind(this);\r\n\r\n\tthis.gain = this.context.createGain();\r\n\tthis.gain.connect( this.context.destination );\r\n\r\n\tthis.panner = this.context.createPanner();\r\n\tthis.panner.connect( this.gain );\r\n\r\n\tthis.autoplay = false;\r\n\r\n\tthis.startTime = 0;\r\n\tthis.isPlaying = false;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Audio.prototype.constructor = THREE.Audio;\r\n\r\nTHREE.Audio.prototype.load = function ( file ) {\r\n\r\n\tvar scope = this;\r\n\r\n\tvar request = new XMLHttpRequest();\r\n\trequest.open( 'GET', file, true );\r\n\trequest.responseType = 'arraybuffer';\r\n\trequest.onload = function ( e ) {\r\n\r\n\t\tscope.context.decodeAudioData( this.response, function ( buffer ) {\r\n\r\n\t\t\tscope.source.buffer = buffer;\r\n\r\n\t\t\tif( scope.autoplay ) scope.play();\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\trequest.send();\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.play = function () {\r\n\r\n\tif ( this.isPlaying === true ) {\r\n\r\n\t\tTHREE.warn( 'THREE.Audio: Audio is already playing.' );\r\n\t\treturn;\r\n\r\n\t}\r\n\r\n\tvar source = this.context.createBufferSource();\r\n\r\n\tsource.buffer = this.source.buffer;\r\n\tsource.loop = this.source.loop;\r\n\tsource.onended = this.source.onended;\r\n\tsource.connect( this.panner );\r\n\tsource.start( 0, this.startTime );\r\n\r\n\tthis.isPlaying = true;\r\n\r\n\tthis.source = source;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.pause = function () {\r\n\r\n\tthis.source.stop();\r\n\tthis.startTime = this.context.currentTime;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.stop = function () {\r\n\r\n\tthis.source.stop();\r\n\tthis.startTime = 0;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.onEnded = function() {\r\n\r\n\tthis.isPlaying = false;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setLoop = function ( value ) {\r\n\r\n\tthis.source.loop = value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setRefDistance = function ( value ) {\r\n\r\n\tthis.panner.refDistance = value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setRolloffFactor = function ( value ) {\r\n\r\n\tthis.panner.rolloffFactor = value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setVolume = function ( value ) {\r\n\r\n\tthis.gain.gain.value = value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.updateMatrixWorld = ( function () {\r\n\r\n\tvar position = new THREE.Vector3();\r\n\r\n\treturn function ( force ) {\r\n\r\n\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\r\n\r\n\t\tposition.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\tthis.panner.setPosition( position.x, position.y, position.z );\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/extras/audio/AudioListener.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.AudioListener = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'AudioListener';\r\n\r\n\tthis.context = new ( window.AudioContext || window.webkitAudioContext )();\r\n\r\n};\r\n\r\nTHREE.AudioListener.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.AudioListener.prototype.constructor = THREE.AudioListener;\r\n\r\nTHREE.AudioListener.prototype.updateMatrixWorld = ( function () {\r\n\r\n\tvar position = new THREE.Vector3();\r\n\tvar quaternion = new THREE.Quaternion();\r\n\tvar scale = new THREE.Vector3();\r\n\r\n\tvar orientation = new THREE.Vector3();\r\n\tvar velocity = new THREE.Vector3();\r\n\r\n\tvar positionPrev = new THREE.Vector3();\r\n\r\n\treturn function ( force ) {\r\n\r\n\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\r\n\r\n\t\tvar listener = this.context.listener;\r\n\t\tvar up = this.up;\r\n\r\n\t\tthis.matrixWorld.decompose( position, quaternion, scale );\r\n\r\n\t\torientation.set( 0, 0, -1 ).applyQuaternion( quaternion );\r\n\t\tvelocity.subVectors( position, positionPrev );\r\n\r\n\t\tlistener.setPosition( position.x, position.y, position.z );\r\n\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\r\n\t\tlistener.setVelocity( velocity.x, velocity.y, velocity.z );\r\n\r\n\t\tpositionPrev.copy( position );\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/extras/core/Curve.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Extensible curve object\r\n *\r\n * Some common of Curve methods\r\n * .getPoint(t), getTangent(t)\r\n * .getPointAt(u), getTagentAt(u)\r\n * .getPoints(), .getSpacedPoints()\r\n * .getLength()\r\n * .updateArcLengths()\r\n *\r\n * This following classes subclasses THREE.Curve:\r\n *\r\n * -- 2d classes --\r\n * THREE.LineCurve\r\n * THREE.QuadraticBezierCurve\r\n * THREE.CubicBezierCurve\r\n * THREE.SplineCurve\r\n * THREE.ArcCurve\r\n * THREE.EllipseCurve\r\n *\r\n * -- 3d classes --\r\n * THREE.LineCurve3\r\n * THREE.QuadraticBezierCurve3\r\n * THREE.CubicBezierCurve3\r\n * THREE.SplineCurve3\r\n * THREE.ClosedSplineCurve3\r\n *\r\n * A series of curves can be represented as a THREE.CurvePath\r\n *\r\n **/\r\n\r\n/**************************************************************\r\n *\tAbstract Curve base class\r\n **************************************************************/\r\n\r\nTHREE.Curve = function () {\r\n\r\n};\r\n\r\n// Virtual base class method to overwrite and implement in subclasses\r\n//\t- t [0 .. 1]\r\n\r\nTHREE.Curve.prototype.getPoint = function ( t ) {\r\n\r\n\tTHREE.warn( \"THREE.Curve: Warning, getPoint() not implemented!\" );\r\n\treturn null;\r\n\r\n};\r\n\r\n// Get point at relative position in curve according to arc length\r\n// - u [0 .. 1]\r\n\r\nTHREE.Curve.prototype.getPointAt = function ( u ) {\r\n\r\n\tvar t = this.getUtoTmapping( u );\r\n\treturn this.getPoint( t );\r\n\r\n};\r\n\r\n// Get sequence of points using getPoint( t )\r\n\r\nTHREE.Curve.prototype.getPoints = function ( divisions ) {\r\n\r\n\tif ( ! divisions ) divisions = 5;\r\n\r\n\tvar d, pts = [];\r\n\r\n\tfor ( d = 0; d <= divisions; d ++ ) {\r\n\r\n\t\tpts.push( this.getPoint( d / divisions ) );\r\n\r\n\t}\r\n\r\n\treturn pts;\r\n\r\n};\r\n\r\n// Get sequence of points using getPointAt( u )\r\n\r\nTHREE.Curve.prototype.getSpacedPoints = function ( divisions ) {\r\n\r\n\tif ( ! divisions ) divisions = 5;\r\n\r\n\tvar d, pts = [];\r\n\r\n\tfor ( d = 0; d <= divisions; d ++ ) {\r\n\r\n\t\tpts.push( this.getPointAt( d / divisions ) );\r\n\r\n\t}\r\n\r\n\treturn pts;\r\n\r\n};\r\n\r\n// Get total curve arc length\r\n\r\nTHREE.Curve.prototype.getLength = function () {\r\n\r\n\tvar lengths = this.getLengths();\r\n\treturn lengths[ lengths.length - 1 ];\r\n\r\n};\r\n\r\n// Get list of cumulative segment lengths\r\n\r\nTHREE.Curve.prototype.getLengths = function ( divisions ) {\r\n\r\n\tif ( ! divisions ) divisions = (this.__arcLengthDivisions) ? (this.__arcLengthDivisions) : 200;\r\n\r\n\tif ( this.cacheArcLengths\r\n\t\t&& ( this.cacheArcLengths.length == divisions + 1 )\r\n\t\t&& ! this.needsUpdate) {\r\n\r\n\t\t//console.log( \"cached\", this.cacheArcLengths );\r\n\t\treturn this.cacheArcLengths;\r\n\r\n\t}\r\n\r\n\tthis.needsUpdate = false;\r\n\r\n\tvar cache = [];\r\n\tvar current, last = this.getPoint( 0 );\r\n\tvar p, sum = 0;\r\n\r\n\tcache.push( 0 );\r\n\r\n\tfor ( p = 1; p <= divisions; p ++ ) {\r\n\r\n\t\tcurrent = this.getPoint ( p / divisions );\r\n\t\tsum += current.distanceTo( last );\r\n\t\tcache.push( sum );\r\n\t\tlast = current;\r\n\r\n\t}\r\n\r\n\tthis.cacheArcLengths = cache;\r\n\r\n\treturn cache; // { sums: cache, sum:sum }; Sum is in the last element.\r\n\r\n};\r\n\r\n\r\nTHREE.Curve.prototype.updateArcLengths = function() {\r\n\tthis.needsUpdate = true;\r\n\tthis.getLengths();\r\n};\r\n\r\n// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equi distance\r\n\r\nTHREE.Curve.prototype.getUtoTmapping = function ( u, distance ) {\r\n\r\n\tvar arcLengths = this.getLengths();\r\n\r\n\tvar i = 0, il = arcLengths.length;\r\n\r\n\tvar targetArcLength; // The targeted u distance value to get\r\n\r\n\tif ( distance ) {\r\n\r\n\t\ttargetArcLength = distance;\r\n\r\n\t} else {\r\n\r\n\t\ttargetArcLength = u * arcLengths[ il - 1 ];\r\n\r\n\t}\r\n\r\n\t//var time = Date.now();\r\n\r\n\t// binary search for the index with largest value smaller than target u distance\r\n\r\n\tvar low = 0, high = il - 1, comparison;\r\n\r\n\twhile ( low <= high ) {\r\n\r\n\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\r\n\r\n\t\tcomparison = arcLengths[ i ] - targetArcLength;\r\n\r\n\t\tif ( comparison < 0 ) {\r\n\r\n\t\t\tlow = i + 1;\r\n\r\n\t\t} else if ( comparison > 0 ) {\r\n\r\n\t\t\thigh = i - 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\thigh = i;\r\n\t\t\tbreak;\r\n\r\n\t\t\t// DONE\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\ti = high;\r\n\r\n\t//console.log('b' , i, low, high, Date.now()- time);\r\n\r\n\tif ( arcLengths[ i ] == targetArcLength ) {\r\n\r\n\t\tvar t = i / ( il - 1 );\r\n\t\treturn t;\r\n\r\n\t}\r\n\r\n\t// we could get finer grain at lengths, or use simple interpolatation between two points\r\n\r\n\tvar lengthBefore = arcLengths[ i ];\r\n\tvar lengthAfter = arcLengths[ i + 1 ];\r\n\r\n\tvar segmentLength = lengthAfter - lengthBefore;\r\n\r\n    // determine where we are between the 'before' and 'after' points\r\n\r\n\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\r\n\r\n    // add that fractional amount to t\r\n\r\n\tvar t = ( i + segmentFraction ) / ( il - 1 );\r\n\r\n\treturn t;\r\n\r\n};\r\n\r\n// Returns a unit vector tangent at t\r\n// In case any sub curve does not implement its tangent derivation,\r\n// 2 points a small delta apart will be used to find its gradient\r\n// which seems to give a reasonable approximation\r\n\r\nTHREE.Curve.prototype.getTangent = function( t ) {\r\n\r\n\tvar delta = 0.0001;\r\n\tvar t1 = t - delta;\r\n\tvar t2 = t + delta;\r\n\r\n\t// Capping in case of danger\r\n\r\n\tif ( t1 < 0 ) t1 = 0;\r\n\tif ( t2 > 1 ) t2 = 1;\r\n\r\n\tvar pt1 = this.getPoint( t1 );\r\n\tvar pt2 = this.getPoint( t2 );\r\n\r\n\tvar vec = pt2.clone().sub(pt1);\r\n\treturn vec.normalize();\r\n\r\n};\r\n\r\n\r\nTHREE.Curve.prototype.getTangentAt = function ( u ) {\r\n\r\n\tvar t = this.getUtoTmapping( u );\r\n\treturn this.getTangent( t );\r\n\r\n};\r\n\r\n\r\n\r\n\r\n\r\n/**************************************************************\r\n *\tUtils\r\n **************************************************************/\r\n\r\nTHREE.Curve.Utils = {\r\n\r\n\ttangentQuadraticBezier: function ( t, p0, p1, p2 ) {\r\n\r\n\t\treturn 2 * ( 1 - t ) * ( p1 - p0 ) + 2 * t * ( p2 - p1 );\r\n\r\n\t},\r\n\r\n\t// Puay Bing, thanks for helping with this derivative!\r\n\r\n\ttangentCubicBezier: function (t, p0, p1, p2, p3 ) {\r\n\r\n\t\treturn - 3 * p0 * (1 - t) * (1 - t)  +\r\n\t\t\t3 * p1 * (1 - t) * (1 - t) - 6 * t * p1 * (1 - t) +\r\n\t\t\t6 * t *  p2 * (1 - t) - 3 * t * t * p2 +\r\n\t\t\t3 * t * t * p3;\r\n\r\n\t},\r\n\r\n\ttangentSpline: function ( t, p0, p1, p2, p3 ) {\r\n\r\n\t\t// To check if my formulas are correct\r\n\r\n\t\tvar h00 = 6 * t * t - 6 * t; \t// derived from 2t^3 − 3t^2 + 1\r\n\t\tvar h10 = 3 * t * t - 4 * t + 1; // t^3 − 2t^2 + t\r\n\t\tvar h01 = - 6 * t * t + 6 * t; \t// − 2t3 + 3t2\r\n\t\tvar h11 = 3 * t * t - 2 * t;\t// t3 − t2\r\n\r\n\t\treturn h00 + h10 + h01 + h11;\r\n\r\n\t},\r\n\r\n\t// Catmull-Rom\r\n\r\n\tinterpolate: function( p0, p1, p2, p3, t ) {\r\n\r\n\t\tvar v0 = ( p2 - p0 ) * 0.5;\r\n\t\tvar v1 = ( p3 - p1 ) * 0.5;\r\n\t\tvar t2 = t * t;\r\n\t\tvar t3 = t * t2;\r\n\t\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\n// TODO: Transformation for Curves?\r\n\r\n/**************************************************************\r\n *\t3D Curves\r\n **************************************************************/\r\n\r\n// A Factory method for creating new curve subclasses\r\n\r\nTHREE.Curve.create = function ( constructor, getPointFunc ) {\r\n\r\n\tconstructor.prototype = Object.create( THREE.Curve.prototype );\r\n\tconstructor.prototype.constructor = constructor;\r\n\tconstructor.prototype.getPoint = getPointFunc;\r\n\r\n\treturn constructor;\r\n\r\n};\r\n\r\n// File:src/extras/core/CurvePath.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n *\r\n **/\r\n\r\n/**************************************************************\r\n *\tCurved Path - a curve path is simply a array of connected\r\n *  curves, but retains the api of a curve\r\n **************************************************************/\r\n\r\nTHREE.CurvePath = function () {\r\n\r\n\tthis.curves = [];\r\n\tthis.bends = [];\r\n\t\r\n\tthis.autoClose = false; // Automatically closes the path\r\n};\r\n\r\nTHREE.CurvePath.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.CurvePath.prototype.constructor = THREE.CurvePath;\r\n\r\nTHREE.CurvePath.prototype.add = function ( curve ) {\r\n\r\n\tthis.curves.push( curve );\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.checkConnection = function() {\r\n\t// TODO\r\n\t// If the ending of curve is not connected to the starting\r\n\t// or the next curve, then, this is not a real path\r\n};\r\n\r\nTHREE.CurvePath.prototype.closePath = function() {\r\n\t// TODO Test\r\n\t// and verify for vector3 (needs to implement equals)\r\n\t// Add a line curve if start and end of lines are not connected\r\n\tvar startPoint = this.curves[0].getPoint(0);\r\n\tvar endPoint = this.curves[this.curves.length - 1].getPoint(1);\r\n\t\r\n\tif (! startPoint.equals(endPoint)) {\r\n\t\tthis.curves.push( new THREE.LineCurve(endPoint, startPoint) );\r\n\t}\r\n\t\r\n};\r\n\r\n// To get accurate point with reference to\r\n// entire path distance at time t,\r\n// following has to be done:\r\n\r\n// 1. Length of each sub path have to be known\r\n// 2. Locate and identify type of curve\r\n// 3. Get t for the curve\r\n// 4. Return curve.getPointAt(t')\r\n\r\nTHREE.CurvePath.prototype.getPoint = function( t ) {\r\n\r\n\tvar d = t * this.getLength();\r\n\tvar curveLengths = this.getCurveLengths();\r\n\tvar i = 0, diff, curve;\r\n\r\n\t// To think about boundaries points.\r\n\r\n\twhile ( i < curveLengths.length ) {\r\n\r\n\t\tif ( curveLengths[ i ] >= d ) {\r\n\r\n\t\t\tdiff = curveLengths[ i ] - d;\r\n\t\t\tcurve = this.curves[ i ];\r\n\r\n\t\t\tvar u = 1 - diff / curve.getLength();\r\n\r\n\t\t\treturn curve.getPointAt( u );\r\n\r\n\t\t}\r\n\r\n\t\ti ++;\r\n\r\n\t}\r\n\r\n\treturn null;\r\n\r\n\t// loop where sum != 0, sum > d , sum+1 <d\r\n\r\n};\r\n\r\n/*\r\nTHREE.CurvePath.prototype.getTangent = function( t ) {\r\n};*/\r\n\r\n\r\n// We cannot use the default THREE.Curve getPoint() with getLength() because in\r\n// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\r\n// getPoint() depends on getLength\r\n\r\nTHREE.CurvePath.prototype.getLength = function() {\r\n\r\n\tvar lens = this.getCurveLengths();\r\n\treturn lens[ lens.length - 1 ];\r\n\r\n};\r\n\r\n// Compute lengths and cache them\r\n// We cannot overwrite getLengths() because UtoT mapping uses it.\r\n\r\nTHREE.CurvePath.prototype.getCurveLengths = function() {\r\n\r\n\t// We use cache values if curves and cache array are same length\r\n\r\n\tif ( this.cacheLengths && this.cacheLengths.length == this.curves.length ) {\r\n\r\n\t\treturn this.cacheLengths;\r\n\r\n\t};\r\n\r\n\t// Get length of subsurve\r\n\t// Push sums into cached array\r\n\r\n\tvar lengths = [], sums = 0;\r\n\tvar i, il = this.curves.length;\r\n\r\n\tfor ( i = 0; i < il; i ++ ) {\r\n\r\n\t\tsums += this.curves[ i ].getLength();\r\n\t\tlengths.push( sums );\r\n\r\n\t}\r\n\r\n\tthis.cacheLengths = lengths;\r\n\r\n\treturn lengths;\r\n\r\n};\r\n\r\n\r\n\r\n// Returns min and max coordinates\r\n\r\nTHREE.CurvePath.prototype.getBoundingBox = function () {\r\n\r\n\tvar points = this.getPoints();\r\n\r\n\tvar maxX, maxY, maxZ;\r\n\tvar minX, minY, minZ;\r\n\r\n\tmaxX = maxY = Number.NEGATIVE_INFINITY;\r\n\tminX = minY = Number.POSITIVE_INFINITY;\r\n\r\n\tvar p, i, il, sum;\r\n\r\n\tvar v3 = points[0] instanceof THREE.Vector3;\r\n\r\n\tsum = v3 ? new THREE.Vector3() : new THREE.Vector2();\r\n\r\n\tfor ( i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\tp = points[ i ];\r\n\r\n\t\tif ( p.x > maxX ) maxX = p.x;\r\n\t\telse if ( p.x < minX ) minX = p.x;\r\n\r\n\t\tif ( p.y > maxY ) maxY = p.y;\r\n\t\telse if ( p.y < minY ) minY = p.y;\r\n\r\n\t\tif ( v3 ) {\r\n\r\n\t\t\tif ( p.z > maxZ ) maxZ = p.z;\r\n\t\t\telse if ( p.z < minZ ) minZ = p.z;\r\n\r\n\t\t}\r\n\r\n\t\tsum.add( p );\r\n\r\n\t}\r\n\r\n\tvar ret = {\r\n\r\n\t\tminX: minX,\r\n\t\tminY: minY,\r\n\t\tmaxX: maxX,\r\n\t\tmaxY: maxY\r\n\r\n\t};\r\n\r\n\tif ( v3 ) {\r\n\r\n\t\tret.maxZ = maxZ;\r\n\t\tret.minZ = minZ;\r\n\r\n\t}\r\n\r\n\treturn ret;\r\n\r\n};\r\n\r\n/**************************************************************\r\n *\tCreate Geometries Helpers\r\n **************************************************************/\r\n\r\n/// Generate geometry from path points (for Line or Points objects)\r\n\r\nTHREE.CurvePath.prototype.createPointsGeometry = function( divisions ) {\r\n\r\n\tvar pts = this.getPoints( divisions, true );\r\n\treturn this.createGeometry( pts );\r\n\r\n};\r\n\r\n// Generate geometry from equidistance sampling along the path\r\n\r\nTHREE.CurvePath.prototype.createSpacedPointsGeometry = function( divisions ) {\r\n\r\n\tvar pts = this.getSpacedPoints( divisions, true );\r\n\treturn this.createGeometry( pts );\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.createGeometry = function( points ) {\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\r\n\tfor ( var i = 0; i < points.length; i ++ ) {\r\n\r\n\t\tgeometry.vertices.push( new THREE.Vector3( points[ i ].x, points[ i ].y, points[ i ].z || 0) );\r\n\r\n\t}\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n\r\n/**************************************************************\r\n *\tBend / Wrap Helper Methods\r\n **************************************************************/\r\n\r\n// Wrap path / Bend modifiers?\r\n\r\nTHREE.CurvePath.prototype.addWrapPath = function ( bendpath ) {\r\n\r\n\tthis.bends.push( bendpath );\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.getTransformedPoints = function( segments, bends ) {\r\n\r\n\tvar oldPts = this.getPoints( segments ); // getPoints getSpacedPoints\r\n\tvar i, il;\r\n\r\n\tif ( ! bends ) {\r\n\r\n\t\tbends = this.bends;\r\n\r\n\t}\r\n\r\n\tfor ( i = 0, il = bends.length; i < il; i ++ ) {\r\n\r\n\t\toldPts = this.getWrapPoints( oldPts, bends[ i ] );\r\n\r\n\t}\r\n\r\n\treturn oldPts;\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.getTransformedSpacedPoints = function( segments, bends ) {\r\n\r\n\tvar oldPts = this.getSpacedPoints( segments );\r\n\r\n\tvar i, il;\r\n\r\n\tif ( ! bends ) {\r\n\r\n\t\tbends = this.bends;\r\n\r\n\t}\r\n\r\n\tfor ( i = 0, il = bends.length; i < il; i ++ ) {\r\n\r\n\t\toldPts = this.getWrapPoints( oldPts, bends[ i ] );\r\n\r\n\t}\r\n\r\n\treturn oldPts;\r\n\r\n};\r\n\r\n// This returns getPoints() bend/wrapped around the contour of a path.\r\n// Read http://www.planetclegg.com/projects/WarpingTextToSplines.html\r\n\r\nTHREE.CurvePath.prototype.getWrapPoints = function ( oldPts, path ) {\r\n\r\n\tvar bounds = this.getBoundingBox();\r\n\r\n\tvar i, il, p, oldX, oldY, xNorm;\r\n\r\n\tfor ( i = 0, il = oldPts.length; i < il; i ++ ) {\r\n\r\n\t\tp = oldPts[ i ];\r\n\r\n\t\toldX = p.x;\r\n\t\toldY = p.y;\r\n\r\n\t\txNorm = oldX / bounds.maxX;\r\n\r\n\t\t// If using actual distance, for length > path, requires line extrusions\r\n\t\t//xNorm = path.getUtoTmapping(xNorm, oldX); // 3 styles. 1) wrap stretched. 2) wrap stretch by arc length 3) warp by actual distance\r\n\r\n\t\txNorm = path.getUtoTmapping( xNorm, oldX );\r\n\r\n\t\t// check for out of bounds?\r\n\r\n\t\tvar pathPt = path.getPoint( xNorm );\r\n\t\tvar normal = path.getTangent( xNorm );\r\n\t\tnormal.set( - normal.y, normal.x ).multiplyScalar( oldY );\r\n\r\n\t\tp.x = pathPt.x + normal.x;\r\n\t\tp.y = pathPt.y + normal.y;\r\n\r\n\t}\r\n\r\n\treturn oldPts;\r\n\r\n};\r\n\r\n\r\n// File:src/extras/core/Gyroscope.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Gyroscope = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n};\r\n\r\nTHREE.Gyroscope.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Gyroscope.prototype.constructor = THREE.Gyroscope;\r\n\r\nTHREE.Gyroscope.prototype.updateMatrixWorld = ( function () {\r\n\r\n\tvar translationObject = new THREE.Vector3();\r\n\tvar quaternionObject = new THREE.Quaternion();\r\n\tvar scaleObject = new THREE.Vector3();\r\n\r\n\tvar translationWorld = new THREE.Vector3();\r\n\tvar quaternionWorld = new THREE.Quaternion();\r\n\tvar scaleWorld = new THREE.Vector3();\r\n\r\n\treturn function ( force ) {\r\n\r\n\t\tthis.matrixAutoUpdate && this.updateMatrix();\r\n\r\n\t\t// update matrixWorld\r\n\r\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\r\n\r\n\t\t\tif ( this.parent ) {\r\n\r\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\r\n\r\n\t\t\t\tthis.matrixWorld.decompose( translationWorld, quaternionWorld, scaleWorld );\r\n\t\t\t\tthis.matrix.decompose( translationObject, quaternionObject, scaleObject );\r\n\r\n\t\t\t\tthis.matrixWorld.compose( translationWorld, quaternionObject, scaleWorld );\r\n\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tthis.matrixWorldNeedsUpdate = false;\r\n\r\n\t\t\tforce = true;\r\n\r\n\t\t}\r\n\r\n\t\t// update children\r\n\r\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n\t\t\tthis.children[ i ].updateMatrixWorld( force );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\t\r\n}() );\r\n\r\n// File:src/extras/core/Path.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Creates free form 2d path using series of points, lines or curves.\r\n *\r\n **/\r\n\r\nTHREE.Path = function ( points ) {\r\n\r\n\tTHREE.CurvePath.call(this);\r\n\r\n\tthis.actions = [];\r\n\r\n\tif ( points ) {\r\n\r\n\t\tthis.fromPoints( points );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Path.prototype = Object.create( THREE.CurvePath.prototype );\r\nTHREE.Path.prototype.constructor = THREE.Path;\r\n\r\nTHREE.PathActions = {\r\n\r\n\tMOVE_TO: 'moveTo',\r\n\tLINE_TO: 'lineTo',\r\n\tQUADRATIC_CURVE_TO: 'quadraticCurveTo', // Bezier quadratic curve\r\n\tBEZIER_CURVE_TO: 'bezierCurveTo', \t\t// Bezier cubic curve\r\n\tCSPLINE_THRU: 'splineThru',\t\t\t\t// Catmull-rom spline\r\n\tARC: 'arc',\t\t\t\t\t\t\t\t// Circle\r\n\tELLIPSE: 'ellipse'\r\n};\r\n\r\n// TODO Clean up PATH API\r\n\r\n// Create path using straight lines to connect all points\r\n// - vectors: array of Vector2\r\n\r\nTHREE.Path.prototype.fromPoints = function ( vectors ) {\r\n\r\n\tthis.moveTo( vectors[ 0 ].x, vectors[ 0 ].y );\r\n\r\n\tfor ( var v = 1, vlen = vectors.length; v < vlen; v ++ ) {\r\n\r\n\t\tthis.lineTo( vectors[ v ].x, vectors[ v ].y );\r\n\r\n\t};\r\n\r\n};\r\n\r\n// startPath() endPath()?\r\n\r\nTHREE.Path.prototype.moveTo = function ( x, y ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\tthis.actions.push( { action: THREE.PathActions.MOVE_TO, args: args } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.lineTo = function ( x, y ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tvar curve = new THREE.LineCurve( new THREE.Vector2( x0, y0 ), new THREE.Vector2( x, y ) );\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.LINE_TO, args: args } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.quadraticCurveTo = function( aCPx, aCPy, aX, aY ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tvar curve = new THREE.QuadraticBezierCurve( new THREE.Vector2( x0, y0 ),\r\n\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCPx, aCPy ),\r\n\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aX, aY ) );\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.QUADRATIC_CURVE_TO, args: args } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.bezierCurveTo = function( aCP1x, aCP1y,\r\n\t\t\t\t\t\t\t\t\t\t\t   aCP2x, aCP2y,\r\n\t\t\t\t\t\t\t\t\t\t\t   aX, aY ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tvar curve = new THREE.CubicBezierCurve( new THREE.Vector2( x0, y0 ),\r\n\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCP1x, aCP1y ),\r\n\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCP2x, aCP2y ),\r\n\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aX, aY ) );\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.BEZIER_CURVE_TO, args: args } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.splineThru = function( pts /*Array of Vector*/ ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n//---\r\n\tvar npts = [ new THREE.Vector2( x0, y0 ) ];\r\n\tArray.prototype.push.apply( npts, pts );\r\n\r\n\tvar curve = new THREE.SplineCurve( npts );\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.CSPLINE_THRU, args: args } );\r\n\r\n};\r\n\r\n// FUTURE: Change the API or follow canvas API?\r\n\r\nTHREE.Path.prototype.arc = function ( aX, aY, aRadius,\r\n\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1].args;\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tthis.absarc(aX + x0, aY + y0, aRadius,\r\n\t\taStartAngle, aEndAngle, aClockwise );\r\n\r\n };\r\n\r\n THREE.Path.prototype.absarc = function ( aX, aY, aRadius,\r\n\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise ) {\r\n\tthis.absellipse(aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\r\n };\r\n\r\nTHREE.Path.prototype.ellipse = function ( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1].args;\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tthis.absellipse(aX + x0, aY + y0, xRadius, yRadius,\r\n\t\taStartAngle, aEndAngle, aClockwise );\r\n\r\n };\r\n\r\n\r\nTHREE.Path.prototype.absellipse = function ( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\tvar curve = new THREE.EllipseCurve( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\taStartAngle, aEndAngle, aClockwise );\r\n\tthis.curves.push( curve );\r\n\r\n\tvar lastPoint = curve.getPoint(1);\r\n\targs.push(lastPoint.x);\r\n\targs.push(lastPoint.y);\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.ELLIPSE, args: args } );\r\n\r\n };\r\n\r\nTHREE.Path.prototype.getSpacedPoints = function ( divisions, closedPath ) {\r\n\r\n\tif ( ! divisions ) divisions = 40;\r\n\r\n\tvar points = [];\r\n\r\n\tfor ( var i = 0; i < divisions; i ++ ) {\r\n\r\n\t\tpoints.push( this.getPoint( i / divisions ) );\r\n\r\n\t\t//if( !this.getPoint( i / divisions ) ) throw \"DIE\";\r\n\r\n\t}\r\n\r\n\t// if ( closedPath ) {\r\n\t//\r\n\t// \tpoints.push( points[ 0 ] );\r\n\t//\r\n\t// }\r\n\r\n\treturn points;\r\n\r\n};\r\n\r\n/* Return an array of vectors based on contour of the path */\r\n\r\nTHREE.Path.prototype.getPoints = function( divisions, closedPath ) {\r\n\r\n\tif (this.useSpacedPoints) {\r\n\t\tconsole.log('tata');\r\n\t\treturn this.getSpacedPoints( divisions, closedPath );\r\n\t}\r\n\r\n\tdivisions = divisions || 12;\r\n\r\n\tvar points = [];\r\n\r\n\tvar i, il, item, action, args;\r\n\tvar cpx, cpy, cpx2, cpy2, cpx1, cpy1, cpx0, cpy0,\r\n\t\tlaste, j,\r\n\t\tt, tx, ty;\r\n\r\n\tfor ( i = 0, il = this.actions.length; i < il; i ++ ) {\r\n\r\n\t\titem = this.actions[ i ];\r\n\r\n\t\taction = item.action;\r\n\t\targs = item.args;\r\n\r\n\t\tswitch ( action ) {\r\n\r\n\t\tcase THREE.PathActions.MOVE_TO:\r\n\r\n\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.LINE_TO:\r\n\r\n\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.QUADRATIC_CURVE_TO:\r\n\r\n\t\t\tcpx  = args[ 2 ];\r\n\t\t\tcpy  = args[ 3 ];\r\n\r\n\t\t\tcpx1 = args[ 0 ];\r\n\t\t\tcpy1 = args[ 1 ];\r\n\r\n\t\t\tif ( points.length > 0 ) {\r\n\r\n\t\t\t\tlaste = points[ points.length - 1 ];\r\n\r\n\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\r\n\t\t\t\tcpx0 = laste[ laste.length - 2 ];\r\n\t\t\t\tcpy0 = laste[ laste.length - 1 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( j = 1; j <= divisions; j ++ ) {\r\n\r\n\t\t\t\tt = j / divisions;\r\n\r\n\t\t\t\ttx = THREE.Shape.Utils.b2( t, cpx0, cpx1, cpx );\r\n\t\t\t\tty = THREE.Shape.Utils.b2( t, cpy0, cpy1, cpy );\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.BEZIER_CURVE_TO:\r\n\r\n\t\t\tcpx  = args[ 4 ];\r\n\t\t\tcpy  = args[ 5 ];\r\n\r\n\t\t\tcpx1 = args[ 0 ];\r\n\t\t\tcpy1 = args[ 1 ];\r\n\r\n\t\t\tcpx2 = args[ 2 ];\r\n\t\t\tcpy2 = args[ 3 ];\r\n\r\n\t\t\tif ( points.length > 0 ) {\r\n\r\n\t\t\t\tlaste = points[ points.length - 1 ];\r\n\r\n\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\r\n\t\t\t\tcpx0 = laste[ laste.length - 2 ];\r\n\t\t\t\tcpy0 = laste[ laste.length - 1 ];\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfor ( j = 1; j <= divisions; j ++ ) {\r\n\r\n\t\t\t\tt = j / divisions;\r\n\r\n\t\t\t\ttx = THREE.Shape.Utils.b3( t, cpx0, cpx1, cpx2, cpx );\r\n\t\t\t\tty = THREE.Shape.Utils.b3( t, cpy0, cpy1, cpy2, cpy );\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.CSPLINE_THRU:\r\n\r\n\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\r\n\t\t\tvar last = new THREE.Vector2( laste[ laste.length - 2 ], laste[ laste.length - 1 ] );\r\n\t\t\tvar spts = [ last ];\r\n\r\n\t\t\tvar n = divisions * args[ 0 ].length;\r\n\r\n\t\t\tspts = spts.concat( args[ 0 ] );\r\n\r\n\t\t\tvar spline = new THREE.SplineCurve( spts );\r\n\r\n\t\t\tfor ( j = 1; j <= n; j ++ ) {\r\n\r\n\t\t\t\tpoints.push( spline.getPointAt( j / n ) ) ;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.ARC:\r\n\r\n\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\r\n\t\t\t\taRadius = args[ 2 ],\r\n\t\t\t\taStartAngle = args[ 3 ], aEndAngle = args[ 4 ],\r\n\t\t\t\taClockwise = !! args[ 5 ];\r\n\r\n\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\r\n\t\t\tvar angle;\r\n\t\t\tvar tdivisions = divisions * 2;\r\n\r\n\t\t\tfor ( j = 1; j <= tdivisions; j ++ ) {\r\n\r\n\t\t\t\tt = j / tdivisions;\r\n\r\n\t\t\t\tif ( ! aClockwise ) {\r\n\r\n\t\t\t\t\tt = 1 - t;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tangle = aStartAngle + t * deltaAngle;\r\n\r\n\t\t\t\ttx = aX + aRadius * Math.cos( angle );\r\n\t\t\t\tty = aY + aRadius * Math.sin( angle );\r\n\r\n\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//console.log(points);\r\n\r\n\t\t\tbreak;\r\n\t\t  \r\n\t\tcase THREE.PathActions.ELLIPSE:\r\n\r\n\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\r\n\t\t\t\txRadius = args[ 2 ],\r\n\t\t\t\tyRadius = args[ 3 ],\r\n\t\t\t\taStartAngle = args[ 4 ], aEndAngle = args[ 5 ],\r\n\t\t\t\taClockwise = !! args[ 6 ];\r\n\r\n\r\n\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\r\n\t\t\tvar angle;\r\n\t\t\tvar tdivisions = divisions * 2;\r\n\r\n\t\t\tfor ( j = 1; j <= tdivisions; j ++ ) {\r\n\r\n\t\t\t\tt = j / tdivisions;\r\n\r\n\t\t\t\tif ( ! aClockwise ) {\r\n\r\n\t\t\t\t\tt = 1 - t;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tangle = aStartAngle + t * deltaAngle;\r\n\r\n\t\t\t\ttx = aX + xRadius * Math.cos( angle );\r\n\t\t\t\tty = aY + yRadius * Math.sin( angle );\r\n\r\n\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//console.log(points);\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t} // end switch\r\n\r\n\t}\r\n\r\n\r\n\r\n\t// Normalize to remove the closing point by default.\r\n\tvar lastPoint = points[ points.length - 1];\r\n\tvar EPSILON = 0.0000000001;\r\n\tif ( Math.abs(lastPoint.x - points[ 0 ].x) < EPSILON &&\r\n\t\t\t Math.abs(lastPoint.y - points[ 0 ].y) < EPSILON)\r\n\t\tpoints.splice( points.length - 1, 1);\r\n\tif ( closedPath ) {\r\n\r\n\t\tpoints.push( points[ 0 ] );\r\n\r\n\t}\r\n\r\n\treturn points;\r\n\r\n};\r\n\r\n//\r\n// Breaks path into shapes\r\n//\r\n//\tAssumptions (if parameter isCCW==true the opposite holds):\r\n//\t- solid shapes are defined clockwise (CW)\r\n//\t- holes are defined counterclockwise (CCW)\r\n//\r\n//\tIf parameter noHoles==true:\r\n//  - all subPaths are regarded as solid shapes\r\n//  - definition order CW/CCW has no relevance\r\n//\r\n\r\nTHREE.Path.prototype.toShapes = function( isCCW, noHoles ) {\r\n\r\n\tfunction extractSubpaths( inActions ) {\r\n\r\n\t\tvar i, il, item, action, args;\r\n\r\n\t\tvar subPaths = [], lastPath = new THREE.Path();\r\n\r\n\t\tfor ( i = 0, il = inActions.length; i < il; i ++ ) {\r\n\r\n\t\t\titem = inActions[ i ];\r\n\r\n\t\t\targs = item.args;\r\n\t\t\taction = item.action;\r\n\r\n\t\t\tif ( action == THREE.PathActions.MOVE_TO ) {\r\n\r\n\t\t\t\tif ( lastPath.actions.length != 0 ) {\r\n\r\n\t\t\t\t\tsubPaths.push( lastPath );\r\n\t\t\t\t\tlastPath = new THREE.Path();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlastPath[ action ].apply( lastPath, args );\r\n\r\n\t\t}\r\n\r\n\t\tif ( lastPath.actions.length != 0 ) {\r\n\r\n\t\t\tsubPaths.push( lastPath );\r\n\r\n\t\t}\r\n\r\n\t\t// console.log(subPaths);\r\n\r\n\t\treturn\tsubPaths;\r\n\t}\r\n\r\n\tfunction toShapesNoHoles( inSubpaths ) {\r\n\r\n\t\tvar shapes = [];\r\n\r\n\t\tfor ( var i = 0, il = inSubpaths.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar tmpPath = inSubpaths[ i ];\r\n\r\n\t\t\tvar tmpShape = new THREE.Shape();\r\n\t\t\ttmpShape.actions = tmpPath.actions;\r\n\t\t\ttmpShape.curves = tmpPath.curves;\r\n\r\n\t\t\tshapes.push( tmpShape );\r\n\t\t}\r\n\r\n\t\t//console.log(\"shape\", shapes);\r\n\r\n\t\treturn shapes;\r\n\t};\r\n\r\n\tfunction isPointInsidePolygon( inPt, inPolygon ) {\r\n\t\tvar EPSILON = 0.0000000001;\r\n\r\n\t\tvar polyLen = inPolygon.length;\r\n\r\n\t\t// inPt on polygon contour => immediate success    or\r\n\t\t// toggling of inside/outside at every single! intersection point of an edge\r\n\t\t//  with the horizontal line through inPt, left of inPt\r\n\t\t//  not counting lowerY endpoints of edges and whole edges on that line\r\n\t\tvar inside = false;\r\n\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\r\n\t\t\tvar edgeLowPt  = inPolygon[ p ];\r\n\t\t\tvar edgeHighPt = inPolygon[ q ];\r\n\r\n\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\r\n\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\r\n\r\n\t\t\tif ( Math.abs(edgeDy) > EPSILON ) {\t\t\t// not parallel\r\n\t\t\t\tif ( edgeDy < 0 ) {\r\n\t\t\t\t\tedgeLowPt  = inPolygon[ q ]; edgeDx = - edgeDx;\r\n\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\r\n\t\t\t\t}\r\n\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\r\n\r\n\t\t\t\tif ( inPt.y == edgeLowPt.y ) {\r\n\t\t\t\t\tif ( inPt.x == edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar perpEdge = edgeDy * (inPt.x - edgeLowPt.x) - edgeDx * (inPt.y - edgeLowPt.y);\r\n\t\t\t\t\tif ( perpEdge == 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\r\n\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\r\n\t\t\t\t}\r\n\t\t\t} else {\t\t// parallel or colinear\r\n\t\t\t\tif ( inPt.y != edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\r\n\t\t\t\t// egde lies on the same horizontal line as inPt\r\n\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\r\n\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\r\n\t\t\t\t// continue;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn\tinside;\r\n\t}\r\n\r\n\r\n\tvar subPaths = extractSubpaths( this.actions );\r\n\tif ( subPaths.length == 0 ) return [];\r\n\r\n\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\r\n\r\n\r\n\tvar solid, tmpPath, tmpShape, shapes = [];\r\n\r\n\tif ( subPaths.length == 1) {\r\n\r\n\t\ttmpPath = subPaths[0];\r\n\t\ttmpShape = new THREE.Shape();\r\n\t\ttmpShape.actions = tmpPath.actions;\r\n\t\ttmpShape.curves = tmpPath.curves;\r\n\t\tshapes.push( tmpShape );\r\n\t\treturn shapes;\r\n\r\n\t}\r\n\r\n\tvar holesFirst = ! THREE.Shape.Utils.isClockWise( subPaths[ 0 ].getPoints() );\r\n\tholesFirst = isCCW ? ! holesFirst : holesFirst;\r\n\r\n\t// console.log(\"Holes first\", holesFirst);\r\n\t\r\n\tvar betterShapeHoles = [];\r\n\tvar newShapes = [];\r\n\tvar newShapeHoles = [];\r\n\tvar mainIdx = 0;\r\n\tvar tmpPoints;\r\n\r\n\tnewShapes[mainIdx] = undefined;\r\n\tnewShapeHoles[mainIdx] = [];\r\n\r\n\tvar i, il;\r\n\r\n\tfor ( i = 0, il = subPaths.length; i < il; i ++ ) {\r\n\r\n\t\ttmpPath = subPaths[ i ];\r\n\t\ttmpPoints = tmpPath.getPoints();\r\n\t\tsolid = THREE.Shape.Utils.isClockWise( tmpPoints );\r\n\t\tsolid = isCCW ? ! solid : solid;\r\n\r\n\t\tif ( solid ) {\r\n\r\n\t\t\tif ( (! holesFirst ) && ( newShapes[mainIdx] ) )\tmainIdx ++;\r\n\r\n\t\t\tnewShapes[mainIdx] = { s: new THREE.Shape(), p: tmpPoints };\r\n\t\t\tnewShapes[mainIdx].s.actions = tmpPath.actions;\r\n\t\t\tnewShapes[mainIdx].s.curves = tmpPath.curves;\r\n\t\t\t\r\n\t\t\tif ( holesFirst )\tmainIdx ++;\r\n\t\t\tnewShapeHoles[mainIdx] = [];\r\n\r\n\t\t\t//console.log('cw', i);\r\n\r\n\t\t} else {\r\n\r\n\t\t\tnewShapeHoles[mainIdx].push( { h: tmpPath, p: tmpPoints[0] } );\r\n\r\n\t\t\t//console.log('ccw', i);\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// only Holes? -> probably all Shapes with wrong orientation\r\n\tif ( ! newShapes[0] )\treturn\ttoShapesNoHoles( subPaths );\r\n\r\n\r\n\tif ( newShapes.length > 1 ) {\r\n\t\tvar ambigious = false;\r\n\t\tvar toChange = [];\r\n\r\n\t\tfor (var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\t\t\tbetterShapeHoles[sIdx] = [];\r\n\t\t}\r\n\t\tfor (var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\t\t\tvar sho = newShapeHoles[sIdx];\r\n\t\t\tfor (var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\r\n\t\t\t\tvar ho = sho[hIdx];\r\n\t\t\t\tvar hole_unassigned = true;\r\n\t\t\t\tfor (var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\r\n\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[s2Idx].p ) ) {\r\n\t\t\t\t\t\tif ( sIdx != s2Idx )\t\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\r\n\t\t\t\t\t\tif ( hole_unassigned ) {\r\n\t\t\t\t\t\t\thole_unassigned = false;\r\n\t\t\t\t\t\t\tbetterShapeHoles[s2Idx].push( ho );\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tambigious = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif ( hole_unassigned ) { betterShapeHoles[sIdx].push( ho ); }\r\n\t\t\t}\r\n\t\t}\r\n\t\t// console.log(\"ambigious: \", ambigious);\r\n\t\tif ( toChange.length > 0 ) {\r\n\t\t\t// console.log(\"to change: \", toChange);\r\n\t\t\tif (! ambigious)\tnewShapeHoles = betterShapeHoles;\r\n\t\t}\r\n\t}\r\n\r\n\tvar tmpHoles, j, jl;\r\n\tfor ( i = 0, il = newShapes.length; i < il; i ++ ) {\r\n\t\ttmpShape = newShapes[i].s;\r\n\t\tshapes.push( tmpShape );\r\n\t\ttmpHoles = newShapeHoles[i];\r\n\t\tfor ( j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\r\n\t\t\ttmpShape.holes.push( tmpHoles[j].h );\r\n\t\t}\r\n\t}\r\n\r\n\t//console.log(\"shape\", shapes);\r\n\r\n\treturn shapes;\r\n\r\n};\r\n\r\n// File:src/extras/core/Shape.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Defines a 2d shape plane using paths.\r\n **/\r\n\r\n// STEP 1 Create a path.\r\n// STEP 2 Turn path into shape.\r\n// STEP 3 ExtrudeGeometry takes in Shape/Shapes\r\n// STEP 3a - Extract points from each shape, turn to vertices\r\n// STEP 3b - Triangulate each shape, add faces.\r\n\r\nTHREE.Shape = function () {\r\n\r\n\tTHREE.Path.apply( this, arguments );\r\n\tthis.holes = [];\r\n\r\n};\r\n\r\nTHREE.Shape.prototype = Object.create( THREE.Path.prototype );\r\nTHREE.Shape.prototype.constructor = THREE.Shape;\r\n\r\n// Convenience method to return ExtrudeGeometry\r\n\r\nTHREE.Shape.prototype.extrude = function ( options ) {\r\n\r\n\tvar extruded = new THREE.ExtrudeGeometry( this, options );\r\n\treturn extruded;\r\n\r\n};\r\n\r\n// Convenience method to return ShapeGeometry\r\n\r\nTHREE.Shape.prototype.makeGeometry = function ( options ) {\r\n\r\n\tvar geometry = new THREE.ShapeGeometry( this, options );\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// Get points of holes\r\n\r\nTHREE.Shape.prototype.getPointsHoles = function ( divisions ) {\r\n\r\n\tvar i, il = this.holes.length, holesPts = [];\r\n\r\n\tfor ( i = 0; i < il; i ++ ) {\r\n\r\n\t\tholesPts[ i ] = this.holes[ i ].getTransformedPoints( divisions, this.bends );\r\n\r\n\t}\r\n\r\n\treturn holesPts;\r\n\r\n};\r\n\r\n// Get points of holes (spaced by regular distance)\r\n\r\nTHREE.Shape.prototype.getSpacedPointsHoles = function ( divisions ) {\r\n\r\n\tvar i, il = this.holes.length, holesPts = [];\r\n\r\n\tfor ( i = 0; i < il; i ++ ) {\r\n\r\n\t\tholesPts[ i ] = this.holes[ i ].getTransformedSpacedPoints( divisions, this.bends );\r\n\r\n\t}\r\n\r\n\treturn holesPts;\r\n\r\n};\r\n\r\n\r\n// Get points of shape and holes (keypoints based on segments parameter)\r\n\r\nTHREE.Shape.prototype.extractAllPoints = function ( divisions ) {\r\n\r\n\treturn {\r\n\r\n\t\tshape: this.getTransformedPoints( divisions ),\r\n\t\tholes: this.getPointsHoles( divisions )\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.Shape.prototype.extractPoints = function ( divisions ) {\r\n\r\n\tif (this.useSpacedPoints) {\r\n\t\treturn this.extractAllSpacedPoints(divisions);\r\n\t}\r\n\r\n\treturn this.extractAllPoints(divisions);\r\n\r\n};\r\n\r\n//\r\n// THREE.Shape.prototype.extractAllPointsWithBend = function ( divisions, bend ) {\r\n//\r\n// \treturn {\r\n//\r\n// \t\tshape: this.transform( bend, divisions ),\r\n// \t\tholes: this.getPointsHoles( divisions, bend )\r\n//\r\n// \t};\r\n//\r\n// };\r\n\r\n// Get points of shape and holes (spaced by regular distance)\r\n\r\nTHREE.Shape.prototype.extractAllSpacedPoints = function ( divisions ) {\r\n\r\n\treturn {\r\n\r\n\t\tshape: this.getTransformedSpacedPoints( divisions ),\r\n\t\tholes: this.getSpacedPointsHoles( divisions )\r\n\r\n\t};\r\n\r\n};\r\n\r\n/**************************************************************\r\n *\tUtils\r\n **************************************************************/\r\n\r\nTHREE.Shape.Utils = {\r\n\r\n\ttriangulateShape: function ( contour, holes ) {\r\n\r\n\t\tfunction point_in_segment_2D_colin( inSegPt1, inSegPt2, inOtherPt ) {\r\n\t\t\t// inOtherPt needs to be colinear to the inSegment\r\n\t\t\tif ( inSegPt1.x != inSegPt2.x ) {\r\n\t\t\t\tif ( inSegPt1.x < inSegPt2.x ) {\r\n\t\t\t\t\treturn\t( ( inSegPt1.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt2.x ) );\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn\t( ( inSegPt2.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt1.x ) );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif ( inSegPt1.y < inSegPt2.y ) {\r\n\t\t\t\t\treturn\t( ( inSegPt1.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt2.y ) );\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn\t( ( inSegPt2.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt1.y ) );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction intersect_segments_2D( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs ) {\r\n\t\t\tvar EPSILON = 0.0000000001;\r\n\r\n\t\t\tvar seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,   seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;\r\n\t\t\tvar seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,   seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;\r\n\r\n\t\t\tvar seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;\r\n\t\t\tvar seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;\r\n\r\n\t\t\tvar limit\t\t= seg1dy * seg2dx - seg1dx * seg2dy;\r\n\t\t\tvar perpSeg1\t= seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\r\n\r\n\t\t\tif ( Math.abs(limit) > EPSILON ) {\t\t\t// not parallel\r\n\r\n\t\t\t\tvar perpSeg2;\r\n\t\t\t\tif ( limit > 0 ) {\r\n\t\t\t\t\tif ( ( perpSeg1 < 0 ) || ( perpSeg1 > limit ) ) \t\treturn [];\r\n\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\r\n\t\t\t\t\tif ( ( perpSeg2 < 0 ) || ( perpSeg2 > limit ) ) \t\treturn [];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif ( ( perpSeg1 > 0 ) || ( perpSeg1 < limit ) ) \t\treturn [];\r\n\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\r\n\t\t\t\t\tif ( ( perpSeg2 > 0 ) || ( perpSeg2 < limit ) ) \t\treturn [];\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// i.e. to reduce rounding errors\r\n\t\t\t\t// intersection at endpoint of segment#1?\r\n\t\t\t\tif ( perpSeg2 == 0 ) {\r\n\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\r\n\t\t\t\t\t\t ( ( perpSeg1 == 0 ) || ( perpSeg1 == limit ) ) )\t\treturn [];\r\n\t\t\t\t\treturn [ inSeg1Pt1 ];\r\n\t\t\t\t}\r\n\t\t\t\tif ( perpSeg2 == limit ) {\r\n\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\r\n\t\t\t\t\t\t ( ( perpSeg1 == 0 ) || ( perpSeg1 == limit ) ) )\t\treturn [];\r\n\t\t\t\t\treturn [ inSeg1Pt2 ];\r\n\t\t\t\t}\r\n\t\t\t\t// intersection at endpoint of segment#2?\r\n\t\t\t\tif ( perpSeg1 == 0 )\t\treturn [ inSeg2Pt1 ];\r\n\t\t\t\tif ( perpSeg1 == limit )\treturn [ inSeg2Pt2 ];\r\n\r\n\t\t\t\t// return real intersection point\r\n\t\t\t\tvar factorSeg1 = perpSeg2 / limit;\r\n\t\t\t\treturn\t[ { x: inSeg1Pt1.x + factorSeg1 * seg1dx,\r\n\t\t\t\t\t\t\ty: inSeg1Pt1.y + factorSeg1 * seg1dy } ];\r\n\r\n\t\t\t} else {\t\t// parallel or colinear\r\n\t\t\t\tif ( ( perpSeg1 != 0 ) ||\r\n\t\t\t\t\t ( seg2dy * seg1seg2dx != seg2dx * seg1seg2dy ) ) \t\t\treturn [];\r\n\r\n\t\t\t\t// they are collinear or degenerate\r\n\t\t\t\tvar seg1Pt = ( (seg1dx == 0) && (seg1dy == 0) );\t// segment1 ist just a point?\r\n\t\t\t\tvar seg2Pt = ( (seg2dx == 0) && (seg2dy == 0) );\t// segment2 ist just a point?\r\n\t\t\t\t// both segments are points\r\n\t\t\t\tif ( seg1Pt && seg2Pt ) {\r\n\t\t\t\t\tif ( (inSeg1Pt1.x != inSeg2Pt1.x) ||\r\n\t\t\t\t\t\t (inSeg1Pt1.y != inSeg2Pt1.y) )\t\treturn [];   \t// they are distinct  points\r\n\t\t\t\t\treturn [ inSeg1Pt1 ];                 \t\t\t\t\t// they are the same point\r\n\t\t\t\t}\r\n\t\t\t\t// segment#1  is a single point\r\n\t\t\t\tif ( seg1Pt ) {\r\n\t\t\t\t\tif (! point_in_segment_2D_colin( inSeg2Pt1, inSeg2Pt2, inSeg1Pt1 ) )\t\treturn [];\t\t// but not in segment#2\r\n\t\t\t\t\treturn [ inSeg1Pt1 ];\r\n\t\t\t\t}\r\n\t\t\t\t// segment#2  is a single point\r\n\t\t\t\tif ( seg2Pt ) {\r\n\t\t\t\t\tif (! point_in_segment_2D_colin( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1 ) )\t\treturn [];\t\t// but not in segment#1\r\n\t\t\t\t\treturn [ inSeg2Pt1 ];\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// they are collinear segments, which might overlap\r\n\t\t\t\tvar seg1min, seg1max, seg1minVal, seg1maxVal;\r\n\t\t\t\tvar seg2min, seg2max, seg2minVal, seg2maxVal;\r\n\t\t\t\tif (seg1dx != 0) {\t\t// the segments are NOT on a vertical line\r\n\t\t\t\t\tif ( inSeg1Pt1.x < inSeg1Pt2.x ) {\r\n\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.x;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.x;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.x;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.x;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( inSeg2Pt1.x < inSeg2Pt2.x ) {\r\n\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.x;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.x;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.x;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.x;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\t\t\t\t// the segments are on a vertical line\r\n\t\t\t\t\tif ( inSeg1Pt1.y < inSeg1Pt2.y ) {\r\n\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.y;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.y;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.y;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( inSeg2Pt1.y < inSeg2Pt2.y ) {\r\n\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.y;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.y;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.y;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif ( seg1minVal <= seg2minVal ) {\r\n\t\t\t\t\tif ( seg1maxVal <  seg2minVal )\treturn [];\r\n\t\t\t\t\tif ( seg1maxVal == seg2minVal )\t{\r\n\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\r\n\t\t\t\t\t\treturn [ seg2min ];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg2min, seg1max ];\r\n\t\t\t\t\treturn\t[ seg2min, seg2max ];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif ( seg1minVal >  seg2maxVal )\treturn [];\r\n\t\t\t\t\tif ( seg1minVal == seg2maxVal )\t{\r\n\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\r\n\t\t\t\t\t\treturn [ seg1min ];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg1min, seg1max ];\r\n\t\t\t\t\treturn\t[ seg1min, seg2max ];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction isPointInsideAngle( inVertex, inLegFromPt, inLegToPt, inOtherPt ) {\r\n\t\t\t// The order of legs is important\r\n\r\n\t\t\tvar EPSILON = 0.0000000001;\r\n\r\n\t\t\t// translation of all points, so that Vertex is at (0,0)\r\n\t\t\tvar legFromPtX\t= inLegFromPt.x - inVertex.x,  legFromPtY\t= inLegFromPt.y - inVertex.y;\r\n\t\t\tvar legToPtX\t= inLegToPt.x\t- inVertex.x,  legToPtY\t\t= inLegToPt.y\t- inVertex.y;\r\n\t\t\tvar otherPtX\t= inOtherPt.x\t- inVertex.x,  otherPtY\t\t= inOtherPt.y\t- inVertex.y;\r\n\r\n\t\t\t// main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\r\n\t\t\tvar from2toAngle\t= legFromPtX * legToPtY - legFromPtY * legToPtX;\r\n\t\t\tvar from2otherAngle\t= legFromPtX * otherPtY - legFromPtY * otherPtX;\r\n\r\n\t\t\tif ( Math.abs(from2toAngle) > EPSILON ) {\t\t\t// angle != 180 deg.\r\n\r\n\t\t\t\tvar other2toAngle\t\t= otherPtX * legToPtY - otherPtY * legToPtX;\r\n\t\t\t\t// console.log( \"from2to: \" + from2toAngle + \", from2other: \" + from2otherAngle + \", other2to: \" + other2toAngle );\r\n\r\n\t\t\t\tif ( from2toAngle > 0 ) {\t\t\t\t// main angle < 180 deg.\r\n\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) && ( other2toAngle >= 0 ) );\r\n\t\t\t\t} else {\t\t\t\t\t\t\t\t// main angle > 180 deg.\r\n\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) || ( other2toAngle >= 0 ) );\r\n\t\t\t\t}\r\n\t\t\t} else {\t\t\t\t\t\t\t\t\t\t// angle == 180 deg.\r\n\t\t\t\t// console.log( \"from2to: 180 deg., from2other: \" + from2otherAngle  );\r\n\t\t\t\treturn\t( from2otherAngle > 0 );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tfunction removeHoles( contour, holes ) {\r\n\r\n\t\t\tvar shape = contour.concat(); // work on this shape\r\n\t\t\tvar hole;\r\n\r\n\t\t\tfunction isCutLineInsideAngles( inShapeIdx, inHoleIdx ) {\r\n\t\t\t\t// Check if hole point lies within angle around shape point\r\n\t\t\t\tvar lastShapeIdx = shape.length - 1;\r\n\r\n\t\t\t\tvar prevShapeIdx = inShapeIdx - 1;\r\n\t\t\t\tif ( prevShapeIdx < 0 )\t\t\tprevShapeIdx = lastShapeIdx;\r\n\r\n\t\t\t\tvar nextShapeIdx = inShapeIdx + 1;\r\n\t\t\t\tif ( nextShapeIdx > lastShapeIdx )\tnextShapeIdx = 0;\r\n\r\n\t\t\t\tvar insideAngle = isPointInsideAngle( shape[inShapeIdx], shape[ prevShapeIdx ], shape[ nextShapeIdx ], hole[inHoleIdx] );\r\n\t\t\t\tif (! insideAngle ) {\r\n\t\t\t\t\t// console.log( \"Vertex (Shape): \" + inShapeIdx + \", Point: \" + hole[inHoleIdx].x + \"/\" + hole[inHoleIdx].y );\r\n\t\t\t\t\treturn\tfalse;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check if shape point lies within angle around hole point\r\n\t\t\t\tvar lastHoleIdx = hole.length - 1;\r\n\r\n\t\t\t\tvar prevHoleIdx = inHoleIdx - 1;\r\n\t\t\t\tif ( prevHoleIdx < 0 )\t\t\tprevHoleIdx = lastHoleIdx;\r\n\r\n\t\t\t\tvar nextHoleIdx = inHoleIdx + 1;\r\n\t\t\t\tif ( nextHoleIdx > lastHoleIdx )\tnextHoleIdx = 0;\r\n\r\n\t\t\t\tinsideAngle = isPointInsideAngle( hole[inHoleIdx], hole[ prevHoleIdx ], hole[ nextHoleIdx ], shape[inShapeIdx] );\r\n\t\t\t\tif (! insideAngle ) {\r\n\t\t\t\t\t// console.log( \"Vertex (Hole): \" + inHoleIdx + \", Point: \" + shape[inShapeIdx].x + \"/\" + shape[inShapeIdx].y );\r\n\t\t\t\t\treturn\tfalse;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn\ttrue;\r\n\t\t\t}\r\n\r\n\t\t\tfunction intersectsShapeEdge( inShapePt, inHolePt ) {\r\n\t\t\t\t// checks for intersections with shape edges\r\n\t\t\t\tvar sIdx, nextIdx, intersection;\r\n\t\t\t\tfor ( sIdx = 0; sIdx < shape.length; sIdx ++ ) {\r\n\t\t\t\t\tnextIdx = sIdx + 1; nextIdx %= shape.length;\r\n\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, shape[sIdx], shape[nextIdx], true );\r\n\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn\tfalse;\r\n\t\t\t}\r\n\r\n\t\t\tvar indepHoles = [];\r\n\r\n\t\t\tfunction intersectsHoleEdge( inShapePt, inHolePt ) {\r\n\t\t\t\t// checks for intersections with hole edges\r\n\t\t\t\tvar ihIdx, chkHole,\r\n\t\t\t\t\thIdx, nextIdx, intersection;\r\n\t\t\t\tfor ( ihIdx = 0; ihIdx < indepHoles.length; ihIdx ++ ) {\r\n\t\t\t\t\tchkHole = holes[indepHoles[ihIdx]];\r\n\t\t\t\t\tfor ( hIdx = 0; hIdx < chkHole.length; hIdx ++ ) {\r\n\t\t\t\t\t\tnextIdx = hIdx + 1; nextIdx %= chkHole.length;\r\n\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, chkHole[hIdx], chkHole[nextIdx], true );\r\n\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn\tfalse;\r\n\t\t\t}\r\n\r\n\t\t\tvar holeIndex, shapeIndex,\r\n\t\t\t\tshapePt, holePt,\r\n\t\t\t\tholeIdx, cutKey, failedCuts = [],\r\n\t\t\t\ttmpShape1, tmpShape2,\r\n\t\t\t\ttmpHole1, tmpHole2;\r\n\r\n\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\tindepHoles.push( h );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar minShapeIndex = 0;\r\n\t\t\tvar counter = indepHoles.length * 2;\r\n\t\t\twhile ( indepHoles.length > 0 ) {\r\n\t\t\t\tcounter --;\r\n\t\t\t\tif ( counter < 0 ) {\r\n\t\t\t\t\tconsole.log( \"Infinite Loop! Holes left:\" + indepHoles.length + \", Probably Hole outside Shape!\" );\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// search for shape-vertex and hole-vertex,\r\n\t\t\t\t// which can be connected without intersections\r\n\t\t\t\tfor ( shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex ++ ) {\r\n\r\n\t\t\t\t\tshapePt = shape[ shapeIndex ];\r\n\t\t\t\t\tholeIndex\t= - 1;\r\n\r\n\t\t\t\t\t// search for hole which can be reached without intersections\r\n\t\t\t\t\tfor ( var h = 0; h < indepHoles.length; h ++ ) {\r\n\t\t\t\t\t\tholeIdx = indepHoles[h];\r\n\r\n\t\t\t\t\t\t// prevent multiple checks\r\n\t\t\t\t\t\tcutKey = shapePt.x + \":\" + shapePt.y + \":\" + holeIdx;\r\n\t\t\t\t\t\tif ( failedCuts[cutKey] !== undefined )\t\t\tcontinue;\r\n\r\n\t\t\t\t\t\thole = holes[holeIdx];\r\n\t\t\t\t\t\tfor ( var h2 = 0; h2 < hole.length; h2 ++ ) {\r\n\t\t\t\t\t\t\tholePt = hole[ h2 ];\r\n\t\t\t\t\t\t\tif (! isCutLineInsideAngles( shapeIndex, h2 ) )\t\tcontinue;\r\n\t\t\t\t\t\t\tif ( intersectsShapeEdge( shapePt, holePt ) )\t\tcontinue;\r\n\t\t\t\t\t\t\tif ( intersectsHoleEdge( shapePt, holePt ) )\t\tcontinue;\r\n\r\n\t\t\t\t\t\t\tholeIndex = h2;\r\n\t\t\t\t\t\t\tindepHoles.splice(h, 1);\r\n\r\n\t\t\t\t\t\t\ttmpShape1 = shape.slice( 0, shapeIndex + 1 );\r\n\t\t\t\t\t\t\ttmpShape2 = shape.slice( shapeIndex );\r\n\t\t\t\t\t\t\ttmpHole1 = hole.slice( holeIndex );\r\n\t\t\t\t\t\t\ttmpHole2 = hole.slice( 0, holeIndex + 1 );\r\n\r\n\t\t\t\t\t\t\tshape = tmpShape1.concat( tmpHole1 ).concat( tmpHole2 ).concat( tmpShape2 );\r\n\r\n\t\t\t\t\t\t\tminShapeIndex = shapeIndex;\r\n\r\n\t\t\t\t\t\t\t// Debug only, to show the selected cuts\r\n\t\t\t\t\t\t\t// glob_CutLines.push( [ shapePt, holePt ] );\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\r\n\r\n\t\t\t\t\t\tfailedCuts[cutKey] = true;\t\t\t// remember failure\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn shape; \t\t\t/* shape with no holes */\r\n\t\t}\r\n\r\n\r\n\t\tvar i, il, f, face,\r\n\t\t\tkey, index,\r\n\t\t\tallPointsMap = {};\r\n\r\n\t\t// To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\r\n\r\n\t\tvar allpoints = contour.concat();\r\n\r\n\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tArray.prototype.push.apply( allpoints, holes[h] );\r\n\r\n\t\t}\r\n\r\n\t\t//console.log( \"allpoints\",allpoints, allpoints.length );\r\n\r\n\t\t// prepare all points map\r\n\r\n\t\tfor ( i = 0, il = allpoints.length; i < il; i ++ ) {\r\n\r\n\t\t\tkey = allpoints[ i ].x + \":\" + allpoints[ i ].y;\r\n\r\n\t\t\tif ( allPointsMap[ key ] !== undefined ) {\r\n\r\n\t\t\t\tTHREE.warn( \"THREE.Shape: Duplicate point\", key );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tallPointsMap[ key ] = i;\r\n\r\n\t\t}\r\n\r\n\t\t// remove holes by cutting paths to holes and adding them to the shape\r\n\t\tvar shapeWithoutHoles = removeHoles( contour, holes );\r\n\r\n\t\tvar triangles = THREE.FontUtils.Triangulate( shapeWithoutHoles, false ); // True returns indices for points of spooled shape\r\n\t\t//console.log( \"triangles\",triangles, triangles.length );\r\n\r\n\t\t// check all face vertices against all points map\r\n\r\n\t\tfor ( i = 0, il = triangles.length; i < il; i ++ ) {\r\n\r\n\t\t\tface = triangles[ i ];\r\n\r\n\t\t\tfor ( f = 0; f < 3; f ++ ) {\r\n\r\n\t\t\t\tkey = face[ f ].x + \":\" + face[ f ].y;\r\n\r\n\t\t\t\tindex = allPointsMap[ key ];\r\n\r\n\t\t\t\tif ( index !== undefined ) {\r\n\r\n\t\t\t\t\tface[ f ] = index;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn triangles.concat();\r\n\r\n\t},\r\n\r\n\tisClockWise: function ( pts ) {\r\n\r\n\t\treturn THREE.FontUtils.Triangulate.area( pts ) < 0;\r\n\r\n\t},\r\n\r\n\t// Bezier Curves formulas obtained from\r\n\t// http://en.wikipedia.org/wiki/B%C3%A9zier_curve\r\n\r\n\t// Quad Bezier Functions\r\n\r\n\tb2p0: function ( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn k * k * p;\r\n\r\n\t},\r\n\r\n\tb2p1: function ( t, p ) {\r\n\r\n\t\treturn 2 * ( 1 - t ) * t * p;\r\n\r\n\t},\r\n\r\n\tb2p2: function ( t, p ) {\r\n\r\n\t\treturn t * t * p;\r\n\r\n\t},\r\n\r\n\tb2: function ( t, p0, p1, p2 ) {\r\n\r\n\t\treturn this.b2p0( t, p0 ) + this.b2p1( t, p1 ) + this.b2p2( t, p2 );\r\n\r\n\t},\r\n\r\n\t// Cubic Bezier Functions\r\n\r\n\tb3p0: function ( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn k * k * k * p;\r\n\r\n\t},\r\n\r\n\tb3p1: function ( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn 3 * k * k * t * p;\r\n\r\n\t},\r\n\r\n\tb3p2: function ( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn 3 * k * t * t * p;\r\n\r\n\t},\r\n\r\n\tb3p3: function ( t, p ) {\r\n\r\n\t\treturn t * t * t * p;\r\n\r\n\t},\r\n\r\n\tb3: function ( t, p0, p1, p2, p3 ) {\r\n\r\n\t\treturn this.b3p0( t, p0 ) + this.b3p1( t, p1 ) + this.b3p2( t, p2 ) +  this.b3p3( t, p3 );\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\n// File:src/extras/curves/LineCurve.js\r\n\r\n/**************************************************************\r\n *\tLine\r\n **************************************************************/\r\n\r\nTHREE.LineCurve = function ( v1, v2 ) {\r\n\r\n\tthis.v1 = v1;\r\n\tthis.v2 = v2;\r\n\r\n};\r\n\r\nTHREE.LineCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.LineCurve.prototype.constructor = THREE.LineCurve;\r\n\r\nTHREE.LineCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar point = this.v2.clone().sub(this.v1);\r\n\tpoint.multiplyScalar( t ).add( this.v1 );\r\n\r\n\treturn point;\r\n\r\n};\r\n\r\n// Line curve is linear, so we can overwrite default getPointAt\r\n\r\nTHREE.LineCurve.prototype.getPointAt = function ( u ) {\r\n\r\n\treturn this.getPoint( u );\r\n\r\n};\r\n\r\nTHREE.LineCurve.prototype.getTangent = function( t ) {\r\n\r\n\tvar tangent = this.v2.clone().sub(this.v1);\r\n\r\n\treturn tangent.normalize();\r\n\r\n};\r\n\r\n// File:src/extras/curves/QuadraticBezierCurve.js\r\n\r\n/**************************************************************\r\n *\tQuadratic Bezier curve\r\n **************************************************************/\r\n\r\n\r\nTHREE.QuadraticBezierCurve = function ( v0, v1, v2 ) {\r\n\r\n\tthis.v0 = v0;\r\n\tthis.v1 = v1;\r\n\tthis.v2 = v2;\r\n\r\n};\r\n\r\nTHREE.QuadraticBezierCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.QuadraticBezierCurve.prototype.constructor = THREE.QuadraticBezierCurve;\r\n\r\n\r\nTHREE.QuadraticBezierCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar vector = new THREE.Vector2();\r\n\r\n\tvector.x = THREE.Shape.Utils.b2( t, this.v0.x, this.v1.x, this.v2.x );\r\n\tvector.y = THREE.Shape.Utils.b2( t, this.v0.y, this.v1.y, this.v2.y );\r\n\r\n\treturn vector;\r\n\r\n};\r\n\r\n\r\nTHREE.QuadraticBezierCurve.prototype.getTangent = function( t ) {\r\n\r\n\tvar vector = new THREE.Vector2();\r\n\r\n\tvector.x = THREE.Curve.Utils.tangentQuadraticBezier( t, this.v0.x, this.v1.x, this.v2.x );\r\n\tvector.y = THREE.Curve.Utils.tangentQuadraticBezier( t, this.v0.y, this.v1.y, this.v2.y );\r\n\r\n\t// returns unit vector\r\n\r\n\treturn vector.normalize();\r\n\r\n};\r\n\r\n// File:src/extras/curves/CubicBezierCurve.js\r\n\r\n/**************************************************************\r\n *\tCubic Bezier curve\r\n **************************************************************/\r\n\r\nTHREE.CubicBezierCurve = function ( v0, v1, v2, v3 ) {\r\n\r\n\tthis.v0 = v0;\r\n\tthis.v1 = v1;\r\n\tthis.v2 = v2;\r\n\tthis.v3 = v3;\r\n\r\n};\r\n\r\nTHREE.CubicBezierCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.CubicBezierCurve.prototype.constructor = THREE.CubicBezierCurve;\r\n\r\nTHREE.CubicBezierCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar tx, ty;\r\n\r\n\ttx = THREE.Shape.Utils.b3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\tty = THREE.Shape.Utils.b3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\r\n\treturn new THREE.Vector2( tx, ty );\r\n\r\n};\r\n\r\nTHREE.CubicBezierCurve.prototype.getTangent = function( t ) {\r\n\r\n\tvar tx, ty;\r\n\r\n\ttx = THREE.Curve.Utils.tangentCubicBezier( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\tty = THREE.Curve.Utils.tangentCubicBezier( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\r\n\tvar tangent = new THREE.Vector2( tx, ty );\r\n\ttangent.normalize();\r\n\r\n\treturn tangent;\r\n\r\n};\r\n\r\n// File:src/extras/curves/SplineCurve.js\r\n\r\n/**************************************************************\r\n *\tSpline curve\r\n **************************************************************/\r\n\r\nTHREE.SplineCurve = function ( points /* array of Vector2 */ ) {\r\n\r\n\tthis.points = ( points == undefined ) ? [] : points;\r\n\r\n};\r\n\r\nTHREE.SplineCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.SplineCurve.prototype.constructor = THREE.SplineCurve;\r\n\r\nTHREE.SplineCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar points = this.points;\r\n\tvar point = ( points.length - 1 ) * t;\r\n\r\n\tvar intPoint = Math.floor( point );\r\n\tvar weight = point - intPoint;\r\n\r\n\tvar point0 = points[ intPoint == 0 ? intPoint : intPoint - 1 ]\r\n\tvar point1 = points[ intPoint ]\r\n\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ]\r\n\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ]\r\n\r\n\tvar vector = new THREE.Vector2();\r\n\r\n\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\r\n\treturn vector;\r\n\r\n};\r\n\r\n// File:src/extras/curves/EllipseCurve.js\r\n\r\n/**************************************************************\r\n *\tEllipse curve\r\n **************************************************************/\r\n\r\nTHREE.EllipseCurve = function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\tthis.aX = aX;\r\n\tthis.aY = aY;\r\n\r\n\tthis.xRadius = xRadius;\r\n\tthis.yRadius = yRadius;\r\n\r\n\tthis.aStartAngle = aStartAngle;\r\n\tthis.aEndAngle = aEndAngle;\r\n\r\n\tthis.aClockwise = aClockwise;\r\n\r\n};\r\n\r\nTHREE.EllipseCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.EllipseCurve.prototype.constructor = THREE.EllipseCurve;\r\n\r\nTHREE.EllipseCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\r\n\r\n\tif ( deltaAngle < 0 ) deltaAngle += Math.PI * 2;\r\n\tif ( deltaAngle > Math.PI * 2 ) deltaAngle -= Math.PI * 2;\r\n\r\n\tvar angle;\r\n\r\n\tif ( this.aClockwise === true ) {\r\n\r\n\t\tangle = this.aEndAngle + ( 1 - t ) * ( Math.PI * 2 - deltaAngle );\r\n\r\n\t} else {\r\n\r\n\t\tangle = this.aStartAngle + t * deltaAngle;\r\n\r\n\t}\r\n\t\r\n\tvar vector = new THREE.Vector2();\r\n\r\n\tvector.x = this.aX + this.xRadius * Math.cos( angle );\r\n\tvector.y = this.aY + this.yRadius * Math.sin( angle );\r\n\r\n\treturn vector;\r\n\r\n};\r\n\r\n// File:src/extras/curves/ArcCurve.js\r\n\r\n/**************************************************************\r\n *\tArc curve\r\n **************************************************************/\r\n\r\nTHREE.ArcCurve = function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\tTHREE.EllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n};\r\n\r\nTHREE.ArcCurve.prototype = Object.create( THREE.EllipseCurve.prototype );\r\nTHREE.ArcCurve.prototype.constructor = THREE.ArcCurve;\r\n\r\n// File:src/extras/curves/LineCurve3.js\r\n\r\n/**************************************************************\r\n *\tLine3D\r\n **************************************************************/\r\n\r\nTHREE.LineCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( v1, v2 ) {\r\n\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.subVectors( this.v2, this.v1 ); // diff\r\n\t\tvector.multiplyScalar( t );\r\n\t\tvector.add( this.v1 );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/QuadraticBezierCurve3.js\r\n\r\n/**************************************************************\r\n *\tQuadratic Bezier 3D curve\r\n **************************************************************/\r\n\r\nTHREE.QuadraticBezierCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( v0, v1, v2 ) {\r\n\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.x = THREE.Shape.Utils.b2( t, this.v0.x, this.v1.x, this.v2.x );\r\n\t\tvector.y = THREE.Shape.Utils.b2( t, this.v0.y, this.v1.y, this.v2.y );\r\n\t\tvector.z = THREE.Shape.Utils.b2( t, this.v0.z, this.v1.z, this.v2.z );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/CubicBezierCurve3.js\r\n\r\n/**************************************************************\r\n *\tCubic Bezier 3D curve\r\n **************************************************************/\r\n\r\nTHREE.CubicBezierCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( v0, v1, v2, v3 ) {\r\n\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\t\tthis.v3 = v3;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.x = THREE.Shape.Utils.b3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\t\tvector.y = THREE.Shape.Utils.b3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\t\tvector.z = THREE.Shape.Utils.b3( t, this.v0.z, this.v1.z, this.v2.z, this.v3.z );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/SplineCurve3.js\r\n\r\n/**************************************************************\r\n *\tSpline 3D curve\r\n **************************************************************/\r\n\r\n\r\nTHREE.SplineCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( points /* array of Vector3 */) {\r\n\r\n\t\tthis.points = ( points == undefined ) ? [] : points;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar points = this.points;\r\n\t\tvar point = ( points.length - 1 ) * t;\r\n\r\n\t\tvar intPoint = Math.floor( point );\r\n\t\tvar weight = point - intPoint;\r\n\r\n\t\tvar point0 = points[ intPoint == 0 ? intPoint : intPoint - 1 ];\r\n\t\tvar point1 = points[ intPoint ];\r\n\t\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\r\n\t\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\t\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\t\tvector.z = THREE.Curve.Utils.interpolate( point0.z, point1.z, point2.z, point3.z, weight );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/ClosedSplineCurve3.js\r\n\r\n/**************************************************************\r\n *\tClosed Spline 3D curve\r\n **************************************************************/\r\n\r\n\r\nTHREE.ClosedSplineCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( points /* array of Vector3 */) {\r\n\r\n\t\tthis.points = ( points == undefined ) ? [] : points;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar points = this.points;\r\n\t\tvar point = ( points.length - 0 ) * t; // This needs to be from 0-length +1\r\n\r\n\t\tvar intPoint = Math.floor( point );\r\n\t\tvar weight = point - intPoint;\r\n\r\n\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / points.length ) + 1 ) * points.length;\r\n\r\n\t\tvar point0 = points[ ( intPoint - 1 ) % points.length ];\r\n\t\tvar point1 = points[ ( intPoint     ) % points.length ];\r\n\t\tvar point2 = points[ ( intPoint + 1 ) % points.length ];\r\n\t\tvar point3 = points[ ( intPoint + 2 ) % points.length ];\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\t\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\t\tvector.z = THREE.Curve.Utils.interpolate( point0.z, point1.z, point2.z, point3.z, weight );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/animation/AnimationHandler.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n */\r\n\r\nTHREE.AnimationHandler = {\r\n\r\n\tLINEAR: 0,\r\n\tCATMULLROM: 1,\r\n\tCATMULLROM_FORWARD: 2,\r\n\r\n\t//\r\n\r\n\tadd: function () { THREE.warn( 'THREE.AnimationHandler.add() has been deprecated.' ); },\r\n\tget: function () { THREE.warn( 'THREE.AnimationHandler.get() has been deprecated.' ); },\r\n\tremove: function () { THREE.warn( 'THREE.AnimationHandler.remove() has been deprecated.' ); },\r\n\r\n\t//\r\n\r\n\tanimations: [],\r\n\r\n\tinit: function ( data ) {\r\n\r\n\t\tif ( data.initialized === true ) return data;\r\n\r\n\t\t// loop through all keys\r\n\r\n\t\tfor ( var h = 0; h < data.hierarchy.length; h ++ ) {\r\n\r\n\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\t// remove minus times\r\n\r\n\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].time < 0 ) {\r\n\r\n\t\t\t\t\t data.hierarchy[ h ].keys[ k ].time = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// create quaternions\r\n\r\n\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].rot !== undefined &&\r\n\t\t\t\t  ! ( data.hierarchy[ h ].keys[ k ].rot instanceof THREE.Quaternion ) ) {\r\n\r\n\t\t\t\t\tvar quat = data.hierarchy[ h ].keys[ k ].rot;\r\n\t\t\t\t\tdata.hierarchy[ h ].keys[ k ].rot = new THREE.Quaternion().fromArray( quat );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// prepare morph target keys\r\n\r\n\t\t\tif ( data.hierarchy[ h ].keys.length && data.hierarchy[ h ].keys[ 0 ].morphTargets !== undefined ) {\r\n\r\n\t\t\t\t// get all used\r\n\r\n\t\t\t\tvar usedMorphTargets = {};\r\n\r\n\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\t\tfor ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {\r\n\r\n\t\t\t\t\t\tvar morphTargetName = data.hierarchy[ h ].keys[ k ].morphTargets[ m ];\r\n\t\t\t\t\t\tusedMorphTargets[ morphTargetName ] = - 1;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdata.hierarchy[ h ].usedMorphTargets = usedMorphTargets;\r\n\r\n\r\n\t\t\t\t// set all used on all frames\r\n\r\n\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\t\tvar influences = {};\r\n\r\n\t\t\t\t\tfor ( var morphTargetName in usedMorphTargets ) {\r\n\r\n\t\t\t\t\t\tfor ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {\r\n\r\n\t\t\t\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].morphTargets[ m ] === morphTargetName ) {\r\n\r\n\t\t\t\t\t\t\t\tinfluences[ morphTargetName ] = data.hierarchy[ h ].keys[ k ].morphTargetsInfluences[ m ];\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( m === data.hierarchy[ h ].keys[ k ].morphTargets.length ) {\r\n\r\n\t\t\t\t\t\t\tinfluences[ morphTargetName ] = 0;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdata.hierarchy[ h ].keys[ k ].morphTargetsInfluences = influences;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// remove all keys that are on the same time\r\n\r\n\t\t\tfor ( var k = 1; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].time === data.hierarchy[ h ].keys[ k - 1 ].time ) {\r\n\r\n\t\t\t\t\tdata.hierarchy[ h ].keys.splice( k, 1 );\r\n\t\t\t\t\tk --;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// set index\r\n\r\n\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\tdata.hierarchy[ h ].keys[ k ].index = k;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tdata.initialized = true;\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tparse: function ( root ) {\r\n\r\n\t\tvar parseRecurseHierarchy = function ( root, hierarchy ) {\r\n\r\n\t\t\thierarchy.push( root );\r\n\r\n\t\t\tfor ( var c = 0; c < root.children.length; c ++ )\r\n\t\t\t\tparseRecurseHierarchy( root.children[ c ], hierarchy );\r\n\r\n\t\t};\r\n\r\n\t\t// setup hierarchy\r\n\r\n\t\tvar hierarchy = [];\r\n\r\n\t\tif ( root instanceof THREE.SkinnedMesh ) {\r\n\r\n\t\t\tfor ( var b = 0; b < root.skeleton.bones.length; b ++ ) {\r\n\r\n\t\t\t\thierarchy.push( root.skeleton.bones[ b ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tparseRecurseHierarchy( root, hierarchy );\r\n\r\n\t\t}\r\n\r\n\t\treturn hierarchy;\r\n\r\n\t},\r\n\r\n\tplay: function ( animation ) {\r\n\r\n\t\tif ( this.animations.indexOf( animation ) === - 1 ) {\r\n\r\n\t\t\tthis.animations.push( animation );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tstop: function ( animation ) {\r\n\r\n\t\tvar index = this.animations.indexOf( animation );\r\n\r\n\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\tthis.animations.splice( index, 1 );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tupdate: function ( deltaTimeMS ) {\r\n\r\n\t\tfor ( var i = 0; i < this.animations.length; i ++ ) {\r\n\r\n\t\t\tthis.animations[ i ].resetBlendWeights( );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i < this.animations.length; i ++ ) {\r\n\r\n\t\t\tthis.animations[ i ].update( deltaTimeMS );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/animation/Animation.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Animation = function ( root, data ) {\r\n\r\n\tthis.root = root;\r\n\tthis.data = THREE.AnimationHandler.init( data );\r\n\tthis.hierarchy = THREE.AnimationHandler.parse( root );\r\n\r\n\tthis.currentTime = 0;\r\n\tthis.timeScale = 1;\r\n\r\n\tthis.isPlaying = false;\r\n\tthis.loop = true;\r\n\tthis.weight = 0;\r\n\r\n\tthis.interpolationType = THREE.AnimationHandler.LINEAR;\r\n\r\n};\r\n\r\nTHREE.Animation.prototype = {\r\n\r\n\tconstructor: THREE.Animation,\r\n\r\n\tkeyTypes:  [ \"pos\", \"rot\", \"scl\" ],\r\n\r\n\tplay: function ( startTime, weight ) {\r\n\r\n\t\tthis.currentTime = startTime !== undefined ? startTime : 0;\r\n\t\tthis.weight = weight !== undefined ? weight : 1;\r\n\r\n\t\tthis.isPlaying = true;\r\n\r\n\t\tthis.reset();\r\n\r\n\t\tTHREE.AnimationHandler.play( this );\r\n\r\n\t},\r\n\r\n\tstop: function() {\r\n\r\n\t\tthis.isPlaying = false;\r\n\r\n\t\tTHREE.AnimationHandler.stop( this );\r\n\r\n\t},\r\n\r\n\treset: function () {\r\n\r\n\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\t\tvar object = this.hierarchy[ h ];\r\n\r\n\t\t\tif ( object.animationCache === undefined ) {\r\n\r\n\t\t\t\tobject.animationCache = {\r\n\t\t\t\t\tanimations: {},\r\n\t\t\t\t\tblending: {\r\n\t\t\t\t\t\tpositionWeight: 0.0,\r\n\t\t\t\t\t\tquaternionWeight: 0.0,\r\n\t\t\t\t\t\tscaleWeight: 0.0\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tvar name = this.data.name;\r\n\t\t\tvar animations = object.animationCache.animations;\r\n\t\t\tvar animationCache = animations[ name ];\r\n\r\n\t\t\tif ( animationCache === undefined ) {\r\n\r\n\t\t\t\tanimationCache = {\r\n\t\t\t\t\tprevKey: { pos: 0, rot: 0, scl: 0 },\r\n\t\t\t\t\tnextKey: { pos: 0, rot: 0, scl: 0 },\r\n\t\t\t\t\toriginalMatrix: object.matrix\r\n\t\t\t\t};\r\n\r\n\t\t\t\tanimations[ name ] = animationCache;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Get keys to match our current time\r\n\r\n\t\t\tfor ( var t = 0; t < 3; t ++ ) {\r\n\r\n\t\t\t\tvar type = this.keyTypes[ t ];\r\n\r\n\t\t\t\tvar prevKey = this.data.hierarchy[ h ].keys[ 0 ];\r\n\t\t\t\tvar nextKey = this.getNextKeyWith( type, h, 1 );\r\n\r\n\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\r\n\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tanimationCache.prevKey[ type ] = prevKey;\r\n\t\t\t\tanimationCache.nextKey[ type ] = nextKey;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tresetBlendWeights: function () {\r\n\r\n\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\t\tvar object = this.hierarchy[ h ];\r\n\t\t\tvar animationCache = object.animationCache;\r\n\r\n\t\t\tif ( animationCache !== undefined ) {\r\n\r\n\t\t\t\tvar blending = animationCache.blending;\r\n\r\n\t\t\t\tblending.positionWeight = 0.0;\r\n\t\t\t\tblending.quaternionWeight = 0.0;\r\n\t\t\t\tblending.scaleWeight = 0.0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tupdate: ( function() {\r\n\r\n\t\tvar points = [];\r\n\t\tvar target = new THREE.Vector3();\r\n\t\tvar newVector = new THREE.Vector3();\r\n\t\tvar newQuat = new THREE.Quaternion();\r\n\r\n\t\t// Catmull-Rom spline\r\n\r\n\t\tvar interpolateCatmullRom = function ( points, scale ) {\r\n\r\n\t\t\tvar c = [], v3 = [],\r\n\t\t\tpoint, intPoint, weight, w2, w3,\r\n\t\t\tpa, pb, pc, pd;\r\n\r\n\t\t\tpoint = ( points.length - 1 ) * scale;\r\n\t\t\tintPoint = Math.floor( point );\r\n\t\t\tweight = point - intPoint;\r\n\r\n\t\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\r\n\t\t\tc[ 1 ] = intPoint;\r\n\t\t\tc[ 2 ] = intPoint > points.length - 2 ? intPoint : intPoint + 1;\r\n\t\t\tc[ 3 ] = intPoint > points.length - 3 ? intPoint : intPoint + 2;\r\n\r\n\t\t\tpa = points[ c[ 0 ] ];\r\n\t\t\tpb = points[ c[ 1 ] ];\r\n\t\t\tpc = points[ c[ 2 ] ];\r\n\t\t\tpd = points[ c[ 3 ] ];\r\n\r\n\t\t\tw2 = weight * weight;\r\n\t\t\tw3 = weight * w2;\r\n\r\n\t\t\tv3[ 0 ] = interpolate( pa[ 0 ], pb[ 0 ], pc[ 0 ], pd[ 0 ], weight, w2, w3 );\r\n\t\t\tv3[ 1 ] = interpolate( pa[ 1 ], pb[ 1 ], pc[ 1 ], pd[ 1 ], weight, w2, w3 );\r\n\t\t\tv3[ 2 ] = interpolate( pa[ 2 ], pb[ 2 ], pc[ 2 ], pd[ 2 ], weight, w2, w3 );\r\n\r\n\t\t\treturn v3;\r\n\r\n\t\t};\r\n\r\n\t\tvar interpolate = function ( p0, p1, p2, p3, t, t2, t3 ) {\r\n\r\n\t\t\tvar v0 = ( p2 - p0 ) * 0.5,\r\n\t\t\t\tv1 = ( p3 - p1 ) * 0.5;\r\n\r\n\t\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\r\n\t\t};\r\n\r\n\t\treturn function ( delta ) {\r\n\r\n\t\t\tif ( this.isPlaying === false ) return;\r\n\r\n\t\t\tthis.currentTime += delta * this.timeScale;\r\n\r\n\t\t\tif ( this.weight === 0 )\r\n\t\t\t\treturn;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tvar duration = this.data.length;\r\n\r\n\t\t\tif ( this.currentTime > duration || this.currentTime < 0 ) {\r\n\r\n\t\t\t\tif ( this.loop ) {\r\n\r\n\t\t\t\t\tthis.currentTime %= duration;\r\n\r\n\t\t\t\t\tif ( this.currentTime < 0 )\r\n\t\t\t\t\t\tthis.currentTime += duration;\r\n\r\n\t\t\t\t\tthis.reset();\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis.stop();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\tvar object = this.hierarchy[ h ];\r\n\t\t\t\tvar animationCache = object.animationCache.animations[this.data.name];\r\n\t\t\t\tvar blending = object.animationCache.blending;\r\n\r\n\t\t\t\t// loop through pos/rot/scl\r\n\r\n\t\t\t\tfor ( var t = 0; t < 3; t ++ ) {\r\n\r\n\t\t\t\t\t// get keys\r\n\r\n\t\t\t\t\tvar type    = this.keyTypes[ t ];\r\n\t\t\t\t\tvar prevKey = animationCache.prevKey[ type ];\r\n\t\t\t\t\tvar nextKey = animationCache.nextKey[ type ];\r\n\r\n\t\t\t\t\tif ( ( this.timeScale > 0 && nextKey.time <= this.currentTime ) ||\r\n\t\t\t\t\t\t( this.timeScale < 0 && prevKey.time >= this.currentTime ) ) {\r\n\r\n\t\t\t\t\t\tprevKey = this.data.hierarchy[ h ].keys[ 0 ];\r\n\t\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, 1 );\r\n\r\n\t\t\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\r\n\t\t\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tanimationCache.prevKey[ type ] = prevKey;\r\n\t\t\t\t\t\tanimationCache.nextKey[ type ] = nextKey;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar scale = ( this.currentTime - prevKey.time ) / ( nextKey.time - prevKey.time );\r\n\r\n\t\t\t\t\tvar prevXYZ = prevKey[ type ];\r\n\t\t\t\t\tvar nextXYZ = nextKey[ type ];\r\n\r\n\t\t\t\t\tif ( scale < 0 ) scale = 0;\r\n\t\t\t\t\tif ( scale > 1 ) scale = 1;\r\n\r\n\t\t\t\t\t// interpolate\r\n\r\n\t\t\t\t\tif ( type === \"pos\" ) {\r\n\r\n\t\t\t\t\t\tif ( this.interpolationType === THREE.AnimationHandler.LINEAR ) {\r\n\r\n\t\t\t\t\t\t\tnewVector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;\r\n\t\t\t\t\t\t\tnewVector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;\r\n\t\t\t\t\t\t\tnewVector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;\r\n\r\n\t\t\t\t\t\t\t// blend\r\n\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.positionWeight );\r\n\t\t\t\t\t\t\tobject.position.lerp( newVector, proportionalWeight );\r\n\t\t\t\t\t\t\tblending.positionWeight += this.weight;\r\n\r\n\t\t\t\t\t\t} else if ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t\t\t\t\t\t\t\tthis.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\r\n\t\t\t\t\t\t\tpoints[ 0 ] = this.getPrevKeyWith( \"pos\", h, prevKey.index - 1 )[ \"pos\" ];\r\n\t\t\t\t\t\t\tpoints[ 1 ] = prevXYZ;\r\n\t\t\t\t\t\t\tpoints[ 2 ] = nextXYZ;\r\n\t\t\t\t\t\t\tpoints[ 3 ] = this.getNextKeyWith( \"pos\", h, nextKey.index + 1 )[ \"pos\" ];\r\n\r\n\t\t\t\t\t\t\tscale = scale * 0.33 + 0.33;\r\n\r\n\t\t\t\t\t\t\tvar currentPoint = interpolateCatmullRom( points, scale );\r\n\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.positionWeight );\r\n\t\t\t\t\t\t\tblending.positionWeight += this.weight;\r\n\r\n\t\t\t\t\t\t\t// blend\r\n\r\n\t\t\t\t\t\t\tvar vector = object.position;\r\n\r\n\t\t\t\t\t\t\tvector.x = vector.x + ( currentPoint[ 0 ] - vector.x ) * proportionalWeight;\r\n\t\t\t\t\t\t\tvector.y = vector.y + ( currentPoint[ 1 ] - vector.y ) * proportionalWeight;\r\n\t\t\t\t\t\t\tvector.z = vector.z + ( currentPoint[ 2 ] - vector.z ) * proportionalWeight;\r\n\r\n\t\t\t\t\t\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\r\n\t\t\t\t\t\t\t\tvar forwardPoint = interpolateCatmullRom( points, scale * 1.01 );\r\n\r\n\t\t\t\t\t\t\t\ttarget.set( forwardPoint[ 0 ], forwardPoint[ 1 ], forwardPoint[ 2 ] );\r\n\t\t\t\t\t\t\t\ttarget.sub( vector );\r\n\t\t\t\t\t\t\t\ttarget.y = 0;\r\n\t\t\t\t\t\t\t\ttarget.normalize();\r\n\r\n\t\t\t\t\t\t\t\tvar angle = Math.atan2( target.x, target.z );\r\n\t\t\t\t\t\t\t\tobject.rotation.set( 0, angle, 0 );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( type === \"rot\" ) {\r\n\r\n\t\t\t\t\t\tTHREE.Quaternion.slerp( prevXYZ, nextXYZ, newQuat, scale );\r\n\r\n\t\t\t\t\t\t// Avoid paying the cost of an additional slerp if we don't have to\r\n\t\t\t\t\t\tif ( blending.quaternionWeight === 0 ) {\r\n\r\n\t\t\t\t\t\t\tobject.quaternion.copy(newQuat);\r\n\t\t\t\t\t\t\tblending.quaternionWeight = this.weight;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.quaternionWeight );\r\n\t\t\t\t\t\t\tTHREE.Quaternion.slerp( object.quaternion, newQuat, object.quaternion, proportionalWeight );\r\n\t\t\t\t\t\t\tblending.quaternionWeight += this.weight;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( type === \"scl\" ) {\r\n\r\n\t\t\t\t\t\tnewVector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;\r\n\t\t\t\t\t\tnewVector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;\r\n\t\t\t\t\t\tnewVector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;\r\n\r\n\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.scaleWeight );\r\n\t\t\t\t\t\tobject.scale.lerp( newVector, proportionalWeight );\r\n\t\t\t\t\t\tblending.scaleWeight += this.weight;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t};\r\n\r\n\t} )(),\r\n\r\n\tgetNextKeyWith: function ( type, h, key ) {\r\n\r\n\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\r\n\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t\t this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\r\n\t\t\tkey = key < keys.length - 1 ? key : keys.length - 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tkey = key % keys.length;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( ; key < keys.length; key ++ ) {\r\n\r\n\t\t\tif ( keys[ key ][ type ] !== undefined ) {\r\n\r\n\t\t\t\treturn keys[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this.data.hierarchy[ h ].keys[ 0 ];\r\n\r\n\t},\r\n\r\n\tgetPrevKeyWith: function ( type, h, key ) {\r\n\r\n\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\r\n\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t\tthis.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\r\n\t\t\tkey = key > 0 ? key : 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tkey = key >= 0 ? key : key + keys.length;\r\n\r\n\t\t}\r\n\r\n\r\n\t\tfor ( ; key >= 0; key -- ) {\r\n\r\n\t\t\tif ( keys[ key ][ type ] !== undefined ) {\r\n\r\n\t\t\t\treturn keys[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this.data.hierarchy[ h ].keys[ keys.length - 1 ];\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/animation/KeyFrameAnimation.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author khang duong\r\n * @author erik kitson\r\n */\r\n\r\nTHREE.KeyFrameAnimation = function ( data ) {\r\n\r\n\tthis.root = data.node;\r\n\tthis.data = THREE.AnimationHandler.init( data );\r\n\tthis.hierarchy = THREE.AnimationHandler.parse( this.root );\r\n\tthis.currentTime = 0;\r\n\tthis.timeScale = 0.001;\r\n\tthis.isPlaying = false;\r\n\tthis.isPaused = true;\r\n\tthis.loop = true;\r\n\r\n\t// initialize to first keyframes\r\n\r\n\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\tvar keys = this.data.hierarchy[h].keys,\r\n\t\t\tsids = this.data.hierarchy[h].sids,\r\n\t\t\tobj = this.hierarchy[h];\r\n\r\n\t\tif ( keys.length && sids ) {\r\n\r\n\t\t\tfor ( var s = 0; s < sids.length; s ++ ) {\r\n\r\n\t\t\t\tvar sid = sids[ s ],\r\n\t\t\t\t\tnext = this.getNextKeyWith( sid, h, 0 );\r\n\r\n\t\t\t\tif ( next ) {\r\n\r\n\t\t\t\t\tnext.apply( sid );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobj.matrixAutoUpdate = false;\r\n\t\t\tthis.data.hierarchy[h].node.updateMatrix();\r\n\t\t\tobj.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.KeyFrameAnimation.prototype = {\r\n\r\n\tconstructor: THREE.KeyFrameAnimation,\r\n\r\n\tplay: function ( startTime ) {\r\n\r\n\t\tthis.currentTime = startTime !== undefined ? startTime : 0;\r\n\r\n\t\tif ( this.isPlaying === false ) {\r\n\r\n\t\t\tthis.isPlaying = true;\r\n\r\n\t\t\t// reset key cache\r\n\r\n\t\t\tvar h, hl = this.hierarchy.length,\r\n\t\t\t\tobject,\r\n\t\t\t\tnode;\r\n\r\n\t\t\tfor ( h = 0; h < hl; h ++ ) {\r\n\r\n\t\t\t\tobject = this.hierarchy[ h ];\r\n\t\t\t\tnode = this.data.hierarchy[ h ];\r\n\r\n\t\t\t\tif ( node.animationCache === undefined ) {\r\n\r\n\t\t\t\t\tnode.animationCache = {};\r\n\t\t\t\t\tnode.animationCache.prevKey = null;\r\n\t\t\t\t\tnode.animationCache.nextKey = null;\r\n\t\t\t\t\tnode.animationCache.originalMatrix = object.matrix;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar keys = this.data.hierarchy[h].keys;\r\n\r\n\t\t\t\tif (keys.length) {\r\n\r\n\t\t\t\t\tnode.animationCache.prevKey = keys[ 0 ];\r\n\t\t\t\t\tnode.animationCache.nextKey = keys[ 1 ];\r\n\r\n\t\t\t\t\tthis.startTime = Math.min( keys[0].time, this.startTime );\r\n\t\t\t\t\tthis.endTime = Math.max( keys[keys.length - 1].time, this.endTime );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.update( 0 );\r\n\r\n\t\t}\r\n\r\n\t\tthis.isPaused = false;\r\n\r\n\t\tTHREE.AnimationHandler.play( this );\r\n\r\n\t},\r\n\r\n\tstop: function () {\r\n\r\n\t\tthis.isPlaying = false;\r\n\t\tthis.isPaused  = false;\r\n\r\n\t\tTHREE.AnimationHandler.stop( this );\r\n\r\n\t\t// reset JIT matrix and remove cache\r\n\r\n\t\tfor ( var h = 0; h < this.data.hierarchy.length; h ++ ) {\r\n\r\n\t\t\tvar obj = this.hierarchy[ h ];\r\n\t\t\tvar node = this.data.hierarchy[ h ];\r\n\r\n\t\t\tif ( node.animationCache !== undefined ) {\r\n\r\n\t\t\t\tvar original = node.animationCache.originalMatrix;\r\n\r\n\t\t\t\toriginal.copy( obj.matrix );\r\n\t\t\t\tobj.matrix = original;\r\n\r\n\t\t\t\tdelete node.animationCache;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tupdate: function ( delta ) {\r\n\r\n\t\tif ( this.isPlaying === false ) return;\r\n\r\n\t\tthis.currentTime += delta * this.timeScale;\r\n\r\n\t\t//\r\n\r\n\t\tvar duration = this.data.length;\r\n\r\n\t\tif ( this.loop === true && this.currentTime > duration ) {\r\n\r\n\t\t\tthis.currentTime %= duration;\r\n\r\n\t\t}\r\n\r\n\t\tthis.currentTime = Math.min( this.currentTime, duration );\r\n\r\n\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\t\tvar object = this.hierarchy[ h ];\r\n\t\t\tvar node = this.data.hierarchy[ h ];\r\n\r\n\t\t\tvar keys = node.keys,\r\n\t\t\t\tanimationCache = node.animationCache;\r\n\r\n\r\n\t\t\tif ( keys.length ) {\r\n\r\n\t\t\t\tvar prevKey = animationCache.prevKey;\r\n\t\t\t\tvar nextKey = animationCache.nextKey;\r\n\r\n\t\t\t\tif ( nextKey.time <= this.currentTime ) {\r\n\r\n\t\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\r\n\t\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\t\tnextKey = keys[ prevKey.index + 1 ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tanimationCache.prevKey = prevKey;\r\n\t\t\t\t\tanimationCache.nextKey = nextKey;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( nextKey.time >= this.currentTime ) {\r\n\r\n\t\t\t\t\tprevKey.interpolate( nextKey, this.currentTime );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tprevKey.interpolate( nextKey, nextKey.time );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.data.hierarchy[ h ].node.updateMatrix();\r\n\t\t\t\tobject.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetNextKeyWith: function ( sid, h, key ) {\r\n\r\n\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\tkey = key % keys.length;\r\n\r\n\t\tfor ( ; key < keys.length; key ++ ) {\r\n\r\n\t\t\tif ( keys[ key ].hasTarget( sid ) ) {\r\n\r\n\t\t\t\treturn keys[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn keys[ 0 ];\r\n\r\n\t},\r\n\r\n\tgetPrevKeyWith: function ( sid, h, key ) {\r\n\r\n\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\tkey = key >= 0 ? key : key + keys.length;\r\n\r\n\t\tfor ( ; key >= 0; key -- ) {\r\n\r\n\t\t\tif ( keys[ key ].hasTarget( sid ) ) {\r\n\r\n\t\t\t\treturn keys[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn keys[ keys.length - 1 ];\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/animation/MorphAnimation.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com\r\n * @author willy-vvu / http://willy-vvu.github.io\r\n */\r\n\r\nTHREE.MorphAnimation = function ( mesh ) {\r\n\r\n\tthis.mesh = mesh;\r\n\tthis.frames = mesh.morphTargetInfluences.length;\r\n\tthis.currentTime = 0;\r\n\tthis.duration = 1000;\r\n\tthis.loop = true;\r\n\tthis.lastFrame = 0;\r\n\tthis.currentFrame = 0;\r\n\r\n\tthis.isPlaying = false;\r\n\r\n};\r\n\r\nTHREE.MorphAnimation.prototype = {\r\n\r\n\tconstructor: THREE.MorphAnimation,\r\n\r\n\tplay: function () {\r\n\r\n\t\tthis.isPlaying = true;\r\n\r\n\t},\r\n\r\n\tpause: function () {\r\n\r\n\t\tthis.isPlaying = false;\r\n\r\n\t},\r\n\r\n\tupdate: function ( delta ) {\r\n\r\n\t\tif ( this.isPlaying === false ) return;\r\n\r\n\t\tthis.currentTime += delta;\r\n\r\n\t\tif ( this.loop === true && this.currentTime > this.duration ) {\r\n\r\n\t\t\tthis.currentTime %= this.duration;\r\n\r\n\t\t}\r\n\r\n\t\tthis.currentTime = Math.min( this.currentTime, this.duration );\r\n\r\n\t\tvar interpolation = this.duration / this.frames;\r\n\t\tvar frame = Math.floor( this.currentTime / interpolation );\r\n\r\n\t\tvar influences = this.mesh.morphTargetInfluences;\r\n\r\n\t\tif ( frame != this.currentFrame ) {\r\n\r\n\t\t\tinfluences[ this.lastFrame ] = 0;\r\n\t\t\tinfluences[ this.currentFrame ] = 1;\r\n\t\t\tinfluences[ frame ] = 0;\r\n\r\n\t\t\tthis.lastFrame = this.currentFrame;\r\n\t\t\tthis.currentFrame = frame;\r\n\r\n\t\t}\r\n\r\n\t\tinfluences[ frame ] = ( this.currentTime % interpolation ) / interpolation;\r\n\t\tinfluences[ this.lastFrame ] = 1 - influences[ frame ];\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/geometries/BoxGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Cube.as\r\n */\r\n\r\nTHREE.BoxGeometry = function ( width, height, depth, widthSegments, heightSegments, depthSegments ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'BoxGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\tdepth: depth,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\tdepthSegments: depthSegments\r\n\t};\r\n\r\n\tthis.widthSegments = widthSegments || 1;\r\n\tthis.heightSegments = heightSegments || 1;\r\n\tthis.depthSegments = depthSegments || 1;\r\n\r\n\tvar scope = this;\r\n\r\n\tvar width_half = width / 2;\r\n\tvar height_half = height / 2;\r\n\tvar depth_half = depth / 2;\r\n\r\n\tbuildPlane( 'z', 'y', - 1, - 1, depth, height, width_half, 0 ); // px\r\n\tbuildPlane( 'z', 'y',   1, - 1, depth, height, - width_half, 1 ); // nx\r\n\tbuildPlane( 'x', 'z',   1,   1, width, depth, height_half, 2 ); // py\r\n\tbuildPlane( 'x', 'z',   1, - 1, width, depth, - height_half, 3 ); // ny\r\n\tbuildPlane( 'x', 'y',   1, - 1, width, height, depth_half, 4 ); // pz\r\n\tbuildPlane( 'x', 'y', - 1, - 1, width, height, - depth_half, 5 ); // nz\r\n\r\n\tfunction buildPlane( u, v, udir, vdir, width, height, depth, materialIndex ) {\r\n\r\n\t\tvar w, ix, iy,\r\n\t\tgridX = scope.widthSegments,\r\n\t\tgridY = scope.heightSegments,\r\n\t\twidth_half = width / 2,\r\n\t\theight_half = height / 2,\r\n\t\toffset = scope.vertices.length;\r\n\r\n\t\tif ( ( u === 'x' && v === 'y' ) || ( u === 'y' && v === 'x' ) ) {\r\n\r\n\t\t\tw = 'z';\r\n\r\n\t\t} else if ( ( u === 'x' && v === 'z' ) || ( u === 'z' && v === 'x' ) ) {\r\n\r\n\t\t\tw = 'y';\r\n\t\t\tgridY = scope.depthSegments;\r\n\r\n\t\t} else if ( ( u === 'z' && v === 'y' ) || ( u === 'y' && v === 'z' ) ) {\r\n\r\n\t\t\tw = 'x';\r\n\t\t\tgridX = scope.depthSegments;\r\n\r\n\t\t}\r\n\r\n\t\tvar gridX1 = gridX + 1,\r\n\t\tgridY1 = gridY + 1,\r\n\t\tsegment_width = width / gridX,\r\n\t\tsegment_height = height / gridY,\r\n\t\tnormal = new THREE.Vector3();\r\n\r\n\t\tnormal[ w ] = depth > 0 ? 1 : - 1;\r\n\r\n\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\r\n\r\n\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\r\n\r\n\t\t\t\tvar vector = new THREE.Vector3();\r\n\t\t\t\tvector[ u ] = ( ix * segment_width - width_half ) * udir;\r\n\t\t\t\tvector[ v ] = ( iy * segment_height - height_half ) * vdir;\r\n\t\t\t\tvector[ w ] = depth;\r\n\r\n\t\t\t\tscope.vertices.push( vector );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\r\n\r\n\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\r\n\r\n\t\t\t\tvar a = ix + gridX1 * iy;\r\n\t\t\t\tvar b = ix + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\r\n\r\n\t\t\t\tvar uva = new THREE.Vector2( ix / gridX, 1 - iy / gridY );\r\n\t\t\t\tvar uvb = new THREE.Vector2( ix / gridX, 1 - ( iy + 1 ) / gridY );\r\n\t\t\t\tvar uvc = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - ( iy + 1 ) / gridY );\r\n\t\t\t\tvar uvd = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - iy / gridY );\r\n\r\n\t\t\t\tvar face = new THREE.Face3( a + offset, b + offset, d + offset );\r\n\t\t\t\tface.normal.copy( normal );\r\n\t\t\t\tface.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\r\n\t\t\t\tface.materialIndex = materialIndex;\r\n\r\n\t\t\t\tscope.faces.push( face );\r\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\t\tface = new THREE.Face3( b + offset, c + offset, d + offset );\r\n\t\t\t\tface.normal.copy( normal );\r\n\t\t\t\tface.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\r\n\t\t\t\tface.materialIndex = materialIndex;\r\n\r\n\t\t\t\tscope.faces.push( face );\r\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.mergeVertices();\r\n\r\n};\r\n\r\nTHREE.BoxGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.BoxGeometry.prototype.constructor = THREE.BoxGeometry;\r\n\r\n// File:src/extras/geometries/CircleGeometry.js\r\n\r\n/**\r\n * @author hughes\r\n */\r\n\r\nTHREE.CircleGeometry = function ( radius, segments, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'CircleGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tsegments: segments,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tradius = radius || 50;\r\n\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\r\n\tvar i, uvs = [],\r\n\tcenter = new THREE.Vector3(), centerUV = new THREE.Vector2( 0.5, 0.5 );\r\n\r\n\tthis.vertices.push(center);\r\n\tuvs.push( centerUV );\r\n\r\n\tfor ( i = 0; i <= segments; i ++ ) {\r\n\r\n\t\tvar vertex = new THREE.Vector3();\r\n\t\tvar segment = thetaStart + i / segments * thetaLength;\r\n\r\n\t\tvertex.x = radius * Math.cos( segment );\r\n\t\tvertex.y = radius * Math.sin( segment );\r\n\r\n\t\tthis.vertices.push( vertex );\r\n\t\tuvs.push( new THREE.Vector2( ( vertex.x / radius + 1 ) / 2, ( vertex.y / radius + 1 ) / 2 ) );\r\n\r\n\t}\r\n\r\n\tvar n = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\tfor ( i = 1; i <= segments; i ++ ) {\r\n\r\n\t\tthis.faces.push( new THREE.Face3( i, i + 1, 0, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ i ].clone(), uvs[ i + 1 ].clone(), centerUV.clone() ] );\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.CircleGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.CircleGeometry.prototype.constructor = THREE.CircleGeometry;\r\n\r\n// File:src/extras/geometries/CubeGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\n\r\nTHREE.CubeGeometry = function ( width, height, depth, widthSegments, heightSegments, depthSegments ) {\r\n\r\n\tTHREE.warn( 'THREE.CubeGeometry has been renamed to THREE.BoxGeometry.' );\r\n\treturn new THREE.BoxGeometry( width, height, depth, widthSegments, heightSegments, depthSegments );\r\n\r\n };\r\n\r\n// File:src/extras/geometries/CylinderGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.CylinderGeometry = function ( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'CylinderGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradiusTop: radiusTop,\r\n\t\tradiusBottom: radiusBottom,\r\n\t\theight: height,\r\n\t\tradialSegments: radialSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\topenEnded: openEnded,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tradiusTop = radiusTop !== undefined ? radiusTop : 20;\r\n\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\r\n\theight = height !== undefined ? height : 100;\r\n\r\n\tradialSegments = radialSegments || 8;\r\n\theightSegments = heightSegments || 1;\r\n\r\n\topenEnded = openEnded !== undefined ? openEnded : false;\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : 2 * Math.PI;\r\n\r\n\tvar heightHalf = height / 2;\r\n\r\n\tvar x, y, vertices = [], uvs = [];\r\n\r\n\tfor ( y = 0; y <= heightSegments; y ++ ) {\r\n\r\n\t\tvar verticesRow = [];\r\n\t\tvar uvsRow = [];\r\n\r\n\t\tvar v = y / heightSegments;\r\n\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\r\n\r\n\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\r\n\r\n\t\t\tvar u = x / radialSegments;\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\tvertex.x = radius * Math.sin( u * thetaLength + thetaStart );\r\n\t\t\tvertex.y = - v * height + heightHalf;\r\n\t\t\tvertex.z = radius * Math.cos( u * thetaLength + thetaStart );\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\r\n\t\t\tverticesRow.push( this.vertices.length - 1 );\r\n\t\t\tuvsRow.push( new THREE.Vector2( u, 1 - v ) );\r\n\r\n\t\t}\r\n\r\n\t\tvertices.push( verticesRow );\r\n\t\tuvs.push( uvsRow );\r\n\r\n\t}\r\n\r\n\tvar tanTheta = ( radiusBottom - radiusTop ) / height;\r\n\tvar na, nb;\r\n\r\n\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\tif ( radiusTop !== 0 ) {\r\n\r\n\t\t\tna = this.vertices[ vertices[ 0 ][ x ] ].clone();\r\n\t\t\tnb = this.vertices[ vertices[ 0 ][ x + 1 ] ].clone();\r\n\r\n\t\t} else {\r\n\r\n\t\t\tna = this.vertices[ vertices[ 1 ][ x ] ].clone();\r\n\t\t\tnb = this.vertices[ vertices[ 1 ][ x + 1 ] ].clone();\r\n\r\n\t\t}\r\n\r\n\t\tna.setY( Math.sqrt( na.x * na.x + na.z * na.z ) * tanTheta ).normalize();\r\n\t\tnb.setY( Math.sqrt( nb.x * nb.x + nb.z * nb.z ) * tanTheta ).normalize();\r\n\r\n\t\tfor ( y = 0; y < heightSegments; y ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ y ][ x ];\r\n\t\t\tvar v2 = vertices[ y + 1 ][ x ];\r\n\t\t\tvar v3 = vertices[ y + 1 ][ x + 1 ];\r\n\t\t\tvar v4 = vertices[ y ][ x + 1 ];\r\n\r\n\t\t\tvar n1 = na.clone();\r\n\t\t\tvar n2 = na.clone();\r\n\t\t\tvar n3 = nb.clone();\r\n\t\t\tvar n4 = nb.clone();\r\n\r\n\t\t\tvar uv1 = uvs[ y ][ x ].clone();\r\n\t\t\tvar uv2 = uvs[ y + 1 ][ x ].clone();\r\n\t\t\tvar uv3 = uvs[ y + 1 ][ x + 1 ].clone();\r\n\t\t\tvar uv4 = uvs[ y ][ x + 1 ].clone();\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v4, [ n1, n2, n4 ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv4 ] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v2, v3, v4, [ n2.clone(), n3, n4.clone() ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv2.clone(), uv3, uv4.clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// top cap\r\n\r\n\tif ( openEnded === false && radiusTop > 0 ) {\r\n\r\n\t\tthis.vertices.push( new THREE.Vector3( 0, heightHalf, 0 ) );\r\n\r\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ 0 ][ x ];\r\n\t\t\tvar v2 = vertices[ 0 ][ x + 1 ];\r\n\t\t\tvar v3 = this.vertices.length - 1;\r\n\r\n\t\t\tvar n1 = new THREE.Vector3( 0, 1, 0 );\r\n\t\t\tvar n2 = new THREE.Vector3( 0, 1, 0 );\r\n\t\t\tvar n3 = new THREE.Vector3( 0, 1, 0 );\r\n\r\n\t\t\tvar uv1 = uvs[ 0 ][ x ].clone();\r\n\t\t\tvar uv2 = uvs[ 0 ][ x + 1 ].clone();\r\n\t\t\tvar uv3 = new THREE.Vector2( uv2.x, 0 );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// bottom cap\r\n\r\n\tif ( openEnded === false && radiusBottom > 0 ) {\r\n\r\n\t\tthis.vertices.push( new THREE.Vector3( 0, - heightHalf, 0 ) );\r\n\r\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ heightSegments ][ x + 1 ];\r\n\t\t\tvar v2 = vertices[ heightSegments ][ x ];\r\n\t\t\tvar v3 = this.vertices.length - 1;\r\n\r\n\t\t\tvar n1 = new THREE.Vector3( 0, - 1, 0 );\r\n\t\t\tvar n2 = new THREE.Vector3( 0, - 1, 0 );\r\n\t\t\tvar n3 = new THREE.Vector3( 0, - 1, 0 );\r\n\r\n\t\t\tvar uv1 = uvs[ heightSegments ][ x + 1 ].clone();\r\n\t\t\tvar uv2 = uvs[ heightSegments ][ x ].clone();\r\n\t\t\tvar uv3 = new THREE.Vector2( uv2.x, 1 );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n};\r\n\r\nTHREE.CylinderGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.CylinderGeometry.prototype.constructor = THREE.CylinderGeometry;\r\n\r\n// File:src/extras/geometries/ExtrudeGeometry.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n *\r\n * Creates extruded geometry from a path shape.\r\n *\r\n * parameters = {\r\n *\r\n *  curveSegments: <int>, // number of points on the curves\r\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segements of extrude spline too\r\n *  amount: <int>, // Depth to extrude the shape\r\n *\r\n *  bevelEnabled: <bool>, // turn on bevel\r\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\r\n *  bevelSize: <float>, // how far from shape outline is bevel\r\n *  bevelSegments: <int>, // number of bevel layers\r\n *\r\n *  extrudePath: <THREE.CurvePath> // 3d spline path to extrude shape along. (creates Frames if .frames aren't defined)\r\n *  frames: <THREE.TubeGeometry.FrenetFrames> // containing arrays of tangents, normals, binormals\r\n *\r\n *  material: <int> // material index for front and back faces\r\n *  extrudeMaterial: <int> // material index for extrusion and beveled faces\r\n *  uvGenerator: <Object> // object that provides UV generator functions\r\n *\r\n * }\r\n **/\r\n\r\nTHREE.ExtrudeGeometry = function ( shapes, options ) {\r\n\r\n\tif ( typeof( shapes ) === \"undefined\" ) {\r\n\t\tshapes = [];\r\n\t\treturn;\r\n\t}\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'ExtrudeGeometry';\r\n\r\n\tshapes = shapes instanceof Array ? shapes : [ shapes ];\r\n\r\n\tthis.addShapeList( shapes, options );\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\t// can't really use automatic vertex normals\r\n\t// as then front and back sides get smoothed too\r\n\t// should do separate smoothing just for sides\r\n\r\n\t//this.computeVertexNormals();\r\n\r\n\t//console.log( \"took\", ( Date.now() - startTime ) );\r\n\r\n};\r\n\r\nTHREE.ExtrudeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.ExtrudeGeometry.prototype.constructor = THREE.ExtrudeGeometry;\r\n\r\nTHREE.ExtrudeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n\tvar sl = shapes.length;\r\n\r\n\tfor ( var s = 0; s < sl; s ++ ) {\r\n\t\tvar shape = shapes[ s ];\r\n\t\tthis.addShape( shape, options );\r\n\t}\r\n};\r\n\r\nTHREE.ExtrudeGeometry.prototype.addShape = function ( shape, options ) {\r\n\r\n\tvar amount = options.amount !== undefined ? options.amount : 100;\r\n\r\n\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\r\n\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\r\n\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\r\n\r\n\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\r\n\r\n\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\r\n\tvar steps = options.steps !== undefined ? options.steps : 1;\r\n\r\n\tvar extrudePath = options.extrudePath;\r\n\tvar extrudePts, extrudeByPath = false;\r\n\r\n\tvar material = options.material;\r\n\tvar extrudeMaterial = options.extrudeMaterial;\r\n\r\n\t// Use default WorldUVGenerator if no UV generators are specified.\r\n\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : THREE.ExtrudeGeometry.WorldUVGenerator;\r\n\r\n\tvar splineTube, binormal, normal, position2;\r\n\tif ( extrudePath ) {\r\n\r\n\t\textrudePts = extrudePath.getSpacedPoints( steps );\r\n\r\n\t\textrudeByPath = true;\r\n\t\tbevelEnabled = false; // bevels not supported for path extrusion\r\n\r\n\t\t// SETUP TNB variables\r\n\r\n\t\t// Reuse TNB from TubeGeomtry for now.\r\n\t\t// TODO1 - have a .isClosed in spline?\r\n\r\n\t\tsplineTube = options.frames !== undefined ? options.frames : new THREE.TubeGeometry.FrenetFrames(extrudePath, steps, false);\r\n\r\n\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\r\n\r\n\t\tbinormal = new THREE.Vector3();\r\n\t\tnormal = new THREE.Vector3();\r\n\t\tposition2 = new THREE.Vector3();\r\n\r\n\t}\r\n\r\n\t// Safeguards if bevels are not enabled\r\n\r\n\tif ( ! bevelEnabled ) {\r\n\r\n\t\tbevelSegments = 0;\r\n\t\tbevelThickness = 0;\r\n\t\tbevelSize = 0;\r\n\r\n\t}\r\n\r\n\t// Variables initalization\r\n\r\n\tvar ahole, h, hl; // looping of holes\r\n\tvar scope = this;\r\n\r\n\tvar shapesOffset = this.vertices.length;\r\n\r\n\tvar shapePoints = shape.extractPoints( curveSegments );\r\n\r\n\tvar vertices = shapePoints.shape;\r\n\tvar holes = shapePoints.holes;\r\n\r\n\tvar reverse = ! THREE.Shape.Utils.isClockWise( vertices ) ;\r\n\r\n\tif ( reverse ) {\r\n\r\n\t\tvertices = vertices.reverse();\r\n\r\n\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\r\n\t\t\tif ( THREE.Shape.Utils.isClockWise( ahole ) ) {\r\n\r\n\t\t\t\tholes[ h ] = ahole.reverse();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treverse = false; // If vertices are in order now, we shouldn't need to worry about them again (hopefully)!\r\n\r\n\t}\r\n\r\n\r\n\tvar faces = THREE.Shape.Utils.triangulateShape ( vertices, holes );\r\n\r\n\t/* Vertices */\r\n\r\n\tvar contour = vertices; // vertices has all points but contour has only points of circumference\r\n\r\n\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\tahole = holes[ h ];\r\n\r\n\t\tvertices = vertices.concat( ahole );\r\n\r\n\t}\r\n\r\n\r\n\tfunction scalePt2 ( pt, vec, size ) {\r\n\r\n\t\tif ( ! vec ) THREE.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\r\n\r\n\t\treturn vec.clone().multiplyScalar( size ).add( pt );\r\n\r\n\t}\r\n\r\n\tvar b, bs, t, z,\r\n\t\tvert, vlen = vertices.length,\r\n\t\tface, flen = faces.length;\r\n\r\n\r\n\t// Find directions for point movement\r\n\r\n\r\n\tfunction getBevelVec( inPt, inPrev, inNext ) {\r\n\r\n\t\tvar EPSILON = 0.0000000001;\r\n\t\t\r\n\t\t// computes for inPt the corresponding point inPt' on a new contour\r\n\t\t//   shiftet by 1 unit (length of normalized vector) to the left\r\n\t\t// if we walk along contour clockwise, this new contour is outside the old one\r\n\t\t//\r\n\t\t// inPt' is the intersection of the two lines parallel to the two\r\n\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\r\n\t\t\r\n\t\tvar v_trans_x, v_trans_y, shrink_by = 1;\t\t// resulting translation vector for inPt\r\n\r\n\t\t// good reading for geometry algorithms (here: line-line intersection)\r\n\t\t// http://geomalgorithms.com/a05-_intersect-1.html\r\n\r\n\t\tvar v_prev_x = inPt.x - inPrev.x, v_prev_y = inPt.y - inPrev.y;\r\n\t\tvar v_next_x = inNext.x - inPt.x, v_next_y = inNext.y - inPt.y;\r\n\t\t\r\n\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\r\n\t\t\r\n\t\t// check for colinear edges\r\n\t\tvar colinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\t\t\r\n\t\tif ( Math.abs( colinear0 ) > EPSILON ) {\t\t// not colinear\r\n\t\t\t\r\n\t\t\t// length of vectors for normalizing\r\n\t\r\n\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\r\n\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\r\n\t\t\t\r\n\t\t\t// shift adjacent points by unit vectors to the left\r\n\t\r\n\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\r\n\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\r\n\t\t\t\r\n\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\r\n\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\r\n\t\r\n\t\t\t// scaling factor for v_prev to intersection point\r\n\t\r\n\t\t\tvar sf = (  ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\r\n\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x    ) /\r\n\t\t\t\t\t  ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\t\r\n\t\t\t// vector from inPt to intersection point\r\n\t\r\n\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\r\n\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\r\n\t\r\n\t\t\t// Don't normalize!, otherwise sharp corners become ugly\r\n\t\t\t//  but prevent crazy spikes\r\n\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y )\r\n\t\t\tif ( v_trans_lensq <= 2 ) {\r\n\t\t\t\treturn\tnew THREE.Vector2( v_trans_x, v_trans_y );\r\n\t\t\t} else {\r\n\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} else {\t\t// handle special case of colinear edges\r\n\r\n\t\t\tvar direction_eq = false;\t\t// assumes: opposite\r\n\t\t\tif ( v_prev_x > EPSILON ) {\r\n\t\t\t\tif ( v_next_x > EPSILON ) { direction_eq = true; }\r\n\t\t\t} else {\r\n\t\t\t\tif ( v_prev_x < - EPSILON ) {\r\n\t\t\t\t\tif ( v_next_x < - EPSILON ) { direction_eq = true; }\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif ( Math.sign(v_prev_y) == Math.sign(v_next_y) ) { direction_eq = true; }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ( direction_eq ) {\r\n\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\r\n\t\t\t\tv_trans_x = - v_prev_y;\r\n\t\t\t\tv_trans_y =  v_prev_x;\r\n\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\r\n\t\t\t} else {\r\n\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\r\n\t\t\t\tv_trans_x = v_prev_x;\r\n\t\t\t\tv_trans_y = v_prev_y;\r\n\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn\tnew THREE.Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\r\n\r\n\t}\r\n\r\n\r\n\tvar contourMovements = [];\r\n\r\n\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\r\n\t\tif ( j === il ) j = 0;\r\n\t\tif ( k === il ) k = 0;\r\n\r\n\t\t//  (j)---(i)---(k)\r\n\t\t// console.log('i,j,k', i, j , k)\r\n\r\n\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\r\n\r\n\t}\r\n\r\n\tvar holesMovements = [], oneHoleMovements, verticesMovements = contourMovements.concat();\r\n\r\n\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\tahole = holes[ h ];\r\n\r\n\t\toneHoleMovements = [];\r\n\r\n\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\r\n\t\t\tif ( j === il ) j = 0;\r\n\t\t\tif ( k === il ) k = 0;\r\n\r\n\t\t\t//  (j)---(i)---(k)\r\n\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\r\n\r\n\t\t}\r\n\r\n\t\tholesMovements.push( oneHoleMovements );\r\n\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\r\n\r\n\t}\r\n\r\n\r\n\t// Loop bevelSegments, 1 for the front, 1 for the back\r\n\r\n\tfor ( b = 0; b < bevelSegments; b ++ ) {\r\n\t//for ( b = bevelSegments; b > 0; b -- ) {\r\n\r\n\t\tt = b / bevelSegments;\r\n\t\tz = bevelThickness * ( 1 - t );\r\n\r\n\t\t//z = bevelThickness * t;\r\n\t\tbs = bevelSize * ( Math.sin ( t * Math.PI / 2 ) ) ; // curved\r\n\t\t//bs = bevelSize * t ; // linear\r\n\r\n\t\t// contract shape\r\n\r\n\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\r\n\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\r\n\t\t\tv( vert.x, vert.y,  - z );\r\n\r\n\t\t}\r\n\r\n\t\t// expand holes\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\t\t\toneHoleMovements = holesMovements[ h ];\r\n\r\n\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\r\n\t\t\t\tv( vert.x, vert.y,  - z );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tbs = bevelSize;\r\n\r\n\t// Back facing vertices\r\n\r\n\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\r\n\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\tv( vert.x, vert.y, 0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\r\n\r\n\t\t\tnormal.copy( splineTube.normals[0] ).multiplyScalar(vert.x);\r\n\t\t\tbinormal.copy( splineTube.binormals[0] ).multiplyScalar(vert.y);\r\n\r\n\t\t\tposition2.copy( extrudePts[0] ).add(normal).add(binormal);\r\n\r\n\t\t\tv( position2.x, position2.y, position2.z );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Add stepped vertices...\r\n\t// Including front facing vertices\r\n\r\n\tvar s;\r\n\r\n\tfor ( s = 1; s <= steps; s ++ ) {\r\n\r\n\t\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\r\n\t\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\t\tv( vert.x, vert.y, amount / steps * s );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\r\n\r\n\t\t\t\tnormal.copy( splineTube.normals[s] ).multiplyScalar( vert.x );\r\n\t\t\t\tbinormal.copy( splineTube.binormals[s] ).multiplyScalar( vert.y );\r\n\r\n\t\t\t\tposition2.copy( extrudePts[s] ).add( normal ).add( binormal );\r\n\r\n\t\t\t\tv( position2.x, position2.y, position2.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// Add bevel segments planes\r\n\r\n\t//for ( b = 1; b <= bevelSegments; b ++ ) {\r\n\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\r\n\r\n\t\tt = b / bevelSegments;\r\n\t\tz = bevelThickness * ( 1 - t );\r\n\t\t//bs = bevelSize * ( 1-Math.sin ( ( 1 - t ) * Math.PI/2 ) );\r\n\t\tbs = bevelSize * Math.sin ( t * Math.PI / 2 ) ;\r\n\r\n\t\t// contract shape\r\n\r\n\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\r\n\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\t\t\tv( vert.x, vert.y,  amount + z );\r\n\r\n\t\t}\r\n\r\n\t\t// expand holes\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\t\t\toneHoleMovements = holesMovements[ h ];\r\n\r\n\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\r\n\t\t\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\t\t\tv( vert.x, vert.y,  amount + z );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/* Faces */\r\n\r\n\t// Top and bottom faces\r\n\r\n\tbuildLidFaces();\r\n\r\n\t// Sides faces\r\n\r\n\tbuildSideFaces();\r\n\r\n\r\n\t/////  Internal functions\r\n\r\n\tfunction buildLidFaces() {\r\n\r\n\t\tif ( bevelEnabled ) {\r\n\r\n\t\t\tvar layer = 0 ; // steps + 1\r\n\t\t\tvar offset = vlen * layer;\r\n\r\n\t\t\t// Bottom faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlayer = steps + bevelSegments * 2;\r\n\t\t\toffset = vlen * layer;\r\n\r\n\t\t\t// Top faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// Bottom faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Top faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Create faces for the z-sides of the shape\r\n\r\n\tfunction buildSideFaces() {\r\n\r\n\t\tvar layeroffset = 0;\r\n\t\tsidewalls( contour, layeroffset );\r\n\t\tlayeroffset += contour.length;\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\t\t\tsidewalls( ahole, layeroffset );\r\n\r\n\t\t\t//, true\r\n\t\t\tlayeroffset += ahole.length;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction sidewalls( contour, layeroffset ) {\r\n\r\n\t\tvar j, k;\r\n\t\ti = contour.length;\r\n\r\n\t\twhile ( -- i >= 0 ) {\r\n\r\n\t\t\tj = i;\r\n\t\t\tk = i - 1;\r\n\t\t\tif ( k < 0 ) k = contour.length - 1;\r\n\r\n\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\r\n\r\n\t\t\tvar s = 0, sl = steps  + bevelSegments * 2;\r\n\r\n\t\t\tfor ( s = 0; s < sl; s ++ ) {\r\n\r\n\t\t\t\tvar slen1 = vlen * s;\r\n\t\t\t\tvar slen2 = vlen * ( s + 1 );\r\n\r\n\t\t\t\tvar a = layeroffset + j + slen1,\r\n\t\t\t\t\tb = layeroffset + k + slen1,\r\n\t\t\t\t\tc = layeroffset + k + slen2,\r\n\t\t\t\t\td = layeroffset + j + slen2;\r\n\r\n\t\t\t\tf4( a, b, c, d, contour, s, sl, j, k );\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tfunction v( x, y, z ) {\r\n\r\n\t\tscope.vertices.push( new THREE.Vector3( x, y, z ) );\r\n\r\n\t}\r\n\r\n\tfunction f3( a, b, c ) {\r\n\r\n\t\ta += shapesOffset;\r\n\t\tb += shapesOffset;\r\n\t\tc += shapesOffset;\r\n\r\n\t\t// normal, color, material\r\n\t\tscope.faces.push( new THREE.Face3( a, b, c, null, null, material ) );\r\n\r\n\t\tvar uvs = uvgen.generateTopUV( scope, a, b, c );\r\n\r\n\t\tscope.faceVertexUvs[ 0 ].push( uvs );\r\n\r\n\t}\r\n\r\n\tfunction f4( a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2 ) {\r\n\r\n\t\ta += shapesOffset;\r\n\t\tb += shapesOffset;\r\n\t\tc += shapesOffset;\r\n\t\td += shapesOffset;\r\n\r\n\t\tscope.faces.push( new THREE.Face3( a, b, d, null, null, extrudeMaterial ) );\r\n\t\tscope.faces.push( new THREE.Face3( b, c, d, null, null, extrudeMaterial ) );\r\n\r\n\t\tvar uvs = uvgen.generateSideWallUV( scope, a, b, c, d );\r\n\r\n\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 0 ], uvs[ 1 ], uvs[ 3 ] ] );\r\n\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 1 ], uvs[ 2 ], uvs[ 3 ] ] );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ExtrudeGeometry.WorldUVGenerator = {\r\n\r\n\tgenerateTopUV: function ( geometry, indexA, indexB, indexC ) {\r\n\r\n\t\tvar vertices = geometry.vertices;\r\n\r\n\t\tvar a = vertices[ indexA ];\r\n\t\tvar b = vertices[ indexB ];\r\n\t\tvar c = vertices[ indexC ];\r\n\r\n\t\treturn [\r\n\t\t\tnew THREE.Vector2( a.x, a.y ),\r\n\t\t\tnew THREE.Vector2( b.x, b.y ),\r\n\t\t\tnew THREE.Vector2( c.x, c.y )\r\n\t\t];\r\n\r\n\t},\r\n\r\n\tgenerateSideWallUV: function ( geometry, indexA, indexB, indexC, indexD ) {\r\n\r\n\t\tvar vertices = geometry.vertices;\r\n\r\n\t\tvar a = vertices[ indexA ];\r\n\t\tvar b = vertices[ indexB ];\r\n\t\tvar c = vertices[ indexC ];\r\n\t\tvar d = vertices[ indexD ];\r\n\r\n\t\tif ( Math.abs( a.y - b.y ) < 0.01 ) {\r\n\t\t\treturn [\r\n\t\t\t\tnew THREE.Vector2( a.x, 1 - a.z ),\r\n\t\t\t\tnew THREE.Vector2( b.x, 1 - b.z ),\r\n\t\t\t\tnew THREE.Vector2( c.x, 1 - c.z ),\r\n\t\t\t\tnew THREE.Vector2( d.x, 1 - d.z )\r\n\t\t\t];\r\n\t\t} else {\r\n\t\t\treturn [\r\n\t\t\t\tnew THREE.Vector2( a.y, 1 - a.z ),\r\n\t\t\t\tnew THREE.Vector2( b.y, 1 - b.z ),\r\n\t\t\t\tnew THREE.Vector2( c.y, 1 - c.z ),\r\n\t\t\t\tnew THREE.Vector2( d.y, 1 - d.z )\r\n\t\t\t];\r\n\t\t}\r\n\t}\r\n};\r\n\r\n// File:src/extras/geometries/ShapeGeometry.js\r\n\r\n/**\r\n * @author jonobr1 / http://jonobr1.com\r\n *\r\n * Creates a one-sided polygonal geometry from a path shape. Similar to\r\n * ExtrudeGeometry.\r\n *\r\n * parameters = {\r\n *\r\n *\tcurveSegments: <int>, // number of points on the curves. NOT USED AT THE MOMENT.\r\n *\r\n *\tmaterial: <int> // material index for front and back faces\r\n *\tuvGenerator: <Object> // object that provides UV generator functions\r\n *\r\n * }\r\n **/\r\n\r\nTHREE.ShapeGeometry = function ( shapes, options ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'ShapeGeometry';\r\n\r\n\tif ( shapes instanceof Array === false ) shapes = [ shapes ];\r\n\r\n\tthis.addShapeList( shapes, options );\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n};\r\n\r\nTHREE.ShapeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.ShapeGeometry.prototype.constructor = THREE.ShapeGeometry;\r\n\r\n/**\r\n * Add an array of shapes to THREE.ShapeGeometry.\r\n */\r\nTHREE.ShapeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n\r\n\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\r\n\r\n\t\tthis.addShape( shapes[ i ], options );\r\n\r\n\t}\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n/**\r\n * Adds a shape to THREE.ShapeGeometry, based on THREE.ExtrudeGeometry.\r\n */\r\nTHREE.ShapeGeometry.prototype.addShape = function ( shape, options ) {\r\n\r\n\tif ( options === undefined ) options = {};\r\n\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\r\n\tvar material = options.material;\r\n\tvar uvgen = options.UVGenerator === undefined ? THREE.ExtrudeGeometry.WorldUVGenerator : options.UVGenerator;\r\n\r\n\t//\r\n\r\n\tvar i, l, hole;\r\n\r\n\tvar shapesOffset = this.vertices.length;\r\n\tvar shapePoints = shape.extractPoints( curveSegments );\r\n\r\n\tvar vertices = shapePoints.shape;\r\n\tvar holes = shapePoints.holes;\r\n\r\n\tvar reverse = ! THREE.Shape.Utils.isClockWise( vertices );\r\n\r\n\tif ( reverse ) {\r\n\r\n\t\tvertices = vertices.reverse();\r\n\r\n\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe...\r\n\r\n\t\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\r\n\r\n\t\t\thole = holes[ i ];\r\n\r\n\t\t\tif ( THREE.Shape.Utils.isClockWise( hole ) ) {\r\n\r\n\t\t\t\tholes[ i ] = hole.reverse();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treverse = false;\r\n\r\n\t}\r\n\r\n\tvar faces = THREE.Shape.Utils.triangulateShape( vertices, holes );\r\n\r\n\t// Vertices\r\n\r\n\tvar contour = vertices;\r\n\r\n\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\r\n\r\n\t\thole = holes[ i ];\r\n\t\tvertices = vertices.concat( hole );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar vert, vlen = vertices.length;\r\n\tvar face, flen = faces.length;\r\n\r\n\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n\t\tvert = vertices[ i ];\r\n\r\n\t\tthis.vertices.push( new THREE.Vector3( vert.x, vert.y, 0 ) );\r\n\r\n\t}\r\n\r\n\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\tface = faces[ i ];\r\n\r\n\t\tvar a = face[ 0 ] + shapesOffset;\r\n\t\tvar b = face[ 1 ] + shapesOffset;\r\n\t\tvar c = face[ 2 ] + shapesOffset;\r\n\r\n\t\tthis.faces.push( new THREE.Face3( a, b, c, null, null, material ) );\r\n\t\tthis.faceVertexUvs[ 0 ].push( uvgen.generateTopUV( this, a, b, c ) );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/geometries/LatheGeometry.js\r\n\r\n/**\r\n * @author astrodud / http://astrodud.isgreat.org/\r\n * @author zz85 / https://github.com/zz85\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\n// points - to create a closed torus, one must use a set of points \r\n//    like so: [ a, b, c, d, a ], see first is the same as last.\r\n// segments - the number of circumference segments to create\r\n// phiStart - the starting radian\r\n// phiLength - the radian (0 to 2*PI) range of the lathed section\r\n//    2*pi is a closed lathe, less than 2PI is a portion.\r\n\r\nTHREE.LatheGeometry = function ( points, segments, phiStart, phiLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'LatheGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tpoints: points,\r\n\t\tsegments: segments,\r\n\t\tphiStart: phiStart,\r\n\t\tphiLength: phiLength\r\n\t};\r\n\r\n\tsegments = segments || 12;\r\n\tphiStart = phiStart || 0;\r\n\tphiLength = phiLength || 2 * Math.PI;\r\n\r\n\tvar inversePointLength = 1.0 / ( points.length - 1 );\r\n\tvar inverseSegments = 1.0 / segments;\r\n\r\n\tfor ( var i = 0, il = segments; i <= il; i ++ ) {\r\n\r\n\t\tvar phi = phiStart + i * inverseSegments * phiLength;\r\n\r\n\t\tvar c = Math.cos( phi ),\r\n\t\t\ts = Math.sin( phi );\r\n\r\n\t\tfor ( var j = 0, jl = points.length; j < jl; j ++ ) {\r\n\r\n\t\t\tvar pt = points[ j ];\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\r\n\t\t\tvertex.x = c * pt.x - s * pt.y;\r\n\t\t\tvertex.y = s * pt.x + c * pt.y;\r\n\t\t\tvertex.z = pt.z;\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar np = points.length;\r\n\r\n\tfor ( var i = 0, il = segments; i < il; i ++ ) {\r\n\r\n\t\tfor ( var j = 0, jl = points.length - 1; j < jl; j ++ ) {\r\n\r\n\t\t\tvar base = j + np * i;\r\n\t\t\tvar a = base;\r\n\t\t\tvar b = base + np;\r\n\t\t\tvar c = base + 1 + np;\r\n\t\t\tvar d = base + 1;\r\n\r\n\t\t\tvar u0 = i * inverseSegments;\r\n\t\t\tvar v0 = j * inversePointLength;\r\n\t\t\tvar u1 = u0 + inverseSegments;\r\n\t\t\tvar v1 = v0 + inversePointLength;\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [\r\n\r\n\t\t\t\tnew THREE.Vector2( u0, v0 ),\r\n\t\t\t\tnew THREE.Vector2( u1, v0 ),\r\n\t\t\t\tnew THREE.Vector2( u0, v1 )\r\n\r\n\t\t\t] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [\r\n\r\n\t\t\t\tnew THREE.Vector2( u1, v0 ),\r\n\t\t\t\tnew THREE.Vector2( u1, v1 ),\r\n\t\t\t\tnew THREE.Vector2( u0, v1 )\r\n\r\n\t\t\t] );\r\n\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.mergeVertices();\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n};\r\n\r\nTHREE.LatheGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.LatheGeometry.prototype.constructor = THREE.LatheGeometry;\r\n\r\n// File:src/extras/geometries/PlaneGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n */\r\n\r\nTHREE.PlaneGeometry = function ( width, height, widthSegments, heightSegments ) {\r\n\r\n\tconsole.info( 'THREE.PlaneGeometry: Consider using THREE.PlaneBufferGeometry for lower memory footprint.' );\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'PlaneGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments\r\n\t};\r\n\r\n\tthis.fromBufferGeometry( new THREE.PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\r\n\r\n};\r\n\r\nTHREE.PlaneGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.PlaneGeometry.prototype.constructor = THREE.PlaneGeometry;\r\n\r\n// File:src/extras/geometries/PlaneBufferGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n */\r\n\r\nTHREE.PlaneBufferGeometry = function ( width, height, widthSegments, heightSegments ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'PlaneBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments\r\n\t};\r\n\r\n\tvar width_half = width / 2;\r\n\tvar height_half = height / 2;\r\n\r\n\tvar gridX = widthSegments || 1;\r\n\tvar gridY = heightSegments || 1;\r\n\r\n\tvar gridX1 = gridX + 1;\r\n\tvar gridY1 = gridY + 1;\r\n\r\n\tvar segment_width = width / gridX;\r\n\tvar segment_height = height / gridY;\r\n\r\n\tvar vertices = new Float32Array( gridX1 * gridY1 * 3 );\r\n\tvar normals = new Float32Array( gridX1 * gridY1 * 3 );\r\n\tvar uvs = new Float32Array( gridX1 * gridY1 * 2 );\r\n\r\n\tvar offset = 0;\r\n\tvar offset2 = 0;\r\n\r\n\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\r\n\r\n\t\tvar y = iy * segment_height - height_half;\r\n\r\n\t\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\r\n\r\n\t\t\tvar x = ix * segment_width - width_half;\r\n\r\n\t\t\tvertices[ offset     ] = x;\r\n\t\t\tvertices[ offset + 1 ] = - y;\r\n\r\n\t\t\tnormals[ offset + 2 ] = 1;\r\n\r\n\t\t\tuvs[ offset2     ] = ix / gridX;\r\n\t\t\tuvs[ offset2 + 1 ] = 1 - ( iy / gridY );\r\n\r\n\t\t\toffset += 3;\r\n\t\t\toffset2 += 2;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\toffset = 0;\r\n\r\n\tvar indices = new ( ( vertices.length / 3 ) > 65535 ? Uint32Array : Uint16Array )( gridX * gridY * 6 );\r\n\r\n\tfor ( var iy = 0; iy < gridY; iy ++ ) {\r\n\r\n\t\tfor ( var ix = 0; ix < gridX; ix ++ ) {\r\n\r\n\t\t\tvar a = ix + gridX1 * iy;\r\n\t\t\tvar b = ix + gridX1 * ( iy + 1 );\r\n\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\r\n\r\n\t\t\tindices[ offset     ] = a;\r\n\t\t\tindices[ offset + 1 ] = b;\r\n\t\t\tindices[ offset + 2 ] = d;\r\n\r\n\t\t\tindices[ offset + 3 ] = b;\r\n\t\t\tindices[ offset + 4 ] = c;\r\n\t\t\tindices[ offset + 5 ] = d;\r\n\r\n\t\t\toffset += 6;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.addAttribute( 'index', new THREE.BufferAttribute( indices, 1 ) );\r\n\tthis.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\r\n};\r\n\r\nTHREE.PlaneBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.PlaneBufferGeometry.prototype.constructor = THREE.PlaneBufferGeometry;\r\n\r\n// File:src/extras/geometries/RingGeometry.js\r\n\r\n/**\r\n * @author Kaleb Murphy\r\n */\r\n\r\nTHREE.RingGeometry = function ( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'RingGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tinnerRadius: innerRadius,\r\n\t\touterRadius: outerRadius,\r\n\t\tthetaSegments: thetaSegments,\r\n\t\tphiSegments: phiSegments,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tinnerRadius = innerRadius || 0;\r\n\touterRadius = outerRadius || 50;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\r\n\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\r\n\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 8;\r\n\r\n\tvar i, o, uvs = [], radius = innerRadius, radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\r\n\r\n\tfor ( i = 0; i < phiSegments + 1; i ++ ) { // concentric circles inside ring\r\n\r\n\t\tfor ( o = 0; o < thetaSegments + 1; o ++ ) { // number of segments per circle\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\tvar segment = thetaStart + o / thetaSegments * thetaLength;\r\n\t\t\tvertex.x = radius * Math.cos( segment );\r\n\t\t\tvertex.y = radius * Math.sin( segment );\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\t\t\tuvs.push( new THREE.Vector2( ( vertex.x / outerRadius + 1 ) / 2, ( vertex.y / outerRadius + 1 ) / 2 ) );\r\n\t\t}\r\n\r\n\t\tradius += radiusStep;\r\n\r\n\t}\r\n\r\n\tvar n = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\tfor ( i = 0; i < phiSegments; i ++ ) { // concentric circles inside ring\r\n\r\n\t\tvar thetaSegment = i * (thetaSegments + 1);\r\n\r\n\t\tfor ( o = 0; o < thetaSegments ; o ++ ) { // number of segments per circle\r\n\r\n\t\t\tvar segment = o + thetaSegment;\r\n\r\n\t\t\tvar v1 = segment;\r\n\t\t\tvar v2 = segment + thetaSegments + 1;\r\n\t\t\tvar v3 = segment + thetaSegments + 2;\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ]);\r\n\r\n\t\t\tv1 = segment;\r\n\t\t\tv2 = segment + thetaSegments + 2;\r\n\t\t\tv3 = segment + 1;\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ]);\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.RingGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.RingGeometry.prototype.constructor = THREE.RingGeometry;\r\n\r\n\r\n// File:src/extras/geometries/SphereGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.SphereGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'SphereGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\tphiStart: phiStart,\r\n\t\tphiLength: phiLength,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength \r\n\t};\r\n\r\n\tradius = radius || 50;\r\n\r\n\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\r\n\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\r\n\r\n\tphiStart = phiStart !== undefined ? phiStart : 0;\r\n\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\r\n\r\n\tvar x, y, vertices = [], uvs = [];\r\n\r\n\tfor ( y = 0; y <= heightSegments; y ++ ) {\r\n\r\n\t\tvar verticesRow = [];\r\n\t\tvar uvsRow = [];\r\n\r\n\t\tfor ( x = 0; x <= widthSegments; x ++ ) {\r\n\r\n\t\t\tvar u = x / widthSegments;\r\n\t\t\tvar v = y / heightSegments;\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\r\n\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\r\n\t\t\tverticesRow.push( this.vertices.length - 1 );\r\n\t\t\tuvsRow.push( new THREE.Vector2( u, 1 - v ) );\r\n\r\n\t\t}\r\n\r\n\t\tvertices.push( verticesRow );\r\n\t\tuvs.push( uvsRow );\r\n\r\n\t}\r\n\r\n\tfor ( y = 0; y < heightSegments; y ++ ) {\r\n\r\n\t\tfor ( x = 0; x < widthSegments; x ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ y ][ x + 1 ];\r\n\t\t\tvar v2 = vertices[ y ][ x ];\r\n\t\t\tvar v3 = vertices[ y + 1 ][ x ];\r\n\t\t\tvar v4 = vertices[ y + 1 ][ x + 1 ];\r\n\r\n\t\t\tvar n1 = this.vertices[ v1 ].clone().normalize();\r\n\t\t\tvar n2 = this.vertices[ v2 ].clone().normalize();\r\n\t\t\tvar n3 = this.vertices[ v3 ].clone().normalize();\r\n\t\t\tvar n4 = this.vertices[ v4 ].clone().normalize();\r\n\r\n\t\t\tvar uv1 = uvs[ y ][ x + 1 ].clone();\r\n\t\t\tvar uv2 = uvs[ y ][ x ].clone();\r\n\t\t\tvar uv3 = uvs[ y + 1 ][ x ].clone();\r\n\t\t\tvar uv4 = uvs[ y + 1 ][ x + 1 ].clone();\r\n\r\n\t\t\tif ( Math.abs( this.vertices[ v1 ].y ) === radius ) {\r\n\r\n\t\t\t\tuv1.x = ( uv1.x + uv2.x ) / 2;\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v3, v4, [ n1, n3, n4 ] ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv3, uv4 ] );\r\n\r\n\t\t\t} else if ( Math.abs( this.vertices[ v3 ].y ) === radius ) {\r\n\r\n\t\t\t\tuv3.x = ( uv3.x + uv4.x ) / 2;\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ] ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v4, [ n1, n2, n4 ] ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv4 ] );\r\n\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v2, v3, v4, [ n2.clone(), n3, n4.clone() ] ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv2.clone(), uv3, uv4.clone() ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.SphereGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.SphereGeometry.prototype.constructor = THREE.SphereGeometry;\r\n\r\n// File:src/extras/geometries/TextGeometry.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * For creating 3D text geometry in three.js\r\n *\r\n * Text = 3D Text\r\n *\r\n * parameters = {\r\n *  size: \t\t\t<float>, \t// size of the text\r\n *  height: \t\t<float>, \t// thickness to extrude text\r\n *  curveSegments: \t<int>,\t\t// number of points on the curves\r\n *\r\n *  font: \t\t\t<string>,\t\t// font name\r\n *  weight: \t\t<string>,\t\t// font weight (normal, bold)\r\n *  style: \t\t\t<string>,\t\t// font style  (normal, italics)\r\n *\r\n *  bevelEnabled:\t<bool>,\t\t\t// turn on bevel\r\n *  bevelThickness: <float>, \t\t// how deep into text bevel goes\r\n *  bevelSize:\t\t<float>, \t\t// how far from text outline is bevel\r\n *  }\r\n *\r\n */\r\n\r\n/*\tUsage Examples\r\n\r\n\t// TextGeometry wrapper\r\n\r\n\tvar text3d = new TextGeometry( text, options );\r\n\r\n\t// Complete manner\r\n\r\n\tvar textShapes = THREE.FontUtils.generateShapes( text, options );\r\n\tvar text3d = new ExtrudeGeometry( textShapes, options );\r\n\r\n*/\r\n\r\n\r\nTHREE.TextGeometry = function ( text, parameters ) {\r\n\r\n\tparameters = parameters || {};\r\n\r\n\tvar textShapes = THREE.FontUtils.generateShapes( text, parameters );\r\n\r\n\t// translate parameters to ExtrudeGeometry API\r\n\r\n\tparameters.amount = parameters.height !== undefined ? parameters.height : 50;\r\n\r\n\t// defaults\r\n\r\n\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\r\n\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\r\n\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\r\n\r\n\tTHREE.ExtrudeGeometry.call( this, textShapes, parameters );\r\n\r\n\tthis.type = 'TextGeometry';\r\n\r\n};\r\n\r\nTHREE.TextGeometry.prototype = Object.create( THREE.ExtrudeGeometry.prototype );\r\nTHREE.TextGeometry.prototype.constructor = THREE.TextGeometry;\r\n\r\n// File:src/extras/geometries/TorusGeometry.js\r\n\r\n/**\r\n * @author oosmoxiecode\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3DLite/src/away3dlite/primitives/Torus.as?r=2888\r\n */\r\n\r\nTHREE.TorusGeometry = function ( radius, tube, radialSegments, tubularSegments, arc ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'TorusGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\ttube: tube,\r\n\t\tradialSegments: radialSegments,\r\n\t\ttubularSegments: tubularSegments,\r\n\t\tarc: arc\r\n\t};\r\n\r\n\tradius = radius || 100;\r\n\ttube = tube || 40;\r\n\tradialSegments = radialSegments || 8;\r\n\ttubularSegments = tubularSegments || 6;\r\n\tarc = arc || Math.PI * 2;\r\n\r\n\tvar center = new THREE.Vector3(), uvs = [], normals = [];\r\n\r\n\tfor ( var j = 0; j <= radialSegments; j ++ ) {\r\n\r\n\t\tfor ( var i = 0; i <= tubularSegments; i ++ ) {\r\n\r\n\t\t\tvar u = i / tubularSegments * arc;\r\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\r\n\r\n\t\t\tcenter.x = radius * Math.cos( u );\r\n\t\t\tcenter.y = radius * Math.sin( u );\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\r\n\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\r\n\t\t\tvertex.z = tube * Math.sin( v );\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\r\n\t\t\tuvs.push( new THREE.Vector2( i / tubularSegments, j / radialSegments ) );\r\n\t\t\tnormals.push( vertex.clone().sub( center ).normalize() );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfor ( var j = 1; j <= radialSegments; j ++ ) {\r\n\r\n\t\tfor ( var i = 1; i <= tubularSegments; i ++ ) {\r\n\r\n\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\r\n\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\r\n\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\r\n\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\r\n\r\n\t\t\tvar face = new THREE.Face3( a, b, d, [ normals[ a ].clone(), normals[ b ].clone(), normals[ d ].clone() ] );\r\n\t\t\tthis.faces.push( face );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ a ].clone(), uvs[ b ].clone(), uvs[ d ].clone() ] );\r\n\r\n\t\t\tface = new THREE.Face3( b, c, d, [ normals[ b ].clone(), normals[ c ].clone(), normals[ d ].clone() ] );\r\n\t\t\tthis.faces.push( face );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ b ].clone(), uvs[ c ].clone(), uvs[ d ].clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n};\r\n\r\nTHREE.TorusGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.TorusGeometry.prototype.constructor = THREE.TorusGeometry;\r\n\r\n// File:src/extras/geometries/TorusKnotGeometry.js\r\n\r\n/**\r\n * @author oosmoxiecode\r\n * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3D/src/away3d/primitives/TorusKnot.as?spec=svn2473&r=2473\r\n */\r\n\r\nTHREE.TorusKnotGeometry = function ( radius, tube, radialSegments, tubularSegments, p, q, heightScale ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'TorusKnotGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\ttube: tube,\r\n\t\tradialSegments: radialSegments,\r\n\t\ttubularSegments: tubularSegments,\r\n\t\tp: p,\r\n\t\tq: q,\r\n\t\theightScale: heightScale\r\n\t};\r\n\r\n\tradius = radius || 100;\r\n\ttube = tube || 40;\r\n\tradialSegments = radialSegments || 64;\r\n\ttubularSegments = tubularSegments || 8;\r\n\tp = p || 2;\r\n\tq = q || 3;\r\n\theightScale = heightScale || 1;\r\n\t\r\n\tvar grid = new Array( radialSegments );\r\n\tvar tang = new THREE.Vector3();\r\n\tvar n = new THREE.Vector3();\r\n\tvar bitan = new THREE.Vector3();\r\n\r\n\tfor ( var i = 0; i < radialSegments; ++ i ) {\r\n\r\n\t\tgrid[ i ] = new Array( tubularSegments );\r\n\t\tvar u = i / radialSegments * 2 * p * Math.PI;\r\n\t\tvar p1 = getPos( u, q, p, radius, heightScale );\r\n\t\tvar p2 = getPos( u + 0.01, q, p, radius, heightScale );\r\n\t\ttang.subVectors( p2, p1 );\r\n\t\tn.addVectors( p2, p1 );\r\n\r\n\t\tbitan.crossVectors( tang, n );\r\n\t\tn.crossVectors( bitan, tang );\r\n\t\tbitan.normalize();\r\n\t\tn.normalize();\r\n\r\n\t\tfor ( var j = 0; j < tubularSegments; ++ j ) {\r\n\r\n\t\t\tvar v = j / tubularSegments * 2 * Math.PI;\r\n\t\t\tvar cx = - tube * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\r\n\t\t\tvar cy = tube * Math.sin( v );\r\n\r\n\t\t\tvar pos = new THREE.Vector3();\r\n\t\t\tpos.x = p1.x + cx * n.x + cy * bitan.x;\r\n\t\t\tpos.y = p1.y + cx * n.y + cy * bitan.y;\r\n\t\t\tpos.z = p1.z + cx * n.z + cy * bitan.z;\r\n\r\n\t\t\tgrid[ i ][ j ] = this.vertices.push( pos ) - 1;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfor ( var i = 0; i < radialSegments; ++ i ) {\r\n\r\n\t\tfor ( var j = 0; j < tubularSegments; ++ j ) {\r\n\r\n\t\t\tvar ip = ( i + 1 ) % radialSegments;\r\n\t\t\tvar jp = ( j + 1 ) % tubularSegments;\r\n\r\n\t\t\tvar a = grid[ i ][ j ];\r\n\t\t\tvar b = grid[ ip ][ j ];\r\n\t\t\tvar c = grid[ ip ][ jp ];\r\n\t\t\tvar d = grid[ i ][ jp ];\r\n\r\n\t\t\tvar uva = new THREE.Vector2( i / radialSegments, j / tubularSegments );\r\n\t\t\tvar uvb = new THREE.Vector2( ( i + 1 ) / radialSegments, j / tubularSegments );\r\n\t\t\tvar uvc = new THREE.Vector2( ( i + 1 ) / radialSegments, ( j + 1 ) / tubularSegments );\r\n\t\t\tvar uvd = new THREE.Vector2( i / radialSegments, ( j + 1 ) / tubularSegments );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n\tfunction getPos( u, in_q, in_p, radius, heightScale ) {\r\n\r\n\t\tvar cu = Math.cos( u );\r\n\t\tvar su = Math.sin( u );\r\n\t\tvar quOverP = in_q / in_p * u;\r\n\t\tvar cs = Math.cos( quOverP );\r\n\r\n\t\tvar tx = radius * ( 2 + cs ) * 0.5 * cu;\r\n\t\tvar ty = radius * ( 2 + cs ) * su * 0.5;\r\n\t\tvar tz = heightScale * radius * Math.sin( quOverP ) * 0.5;\r\n\r\n\t\treturn new THREE.Vector3( tx, ty, tz );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.TorusKnotGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.TorusKnotGeometry.prototype.constructor = THREE.TorusKnotGeometry;\r\n\r\n// File:src/extras/geometries/TubeGeometry.js\r\n\r\n/**\r\n * @author WestLangley / https://github.com/WestLangley\r\n * @author zz85 / https://github.com/zz85\r\n * @author miningold / https://github.com/miningold\r\n * @author jonobr1 / https://github.com/jonobr1\r\n *\r\n * Modified from the TorusKnotGeometry by @oosmoxiecode\r\n *\r\n * Creates a tube which extrudes along a 3d spline\r\n *\r\n * Uses parallel transport frames as described in\r\n * http://www.cs.indiana.edu/pub/techreports/TR425.pdf\r\n */\r\n\r\nTHREE.TubeGeometry = function ( path, segments, radius, radialSegments, closed, taper ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'TubeGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tpath: path,\r\n\t\tsegments: segments,\r\n\t\tradius: radius,\r\n\t\tradialSegments: radialSegments,\r\n\t\tclosed: closed\r\n\t};\r\n\r\n\tsegments = segments || 64;\r\n\tradius = radius || 1;\r\n\tradialSegments = radialSegments || 8;\r\n\tclosed = closed || false;\r\n\ttaper = taper || THREE.TubeGeometry.NoTaper;\r\n\r\n\tvar grid = [];\r\n\r\n\tvar scope = this,\r\n\r\n\t\ttangent,\r\n\t\tnormal,\r\n\t\tbinormal,\r\n\r\n\t\tnumpoints = segments + 1,\r\n\r\n\t\tu, v, r,\r\n\r\n\t\tcx, cy,\r\n\t\tpos, pos2 = new THREE.Vector3(),\r\n\t\ti, j,\r\n\t\tip, jp,\r\n\t\ta, b, c, d,\r\n\t\tuva, uvb, uvc, uvd;\r\n\r\n\tvar frames = new THREE.TubeGeometry.FrenetFrames( path, segments, closed ),\r\n\t\ttangents = frames.tangents,\r\n\t\tnormals = frames.normals,\r\n\t\tbinormals = frames.binormals;\r\n\r\n\t// proxy internals\r\n\tthis.tangents = tangents;\r\n\tthis.normals = normals;\r\n\tthis.binormals = binormals;\r\n\r\n\tfunction vert( x, y, z ) {\r\n\r\n\t\treturn scope.vertices.push( new THREE.Vector3( x, y, z ) ) - 1;\r\n\r\n\t}\r\n\r\n\t// consruct the grid\r\n\r\n\tfor ( i = 0; i < numpoints; i ++ ) {\r\n\r\n\t\tgrid[ i ] = [];\r\n\r\n\t\tu = i / ( numpoints - 1 );\r\n\r\n\t\tpos = path.getPointAt( u );\r\n\r\n\t\ttangent = tangents[ i ];\r\n\t\tnormal = normals[ i ];\r\n\t\tbinormal = binormals[ i ];\r\n\r\n\t\tr = radius * taper( u );\r\n\r\n\t\tfor ( j = 0; j < radialSegments; j ++ ) {\r\n\r\n\t\t\tv = j / radialSegments * 2 * Math.PI;\r\n\r\n\t\t\tcx = - r * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\r\n\t\t\tcy = r * Math.sin( v );\r\n\r\n\t\t\tpos2.copy( pos );\r\n\t\t\tpos2.x += cx * normal.x + cy * binormal.x;\r\n\t\t\tpos2.y += cx * normal.y + cy * binormal.y;\r\n\t\t\tpos2.z += cx * normal.z + cy * binormal.z;\r\n\r\n\t\t\tgrid[ i ][ j ] = vert( pos2.x, pos2.y, pos2.z );\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t// construct the mesh\r\n\r\n\tfor ( i = 0; i < segments; i ++ ) {\r\n\r\n\t\tfor ( j = 0; j < radialSegments; j ++ ) {\r\n\r\n\t\t\tip = ( closed ) ? (i + 1) % segments : i + 1;\r\n\t\t\tjp = (j + 1) % radialSegments;\r\n\r\n\t\t\ta = grid[ i ][ j ];\t\t// *** NOT NECESSARILY PLANAR ! ***\r\n\t\t\tb = grid[ ip ][ j ];\r\n\t\t\tc = grid[ ip ][ jp ];\r\n\t\t\td = grid[ i ][ jp ];\r\n\r\n\t\t\tuva = new THREE.Vector2( i / segments, j / radialSegments );\r\n\t\t\tuvb = new THREE.Vector2( ( i + 1 ) / segments, j / radialSegments );\r\n\t\t\tuvc = new THREE.Vector2( ( i + 1 ) / segments, ( j + 1 ) / radialSegments );\r\n\t\t\tuvd = new THREE.Vector2( i / segments, ( j + 1 ) / radialSegments );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n};\r\n\r\nTHREE.TubeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.TubeGeometry.prototype.constructor = THREE.TubeGeometry;\r\n\r\nTHREE.TubeGeometry.NoTaper = function ( u ) {\r\n\r\n\treturn 1;\r\n\r\n};\r\n\r\nTHREE.TubeGeometry.SinusoidalTaper = function ( u ) {\r\n\r\n\treturn Math.sin( Math.PI * u );\r\n\r\n};\r\n\r\n// For computing of Frenet frames, exposing the tangents, normals and binormals the spline\r\nTHREE.TubeGeometry.FrenetFrames = function ( path, segments, closed ) {\r\n\r\n\tvar\tnormal = new THREE.Vector3(),\r\n\r\n\t\ttangents = [],\r\n\t\tnormals = [],\r\n\t\tbinormals = [],\r\n\r\n\t\tvec = new THREE.Vector3(),\r\n\t\tmat = new THREE.Matrix4(),\r\n\r\n\t\tnumpoints = segments + 1,\r\n\t\ttheta,\r\n\t\tepsilon = 0.0001,\r\n\t\tsmallest,\r\n\r\n\t\ttx, ty, tz,\r\n\t\ti, u;\r\n\r\n\r\n\t// expose internals\r\n\tthis.tangents = tangents;\r\n\tthis.normals = normals;\r\n\tthis.binormals = binormals;\r\n\r\n\t// compute the tangent vectors for each segment on the path\r\n\r\n\tfor ( i = 0; i < numpoints; i ++ ) {\r\n\r\n\t\tu = i / ( numpoints - 1 );\r\n\r\n\t\ttangents[ i ] = path.getTangentAt( u );\r\n\t\ttangents[ i ].normalize();\r\n\r\n\t}\r\n\r\n\tinitialNormal3();\r\n\r\n\t/*\r\n\tfunction initialNormal1(lastBinormal) {\r\n\t\t// fixed start binormal. Has dangers of 0 vectors\r\n\t\tnormals[ 0 ] = new THREE.Vector3();\r\n\t\tbinormals[ 0 ] = new THREE.Vector3();\r\n\t\tif (lastBinormal===undefined) lastBinormal = new THREE.Vector3( 0, 0, 1 );\r\n\t\tnormals[ 0 ].crossVectors( lastBinormal, tangents[ 0 ] ).normalize();\r\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n\t}\r\n\r\n\tfunction initialNormal2() {\r\n\r\n\t\t// This uses the Frenet-Serret formula for deriving binormal\r\n\t\tvar t2 = path.getTangentAt( epsilon );\r\n\r\n\t\tnormals[ 0 ] = new THREE.Vector3().subVectors( t2, tangents[ 0 ] ).normalize();\r\n\t\tbinormals[ 0 ] = new THREE.Vector3().crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\r\n\t\tnormals[ 0 ].crossVectors( binormals[ 0 ], tangents[ 0 ] ).normalize(); // last binormal x tangent\r\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n\r\n\t}\r\n\t*/\r\n\r\n\tfunction initialNormal3() {\r\n\t\t// select an initial normal vector perpenicular to the first tangent vector,\r\n\t\t// and in the direction of the smallest tangent xyz component\r\n\r\n\t\tnormals[ 0 ] = new THREE.Vector3();\r\n\t\tbinormals[ 0 ] = new THREE.Vector3();\r\n\t\tsmallest = Number.MAX_VALUE;\r\n\t\ttx = Math.abs( tangents[ 0 ].x );\r\n\t\tty = Math.abs( tangents[ 0 ].y );\r\n\t\ttz = Math.abs( tangents[ 0 ].z );\r\n\r\n\t\tif ( tx <= smallest ) {\r\n\t\t\tsmallest = tx;\r\n\t\t\tnormal.set( 1, 0, 0 );\r\n\t\t}\r\n\r\n\t\tif ( ty <= smallest ) {\r\n\t\t\tsmallest = ty;\r\n\t\t\tnormal.set( 0, 1, 0 );\r\n\t\t}\r\n\r\n\t\tif ( tz <= smallest ) {\r\n\t\t\tnormal.set( 0, 0, 1 );\r\n\t\t}\r\n\r\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\r\n\r\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\r\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\t}\r\n\r\n\r\n\t// compute the slowly-varying normal and binormal vectors for each segment on the path\r\n\r\n\tfor ( i = 1; i < numpoints; i ++ ) {\r\n\r\n\t\tnormals[ i ] = normals[ i - 1 ].clone();\r\n\r\n\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\r\n\r\n\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\r\n\r\n\t\tif ( vec.length() > epsilon ) {\r\n\r\n\t\t\tvec.normalize();\r\n\r\n\t\t\ttheta = Math.acos( THREE.Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\r\n\r\n\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\r\n\r\n\t\t}\r\n\r\n\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\r\n\t}\r\n\r\n\r\n\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\r\n\r\n\tif ( closed ) {\r\n\r\n\t\ttheta = Math.acos( THREE.Math.clamp( normals[ 0 ].dot( normals[ numpoints - 1 ] ), - 1, 1 ) );\r\n\t\ttheta /= ( numpoints - 1 );\r\n\r\n\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ numpoints - 1 ] ) ) > 0 ) {\r\n\r\n\t\t\ttheta = - theta;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( i = 1; i < numpoints; i ++ ) {\r\n\r\n\t\t\t// twist a little...\r\n\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\r\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n};\r\n\r\n// File:src/extras/geometries/PolyhedronGeometry.js\r\n\r\n/**\r\n * @author clockworkgeek / https://github.com/clockworkgeek\r\n * @author timothypratley / https://github.com/timothypratley\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.PolyhedronGeometry = function ( vertices, indices, radius, detail ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'PolyhedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tvertices: vertices,\r\n\t\tindices: indices,\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n\tradius = radius || 1;\r\n\tdetail = detail || 0;\r\n\r\n\tvar that = this;\r\n\r\n\tfor ( var i = 0, l = vertices.length; i < l; i += 3 ) {\r\n\r\n\t\tprepare( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\r\n\r\n\t}\r\n\r\n\tvar p = this.vertices;\r\n\r\n\tvar faces = [];\r\n\r\n\tfor ( var i = 0, j = 0, l = indices.length; i < l; i += 3, j ++ ) {\r\n\r\n\t\tvar v1 = p[ indices[ i     ] ];\r\n\t\tvar v2 = p[ indices[ i + 1 ] ];\r\n\t\tvar v3 = p[ indices[ i + 2 ] ];\r\n\r\n\t\tfaces[ j ] = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ] );\r\n\r\n\t}\r\n\r\n\tvar centroid = new THREE.Vector3();\r\n\r\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\tsubdivide( faces[ i ], detail );\r\n\r\n\t}\r\n\r\n\r\n\t// Handle case when face straddles the seam\r\n\r\n\tfor ( var i = 0, l = this.faceVertexUvs[ 0 ].length; i < l; i ++ ) {\r\n\r\n\t\tvar uvs = this.faceVertexUvs[ 0 ][ i ];\r\n\r\n\t\tvar x0 = uvs[ 0 ].x;\r\n\t\tvar x1 = uvs[ 1 ].x;\r\n\t\tvar x2 = uvs[ 2 ].x;\r\n\r\n\t\tvar max = Math.max( x0, Math.max( x1, x2 ) );\r\n\t\tvar min = Math.min( x0, Math.min( x1, x2 ) );\r\n\r\n\t\tif ( max > 0.9 && min < 0.1 ) { // 0.9 is somewhat arbitrary\r\n\r\n\t\t\tif ( x0 < 0.2 ) uvs[ 0 ].x += 1;\r\n\t\t\tif ( x1 < 0.2 ) uvs[ 1 ].x += 1;\r\n\t\t\tif ( x2 < 0.2 ) uvs[ 2 ].x += 1;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// Apply radius\r\n\r\n\tfor ( var i = 0, l = this.vertices.length; i < l; i ++ ) {\r\n\r\n\t\tthis.vertices[ i ].multiplyScalar( radius );\r\n\r\n\t}\r\n\r\n\r\n\t// Merge vertices\r\n\r\n\tthis.mergeVertices();\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n\r\n\t// Project vector onto sphere's surface\r\n\r\n\tfunction prepare( vector ) {\r\n\r\n\t\tvar vertex = vector.normalize().clone();\r\n\t\tvertex.index = that.vertices.push( vertex ) - 1;\r\n\r\n\t\t// Texture coords are equivalent to map coords, calculate angle and convert to fraction of a circle.\r\n\r\n\t\tvar u = azimuth( vector ) / 2 / Math.PI + 0.5;\r\n\t\tvar v = inclination( vector ) / Math.PI + 0.5;\r\n\t\tvertex.uv = new THREE.Vector2( u, 1 - v );\r\n\r\n\t\treturn vertex;\r\n\r\n\t}\r\n\r\n\r\n\t// Approximate a curved face with recursively sub-divided triangles.\r\n\r\n\tfunction make( v1, v2, v3 ) {\r\n\r\n\t\tvar face = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ] );\r\n\t\tthat.faces.push( face );\r\n\r\n\t\tcentroid.copy( v1 ).add( v2 ).add( v3 ).divideScalar( 3 );\r\n\r\n\t\tvar azi = azimuth( centroid );\r\n\r\n\t\tthat.faceVertexUvs[ 0 ].push( [\r\n\t\t\tcorrectUV( v1.uv, v1, azi ),\r\n\t\t\tcorrectUV( v2.uv, v2, azi ),\r\n\t\t\tcorrectUV( v3.uv, v3, azi )\r\n\t\t] );\r\n\r\n\t}\r\n\r\n\r\n\t// Analytically subdivide a face to the required detail level.\r\n\r\n\tfunction subdivide( face, detail ) {\r\n\r\n\t\tvar cols = Math.pow(2, detail);\r\n\t\tvar a = prepare( that.vertices[ face.a ] );\r\n\t\tvar b = prepare( that.vertices[ face.b ] );\r\n\t\tvar c = prepare( that.vertices[ face.c ] );\r\n\t\tvar v = [];\r\n\r\n\t\t// Construct all of the vertices for this subdivision.\r\n\r\n\t\tfor ( var i = 0 ; i <= cols; i ++ ) {\r\n\r\n\t\t\tv[ i ] = [];\r\n\r\n\t\t\tvar aj = prepare( a.clone().lerp( c, i / cols ) );\r\n\t\t\tvar bj = prepare( b.clone().lerp( c, i / cols ) );\r\n\t\t\tvar rows = cols - i;\r\n\r\n\t\t\tfor ( var j = 0; j <= rows; j ++) {\r\n\r\n\t\t\t\tif ( j == 0 && i == cols ) {\r\n\r\n\t\t\t\t\tv[ i ][ j ] = aj;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv[ i ][ j ] = prepare( aj.clone().lerp( bj, j / rows ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Construct all of the faces.\r\n\r\n\t\tfor ( var i = 0; i < cols ; i ++ ) {\r\n\r\n\t\t\tfor ( var j = 0; j < 2 * (cols - i) - 1; j ++ ) {\r\n\r\n\t\t\t\tvar k = Math.floor( j / 2 );\r\n\r\n\t\t\t\tif ( j % 2 == 0 ) {\r\n\r\n\t\t\t\t\tmake(\r\n\t\t\t\t\t\tv[ i ][ k + 1],\r\n\t\t\t\t\t\tv[ i + 1 ][ k ],\r\n\t\t\t\t\t\tv[ i ][ k ]\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tmake(\r\n\t\t\t\t\t\tv[ i ][ k + 1 ],\r\n\t\t\t\t\t\tv[ i + 1][ k + 1],\r\n\t\t\t\t\t\tv[ i + 1 ][ k ]\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// Angle around the Y axis, counter-clockwise when looking from above.\r\n\r\n\tfunction azimuth( vector ) {\r\n\r\n\t\treturn Math.atan2( vector.z, - vector.x );\r\n\r\n\t}\r\n\r\n\r\n\t// Angle above the XZ plane.\r\n\r\n\tfunction inclination( vector ) {\r\n\r\n\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\r\n\r\n\t}\r\n\r\n\r\n\t// Texture fixing helper. Spheres have some odd behaviours.\r\n\r\n\tfunction correctUV( uv, vector, azimuth ) {\r\n\r\n\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) uv = new THREE.Vector2( uv.x - 1, uv.y );\r\n\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) uv = new THREE.Vector2( azimuth / 2 / Math.PI + 0.5, uv.y );\r\n\t\treturn uv.clone();\r\n\r\n\t}\r\n\r\n\r\n};\r\n\r\nTHREE.PolyhedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.PolyhedronGeometry.prototype.constructor = THREE.PolyhedronGeometry;\r\n\r\n// File:src/extras/geometries/DodecahedronGeometry.js\r\n\r\n/**\r\n * @author Abe Pazos / https://hamoid.com\r\n */\r\n\r\nTHREE.DodecahedronGeometry = function ( radius, detail ) {\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\tvar r = 1 / t;\r\n\r\n\tvar vertices = [\r\n\r\n\t\t// (±1, ±1, ±1)\r\n\t\t-1, -1, -1,    -1, -1,  1,\r\n\t\t-1,  1, -1,    -1,  1,  1,\r\n\t\t 1, -1, -1,     1, -1,  1,\r\n\t\t 1,  1, -1,     1,  1,  1,\r\n\r\n\t\t// (0, ±1/φ, ±φ)\r\n\t\t 0, -r, -t,     0, -r,  t,\r\n\t\t 0,  r, -t,     0,  r,  t,\r\n\r\n\t\t// (±1/φ, ±φ, 0)\r\n\t\t-r, -t,  0,    -r,  t,  0,\r\n\t\t r, -t,  0,     r,  t,  0,\r\n\r\n\t\t// (±φ, 0, ±1/φ)\r\n\t\t-t,  0, -r,     t,  0, -r,\r\n\t\t-t,  0,  r,     t,  0,  r\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t 3, 11,  7,      3,  7, 15,      3, 15, 13,\r\n\t\t 7, 19, 17,      7, 17,  6,      7,  6, 15,\r\n\t\t17,  4,  8,     17,  8, 10,     17, 10,  6,\r\n\t\t 8,  0, 16,      8, 16,  2,      8,  2, 10,\r\n\t\t 0, 12,  1,      0,  1, 18,      0, 18, 16,\r\n\t\t 6, 10,  2,      6,  2, 13,      6, 13, 15,\r\n\t\t 2, 16, 18,      2, 18,  3,      2,  3, 13,\r\n\t\t18,  1,  9,     18,  9, 11,     18, 11,  3,\r\n\t\t 4, 14, 12,      4, 12,  0,      4,  0,  8,\r\n\t\t11,  9,  5,     11,  5, 19,     11, 19,  7,\r\n\t\t19,  5, 14,     19, 14,  4,     19,  4, 17,\r\n\t\t 1, 12, 14,      1, 14,  5,      1,  5,  9\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n};\r\n\r\nTHREE.DodecahedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.DodecahedronGeometry.prototype.constructor = THREE.DodecahedronGeometry;\r\n\r\n// File:src/extras/geometries/IcosahedronGeometry.js\r\n\r\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\r\n\r\nTHREE.IcosahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\r\n\tvar vertices = [\r\n\t\t- 1,  t,  0,    1,  t,  0,   - 1, - t,  0,    1, - t,  0,\r\n\t\t 0, - 1,  t,    0,  1,  t,    0, - 1, - t,    0,  1, - t,\r\n\t\t t,  0, - 1,    t,  0,  1,   - t,  0, - 1,   - t,  0,  1\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t 0, 11,  5,    0,  5,  1,    0,  1,  7,    0,  7, 10,    0, 10, 11,\r\n\t\t 1,  5,  9,    5, 11,  4,   11, 10,  2,   10,  7,  6,    7,  1,  8,\r\n\t\t 3,  9,  4,    3,  4,  2,    3,  2,  6,    3,  6,  8,    3,  8,  9,\r\n\t\t 4,  9,  5,    2,  4, 11,    6,  2, 10,    8,  6,  7,    9,  8,  1\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'IcosahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n};\r\n\r\nTHREE.IcosahedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.IcosahedronGeometry.prototype.constructor = THREE.IcosahedronGeometry;\r\n\r\n// File:src/extras/geometries/OctahedronGeometry.js\r\n\r\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\r\n\r\nTHREE.OctahedronGeometry = function ( radius, detail ) {\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n\tvar vertices = [\r\n\t\t1, 0, 0,   - 1, 0, 0,    0, 1, 0,    0,- 1, 0,    0, 0, 1,    0, 0,- 1\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t0, 2, 4,    0, 4, 3,    0, 3, 5,    0, 5, 2,    1, 2, 5,    1, 5, 3,    1, 3, 4,    1, 4, 2\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'OctahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n};\r\n\r\nTHREE.OctahedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.OctahedronGeometry.prototype.constructor = THREE.OctahedronGeometry;\r\n\r\n// File:src/extras/geometries/TetrahedronGeometry.js\r\n\r\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\r\n\r\nTHREE.TetrahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar vertices = [\r\n\t\t 1,  1,  1,   - 1, - 1,  1,   - 1,  1, - 1,    1, - 1, - 1\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t 2,  1,  0,    0,  3,  2,    1,  3,  0,    2,  3,  1\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'TetrahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n};\r\n\r\nTHREE.TetrahedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.TetrahedronGeometry.prototype.constructor = THREE.TetrahedronGeometry;\r\n\r\n// File:src/extras/geometries/ParametricGeometry.js\r\n\r\n/**\r\n * @author zz85 / https://github.com/zz85\r\n * Parametric Surfaces Geometry\r\n * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\r\n *\r\n * new THREE.ParametricGeometry( parametricFunction, uSegments, ySegements );\r\n *\r\n */\r\n\r\nTHREE.ParametricGeometry = function ( func, slices, stacks ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'ParametricGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tfunc: func,\r\n\t\tslices: slices,\r\n\t\tstacks: stacks\r\n\t};\r\n\r\n\tvar verts = this.vertices;\r\n\tvar faces = this.faces;\r\n\tvar uvs = this.faceVertexUvs[ 0 ];\r\n\r\n\tvar i, j, p;\r\n\tvar u, v;\r\n\r\n\tvar sliceCount = slices + 1;\r\n\r\n\tfor ( i = 0; i <= stacks; i ++ ) {\r\n\r\n\t\tv = i / stacks;\r\n\r\n\t\tfor ( j = 0; j <= slices; j ++ ) {\r\n\r\n\t\t\tu = j / slices;\r\n\r\n\t\t\tp = func( u, v );\r\n\t\t\tverts.push( p );\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tvar a, b, c, d;\r\n\tvar uva, uvb, uvc, uvd;\r\n\r\n\tfor ( i = 0; i < stacks; i ++ ) {\r\n\r\n\t\tfor ( j = 0; j < slices; j ++ ) {\r\n\r\n\t\t\ta = i * sliceCount + j;\r\n\t\t\tb = i * sliceCount + j + 1;\r\n\t\t\tc = (i + 1) * sliceCount + j + 1;\r\n\t\t\td = (i + 1) * sliceCount + j;\r\n\r\n\t\t\tuva = new THREE.Vector2( j / slices, i / stacks );\r\n\t\t\tuvb = new THREE.Vector2( ( j + 1 ) / slices, i / stacks );\r\n\t\t\tuvc = new THREE.Vector2( ( j + 1 ) / slices, ( i + 1 ) / stacks );\r\n\t\t\tuvd = new THREE.Vector2( j / slices, ( i + 1 ) / stacks );\r\n\r\n\t\t\tfaces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\tuvs.push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\tfaces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\tuvs.push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// console.log(this);\r\n\r\n\t// magic bullet\r\n\t// var diff = this.mergeVertices();\r\n\t// console.log('removed ', diff, ' vertices by merging');\r\n\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n};\r\n\r\nTHREE.ParametricGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.ParametricGeometry.prototype.constructor = THREE.ParametricGeometry;\r\n\r\n// File:src/extras/helpers/AxisHelper.js\r\n\r\n/**\r\n * @author sroucheray / http://sroucheray.org/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.AxisHelper = function ( size ) {\r\n\r\n\tsize = size || 1;\r\n\r\n\tvar vertices = new Float32Array( [\r\n\t\t0, 0, 0,  size, 0, 0,\r\n\t\t0, 0, 0,  0, size, 0,\r\n\t\t0, 0, 0,  0, 0, size\r\n\t] );\r\n\r\n\tvar colors = new Float32Array( [\r\n\t\t1, 0, 0,  1, 0.6, 0,\r\n\t\t0, 1, 0,  0.6, 1, 0,\r\n\t\t0, 0, 1,  0, 0.6, 1\r\n\t] );\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\tgeometry.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ) );\r\n\r\n\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\r\n\r\n\tTHREE.Line.call( this, geometry, material, THREE.LinePieces );\r\n\r\n};\r\n\r\nTHREE.AxisHelper.prototype = Object.create( THREE.Line.prototype );\r\nTHREE.AxisHelper.prototype.constructor = THREE.AxisHelper;\r\n\r\n// File:src/extras/helpers/ArrowHelper.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author zz85 / http://github.com/zz85\r\n * @author bhouston / http://exocortex.com\r\n *\r\n * Creates an arrow for visualizing directions\r\n *\r\n * Parameters:\r\n *  dir - Vector3\r\n *  origin - Vector3\r\n *  length - Number\r\n *  color - color in hex value\r\n *  headLength - Number\r\n *  headWidth - Number\r\n */\r\n\r\nTHREE.ArrowHelper = ( function () {\r\n\r\n\tvar lineGeometry = new THREE.Geometry();\r\n\tlineGeometry.vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3( 0, 1, 0 ) );\r\n\r\n\tvar coneGeometry = new THREE.CylinderGeometry( 0, 0.5, 1, 5, 1 );\r\n\tconeGeometry.applyMatrix( new THREE.Matrix4().makeTranslation( 0, - 0.5, 0 ) );\r\n\r\n\treturn function ( dir, origin, length, color, headLength, headWidth ) {\r\n\r\n\t\t// dir is assumed to be normalized\r\n\r\n\t\tTHREE.Object3D.call( this );\r\n\r\n\t\tif ( color === undefined ) color = 0xffff00;\r\n\t\tif ( length === undefined ) length = 1;\r\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\r\n\t\tthis.position.copy( origin );\r\n\r\n\t\tthis.line = new THREE.Line( lineGeometry, new THREE.LineBasicMaterial( { color: color } ) );\r\n\t\tthis.line.matrixAutoUpdate = false;\r\n\t\tthis.add( this.line );\r\n\r\n\t\tthis.cone = new THREE.Mesh( coneGeometry, new THREE.MeshBasicMaterial( { color: color } ) );\r\n\t\tthis.cone.matrixAutoUpdate = false;\r\n\t\tthis.add( this.cone );\r\n\r\n\t\tthis.setDirection( dir );\r\n\t\tthis.setLength( length, headLength, headWidth );\r\n\r\n\t}\r\n\r\n}() );\r\n\r\nTHREE.ArrowHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.ArrowHelper.prototype.constructor = THREE.ArrowHelper;\r\n\r\nTHREE.ArrowHelper.prototype.setDirection = ( function () {\r\n\r\n\tvar axis = new THREE.Vector3();\r\n\tvar radians;\r\n\r\n\treturn function ( dir ) {\r\n\r\n\t\t// dir is assumed to be normalized\r\n\r\n\t\tif ( dir.y > 0.99999 ) {\r\n\r\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\r\n\r\n\t\t} else if ( dir.y < - 0.99999 ) {\r\n\r\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\r\n\r\n\t\t\tradians = Math.acos( dir.y );\r\n\r\n\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.ArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\r\n\r\n\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\r\n\tthis.line.scale.set( 1, length - headLength, 1 );\r\n\tthis.line.updateMatrix();\r\n\r\n\tthis.cone.scale.set( headWidth, headLength, headWidth );\r\n\tthis.cone.position.y = length;\r\n\tthis.cone.updateMatrix();\r\n\r\n};\r\n\r\nTHREE.ArrowHelper.prototype.setColor = function ( color ) {\r\n\r\n\tthis.line.material.color.set( color );\r\n\tthis.cone.material.color.set( color );\r\n\r\n};\r\n\r\n// File:src/extras/helpers/BoxHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BoxHelper = function ( object ) {\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( new Float32Array( 72 ), 3 ) );\r\n\r\n\tTHREE.Line.call( this, geometry, new THREE.LineBasicMaterial( { color: 0xffff00 } ), THREE.LinePieces );\r\n\r\n\tif ( object !== undefined ) {\r\n\r\n\t\tthis.update( object );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.BoxHelper.prototype = Object.create( THREE.Line.prototype );\r\nTHREE.BoxHelper.prototype.constructor = THREE.BoxHelper;\r\n\r\nTHREE.BoxHelper.prototype.update = function ( object ) {\r\n\r\n\tvar geometry = object.geometry;\r\n\r\n\tif ( geometry.boundingBox === null ) {\r\n\r\n\t\tgeometry.computeBoundingBox();\r\n\r\n\t}\r\n\r\n\tvar min = geometry.boundingBox.min;\r\n\tvar max = geometry.boundingBox.max;\r\n\r\n\t/*\r\n\t  5____4\r\n\t1/___0/|\r\n\t| 6__|_7\r\n\t2/___3/\r\n\r\n\t0: max.x, max.y, max.z\r\n\t1: min.x, max.y, max.z\r\n\t2: min.x, min.y, max.z\r\n\t3: max.x, min.y, max.z\r\n\t4: max.x, max.y, min.z\r\n\t5: min.x, max.y, min.z\r\n\t6: min.x, min.y, min.z\r\n\t7: max.x, min.y, min.z\r\n\t*/\r\n\r\n\tvar vertices = this.geometry.attributes.position.array;\r\n\r\n\tvertices[  0 ] = max.x; vertices[  1 ] = max.y; vertices[  2 ] = max.z;\r\n\tvertices[  3 ] = min.x; vertices[  4 ] = max.y; vertices[  5 ] = max.z;\r\n\r\n\tvertices[  6 ] = min.x; vertices[  7 ] = max.y; vertices[  8 ] = max.z;\r\n\tvertices[  9 ] = min.x; vertices[ 10 ] = min.y; vertices[ 11 ] = max.z;\r\n\r\n\tvertices[ 12 ] = min.x; vertices[ 13 ] = min.y; vertices[ 14 ] = max.z;\r\n\tvertices[ 15 ] = max.x; vertices[ 16 ] = min.y; vertices[ 17 ] = max.z;\r\n\r\n\tvertices[ 18 ] = max.x; vertices[ 19 ] = min.y; vertices[ 20 ] = max.z;\r\n\tvertices[ 21 ] = max.x; vertices[ 22 ] = max.y; vertices[ 23 ] = max.z;\r\n\r\n\t//\r\n\r\n\tvertices[ 24 ] = max.x; vertices[ 25 ] = max.y; vertices[ 26 ] = min.z;\r\n\tvertices[ 27 ] = min.x; vertices[ 28 ] = max.y; vertices[ 29 ] = min.z;\r\n\r\n\tvertices[ 30 ] = min.x; vertices[ 31 ] = max.y; vertices[ 32 ] = min.z;\r\n\tvertices[ 33 ] = min.x; vertices[ 34 ] = min.y; vertices[ 35 ] = min.z;\r\n\r\n\tvertices[ 36 ] = min.x; vertices[ 37 ] = min.y; vertices[ 38 ] = min.z;\r\n\tvertices[ 39 ] = max.x; vertices[ 40 ] = min.y; vertices[ 41 ] = min.z;\r\n\r\n\tvertices[ 42 ] = max.x; vertices[ 43 ] = min.y; vertices[ 44 ] = min.z;\r\n\tvertices[ 45 ] = max.x; vertices[ 46 ] = max.y; vertices[ 47 ] = min.z;\r\n\r\n\t//\r\n\r\n\tvertices[ 48 ] = max.x; vertices[ 49 ] = max.y; vertices[ 50 ] = max.z;\r\n\tvertices[ 51 ] = max.x; vertices[ 52 ] = max.y; vertices[ 53 ] = min.z;\r\n\r\n\tvertices[ 54 ] = min.x; vertices[ 55 ] = max.y; vertices[ 56 ] = max.z;\r\n\tvertices[ 57 ] = min.x; vertices[ 58 ] = max.y; vertices[ 59 ] = min.z;\r\n\r\n\tvertices[ 60 ] = min.x; vertices[ 61 ] = min.y; vertices[ 62 ] = max.z;\r\n\tvertices[ 63 ] = min.x; vertices[ 64 ] = min.y; vertices[ 65 ] = min.z;\r\n\r\n\tvertices[ 66 ] = max.x; vertices[ 67 ] = min.y; vertices[ 68 ] = max.z;\r\n\tvertices[ 69 ] = max.x; vertices[ 70 ] = min.y; vertices[ 71 ] = min.z;\r\n\r\n\tthis.geometry.attributes.position.needsUpdate = true;\r\n\r\n\tthis.geometry.computeBoundingSphere();\r\n\r\n\tthis.matrix = object.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n};\r\n\r\n// File:src/extras/helpers/BoundingBoxHelper.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\n// a helper to show the world-axis-aligned bounding box for an object\r\n\r\nTHREE.BoundingBoxHelper = function ( object, hex ) {\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0x888888;\r\n\r\n\tthis.object = object;\r\n\r\n\tthis.box = new THREE.Box3();\r\n\r\n\tTHREE.Mesh.call( this, new THREE.BoxGeometry( 1, 1, 1 ), new THREE.MeshBasicMaterial( { color: color, wireframe: true } ) );\r\n\r\n};\r\n\r\nTHREE.BoundingBoxHelper.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.BoundingBoxHelper.prototype.constructor = THREE.BoundingBoxHelper;\r\n\r\nTHREE.BoundingBoxHelper.prototype.update = function () {\r\n\r\n\tthis.box.setFromObject( this.object );\r\n\r\n\tthis.box.size( this.scale );\r\n\r\n\tthis.box.center( this.position );\r\n\r\n};\r\n\r\n// File:src/extras/helpers/CameraHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n *\t- shows frustum, line of sight and up of the camera\r\n *\t- suitable for fast updates\r\n * \t- based on frustum visualization in lightgl.js shadowmap example\r\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\r\n */\r\n\r\nTHREE.CameraHelper = function ( camera ) {\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\tvar material = new THREE.LineBasicMaterial( { color: 0xffffff, vertexColors: THREE.FaceColors } );\r\n\r\n\tvar pointMap = {};\r\n\r\n\t// colors\r\n\r\n\tvar hexFrustum = 0xffaa00;\r\n\tvar hexCone = 0xff0000;\r\n\tvar hexUp = 0x00aaff;\r\n\tvar hexTarget = 0xffffff;\r\n\tvar hexCross = 0x333333;\r\n\r\n\t// near\r\n\r\n\taddLine( \"n1\", \"n2\", hexFrustum );\r\n\taddLine( \"n2\", \"n4\", hexFrustum );\r\n\taddLine( \"n4\", \"n3\", hexFrustum );\r\n\taddLine( \"n3\", \"n1\", hexFrustum );\r\n\r\n\t// far\r\n\r\n\taddLine( \"f1\", \"f2\", hexFrustum );\r\n\taddLine( \"f2\", \"f4\", hexFrustum );\r\n\taddLine( \"f4\", \"f3\", hexFrustum );\r\n\taddLine( \"f3\", \"f1\", hexFrustum );\r\n\r\n\t// sides\r\n\r\n\taddLine( \"n1\", \"f1\", hexFrustum );\r\n\taddLine( \"n2\", \"f2\", hexFrustum );\r\n\taddLine( \"n3\", \"f3\", hexFrustum );\r\n\taddLine( \"n4\", \"f4\", hexFrustum );\r\n\r\n\t// cone\r\n\r\n\taddLine( \"p\", \"n1\", hexCone );\r\n\taddLine( \"p\", \"n2\", hexCone );\r\n\taddLine( \"p\", \"n3\", hexCone );\r\n\taddLine( \"p\", \"n4\", hexCone );\r\n\r\n\t// up\r\n\r\n\taddLine( \"u1\", \"u2\", hexUp );\r\n\taddLine( \"u2\", \"u3\", hexUp );\r\n\taddLine( \"u3\", \"u1\", hexUp );\r\n\r\n\t// target\r\n\r\n\taddLine( \"c\", \"t\", hexTarget );\r\n\taddLine( \"p\", \"c\", hexCross );\r\n\r\n\t// cross\r\n\r\n\taddLine( \"cn1\", \"cn2\", hexCross );\r\n\taddLine( \"cn3\", \"cn4\", hexCross );\r\n\r\n\taddLine( \"cf1\", \"cf2\", hexCross );\r\n\taddLine( \"cf3\", \"cf4\", hexCross );\r\n\r\n\tfunction addLine( a, b, hex ) {\r\n\r\n\t\taddPoint( a, hex );\r\n\t\taddPoint( b, hex );\r\n\r\n\t}\r\n\r\n\tfunction addPoint( id, hex ) {\r\n\r\n\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\tgeometry.colors.push( new THREE.Color( hex ) );\r\n\r\n\t\tif ( pointMap[ id ] === undefined ) {\r\n\r\n\t\t\tpointMap[ id ] = [];\r\n\r\n\t\t}\r\n\r\n\t\tpointMap[ id ].push( geometry.vertices.length - 1 );\r\n\r\n\t}\r\n\r\n\tTHREE.Line.call( this, geometry, material, THREE.LinePieces );\r\n\r\n\tthis.camera = camera;\r\n\tthis.matrix = camera.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.pointMap = pointMap;\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.CameraHelper.prototype = Object.create( THREE.Line.prototype );\r\nTHREE.CameraHelper.prototype.constructor = THREE.CameraHelper;\r\n\r\nTHREE.CameraHelper.prototype.update = function () {\r\n\r\n\tvar geometry, pointMap;\r\n\t\r\n\tvar vector = new THREE.Vector3();\r\n\tvar camera = new THREE.Camera();\r\n\r\n\tvar setPoint = function ( point, x, y, z ) {\r\n\r\n\t\tvector.set( x, y, z ).unproject( camera );\r\n\r\n\t\tvar points = pointMap[ point ];\r\n\r\n\t\tif ( points !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tgeometry.vertices[ points[ i ] ].copy( vector );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\treturn function () {\r\n\r\n\t\tgeometry = this.geometry;\r\n\t\tpointMap = this.pointMap;\r\n\r\n\t\tvar w = 1, h = 1;\r\n\r\n\t\t// we need just camera projection matrix\r\n\t\t// world matrix must be identity\r\n\r\n\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\r\n\r\n\t\t// center / target\r\n\r\n\t\tsetPoint( \"c\", 0, 0, - 1 );\r\n\t\tsetPoint( \"t\", 0, 0,  1 );\r\n\r\n\t\t// near\r\n\r\n\t\tsetPoint( \"n1\", - w, - h, - 1 );\r\n\t\tsetPoint( \"n2\",   w, - h, - 1 );\r\n\t\tsetPoint( \"n3\", - w,   h, - 1 );\r\n\t\tsetPoint( \"n4\",   w,   h, - 1 );\r\n\r\n\t\t// far\r\n\r\n\t\tsetPoint( \"f1\", - w, - h, 1 );\r\n\t\tsetPoint( \"f2\",   w, - h, 1 );\r\n\t\tsetPoint( \"f3\", - w,   h, 1 );\r\n\t\tsetPoint( \"f4\",   w,   h, 1 );\r\n\r\n\t\t// up\r\n\r\n\t\tsetPoint( \"u1\",   w * 0.7, h * 1.1, - 1 );\r\n\t\tsetPoint( \"u2\", - w * 0.7, h * 1.1, - 1 );\r\n\t\tsetPoint( \"u3\",         0, h * 2,   - 1 );\r\n\r\n\t\t// cross\r\n\r\n\t\tsetPoint( \"cf1\", - w,   0, 1 );\r\n\t\tsetPoint( \"cf2\",   w,   0, 1 );\r\n\t\tsetPoint( \"cf3\",   0, - h, 1 );\r\n\t\tsetPoint( \"cf4\",   0,   h, 1 );\r\n\r\n\t\tsetPoint( \"cn1\", - w,   0, - 1 );\r\n\t\tsetPoint( \"cn2\",   w,   0, - 1 );\r\n\t\tsetPoint( \"cn3\",   0, - h, - 1 );\r\n\t\tsetPoint( \"cn4\",   0,   h, - 1 );\r\n\r\n\t\tgeometry.verticesNeedUpdate = true;\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/DirectionalLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.DirectionalLightHelper = function ( light, size ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tthis.matrix = light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tsize = size || 1;\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\tgeometry.vertices.push(\r\n\t\tnew THREE.Vector3( - size,   size, 0 ),\r\n\t\tnew THREE.Vector3(   size,   size, 0 ),\r\n\t\tnew THREE.Vector3(   size, - size, 0 ),\r\n\t\tnew THREE.Vector3( - size, - size, 0 ),\r\n\t\tnew THREE.Vector3( - size,   size, 0 )\r\n\t);\r\n\r\n\tvar material = new THREE.LineBasicMaterial( { fog: false } );\r\n\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\tthis.lightPlane = new THREE.Line( geometry, material );\r\n\tthis.add( this.lightPlane );\r\n\r\n\tgeometry = new THREE.Geometry();\r\n\tgeometry.vertices.push(\r\n\t\tnew THREE.Vector3(),\r\n\t\tnew THREE.Vector3()\r\n\t);\r\n\r\n\tmaterial = new THREE.LineBasicMaterial( { fog: false } );\r\n\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\tthis.targetLine = new THREE.Line( geometry, material );\r\n\tthis.add( this.targetLine );\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.DirectionalLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.DirectionalLightHelper.prototype.constructor = THREE.DirectionalLightHelper;\r\n\r\nTHREE.DirectionalLightHelper.prototype.dispose = function () {\r\n\r\n\tthis.lightPlane.geometry.dispose();\r\n\tthis.lightPlane.material.dispose();\r\n\tthis.targetLine.geometry.dispose();\r\n\tthis.targetLine.material.dispose();\r\n};\r\n\r\nTHREE.DirectionalLightHelper.prototype.update = function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\tvar v3 = new THREE.Vector3();\r\n\r\n\treturn function () {\r\n\r\n\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\t\tv3.subVectors( v2, v1 );\r\n\r\n\t\tthis.lightPlane.lookAt( v3 );\r\n\t\tthis.lightPlane.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\t\tthis.targetLine.geometry.vertices[ 1 ].copy( v3 );\r\n\t\tthis.targetLine.geometry.verticesNeedUpdate = true;\r\n\t\tthis.targetLine.material.color.copy( this.lightPlane.material.color );\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/EdgesHelper.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @param object THREE.Mesh whose geometry will be used\r\n * @param hex line color\r\n * @param thresholdAngle the minimim angle (in degrees),\r\n * between the face normals of adjacent faces,\r\n * that is required to render an edge. A value of 10 means\r\n * an edge is only rendered if the angle is at least 10 degrees.\r\n */\r\n\r\nTHREE.EdgesHelper = function ( object, hex, thresholdAngle ) {\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\r\n\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\r\n\r\n\tvar thresholdDot = Math.cos( THREE.Math.degToRad( thresholdAngle ) );\r\n\r\n\tvar edge = [ 0, 0 ], hash = {};\r\n\tvar sortFunction = function ( a, b ) { return a - b };\r\n\r\n\tvar keys = [ 'a', 'b', 'c' ];\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\tvar geometry2;\r\n\r\n\tif ( object.geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\tgeometry2 = new THREE.Geometry();\r\n\t\tgeometry2.fromBufferGeometry( object.geometry );\r\n\r\n\t} else {\r\n\r\n\t\tgeometry2 = object.geometry.clone();\r\n\r\n\t}\r\n\r\n\tgeometry2.mergeVertices();\r\n\tgeometry2.computeFaceNormals();\r\n\r\n\tvar vertices = geometry2.vertices;\r\n\tvar faces = geometry2.faces;\r\n\tvar numEdges = 0;\r\n\r\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\tvar face = faces[ i ];\r\n\r\n\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\tedge[ 0 ] = face[ keys[ j ] ];\r\n\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\tedge.sort( sortFunction );\r\n\r\n\t\t\tvar key = edge.toString();\r\n\r\n\t\t\tif ( hash[ key ] === undefined ) {\r\n\r\n\t\t\t\thash[ key ] = { vert1: edge[ 0 ], vert2: edge[ 1 ], face1: i, face2: undefined };\r\n\t\t\t\tnumEdges ++;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\thash[ key ].face2 = i;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\r\n\tvar index = 0;\r\n\r\n\tfor ( var key in hash ) {\r\n\r\n\t\tvar h = hash[ key ];\r\n\r\n\t\tif ( h.face2 === undefined || faces[ h.face1 ].normal.dot( faces[ h.face2 ].normal ) <= thresholdDot ) {\r\n\r\n\t\t\tvar vertex = vertices[ h.vert1 ];\r\n\t\t\tcoords[ index ++ ] = vertex.x;\r\n\t\t\tcoords[ index ++ ] = vertex.y;\r\n\t\t\tcoords[ index ++ ] = vertex.z;\r\n\r\n\t\t\tvertex = vertices[ h.vert2 ];\r\n\t\t\tcoords[ index ++ ] = vertex.x;\r\n\t\t\tcoords[ index ++ ] = vertex.y;\r\n\t\t\tcoords[ index ++ ] = vertex.z;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\r\n\tTHREE.Line.call( this, geometry, new THREE.LineBasicMaterial( { color: color } ), THREE.LinePieces );\r\n\r\n\tthis.matrix = object.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n};\r\n\r\nTHREE.EdgesHelper.prototype = Object.create( THREE.Line.prototype );\r\nTHREE.EdgesHelper.prototype.constructor = THREE.EdgesHelper;\r\n\r\n// File:src/extras/helpers/FaceNormalsHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.FaceNormalsHelper = function ( object, size, hex, linewidth ) {\r\n\r\n\tthis.object = object;\r\n\r\n\tthis.size = ( size !== undefined ) ? size : 1;\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\r\n\r\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\r\n\tvar faces = this.object.geometry.faces;\r\n\r\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\tgeometry.vertices.push( new THREE.Vector3(), new THREE.Vector3() );\r\n\r\n\t}\r\n\r\n\tTHREE.Line.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ), THREE.LinePieces );\r\n\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.normalMatrix = new THREE.Matrix3();\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.FaceNormalsHelper.prototype = Object.create( THREE.Line.prototype );\r\nTHREE.FaceNormalsHelper.prototype.constructor = THREE.FaceNormalsHelper;\r\n\r\nTHREE.FaceNormalsHelper.prototype.update = function () {\r\n\r\n\tvar vertices = this.geometry.vertices;\r\n\r\n\tvar object = this.object;\r\n\tvar objectVertices = object.geometry.vertices;\r\n\tvar objectFaces = object.geometry.faces;\r\n\tvar objectWorldMatrix = object.matrixWorld;\r\n\r\n\tobject.updateMatrixWorld( true );\r\n\r\n\tthis.normalMatrix.getNormalMatrix( objectWorldMatrix );\r\n\r\n\tfor ( var i = 0, i2 = 0, l = objectFaces.length; i < l; i ++, i2 += 2 ) {\r\n\r\n\t\tvar face = objectFaces[ i ];\r\n\r\n\t\tvertices[ i2 ].copy( objectVertices[ face.a ] )\r\n\t\t\t.add( objectVertices[ face.b ] )\r\n\t\t\t.add( objectVertices[ face.c ] )\r\n\t\t\t.divideScalar( 3 )\r\n\t\t\t.applyMatrix4( objectWorldMatrix );\r\n\r\n\t\tvertices[ i2 + 1 ].copy( face.normal )\r\n\t\t\t.applyMatrix3( this.normalMatrix )\r\n\t\t\t.normalize()\r\n\t\t\t.multiplyScalar( this.size )\r\n\t\t\t.add( vertices[ i2 ] );\r\n\r\n\t}\r\n\r\n\tthis.geometry.verticesNeedUpdate = true;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n\r\n// File:src/extras/helpers/GridHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.GridHelper = function ( size, step ) {\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\r\n\r\n\tthis.color1 = new THREE.Color( 0x444444 );\r\n\tthis.color2 = new THREE.Color( 0x888888 );\r\n\r\n\tfor ( var i = - size; i <= size; i += step ) {\r\n\r\n\t\tgeometry.vertices.push(\r\n\t\t\tnew THREE.Vector3( - size, 0, i ), new THREE.Vector3( size, 0, i ),\r\n\t\t\tnew THREE.Vector3( i, 0, - size ), new THREE.Vector3( i, 0, size )\r\n\t\t);\r\n\r\n\t\tvar color = i === 0 ? this.color1 : this.color2;\r\n\r\n\t\tgeometry.colors.push( color, color, color, color );\r\n\r\n\t}\r\n\r\n\tTHREE.Line.call( this, geometry, material, THREE.LinePieces );\r\n\r\n};\r\n\r\nTHREE.GridHelper.prototype = Object.create( THREE.Line.prototype );\r\nTHREE.GridHelper.prototype.constructor = THREE.GridHelper;\r\n\r\nTHREE.GridHelper.prototype.setColors = function( colorCenterLine, colorGrid ) {\r\n\r\n\tthis.color1.set( colorCenterLine );\r\n\tthis.color2.set( colorGrid );\r\n\r\n\tthis.geometry.colorsNeedUpdate = true;\r\n\r\n}\r\n\r\n// File:src/extras/helpers/HemisphereLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.HemisphereLightHelper = function ( light, sphereSize ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tthis.matrix = light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.colors = [ new THREE.Color(), new THREE.Color() ];\r\n\r\n\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\r\n\tgeometry.applyMatrix( new THREE.Matrix4().makeRotationX( - Math.PI / 2 ) );\r\n\r\n\tfor ( var i = 0, il = 8; i < il; i ++ ) {\r\n\r\n\t\tgeometry.faces[ i ].color = this.colors[ i < 4 ? 0 : 1 ];\r\n\r\n\t}\r\n\r\n\tvar material = new THREE.MeshBasicMaterial( { vertexColors: THREE.FaceColors, wireframe: true } );\r\n\r\n\tthis.lightSphere = new THREE.Mesh( geometry, material );\r\n\tthis.add( this.lightSphere );\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.HemisphereLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.HemisphereLightHelper.prototype.constructor = THREE.HemisphereLightHelper;\r\n\r\nTHREE.HemisphereLightHelper.prototype.dispose = function () {\r\n\tthis.lightSphere.geometry.dispose();\r\n\tthis.lightSphere.material.dispose();\r\n};\r\n\r\nTHREE.HemisphereLightHelper.prototype.update = function () {\r\n\r\n\tvar vector = new THREE.Vector3();\r\n\r\n\treturn function () {\r\n\r\n\t\tthis.colors[ 0 ].copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\tthis.colors[ 1 ].copy( this.light.groundColor ).multiplyScalar( this.light.intensity );\r\n\r\n\t\tthis.lightSphere.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\r\n\t\tthis.lightSphere.geometry.colorsNeedUpdate = true;\r\n\r\n\t}\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/PointLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.PointLightHelper = function ( light, sphereSize ) {\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\r\n\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.matrix = this.light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\t/*\r\n\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\r\n\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\r\n\r\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\r\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\r\n\r\n\tvar d = light.distance;\r\n\r\n\tif ( d === 0.0 ) {\r\n\r\n\t\tthis.lightDistance.visible = false;\r\n\r\n\t} else {\r\n\r\n\t\tthis.lightDistance.scale.set( d, d, d );\r\n\r\n\t}\r\n\r\n\tthis.add( this.lightDistance );\r\n\t*/\r\n\r\n};\r\n\r\nTHREE.PointLightHelper.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.PointLightHelper.prototype.constructor = THREE.PointLightHelper;\r\n\r\nTHREE.PointLightHelper.prototype.dispose = function () {\r\n\r\n\tthis.geometry.dispose();\r\n\tthis.material.dispose();\r\n};\r\n\r\nTHREE.PointLightHelper.prototype.update = function () {\r\n\r\n\tthis.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\t/*\r\n\tvar d = this.light.distance;\r\n\r\n\tif ( d === 0.0 ) {\r\n\r\n\t\tthis.lightDistance.visible = false;\r\n\r\n\t} else {\r\n\r\n\t\tthis.lightDistance.visible = true;\r\n\t\tthis.lightDistance.scale.set( d, d, d );\r\n\r\n\t}\r\n\t*/\r\n\r\n};\r\n\r\n// File:src/extras/helpers/SkeletonHelper.js\r\n\r\n/**\r\n * @author Sean Griffin / http://twitter.com/sgrif\r\n * @author Michael Guerrero / http://realitymeltdown.com\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.SkeletonHelper = function ( object ) {\r\n\r\n\tthis.bones = this.getBoneList( object );\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\r\n\tfor ( var i = 0; i < this.bones.length; i ++ ) {\r\n\r\n\t\tvar bone = this.bones[ i ];\r\n\r\n\t\tif ( bone.parent instanceof THREE.Bone ) {\r\n\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\tgeometry.colors.push( new THREE.Color( 0, 0, 1 ) );\r\n\t\t\tgeometry.colors.push( new THREE.Color( 0, 1, 0 ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors, depthTest: false, depthWrite: false, transparent: true } );\r\n\r\n\tTHREE.Line.call( this, geometry, material, THREE.LinePieces );\r\n\r\n\tthis.root = object;\r\n\r\n\tthis.matrix = object.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\n\r\nTHREE.SkeletonHelper.prototype = Object.create( THREE.Line.prototype );\r\nTHREE.SkeletonHelper.prototype.constructor = THREE.SkeletonHelper;\r\n\r\nTHREE.SkeletonHelper.prototype.getBoneList = function( object ) {\r\n\r\n\tvar boneList = [];\r\n\r\n\tif ( object instanceof THREE.Bone ) {\r\n\r\n\t\tboneList.push( object );\r\n\r\n\t}\r\n\r\n\tfor ( var i = 0; i < object.children.length; i ++ ) {\r\n\r\n\t\tboneList.push.apply( boneList, this.getBoneList( object.children[ i ] ) );\r\n\r\n\t}\r\n\r\n\treturn boneList;\r\n\r\n};\r\n\r\nTHREE.SkeletonHelper.prototype.update = function () {\r\n\r\n\tvar geometry = this.geometry;\r\n\r\n\tvar matrixWorldInv = new THREE.Matrix4().getInverse( this.root.matrixWorld );\r\n\r\n\tvar boneMatrix = new THREE.Matrix4();\r\n\r\n\tvar j = 0;\r\n\r\n\tfor ( var i = 0; i < this.bones.length; i ++ ) {\r\n\r\n\t\tvar bone = this.bones[ i ];\r\n\r\n\t\tif ( bone.parent instanceof THREE.Bone ) {\r\n\r\n\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\r\n\t\t\tgeometry.vertices[ j ].setFromMatrixPosition( boneMatrix );\r\n\r\n\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\r\n\t\t\tgeometry.vertices[ j + 1 ].setFromMatrixPosition( boneMatrix );\r\n\r\n\t\t\tj += 2;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgeometry.verticesNeedUpdate = true;\r\n\r\n\tgeometry.computeBoundingSphere();\r\n\r\n};\r\n\r\n// File:src/extras/helpers/SpotLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.SpotLightHelper = function ( light ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tthis.matrix = light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tvar geometry = new THREE.CylinderGeometry( 0, 1, 1, 8, 1, true );\r\n\r\n\tgeometry.applyMatrix( new THREE.Matrix4().makeTranslation( 0, - 0.5, 0 ) );\r\n\tgeometry.applyMatrix( new THREE.Matrix4().makeRotationX( - Math.PI / 2 ) );\r\n\r\n\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\r\n\tthis.cone = new THREE.Mesh( geometry, material );\r\n\tthis.add( this.cone );\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.SpotLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.SpotLightHelper.prototype.constructor = THREE.SpotLightHelper;\r\n\r\nTHREE.SpotLightHelper.prototype.dispose = function () {\r\n\tthis.cone.geometry.dispose();\r\n\tthis.cone.material.dispose();\r\n};\r\n\r\nTHREE.SpotLightHelper.prototype.update = function () {\r\n\r\n\tvar vector = new THREE.Vector3();\r\n\tvar vector2 = new THREE.Vector3();\r\n\r\n\treturn function () {\r\n\r\n\t\tvar coneLength = this.light.distance ? this.light.distance : 10000;\r\n\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\r\n\r\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\r\n\r\n\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\r\n\t\tthis.cone.lookAt( vector2.sub( vector ) );\r\n\r\n\t\tthis.cone.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/VertexNormalsHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.VertexNormalsHelper = function ( object, size, hex, linewidth ) {\r\n\r\n\tthis.object = object;\r\n\r\n\tthis.size = ( size !== undefined ) ? size : 1;\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\r\n\r\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\r\n\tvar faces = object.geometry.faces;\r\n\r\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\tvar face = faces[ i ];\r\n\r\n\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3(), new THREE.Vector3() );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tTHREE.Line.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ), THREE.LinePieces );\r\n\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.normalMatrix = new THREE.Matrix3();\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.VertexNormalsHelper.prototype = Object.create( THREE.Line.prototype );\r\nTHREE.VertexNormalsHelper.prototype.constructor = THREE.VertexNormalsHelper;\r\n\r\nTHREE.VertexNormalsHelper.prototype.update = ( function ( object ) {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\r\n\treturn function( object ) {\r\n\r\n\t\tvar keys = [ 'a', 'b', 'c', 'd' ];\r\n\r\n\t\tthis.object.updateMatrixWorld( true );\r\n\r\n\t\tthis.normalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\r\n\t\tvar vertices = this.geometry.vertices;\r\n\r\n\t\tvar verts = this.object.geometry.vertices;\r\n\r\n\t\tvar faces = this.object.geometry.faces;\r\n\r\n\t\tvar worldMatrix = this.object.matrixWorld;\r\n\r\n\t\tvar idx = 0;\r\n\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tvar vertexId = face[ keys[ j ] ];\r\n\t\t\t\tvar vertex = verts[ vertexId ];\r\n\r\n\t\t\t\tvar normal = face.vertexNormals[ j ];\r\n\r\n\t\t\t\tvertices[ idx ].copy( vertex ).applyMatrix4( worldMatrix );\r\n\r\n\t\t\t\tv1.copy( normal ).applyMatrix3( this.normalMatrix ).normalize().multiplyScalar( this.size );\r\n\r\n\t\t\t\tv1.add( vertices[ idx ] );\r\n\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\tvertices[ idx ].copy( v1 );\r\n\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.geometry.verticesNeedUpdate = true;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}());\r\n\r\n// File:src/extras/helpers/VertexTangentsHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.VertexTangentsHelper = function ( object, size, hex, linewidth ) {\r\n\r\n\tthis.object = object;\r\n\r\n\tthis.size = ( size !== undefined ) ? size : 1;\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0x0000ff;\r\n\r\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\r\n\tvar faces = object.geometry.faces;\r\n\r\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\tvar face = faces[ i ];\r\n\r\n\t\tfor ( var j = 0, jl = face.vertexTangents.length; j < jl; j ++ ) {\r\n\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tTHREE.Line.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ), THREE.LinePieces );\r\n\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.VertexTangentsHelper.prototype = Object.create( THREE.Line.prototype );\r\nTHREE.VertexTangentsHelper.prototype.constructor = THREE.VertexTangentsHelper;\r\n\r\nTHREE.VertexTangentsHelper.prototype.update = ( function ( object ) {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\r\n\treturn function( object ) {\r\n\r\n\t\tvar keys = [ 'a', 'b', 'c', 'd' ];\r\n\r\n\t\tthis.object.updateMatrixWorld( true );\r\n\r\n\t\tvar vertices = this.geometry.vertices;\r\n\r\n\t\tvar verts = this.object.geometry.vertices;\r\n\r\n\t\tvar faces = this.object.geometry.faces;\r\n\r\n\t\tvar worldMatrix = this.object.matrixWorld;\r\n\r\n\t\tvar idx = 0;\r\n\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tfor ( var j = 0, jl = face.vertexTangents.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tvar vertexId = face[ keys[ j ] ];\r\n\t\t\t\tvar vertex = verts[ vertexId ];\r\n\r\n\t\t\t\tvar tangent = face.vertexTangents[ j ];\r\n\r\n\t\t\t\tvertices[ idx ].copy( vertex ).applyMatrix4( worldMatrix );\r\n\r\n\t\t\t\tv1.copy( tangent ).transformDirection( worldMatrix ).multiplyScalar( this.size );\r\n\r\n\t\t\t\tv1.add( vertices[ idx ] );\r\n\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\tvertices[ idx ].copy( v1 );\r\n\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.geometry.verticesNeedUpdate = true;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}());\r\n\r\n// File:src/extras/helpers/WireframeHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.WireframeHelper = function ( object, hex ) {\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\r\n\r\n\tvar edge = [ 0, 0 ], hash = {};\r\n\tvar sortFunction = function ( a, b ) { return a - b };\r\n\r\n\tvar keys = [ 'a', 'b', 'c' ];\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\tif ( object.geometry instanceof THREE.Geometry ) {\r\n\r\n\t\tvar vertices = object.geometry.vertices;\r\n\t\tvar faces = object.geometry.faces;\r\n\t\tvar numEdges = 0;\r\n\r\n\t\t// allocate maximal size\r\n\t\tvar edges = new Uint32Array( 6 * faces.length );\r\n\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\tedge[ 0 ] = face[ keys[ j ] ];\r\n\t\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\t\tedge.sort( sortFunction );\r\n\r\n\t\t\t\tvar key = edge.toString();\r\n\r\n\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\r\n\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\r\n\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\r\n\t\t\t\t\thash[ key ] = true;\r\n\t\t\t\t\tnumEdges ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\r\n\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\r\n\r\n\t\t\tfor ( var j = 0; j < 2; j ++ ) {\r\n\r\n\t\t\t\tvar vertex = vertices[ edges [ 2 * i + j] ];\r\n\r\n\t\t\t\tvar index = 6 * i + 3 * j;\r\n\t\t\t\tcoords[ index + 0 ] = vertex.x;\r\n\t\t\t\tcoords[ index + 1 ] = vertex.y;\r\n\t\t\t\tcoords[ index + 2 ] = vertex.z;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\r\n\t} else if ( object.geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\tif ( object.geometry.attributes.index !== undefined ) { // Indexed BufferGeometry\r\n\r\n\t\t\tvar vertices = object.geometry.attributes.position.array;\r\n\t\t\tvar indices = object.geometry.attributes.index.array;\r\n\t\t\tvar drawcalls = object.geometry.drawcalls;\r\n\t\t\tvar numEdges = 0;\r\n\r\n\t\t\tif ( drawcalls.length === 0 ) {\r\n\r\n\t\t\t\tdrawcalls = [ { count : indices.length, index : 0, start : 0 } ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// allocate maximal size\r\n\t\t\tvar edges = new Uint32Array( 2 * indices.length );\r\n\r\n\t\t\tfor ( var o = 0, ol = drawcalls.length; o < ol; ++ o ) {\r\n\r\n\t\t\t\tvar start = drawcalls[ o ].start;\r\n\t\t\t\tvar count = drawcalls[ o ].count;\r\n\t\t\t\tvar index = drawcalls[ o ].index;\r\n\r\n\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\t\tedge[ 0 ] = index + indices[ i + j ];\r\n\t\t\t\t\t\tedge[ 1 ] = index + indices[ i + ( j + 1 ) % 3 ];\r\n\t\t\t\t\t\tedge.sort( sortFunction );\r\n\r\n\t\t\t\t\t\tvar key = edge.toString();\r\n\r\n\t\t\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\r\n\t\t\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\r\n\t\t\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\r\n\t\t\t\t\t\t\thash[ key ] = true;\r\n\t\t\t\t\t\t\tnumEdges ++;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\r\n\t\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\r\n\r\n\t\t\t\tfor ( var j = 0; j < 2; j ++ ) {\r\n\r\n\t\t\t\t\tvar index = 6 * i + 3 * j;\r\n\t\t\t\t\tvar index2 = 3 * edges[ 2 * i + j];\r\n\t\t\t\t\tcoords[ index + 0 ] = vertices[ index2 ];\r\n\t\t\t\t\tcoords[ index + 1 ] = vertices[ index2 + 1 ];\r\n\t\t\t\t\tcoords[ index + 2 ] = vertices[ index2 + 2 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\r\n\t\t} else { // non-indexed BufferGeometry\r\n\r\n\t\t\tvar vertices = object.geometry.attributes.position.array;\r\n\t\t\tvar numEdges = vertices.length / 3;\r\n\t\t\tvar numTris = numEdges / 3;\r\n\r\n\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\r\n\t\t\tfor ( var i = 0, l = numTris; i < l; i ++ ) {\r\n\r\n\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\tvar index = 18 * i + 6 * j;\r\n\r\n\t\t\t\t\tvar index1 = 9 * i + 3 * j;\r\n\t\t\t\t\tcoords[ index + 0 ] = vertices[ index1 ];\r\n\t\t\t\t\tcoords[ index + 1 ] = vertices[ index1 + 1 ];\r\n\t\t\t\t\tcoords[ index + 2 ] = vertices[ index1 + 2 ];\r\n\r\n\t\t\t\t\tvar index2 = 9 * i + 3 * ( ( j + 1 ) % 3 );\r\n\t\t\t\t\tcoords[ index + 3 ] = vertices[ index2 ];\r\n\t\t\t\t\tcoords[ index + 4 ] = vertices[ index2 + 1 ];\r\n\t\t\t\t\tcoords[ index + 5 ] = vertices[ index2 + 2 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tTHREE.Line.call( this, geometry, new THREE.LineBasicMaterial( { color: color } ), THREE.LinePieces );\r\n\r\n\tthis.matrix = object.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n};\r\n\r\nTHREE.WireframeHelper.prototype = Object.create( THREE.Line.prototype );\r\nTHREE.WireframeHelper.prototype.constructor = THREE.WireframeHelper;\r\n\r\n// File:src/extras/objects/ImmediateRenderObject.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.ImmediateRenderObject = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.render = function ( renderCallback ) {};\r\n\r\n};\r\n\r\nTHREE.ImmediateRenderObject.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.ImmediateRenderObject.prototype.constructor = THREE.ImmediateRenderObject;\r\n\r\n// File:src/extras/objects/MorphBlendMesh.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.MorphBlendMesh = function( geometry, material ) {\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.animationsMap = {};\r\n\tthis.animationsList = [];\r\n\r\n\t// prepare default animation\r\n\t// (all frames played together in 1 second)\r\n\r\n\tvar numFrames = this.geometry.morphTargets.length;\r\n\r\n\tvar name = \"__default\";\r\n\r\n\tvar startFrame = 0;\r\n\tvar endFrame = numFrames - 1;\r\n\r\n\tvar fps = numFrames / 1;\r\n\r\n\tthis.createAnimation( name, startFrame, endFrame, fps );\r\n\tthis.setAnimationWeight( name, 1 );\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.MorphBlendMesh.prototype.constructor = THREE.MorphBlendMesh;\r\n\r\nTHREE.MorphBlendMesh.prototype.createAnimation = function ( name, start, end, fps ) {\r\n\r\n\tvar animation = {\r\n\r\n\t\tstartFrame: start,\r\n\t\tendFrame: end,\r\n\r\n\t\tlength: end - start + 1,\r\n\r\n\t\tfps: fps,\r\n\t\tduration: ( end - start ) / fps,\r\n\r\n\t\tlastFrame: 0,\r\n\t\tcurrentFrame: 0,\r\n\r\n\t\tactive: false,\r\n\r\n\t\ttime: 0,\r\n\t\tdirection: 1,\r\n\t\tweight: 1,\r\n\r\n\t\tdirectionBackwards: false,\r\n\t\tmirroredLoop: false\r\n\r\n\t};\r\n\r\n\tthis.animationsMap[ name ] = animation;\r\n\tthis.animationsList.push( animation );\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.autoCreateAnimations = function ( fps ) {\r\n\r\n\tvar pattern = /([a-z]+)_?(\\d+)/;\r\n\r\n\tvar firstAnimation, frameRanges = {};\r\n\r\n\tvar geometry = this.geometry;\r\n\r\n\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\tvar morph = geometry.morphTargets[ i ];\r\n\t\tvar chunks = morph.name.match( pattern );\r\n\r\n\t\tif ( chunks && chunks.length > 1 ) {\r\n\r\n\t\t\tvar name = chunks[ 1 ];\r\n\r\n\t\t\tif ( ! frameRanges[ name ] ) frameRanges[ name ] = { start: Infinity, end: - Infinity };\r\n\r\n\t\t\tvar range = frameRanges[ name ];\r\n\r\n\t\t\tif ( i < range.start ) range.start = i;\r\n\t\t\tif ( i > range.end ) range.end = i;\r\n\r\n\t\t\tif ( ! firstAnimation ) firstAnimation = name;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfor ( var name in frameRanges ) {\r\n\r\n\t\tvar range = frameRanges[ name ];\r\n\t\tthis.createAnimation( name, range.start, range.end, fps );\r\n\r\n\t}\r\n\r\n\tthis.firstAnimation = firstAnimation;\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionForward = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.direction = 1;\r\n\t\tanimation.directionBackwards = false;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionBackward = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.direction = - 1;\r\n\t\tanimation.directionBackwards = true;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationFPS = function ( name, fps ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.fps = fps;\r\n\t\tanimation.duration = ( animation.end - animation.start ) / animation.fps;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationDuration = function ( name, duration ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.duration = duration;\r\n\t\tanimation.fps = ( animation.end - animation.start ) / animation.duration;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationWeight = function ( name, weight ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.weight = weight;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationTime = function ( name, time ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.time = time;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.getAnimationTime = function ( name ) {\r\n\r\n\tvar time = 0;\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\ttime = animation.time;\r\n\r\n\t}\r\n\r\n\treturn time;\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.getAnimationDuration = function ( name ) {\r\n\r\n\tvar duration = - 1;\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tduration = animation.duration;\r\n\r\n\t}\r\n\r\n\treturn duration;\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.playAnimation = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.time = 0;\r\n\t\tanimation.active = true;\r\n\r\n\t} else {\r\n\r\n\t\tTHREE.warn( \"THREE.MorphBlendMesh: animation[\" + name + \"] undefined in .playAnimation()\" );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.stopAnimation = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.active = false;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.update = function ( delta ) {\r\n\r\n\tfor ( var i = 0, il = this.animationsList.length; i < il; i ++ ) {\r\n\r\n\t\tvar animation = this.animationsList[ i ];\r\n\r\n\t\tif ( ! animation.active ) continue;\r\n\r\n\t\tvar frameTime = animation.duration / animation.length;\r\n\r\n\t\tanimation.time += animation.direction * delta;\r\n\r\n\t\tif ( animation.mirroredLoop ) {\r\n\r\n\t\t\tif ( animation.time > animation.duration || animation.time < 0 ) {\r\n\r\n\t\t\t\tanimation.direction *= - 1;\r\n\r\n\t\t\t\tif ( animation.time > animation.duration ) {\r\n\r\n\t\t\t\t\tanimation.time = animation.duration;\r\n\t\t\t\t\tanimation.directionBackwards = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( animation.time < 0 ) {\r\n\r\n\t\t\t\t\tanimation.time = 0;\r\n\t\t\t\t\tanimation.directionBackwards = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tanimation.time = animation.time % animation.duration;\r\n\r\n\t\t\tif ( animation.time < 0 ) animation.time += animation.duration;\r\n\r\n\t\t}\r\n\r\n\t\tvar keyframe = animation.startFrame + THREE.Math.clamp( Math.floor( animation.time / frameTime ), 0, animation.length - 1 );\r\n\t\tvar weight = animation.weight;\r\n\r\n\t\tif ( keyframe !== animation.currentFrame ) {\r\n\r\n\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = 0;\r\n\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = 1 * weight;\r\n\r\n\t\t\tthis.morphTargetInfluences[ keyframe ] = 0;\r\n\r\n\t\t\tanimation.lastFrame = animation.currentFrame;\r\n\t\t\tanimation.currentFrame = keyframe;\r\n\r\n\t\t}\r\n\r\n\t\tvar mix = ( animation.time % frameTime ) / frameTime;\r\n\r\n\t\tif ( animation.directionBackwards ) mix = 1 - mix;\r\n\r\n\t\tthis.morphTargetInfluences[ animation.currentFrame ] = mix * weight;\r\n\t\tthis.morphTargetInfluences[ animation.lastFrame ] = ( 1 - mix ) * weight;\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\n// Export the THREE object for **Node.js**, with\r\n// backwards-compatibility for the old `require()` API. If we're in\r\n// the browser, add `_` as a global object via a string identifier,\r\n// for Closure Compiler \"advanced\" mode.\r\nif (typeof exports !== 'undefined') {\r\n  if (typeof module !== 'undefined' && module.exports) {\r\n    exports = module.exports = THREE;\r\n  }\r\n  exports.THREE = THREE;\r\n} else {\r\n  this['THREE'] = THREE;\r\n}\r\n","// Main javascript entry point\n// Should handle bootstrapping/starting application\n\n'use strict';\n\nvar $ = require('jquery');\nvar THREE = require('three');\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Bleach bypass shader [http://en.wikipedia.org/wiki/Bleach_bypass]\n * - based on Nvidia example\n * http://developer.download.nvidia.com/shaderlibrary/webpages/shader_library.html#post_bleach_bypass\n */\n\nTHREE.BleachBypassShader = {\n\n\tuniforms: {\n\n\t\t\"tDiffuse\": { type: \"t\", value: null },\n\t\t\"opacity\":  { type: \"f\", value: 1.0 }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vUv = uv;\",\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\"),\n\n\tfragmentShader: [\n\n\t\t\"uniform float opacity;\",\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vec4 base = texture2D( tDiffuse, vUv );\",\n\n\t\t\t\"vec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );\",\n\t\t\t\"float lum = dot( lumCoeff, base.rgb );\",\n\t\t\t\"vec3 blend = vec3( lum );\",\n\n\t\t\t\"float L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );\",\n\n\t\t\t\"vec3 result1 = 2.0 * base.rgb * blend;\",\n\t\t\t\"vec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );\",\n\n\t\t\t\"vec3 newColor = mix( result1, result2, L );\",\n\n\t\t\t\"float A2 = opacity * base.a;\",\n\t\t\t\"vec3 mixRGB = A2 * newColor.rgb;\",\n\t\t\t\"mixRGB += ( ( 1.0 - A2 ) * base.rgb );\",\n\n\t\t\t\"gl_FragColor = vec4( mixRGB, base.a );\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\")\n\n};\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Convolution shader\n * ported from o3d sample to WebGL / GLSL\n * http://o3d.googlecode.com/svn/trunk/samples/convolution.html\n */\n\nTHREE.ConvolutionShader = {\n\n\tdefines: {\n\n\t\t\"KERNEL_SIZE_FLOAT\": \"25.0\",\n\t\t\"KERNEL_SIZE_INT\": \"25\",\n\n\t},\n\n\tuniforms: {\n\n\t\t\"tDiffuse\":        { type: \"t\", value: null },\n\t\t\"uImageIncrement\": { type: \"v2\", value: new THREE.Vector2( 0.001953125, 0.0 ) },\n\t\t\"cKernel\":         { type: \"fv1\", value: [] }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"uniform vec2 uImageIncrement;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vUv = uv - ( ( KERNEL_SIZE_FLOAT - 1.0 ) / 2.0 ) * uImageIncrement;\",\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\"),\n\n\tfragmentShader: [\n\n\t\t\"uniform float cKernel[ KERNEL_SIZE_INT ];\",\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\"uniform vec2 uImageIncrement;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vec2 imageCoord = vUv;\",\n\t\t\t\"vec4 sum = vec4( 0.0, 0.0, 0.0, 0.0 );\",\n\n\t\t\t\"for( int i = 0; i < KERNEL_SIZE_INT; i ++ ) {\",\n\n\t\t\t\t\"sum += texture2D( tDiffuse, imageCoord ) * cKernel[ i ];\",\n\t\t\t\t\"imageCoord += uImageIncrement;\",\n\n\t\t\t\"}\",\n\n\t\t\t\"gl_FragColor = sum;\",\n\n\t\t\"}\"\n\n\n\t].join(\"\\n\"),\n\n\tbuildKernel: function ( sigma ) {\n\n\t\t// We lop off the sqrt(2 * pi) * sigma term, since we're going to normalize anyway.\n\n\t\tfunction gauss( x, sigma ) {\n\n\t\t\treturn Math.exp( - ( x * x ) / ( 2.0 * sigma * sigma ) );\n\n\t\t}\n\n\t\tvar i, values, sum, halfWidth, kMaxKernelSize = 25, kernelSize = 2 * Math.ceil( sigma * 3.0 ) + 1;\n\n\t\tif ( kernelSize > kMaxKernelSize ) kernelSize = kMaxKernelSize;\n\t\thalfWidth = ( kernelSize - 1 ) * 0.5;\n\n\t\tvalues = new Array( kernelSize );\n\t\tsum = 0.0;\n\t\tfor ( i = 0; i < kernelSize; ++ i ) {\n\n\t\t\tvalues[ i ] = gauss( i - halfWidth, sigma );\n\t\t\tsum += values[ i ];\n\n\t\t}\n\n\t\t// normalize the kernel\n\n\t\tfor ( i = 0; i < kernelSize; ++ i ) values[ i ] /= sum;\n\n\t\treturn values;\n\n\t}\n\n};\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Full-screen textured quad shader\n */\n\nTHREE.CopyShader = {\n\n\tuniforms: {\n\n\t\t\"tDiffuse\": { type: \"t\", value: null },\n\t\t\"opacity\":  { type: \"f\", value: 1.0 }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vUv = uv;\",\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\"),\n\n\tfragmentShader: [\n\n\t\t\"uniform float opacity;\",\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vec4 texel = texture2D( tDiffuse, vUv );\",\n\t\t\t\"gl_FragColor = opacity * texel;\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\")\n\n};/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Simple fake tilt-shift effect, modulating two pass Gaussian blur (see above) by vertical position\n *\n * - 9 samples per pass\n * - standard deviation 2.7\n * - \"h\" and \"v\" parameters should be set to \"1 / width\" and \"1 / height\"\n * - \"r\" parameter control where \"focused\" horizontal line lies\n */\n\nTHREE.HorizontalTiltShiftShader = {\n\n\tuniforms: {\n\n\t\t\"tDiffuse\": { type: \"t\", value: null },\n\t\t\"h\":        { type: \"f\", value: 1.0 / 512.0 },\n\t\t\"r\":        { type: \"f\", value: 0.35 }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vUv = uv;\",\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\"),\n\n\tfragmentShader: [\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\"uniform float h;\",\n\t\t\"uniform float r;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vec4 sum = vec4( 0.0 );\",\n\n\t\t\t\"float hh = h * abs( r - vUv.y );\",\n\n\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * hh, vUv.y ) ) * 0.051;\",\n\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * hh, vUv.y ) ) * 0.0918;\",\n\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * hh, vUv.y ) ) * 0.12245;\",\n\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * hh, vUv.y ) ) * 0.1531;\",\n\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\",\n\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * hh, vUv.y ) ) * 0.1531;\",\n\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * hh, vUv.y ) ) * 0.12245;\",\n\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * hh, vUv.y ) ) * 0.0918;\",\n\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * hh, vUv.y ) ) * 0.051;\",\n\n\t\t\t\"gl_FragColor = sum;\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\")\n\n};\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Luminosity\n * http://en.wikipedia.org/wiki/Luminosity\n */\n\nTHREE.LuminosityShader = {\n\n\tuniforms: {\n\n\t\t\"tDiffuse\": { type: \"t\", value: null }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vUv = uv;\",\n\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\"),\n\n\tfragmentShader: [\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vec4 texel = texture2D( tDiffuse, vUv );\",\n\n\t\t\t\"vec3 luma = vec3( 0.299, 0.587, 0.114 );\",\n\n\t\t\t\"float v = dot( texel.xyz, luma );\",\n\n\t\t\t\"gl_FragColor = vec4( v, v, v, texel.w );\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\")\n\n};/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Normal map shader\n * - compute normals from heightmap\n */\n\nTHREE.NormalMapShader = {\n\n\tuniforms: {\n\n\t\t\"heightMap\":  { type: \"t\", value: null },\n\t\t\"resolution\": { type: \"v2\", value: new THREE.Vector2( 512, 512 ) },\n\t\t\"scale\":      { type: \"v2\", value: new THREE.Vector2( 1, 1 ) },\n\t\t\"height\":     { type: \"f\", value: 0.05 }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vUv = uv;\",\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\"),\n\n\tfragmentShader: [\n\n\t\t\"uniform float height;\",\n\t\t\"uniform vec2 resolution;\",\n\t\t\"uniform sampler2D heightMap;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"float val = texture2D( heightMap, vUv ).x;\",\n\n\t\t\t\"float valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;\",\n\t\t\t\"float valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;\",\n\n\t\t\t\"gl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\")\n\n};/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Simple fake tilt-shift effect, modulating two pass Gaussian blur (see above) by vertical position\n *\n * - 9 samples per pass\n * - standard deviation 2.7\n * - \"h\" and \"v\" parameters should be set to \"1 / width\" and \"1 / height\"\n * - \"r\" parameter control where \"focused\" horizontal line lies\n */\n\nTHREE.VerticalTiltShiftShader = {\n\n\tuniforms: {\n\n\t\t\"tDiffuse\": { type: \"t\", value: null },\n\t\t\"v\":        { type: \"f\", value: 1.0 / 512.0 },\n\t\t\"r\":        { type: \"f\", value: 0.35 }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vUv = uv;\",\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\"),\n\n\tfragmentShader: [\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\t\t\"uniform float v;\",\n\t\t\"uniform float r;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vec4 sum = vec4( 0.0 );\",\n\n\t\t\t\"float vv = v * abs( r - vUv.y );\",\n\n\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;\",\n\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;\",\n\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;\",\n\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;\",\n\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\",\n\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;\",\n\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;\",\n\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;\",\n\t\t\t\"sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;\",\n\n\t\t\t\"gl_FragColor = sum;\",\n\n\t\t\"}\"\n\n\t].join(\"\\n\")\n\n};/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.EffectComposer = function ( renderer, renderTarget ) {\n\n\tthis.renderer = renderer;\n\n\tif ( renderTarget === undefined ) {\n\n\t\tvar pixelRatio = renderer.getPixelRatio();\n\n\t\tvar width  = Math.floor( renderer.context.canvas.width  / pixelRatio ) || 1;\n\t\tvar height = Math.floor( renderer.context.canvas.height / pixelRatio ) || 1;\n\t\tvar parameters = { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBFormat, stencilBuffer: false };\n\n\t\trenderTarget = new THREE.WebGLRenderTarget( width, height, parameters );\n\n\t}\n\n\tthis.renderTarget1 = renderTarget;\n\tthis.renderTarget2 = renderTarget.clone();\n\n\tthis.writeBuffer = this.renderTarget1;\n\tthis.readBuffer = this.renderTarget2;\n\n\tthis.passes = [];\n\n\tif ( THREE.CopyShader === undefined )\n\t\tconsole.error( \"THREE.EffectComposer relies on THREE.CopyShader\" );\n\n\tthis.copyPass = new THREE.ShaderPass( THREE.CopyShader );\n\n};\n\nTHREE.EffectComposer.prototype = {\n\n\tswapBuffers: function() {\n\n\t\tvar tmp = this.readBuffer;\n\t\tthis.readBuffer = this.writeBuffer;\n\t\tthis.writeBuffer = tmp;\n\n\t},\n\n\taddPass: function ( pass ) {\n\n\t\tthis.passes.push( pass );\n\n\t},\n\n\tinsertPass: function ( pass, index ) {\n\n\t\tthis.passes.splice( index, 0, pass );\n\n\t},\n\n\trender: function ( delta ) {\n\n\t\tthis.writeBuffer = this.renderTarget1;\n\t\tthis.readBuffer = this.renderTarget2;\n\n\t\tvar maskActive = false;\n\n\t\tvar pass, i, il = this.passes.length;\n\n\t\tfor ( i = 0; i < il; i ++ ) {\n\n\t\t\tpass = this.passes[ i ];\n\n\t\t\tif ( !pass.enabled ) continue;\n\n\t\t\tpass.render( this.renderer, this.writeBuffer, this.readBuffer, delta, maskActive );\n\n\t\t\tif ( pass.needsSwap ) {\n\n\t\t\t\tif ( maskActive ) {\n\n\t\t\t\t\tvar context = this.renderer.context;\n\n\t\t\t\t\tcontext.stencilFunc( context.NOTEQUAL, 1, 0xffffffff );\n\n\t\t\t\t\tthis.copyPass.render( this.renderer, this.writeBuffer, this.readBuffer, delta );\n\n\t\t\t\t\tcontext.stencilFunc( context.EQUAL, 1, 0xffffffff );\n\n\t\t\t\t}\n\n\t\t\t\tthis.swapBuffers();\n\n\t\t\t}\n\n\t\t\tif ( pass instanceof THREE.MaskPass ) {\n\n\t\t\t\tmaskActive = true;\n\n\t\t\t} else if ( pass instanceof THREE.ClearMaskPass ) {\n\n\t\t\t\tmaskActive = false;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\treset: function ( renderTarget ) {\n\n\t\tif ( renderTarget === undefined ) {\n\n\t\t\trenderTarget = this.renderTarget1.clone();\n\n\t\t\tvar pixelRatio = this.renderer.getPixelRatio();\n\n\t\t\trenderTarget.width  = Math.floor( this.renderer.context.canvas.width  / pixelRatio );\n\t\t\trenderTarget.height = Math.floor( this.renderer.context.canvas.height / pixelRatio );\n\n\t\t}\n\n\t\tthis.renderTarget1 = renderTarget;\n\t\tthis.renderTarget2 = renderTarget.clone();\n\n\t\tthis.writeBuffer = this.renderTarget1;\n\t\tthis.readBuffer = this.renderTarget2;\n\n\t},\n\n\tsetSize: function ( width, height ) {\n\n\t\tvar renderTarget = this.renderTarget1.clone();\n\n\t\trenderTarget.width = width;\n\t\trenderTarget.height = height;\n\n\t\tthis.reset( renderTarget );\n\n\t}\n\n};/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.RenderPass = function ( scene, camera, overrideMaterial, clearColor, clearAlpha ) {\n\n\tthis.scene = scene;\n\tthis.camera = camera;\n\n\tthis.overrideMaterial = overrideMaterial;\n\n\tthis.clearColor = clearColor;\n\tthis.clearAlpha = ( clearAlpha !== undefined ) ? clearAlpha : 1;\n\n\tthis.oldClearColor = new THREE.Color();\n\tthis.oldClearAlpha = 1;\n\n\tthis.enabled = true;\n\tthis.clear = true;\n\tthis.needsSwap = false;\n\n};\n\nTHREE.RenderPass.prototype = {\n\n\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\n\t\tthis.scene.overrideMaterial = this.overrideMaterial;\n\n\t\tif ( this.clearColor ) {\n\n\t\t\tthis.oldClearColor.copy( renderer.getClearColor() );\n\t\t\tthis.oldClearAlpha = renderer.getClearAlpha();\n\n\t\t\trenderer.setClearColor( this.clearColor, this.clearAlpha );\n\n\t\t}\n\n\t\trenderer.render( this.scene, this.camera, readBuffer, this.clear );\n\n\t\tif ( this.clearColor ) {\n\n\t\t\trenderer.setClearColor( this.oldClearColor, this.oldClearAlpha );\n\n\t\t}\n\n\t\tthis.scene.overrideMaterial = null;\n\n\t}\n\n};\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.BloomPass = function ( strength, kernelSize, sigma, resolution ) {\n\n\tstrength = ( strength !== undefined ) ? strength : 1;\n\tkernelSize = ( kernelSize !== undefined ) ? kernelSize : 25;\n\tsigma = ( sigma !== undefined ) ? sigma : 4.0;\n\tresolution = ( resolution !== undefined ) ? resolution : 256;\n\n\t// render targets\n\n\tvar pars = { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBFormat };\n\n\tthis.renderTargetX = new THREE.WebGLRenderTarget( resolution, resolution, pars );\n\tthis.renderTargetY = new THREE.WebGLRenderTarget( resolution, resolution, pars );\n\n\t// copy material\n\n\tif ( THREE.CopyShader === undefined )\n\t\tconsole.error( \"THREE.BloomPass relies on THREE.CopyShader\" );\n\n\tvar copyShader = THREE.CopyShader;\n\n\tthis.copyUniforms = THREE.UniformsUtils.clone( copyShader.uniforms );\n\n\tthis.copyUniforms[ \"opacity\" ].value = strength;\n\n\tthis.materialCopy = new THREE.ShaderMaterial( {\n\n\t\tuniforms: this.copyUniforms,\n\t\tvertexShader: copyShader.vertexShader,\n\t\tfragmentShader: copyShader.fragmentShader,\n\t\tblending: THREE.AdditiveBlending,\n\t\ttransparent: true\n\n\t} );\n\n\t// convolution material\n\n\tif ( THREE.ConvolutionShader === undefined )\n\t\tconsole.error( \"THREE.BloomPass relies on THREE.ConvolutionShader\" );\n\n\tvar convolutionShader = THREE.ConvolutionShader;\n\n\tthis.convolutionUniforms = THREE.UniformsUtils.clone( convolutionShader.uniforms );\n\n\tthis.convolutionUniforms[ \"uImageIncrement\" ].value = THREE.BloomPass.blurX;\n\tthis.convolutionUniforms[ \"cKernel\" ].value = THREE.ConvolutionShader.buildKernel( sigma );\n\n\tthis.materialConvolution = new THREE.ShaderMaterial( {\n\n\t\tuniforms: this.convolutionUniforms,\n\t\tvertexShader:  convolutionShader.vertexShader,\n\t\tfragmentShader: convolutionShader.fragmentShader,\n\t\tdefines: {\n\t\t\t\"KERNEL_SIZE_FLOAT\": kernelSize.toFixed( 1 ),\n\t\t\t\"KERNEL_SIZE_INT\": kernelSize.toFixed( 0 )\n\t\t}\n\n\t} );\n\n\tthis.enabled = true;\n\tthis.needsSwap = false;\n\tthis.clear = false;\n\n\n\tthis.camera = new THREE.OrthographicCamera( -1, 1, 1, -1, 0, 1 );\n\tthis.scene  = new THREE.Scene();\n\n\tthis.quad = new THREE.Mesh( new THREE.PlaneBufferGeometry( 2, 2 ), null );\n\tthis.scene.add( this.quad );\n\n};\n\nTHREE.BloomPass.prototype = {\n\n\trender: function ( renderer, writeBuffer, readBuffer, delta, maskActive ) {\n\n\t\tif ( maskActive ) renderer.context.disable( renderer.context.STENCIL_TEST );\n\n\t\t// Render quad with blured scene into texture (convolution pass 1)\n\n\t\tthis.quad.material = this.materialConvolution;\n\n\t\tthis.convolutionUniforms[ \"tDiffuse\" ].value = readBuffer;\n\t\tthis.convolutionUniforms[ \"uImageIncrement\" ].value = THREE.BloomPass.blurX;\n\n\t\trenderer.render( this.scene, this.camera, this.renderTargetX, true );\n\n\n\t\t// Render quad with blured scene into texture (convolution pass 2)\n\n\t\tthis.convolutionUniforms[ \"tDiffuse\" ].value = this.renderTargetX;\n\t\tthis.convolutionUniforms[ \"uImageIncrement\" ].value = THREE.BloomPass.blurY;\n\n\t\trenderer.render( this.scene, this.camera, this.renderTargetY, true );\n\n\t\t// Render original scene with superimposed blur to texture\n\n\t\tthis.quad.material = this.materialCopy;\n\n\t\tthis.copyUniforms[ \"tDiffuse\" ].value = this.renderTargetY;\n\n\t\tif ( maskActive ) renderer.context.enable( renderer.context.STENCIL_TEST );\n\n\t\trenderer.render( this.scene, this.camera, readBuffer, this.clear );\n\n\t}\n\n};\n\nTHREE.BloomPass.blurX = new THREE.Vector2( 0.001953125, 0.0 );\nTHREE.BloomPass.blurY = new THREE.Vector2( 0.0, 0.001953125 );/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.ShaderPass = function ( shader, textureID ) {\n\n\tthis.textureID = ( textureID !== undefined ) ? textureID : \"tDiffuse\";\n\n\tthis.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\n\tthis.material = new THREE.ShaderMaterial( {\n\n        \tdefines: shader.defines || {},\n\t\tuniforms: this.uniforms,\n\t\tvertexShader: shader.vertexShader,\n\t\tfragmentShader: shader.fragmentShader\n\n\t} );\n\n\tthis.renderToScreen = false;\n\n\tthis.enabled = true;\n\tthis.needsSwap = true;\n\tthis.clear = false;\n\n\n\tthis.camera = new THREE.OrthographicCamera( -1, 1, 1, -1, 0, 1 );\n\tthis.scene  = new THREE.Scene();\n\n\tthis.quad = new THREE.Mesh( new THREE.PlaneBufferGeometry( 2, 2 ), null );\n\tthis.scene.add( this.quad );\n\n};\n\nTHREE.ShaderPass.prototype = {\n\n\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\n\t\tif ( this.uniforms[ this.textureID ] ) {\n\n\t\t\tthis.uniforms[ this.textureID ].value = readBuffer;\n\n\t\t}\n\n\t\tthis.quad.material = this.material;\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.render( this.scene, this.camera );\n\n\t\t} else {\n\n\t\t\trenderer.render( this.scene, this.camera, writeBuffer, this.clear );\n\n\t\t}\n\n\t}\n\n};/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.MaskPass = function ( scene, camera ) {\n\n\tthis.scene = scene;\n\tthis.camera = camera;\n\n\tthis.enabled = true;\n\tthis.clear = true;\n\tthis.needsSwap = false;\n\n\tthis.inverse = false;\n\n};\n\nTHREE.MaskPass.prototype = {\n\n\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\n\t\tvar context = renderer.context;\n\n\t\t// don't update color or depth\n\n\t\tcontext.colorMask( false, false, false, false );\n\t\tcontext.depthMask( false );\n\n\t\t// set up stencil\n\n\t\tvar writeValue, clearValue;\n\n\t\tif ( this.inverse ) {\n\n\t\t\twriteValue = 0;\n\t\t\tclearValue = 1;\n\n\t\t} else {\n\n\t\t\twriteValue = 1;\n\t\t\tclearValue = 0;\n\n\t\t}\n\n\t\tcontext.enable( context.STENCIL_TEST );\n\t\tcontext.stencilOp( context.REPLACE, context.REPLACE, context.REPLACE );\n\t\tcontext.stencilFunc( context.ALWAYS, writeValue, 0xffffffff );\n\t\tcontext.clearStencil( clearValue );\n\n\t\t// draw into the stencil buffer\n\n\t\trenderer.render( this.scene, this.camera, readBuffer, this.clear );\n\t\trenderer.render( this.scene, this.camera, writeBuffer, this.clear );\n\n\t\t// re-enable update of color and depth\n\n\t\tcontext.colorMask( true, true, true, true );\n\t\tcontext.depthMask( true );\n\n\t\t// only render where stencil is set to 1\n\n\t\tcontext.stencilFunc( context.EQUAL, 1, 0xffffffff );  // draw if == 1\n\t\tcontext.stencilOp( context.KEEP, context.KEEP, context.KEEP );\n\n\t}\n\n};\n\n\nTHREE.ClearMaskPass = function () {\n\n\tthis.enabled = true;\n\n};\n\nTHREE.ClearMaskPass.prototype = {\n\n\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\n\t\tvar context = renderer.context;\n\n\t\tcontext.disable( context.STENCIL_TEST );\n\n\t}\n\n};\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.SavePass = function ( renderTarget ) {\n\n\tif ( THREE.CopyShader === undefined )\n\t\tconsole.error( \"THREE.SavePass relies on THREE.CopyShader\" );\n\n\tvar shader = THREE.CopyShader;\n\n\tthis.textureID = \"tDiffuse\";\n\n\tthis.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\n\tthis.material = new THREE.ShaderMaterial( {\n\n\t\tuniforms: this.uniforms,\n\t\tvertexShader: shader.vertexShader,\n\t\tfragmentShader: shader.fragmentShader\n\n\t} );\n\n\tthis.renderTarget = renderTarget;\n\n\tif ( this.renderTarget === undefined ) {\n\n\t\tthis.renderTargetParameters = { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBFormat, stencilBuffer: false };\n\t\tthis.renderTarget = new THREE.WebGLRenderTarget( window.innerWidth, window.innerHeight, this.renderTargetParameters );\n\n\t}\n\n\tthis.enabled = true;\n\tthis.needsSwap = false;\n\tthis.clear = false;\n\n\n\tthis.camera = new THREE.OrthographicCamera( -1, 1, 1, -1, 0, 1 );\n\tthis.scene  = new THREE.Scene();\n\n\tthis.quad = new THREE.Mesh( new THREE.PlaneBufferGeometry( 2, 2 ), null );\n\tthis.scene.add( this.quad );\n\n};\n\nTHREE.SavePass.prototype = {\n\n\trender: function ( renderer, writeBuffer, readBuffer, delta ) {\n\n\t\tif ( this.uniforms[ this.textureID ] ) {\n\n\t\t\tthis.uniforms[ this.textureID ].value = readBuffer;\n\n\t\t}\n\n\t\tthis.quad.material = this.material;\n\n\t\trenderer.render( this.scene, this.camera, this.renderTarget, this.clear );\n\n\t}\n\n};/**\n * @author alteredq / http://alteredqualia.com/\n *\n */\n\nTHREE.ShaderTerrain = {\n\n\t/* -------------------------------------------------------------------------\n\t//\tDynamic terrain shader\n\t//\t\t- Blinn-Phong\n\t//\t\t- height + normal + diffuse1 + diffuse2 + specular + detail maps\n\t//\t\t- point, directional and hemisphere lights (use with \"lights: true\" material option)\n\t//\t\t- shadow maps receiving\n\t ------------------------------------------------------------------------- */\n\n\t'terrain' : {\n\n\t\tuniforms: THREE.UniformsUtils.merge( [\n\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\n\t\t\tTHREE.UniformsLib[ \"lights\" ],\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ],\n\n\t\t\t{\n\n\t\t\t\"enableDiffuse1\"  : { type: \"i\", value: 0 },\n\t\t\t\"enableDiffuse2\"  : { type: \"i\", value: 0 },\n\t\t\t\"enableSpecular\"  : { type: \"i\", value: 0 },\n\t\t\t\"enableReflection\": { type: \"i\", value: 0 },\n\n\t\t\t\"tDiffuse1\"\t   : { type: \"t\", value: null },\n\t\t\t\"tDiffuse2\"\t   : { type: \"t\", value: null },\n\t\t\t\"tDetail\"\t   : { type: \"t\", value: null },\n\t\t\t\"tNormal\"\t   : { type: \"t\", value: null },\n\t\t\t\"tSpecular\"\t   : { type: \"t\", value: null },\n\t\t\t\"tDisplacement\": { type: \"t\", value: null },\n\n\t\t\t\"uNormalScale\": { type: \"f\", value: 1.0 },\n\n\t\t\t\"uDisplacementBias\": { type: \"f\", value: 0.0 },\n\t\t\t\"uDisplacementScale\": { type: \"f\", value: 1.0 },\n\n\t\t\t\"diffuse\": { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\n\t\t\t\"specular\": { type: \"c\", value: new THREE.Color( 0x111111 ) },\n\t\t\t\"shininess\": { type: \"f\", value: 30 },\n\t\t\t\"opacity\": { type: \"f\", value: 1 },\n\n\t\t\t\"uRepeatBase\"    : { type: \"v2\", value: new THREE.Vector2( 1, 1 ) },\n\t\t\t\"uRepeatOverlay\" : { type: \"v2\", value: new THREE.Vector2( 1, 1 ) },\n\n\t\t\t\"uOffset\" : { type: \"v2\", value: new THREE.Vector2( 0, 0 ) }\n\n\t\t\t}\n\n\t\t] ),\n\n\t\tfragmentShader: [\n\n\t\t\t\"uniform vec3 diffuse;\",\n\t\t\t\"uniform vec3 specular;\",\n\t\t\t\"uniform float shininess;\",\n\t\t\t\"uniform float opacity;\",\n\n\t\t\t\"uniform bool enableDiffuse1;\",\n\t\t\t\"uniform bool enableDiffuse2;\",\n\t\t\t\"uniform bool enableSpecular;\",\n\n\t\t\t\"uniform sampler2D tDiffuse1;\",\n\t\t\t\"uniform sampler2D tDiffuse2;\",\n\t\t\t\"uniform sampler2D tDetail;\",\n\t\t\t\"uniform sampler2D tNormal;\",\n\t\t\t\"uniform sampler2D tSpecular;\",\n\t\t\t\"uniform sampler2D tDisplacement;\",\n\n\t\t\t\"uniform float uNormalScale;\",\n\n\t\t\t\"uniform vec2 uRepeatOverlay;\",\n\t\t\t\"uniform vec2 uRepeatBase;\",\n\n\t\t\t\"uniform vec2 uOffset;\",\n\n\t\t\t\"varying vec3 vTangent;\",\n\t\t\t\"varying vec3 vBinormal;\",\n\t\t\t\"varying vec3 vNormal;\",\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"uniform vec3 ambientLightColor;\",\n\n\t\t\t\"#if MAX_DIR_LIGHTS > 0\",\n\n\t\t\t\t\"uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\",\n\t\t\t\t\"uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\",\n\n\t\t\t\"#endif\",\n\n\t\t\t\"#if MAX_HEMI_LIGHTS > 0\",\n\n\t\t\t\t\"uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\",\n\t\t\t\t\"uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\",\n\t\t\t\t\"uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\",\n\n\t\t\t\"#endif\",\n\n\t\t\t\"#if MAX_POINT_LIGHTS > 0\",\n\n\t\t\t\t\"uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\",\n\t\t\t\t\"uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\",\n\t\t\t\t\"uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\",\n\t\t\t\t\"uniform float pointLightDecay[ MAX_POINT_LIGHTS ];\",\n\n\t\t\t\"#endif\",\n\n\t\t\t\"varying vec3 vViewPosition;\",\n\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vec3 outgoingLight = vec3( 0.0 );\",\t// outgoing light does not have an alpha, the surface does\n\t\t\t\t\"vec4 diffuseColor = vec4( diffuse, opacity );\",\n\n\t\t\t\t\"vec3 specularTex = vec3( 1.0 );\",\n\n\t\t\t\t\"vec2 uvOverlay = uRepeatOverlay * vUv + uOffset;\",\n\t\t\t\t\"vec2 uvBase = uRepeatBase * vUv;\",\n\n\t\t\t\t\"vec3 normalTex = texture2D( tDetail, uvOverlay ).xyz * 2.0 - 1.0;\",\n\t\t\t\t\"normalTex.xy *= uNormalScale;\",\n\t\t\t\t\"normalTex = normalize( normalTex );\",\n\n\t\t\t\t\"if( enableDiffuse1 && enableDiffuse2 ) {\",\n\n\t\t\t\t\t\"vec4 colDiffuse1 = texture2D( tDiffuse1, uvOverlay );\",\n\t\t\t\t\t\"vec4 colDiffuse2 = texture2D( tDiffuse2, uvOverlay );\",\n\n\t\t\t\t\t\"colDiffuse1.xyz = inputToLinear( colDiffuse1.xyz );\",\n\t\t\t\t\t\"colDiffuse2.xyz = inputToLinear( colDiffuse2.xyz );\",\n\n\t\t\t\t\t\"diffuseColor *= mix ( colDiffuse1, colDiffuse2, 1.0 - texture2D( tDisplacement, uvBase ) );\",\n\n\t\t\t\t\" } else if( enableDiffuse1 ) {\",\n\n\t\t\t\t\t\"diffuseColor *= texture2D( tDiffuse1, uvOverlay );\",\n\n\t\t\t\t\"} else if( enableDiffuse2 ) {\",\n\n\t\t\t\t\t\"diffuseColor *= texture2D( tDiffuse2, uvOverlay );\",\n\n\t\t\t\t\"}\",\n\n\t\t\t\t\"if( enableSpecular )\",\n\t\t\t\t\t\"specularTex = texture2D( tSpecular, uvOverlay ).xyz;\",\n\n\t\t\t\t\"mat3 tsb = mat3( vTangent, vBinormal, vNormal );\",\n\t\t\t\t\"vec3 finalNormal = tsb * normalTex;\",\n\n\t\t\t\t\"vec3 normal = normalize( finalNormal );\",\n\t\t\t\t\"vec3 viewPosition = normalize( vViewPosition );\",\n\n\t\t\t\t\"vec3 totalDiffuseLight = vec3( 0.0 );\",\n\t\t\t\t\"vec3 totalSpecularLight = vec3( 0.0 );\",\n\n\t\t\t\t// point lights\n\n\t\t\t\t\"#if MAX_POINT_LIGHTS > 0\",\n\n\t\t\t\t\t\"for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\",\n\n\t\t\t\t\t\t\"vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\",\n\t\t\t\t\t\t\"vec3 lVector = lPosition.xyz + vViewPosition.xyz;\",\n\n\t\t\t\t\t\t\"float attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[i] );\",\n\n\t\t\t\t\t\t\"lVector = normalize( lVector );\",\n\n\t\t\t\t\t\t\"vec3 pointHalfVector = normalize( lVector + viewPosition );\",\n\n\t\t\t\t\t\t\"float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\",\n\t\t\t\t\t\t\"float pointDiffuseWeight = max( dot( normal, lVector ), 0.0 );\",\n\n\t\t\t\t\t\t\"float pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );\",\n\n\t\t\t\t\t\t\"totalDiffuseLight += attenuation * pointLightColor[ i ] * pointDiffuseWeight;\",\n\t\t\t\t\t\t\"totalSpecularLight += attenuation * pointLightColor[ i ] * specular * pointSpecularWeight * pointDiffuseWeight;\",\n\n\t\t\t\t\t\"}\",\n\n\t\t\t\t\"#endif\",\n\n\t\t\t\t// directional lights\n\n\t\t\t\t\"#if MAX_DIR_LIGHTS > 0\",\n\n\t\t\t\t\t\"vec3 dirDiffuse = vec3( 0.0 );\",\n\t\t\t\t\t\"vec3 dirSpecular = vec3( 0.0 );\",\n\n\t\t\t\t\t\"for( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\",\n\n\t\t\t\t\t\t\"vec3 dirVector = transformDirection( directionalLightDirection[ i ], viewMatrix );\",\n\t\t\t\t\t\t\"vec3 dirHalfVector = normalize( dirVector + viewPosition );\",\n\n\t\t\t\t\t\t\"float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\",\n\t\t\t\t\t\t\"float dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\",\n\n\t\t\t\t\t\t\"float dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );\",\n\n\t\t\t\t\t\t\"totalDiffuseLight += directionalLightColor[ i ] * dirDiffuseWeight;\",\n\t\t\t\t\t\t\"totalSpecularLight += directionalLightColor[ i ] * specular * dirSpecularWeight * dirDiffuseWeight;\",\n\n\t\t\t\t\t\"}\",\n\n\t\t\t\t\"#endif\",\n\n\t\t\t\t// hemisphere lights\n\n\t\t\t\t\"#if MAX_HEMI_LIGHTS > 0\",\n\n\t\t\t\t\t\"vec3 hemiDiffuse  = vec3( 0.0 );\",\n\t\t\t\t\t\"vec3 hemiSpecular = vec3( 0.0 );\",\n\n\t\t\t\t\t\"for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\",\n\n\t\t\t\t\t\t\"vec3 lVector = transformDirection( hemisphereLightDirection[ i ], viewMatrix );\",\n\n\t\t\t\t\t\t// diffuse\n\n\t\t\t\t\t\t\"float dotProduct = dot( normal, lVector );\",\n\t\t\t\t\t\t\"float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\",\n\n\t\t\t\t\t\t\"totalDiffuseLight += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\",\n\n\t\t\t\t\t\t// specular (sky light)\n\n\t\t\t\t\t\t\"float hemiSpecularWeight = 0.0;\",\n\n\t\t\t\t\t\t\"vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\",\n\t\t\t\t\t\t\"float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\",\n\t\t\t\t\t\t\"hemiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\",\n\n\t\t\t\t\t\t// specular (ground light)\n\n\t\t\t\t\t\t\"vec3 lVectorGround = -lVector;\",\n\n\t\t\t\t\t\t\"vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\",\n\t\t\t\t\t\t\"float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\",\n\t\t\t\t\t\t\"hemiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\",\n\n\t\t\t\t\t\t\"totalSpecularLight += specular * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * hemiDiffuseWeight;\",\n\n\t\t\t\t\t\"}\",\n\n\t\t\t\t\"#endif\",\n\n\t\t\t\t\"outgoingLight += diffuseColor.xyz * ( totalDiffuseLight + ambientLightColor + totalSpecularLight );\",\n\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\n\n\t\t\t\t\"gl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\t// TODO, this should be pre-multiplied to allow for bright highlights on very transparent objects\n\n\t\t\t\"}\"\n\n\t\t].join(\"\\n\"),\n\n\t\tvertexShader: [\n\n\t\t\t\"attribute vec4 tangent;\",\n\n\t\t\t\"uniform vec2 uRepeatBase;\",\n\n\t\t\t\"uniform sampler2D tNormal;\",\n\n\t\t\t\"#ifdef VERTEX_TEXTURES\",\n\n\t\t\t\t\"uniform sampler2D tDisplacement;\",\n\t\t\t\t\"uniform float uDisplacementScale;\",\n\t\t\t\t\"uniform float uDisplacementBias;\",\n\n\t\t\t\"#endif\",\n\n\t\t\t\"varying vec3 vTangent;\",\n\t\t\t\"varying vec3 vBinormal;\",\n\t\t\t\"varying vec3 vNormal;\",\n\t\t\t\"varying vec2 vUv;\",\n\n\t\t\t\"varying vec3 vViewPosition;\",\n\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\n\n\t\t\t\"void main() {\",\n\n\t\t\t\t\"vNormal = normalize( normalMatrix * normal );\",\n\n\t\t\t\t// tangent and binormal vectors\n\n\t\t\t\t\"vTangent = normalize( normalMatrix * tangent.xyz );\",\n\n\t\t\t\t\"vBinormal = cross( vNormal, vTangent ) * tangent.w;\",\n\t\t\t\t\"vBinormal = normalize( vBinormal );\",\n\n\t\t\t\t// texture coordinates\n\n\t\t\t\t\"vUv = uv;\",\n\n\t\t\t\t\"vec2 uvBase = uv * uRepeatBase;\",\n\n\t\t\t\t// displacement mapping\n\n\t\t\t\t\"#ifdef VERTEX_TEXTURES\",\n\n\t\t\t\t\t\"vec3 dv = texture2D( tDisplacement, uvBase ).xyz;\",\n\t\t\t\t\t\"float df = uDisplacementScale * dv.x + uDisplacementBias;\",\n\t\t\t\t\t\"vec3 displacedPosition = normal * df + position;\",\n\n\t\t\t\t\t\"vec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\",\n\t\t\t\t\t\"vec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\",\n\n\t\t\t\t\"#else\",\n\n\t\t\t\t\t\"vec4 worldPosition = modelMatrix * vec4( position, 1.0 );\",\n\t\t\t\t\t\"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\t\t\"#endif\",\n\n\t\t\t\t\"gl_Position = projectionMatrix * mvPosition;\",\n\n\t\t\t\t\"vViewPosition = -mvPosition.xyz;\",\n\n\t\t\t\t\"vec3 normalTex = texture2D( tNormal, uvBase ).xyz * 2.0 - 1.0;\",\n\t\t\t\t\"vNormal = normalMatrix * normalTex;\",\n\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\n\n\t\t\t\"}\"\n\n\t\t].join(\"\\n\")\n\n\t}\n\n};/**\n * @author alteredq / http://alteredqualia.com/\n * @author mr.doob / http://mrdoob.com/\n */\n\nvar Detector = {\n\n\tcanvas: !! window.CanvasRenderingContext2D,\n\twebgl: ( function () { try { var canvas = document.createElement( 'canvas' ); return !! ( window.WebGLRenderingContext && ( canvas.getContext( 'webgl' ) || canvas.getContext( 'experimental-webgl' ) ) ); } catch ( e ) { return false; } } )(),\n\tworkers: !! window.Worker,\n\tfileapi: window.File && window.FileReader && window.FileList && window.Blob,\n\n\tgetWebGLErrorMessage: function () {\n\n\t\tvar element = document.createElement( 'div' );\n\t\telement.id = 'webgl-error-message';\n\t\telement.style.fontFamily = 'monospace';\n\t\telement.style.fontSize = '13px';\n\t\telement.style.fontWeight = 'normal';\n\t\telement.style.textAlign = 'center';\n\t\telement.style.background = '#fff';\n\t\telement.style.color = '#000';\n\t\telement.style.padding = '1.5em';\n\t\telement.style.width = '400px';\n\t\telement.style.margin = '5em auto 0';\n\n\t\tif ( ! this.webgl ) {\n\n\t\t\telement.innerHTML = window.WebGLRenderingContext ? [\n\t\t\t\t'Your graphics card does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000\">WebGL</a>.<br />',\n\t\t\t\t'Find out how to get it <a href=\"http://get.webgl.org/\" style=\"color:#000\">here</a>.'\n\t\t\t].join( '\\n' ) : [\n\t\t\t\t'Your browser does not seem to support <a href=\"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" style=\"color:#000\">WebGL</a>.<br/>',\n\t\t\t\t'Find out how to get it <a href=\"http://get.webgl.org/\" style=\"color:#000\">here</a>.'\n\t\t\t].join( '\\n' );\n\n\t\t}\n\n\t\treturn element;\n\n\t},\n\n\taddGetWebGLMessage: function ( parameters ) {\n\n\t\tvar parent, id, element;\n\n\t\tparameters = parameters || {};\n\n\t\tparent = parameters.parent !== undefined ? parameters.parent : document.body;\n\t\tid = parameters.id !== undefined ? parameters.id : 'oldie';\n\n\t\telement = Detector.getWebGLErrorMessage();\n\t\telement.id = id;\n\n\t\tparent.appendChild( element );\n\n\t}\n\n};\n\n// browserify support\nif ( typeof module === 'object' ) {\n\n\tmodule.exports = Detector;\n\n}// stats.js - http://github.com/mrdoob/stats.js\nvar Stats=function(){var l=Date.now(),m=l,g=0,n=Infinity,o=0,h=0,p=Infinity,q=0,r=0,s=0,f=document.createElement(\"div\");f.id=\"stats\";f.addEventListener(\"mousedown\",function(b){b.preventDefault();t(++s%2)},!1);f.style.cssText=\"width:80px;opacity:0.9;cursor:pointer\";var a=document.createElement(\"div\");a.id=\"fps\";a.style.cssText=\"padding:0 0 3px 3px;text-align:left;background-color:#002\";f.appendChild(a);var i=document.createElement(\"div\");i.id=\"fpsText\";i.style.cssText=\"color:#0ff;font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px\";\ni.innerHTML=\"FPS\";a.appendChild(i);var c=document.createElement(\"div\");c.id=\"fpsGraph\";c.style.cssText=\"position:relative;width:74px;height:30px;background-color:#0ff\";for(a.appendChild(c);74>c.children.length;){var j=document.createElement(\"span\");j.style.cssText=\"width:1px;height:30px;float:left;background-color:#113\";c.appendChild(j)}var d=document.createElement(\"div\");d.id=\"ms\";d.style.cssText=\"padding:0 0 3px 3px;text-align:left;background-color:#020;display:none\";f.appendChild(d);var k=document.createElement(\"div\");\nk.id=\"msText\";k.style.cssText=\"color:#0f0;font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px\";k.innerHTML=\"MS\";d.appendChild(k);var e=document.createElement(\"div\");e.id=\"msGraph\";e.style.cssText=\"position:relative;width:74px;height:30px;background-color:#0f0\";for(d.appendChild(e);74>e.children.length;)j=document.createElement(\"span\"),j.style.cssText=\"width:1px;height:30px;float:left;background-color:#131\",e.appendChild(j);var t=function(b){s=b;switch(s){case 0:a.style.display=\n\"block\";d.style.display=\"none\";break;case 1:a.style.display=\"none\",d.style.display=\"block\"}};return{REVISION:11,domElement:f,setMode:t,begin:function(){l=Date.now()},end:function(){var b=Date.now();g=b-l;n=Math.min(n,g);o=Math.max(o,g);k.textContent=g+\" MS (\"+n+\"-\"+o+\")\";var a=Math.min(30,30-30*(g/200));e.appendChild(e.firstChild).style.height=a+\"px\";r++;b>m+1E3&&(h=Math.round(1E3*r/(b-m)),p=Math.min(p,h),q=Math.max(q,h),i.textContent=h+\" FPS (\"+p+\"-\"+q+\")\",a=Math.min(30,30-30*(h/100)),c.appendChild(c.firstChild).style.height=\na+\"px\",m=b,r=0);return b},update:function(){l=this.end()}}};\n/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n */\n/*global THREE, console */\n\n// This set of controls performs orbiting, dollying (zooming), and panning. It maintains\n// the \"up\" direction as +Y, unlike the TrackballControls. Touch on tablet and phones is\n// supported.\n//\n//    Orbit - left mouse / touch: one finger move\n//    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n//    Pan - right mouse, or arrow keys / touch: three finter swipe\n\nTHREE.OrbitControls = function ( object, domElement ) {\n\n\tthis.object = object;\n\tthis.domElement = ( domElement !== undefined ) ? domElement : document;\n\n\t// API\n\n\t// Set to false to disable this control\n\tthis.enabled = true;\n\n\t// \"target\" sets the location of focus, where the control orbits around\n\t// and where it pans with respect to.\n\tthis.target = new THREE.Vector3();\n\n\t// center is old, deprecated; use \"target\" instead\n\tthis.center = this.target;\n\n\t// This option actually enables dollying in and out; left as \"zoom\" for\n\t// backwards compatibility\n\tthis.noZoom = false;\n\tthis.zoomSpeed = 1.0;\n\n\t// Limits to how far you can dolly in and out ( PerspectiveCamera only )\n\tthis.minDistance = 0;\n\tthis.maxDistance = Infinity;\n\n\t// Limits to how far you can zoom in and out ( OrthographicCamera only )\n\tthis.minZoom = 0;\n\tthis.maxZoom = Infinity;\n\n\t// Set to true to disable this control\n\tthis.noRotate = false;\n\tthis.rotateSpeed = 1.0;\n\n\t// Set to true to disable this control\n\tthis.noPan = true;\n\tthis.keyPanSpeed = 20.0;\t// pixels moved per arrow key push\n\n\t// Set to true to automatically rotate around the target\n\tthis.autoRotate = false;\n\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n\t// How far you can orbit vertically, upper and lower limits.\n\t// Range is 0 to Math.PI radians.\n\tthis.minPolarAngle = 0; // radians\n\tthis.maxPolarAngle = Math.PI; // radians\n\n\t// How far you can orbit horizontally, upper and lower limits.\n\t// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\tthis.minAzimuthAngle = - Infinity; // radians\n\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t// Set to true to disable use of the keys\n\tthis.noKeys = false;\n\n\t// The four arrow keys\n\tthis.keys = {};\n\tthis.keys[\"UP\"] = 38;\n\tthis.keys[\"LEFT\"] = 37;\n\tthis.keys[\"RIGHT\"] = 39;\n\tthis.keys[\"BOTTOM\"] = 40;\n\n\n\t// Mouse buttons\n\tthis.mouseButtons = { ORBIT: THREE.MOUSE.LEFT, ZOOM: THREE.MOUSE.MIDDLE, PAN: THREE.MOUSE.RIGHT };\n\n\t////////////\n\t// internals\n\n\tvar scope = this;\n\n\tvar EPS = 0.000001;\n\n\tvar rotateStart = new THREE.Vector2();\n\tvar rotateEnd = new THREE.Vector2();\n\tvar rotateDelta = new THREE.Vector2();\n\n\tvar panStart = new THREE.Vector2();\n\tvar panEnd = new THREE.Vector2();\n\tvar panDelta = new THREE.Vector2();\n\tvar panOffset = new THREE.Vector3();\n\n\tvar offset = new THREE.Vector3();\n\n\tvar dollyStart = new THREE.Vector2();\n\tvar dollyEnd = new THREE.Vector2();\n\tvar dollyDelta = new THREE.Vector2();\n\n\tvar theta;\n\tvar phi;\n\tvar phiDelta = 0;\n\tvar thetaDelta = 0;\n\tvar scale = 1;\n\tvar pan = new THREE.Vector3();\n\n\tvar lastPosition = new THREE.Vector3();\n\tvar lastQuaternion = new THREE.Quaternion();\n\n\tvar STATE = { NONE : -1, ROTATE : 0, DOLLY : 1, PAN : 2, TOUCH_ROTATE : 3, TOUCH_DOLLY : 4, TOUCH_PAN : 5 };\n\n\tvar state = STATE.NONE;\n\n\t// for reset\n\n\tthis.target0 = this.target.clone();\n\tthis.position0 = this.object.position.clone();\n\tthis.zoom0 = this.object.zoom;\n\n\t// so camera.up is the orbit axis\n\n\tvar quat = new THREE.Quaternion().setFromUnitVectors( object.up, new THREE.Vector3( 0, 1, 0 ) );\n\tvar quatInverse = quat.clone().inverse();\n\n\t// events\n\n\tvar changeEvent = { type: 'change' };\n\tvar startEvent = { type: 'start' };\n\tvar endEvent = { type: 'end' };\n\n\tthis.rotateLeft = function ( angle ) {\n\n\t\tif ( angle === undefined ) {\n\n\t\t\tangle = getAutoRotationAngle();\n\n\t\t}\n\n\t\tthetaDelta -= angle;\n\n\t};\n\n\tthis.rotateUp = function ( angle ) {\n\n\t\tif ( angle === undefined ) {\n\n\t\t\tangle = getAutoRotationAngle();\n\n\t\t}\n\n\t\tphiDelta -= angle;\n\n\t};\n\n\t// pass in distance in world space to move left\n\tthis.panLeft = function ( distance ) {\n\n\t\tvar te = this.object.matrix.elements;\n\n\t\t// get X column of matrix\n\t\tpanOffset.set( te[ 0 ], te[ 1 ], te[ 2 ] );\n\t\tpanOffset.multiplyScalar( - distance );\n\n\t\tpan.add( panOffset );\n\n\t};\n\n\t// pass in distance in world space to move up\n\tthis.panUp = function ( distance ) {\n\n\t\tvar te = this.object.matrix.elements;\n\n\t\t// get Y column of matrix\n\t\tpanOffset.set( te[ 4 ], te[ 5 ], te[ 6 ] );\n\t\tpanOffset.multiplyScalar( distance );\n\n\t\tpan.add( panOffset );\n\n\t};\n\n\t// pass in x,y of change desired in pixel space,\n\t// right and down are positive\n\tthis.pan = function ( deltaX, deltaY ) {\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\t// perspective\n\t\t\tvar position = scope.object.position;\n\t\t\tvar offset = position.clone().sub( scope.target );\n\t\t\tvar targetDistance = offset.length();\n\n\t\t\t// half of the fov is center to top of screen\n\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t// we actually don't use screenWidth, since perspective camera is fixed to screen height\n\t\t\tscope.panLeft( 2 * deltaX * targetDistance / element.clientHeight );\n\t\t\tscope.panUp( 2 * deltaY * targetDistance / element.clientHeight );\n\n\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\t// orthographic\n\t\t\tscope.panLeft( deltaX * (scope.object.right - scope.object.left) / element.clientWidth );\n\t\t\tscope.panUp( deltaY * (scope.object.top - scope.object.bottom) / element.clientHeight );\n\n\t\t} else {\n\n\t\t\t// camera neither orthographic or perspective\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\n\t\t}\n\n\t};\n\n\tthis.dollyIn = function ( dollyScale ) {\n\n\t\tif ( dollyScale === undefined ) {\n\n\t\t\tdollyScale = getZoomScale();\n\n\t\t}\n\n\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\tscale /= dollyScale;\n\n\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom * dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\n\t\t}\n\n\t};\n\n\tthis.dollyOut = function ( dollyScale ) {\n\n\t\tif ( dollyScale === undefined ) {\n\n\t\t\tdollyScale = getZoomScale();\n\n\t\t}\n\n\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\tscale *= dollyScale;\n\n\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\tscope.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom / dollyScale ) );\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\n\t\t}\n\n\t};\n\n\tthis.update = function () {\n\n\t\tvar position = this.object.position;\n\n\t\toffset.copy( position ).sub( this.target );\n\n\t\t// rotate offset to \"y-axis-is-up\" space\n\t\toffset.applyQuaternion( quat );\n\n\t\t// angle from z-axis around y-axis\n\n\t\ttheta = Math.atan2( offset.x, offset.z );\n\n\t\t// angle from y-axis\n\n\t\tphi = Math.atan2( Math.sqrt( offset.x * offset.x + offset.z * offset.z ), offset.y );\n\n\t\tif ( this.autoRotate && state === STATE.NONE ) {\n\n\t\t\tthis.rotateLeft( getAutoRotationAngle() );\n\n\t\t}\n\n\t\ttheta += thetaDelta;\n\t\tphi += phiDelta;\n\n\t\t// restrict theta to be between desired limits\n\t\ttheta = Math.max( this.minAzimuthAngle, Math.min( this.maxAzimuthAngle, theta ) );\n\n\t\t// restrict phi to be between desired limits\n\t\tphi = Math.max( this.minPolarAngle, Math.min( this.maxPolarAngle, phi ) );\n\n\t\t// restrict phi to be betwee EPS and PI-EPS\n\t\tphi = Math.max( EPS, Math.min( Math.PI - EPS, phi ) );\n\n\t\tvar radius = offset.length() * scale;\n\n\t\t// restrict radius to be between desired limits\n\t\tradius = Math.max( this.minDistance, Math.min( this.maxDistance, radius ) );\n\n\t\t// move target to panned location\n\t\tthis.target.add( pan );\n\n\t\toffset.x = radius * Math.sin( phi ) * Math.sin( theta );\n\t\toffset.y = radius * Math.cos( phi );\n\t\toffset.z = radius * Math.sin( phi ) * Math.cos( theta );\n\n\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\toffset.applyQuaternion( quatInverse );\n\n\t\tposition.copy( this.target ).add( offset );\n\n\t\tthis.object.lookAt( this.target );\n\n\t\tthetaDelta = 0;\n\t\tphiDelta = 0;\n\t\tscale = 1;\n\t\tpan.set( 0, 0, 0 );\n\n\t\t// update condition is:\n\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\tif ( lastPosition.distanceToSquared( this.object.position ) > EPS\n\t\t    || 8 * (1 - lastQuaternion.dot(this.object.quaternion)) > EPS ) {\n\n\t\t\tthis.dispatchEvent( changeEvent );\n\n\t\t\tlastPosition.copy( this.object.position );\n\t\t\tlastQuaternion.copy (this.object.quaternion );\n\n\t\t}\n\n\t};\n\n\n\tthis.reset = function () {\n\n\t\tstate = STATE.NONE;\n\n\t\tthis.target.copy( this.target0 );\n\t\tthis.object.position.copy( this.position0 );\n\t\tthis.object.zoom = this.zoom0;\n\n\t\tthis.object.updateProjectionMatrix();\n\t\tthis.dispatchEvent( changeEvent );\n\n\t\tthis.update();\n\n\t};\n\n\tthis.getPolarAngle = function () {\n\n\t\treturn phi;\n\n\t};\n\n\tthis.getAzimuthalAngle = function () {\n\n\t\treturn theta\n\n\t};\n\n\tfunction getAutoRotationAngle() {\n\n\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t}\n\n\tfunction getZoomScale() {\n\n\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t}\n\n\tfunction onMouseDown( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tevent.preventDefault();\n\n\t\tif ( event.button === scope.mouseButtons.ORBIT ) {\n\t\t\tif ( scope.noRotate === true ) return;\n\n\t\t\tstate = STATE.ROTATE;\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t} else if ( event.button === scope.mouseButtons.ZOOM ) {\n\t\t\tif ( scope.noZoom === true ) return;\n\n\t\t\tstate = STATE.DOLLY;\n\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t} else if ( event.button === scope.mouseButtons.PAN ) {\n\t\t\tif ( scope.noPan === true ) return;\n\n\t\t\tstate = STATE.PAN;\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) {\n\t\t\tdocument.addEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.addEventListener( 'mouseup', onMouseUp, false );\n\t\t\tscope.dispatchEvent( startEvent );\n\t\t}\n\n\t}\n\n\tfunction onMouseMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\tif ( state === STATE.ROTATE ) {\n\n\t\t\tif ( scope.noRotate === true ) return;\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\n\t\t\t// rotating across whole screen goes 360 degrees around\n\t\t\tscope.rotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\n\t\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\t\tscope.rotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t} else if ( state === STATE.DOLLY ) {\n\n\t\t\tif ( scope.noZoom === true ) return;\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tscope.dollyIn();\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tscope.dollyOut();\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t} else if ( state === STATE.PAN ) {\n\n\t\t\tif ( scope.noPan === true ) return;\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\t\t\tpanDelta.subVectors( panEnd, panStart );\n\n\t\t\tscope.pan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) scope.update();\n\n\t}\n\n\tfunction onMouseUp( /* event */ ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\t\tscope.dispatchEvent( endEvent );\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onMouseWheel( event ) {\n\n\t\tif ( scope.enabled === false || scope.noZoom === true || state !== STATE.NONE ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tvar delta = 0;\n\n\t\tif ( event.wheelDelta !== undefined ) { // WebKit / Opera / Explorer 9\n\n\t\t\tdelta = event.wheelDelta;\n\n\t\t} else if ( event.detail !== undefined ) { // Firefox\n\n\t\t\tdelta = - event.detail;\n\n\t\t}\n\n\t\tif ( delta > 0 ) {\n\n\t\t\tscope.dollyOut();\n\n\t\t} else if ( delta < 0 ) {\n\n\t\t\tscope.dollyIn();\n\n\t\t}\n\n\t\tscope.update();\n\t\tscope.dispatchEvent( startEvent );\n\t\tscope.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction onKeyDown( event ) {\n\t\t\n\n\t\tif ( scope.enabled === false || scope.noKeys === true || scope.noPan === true ) return;\n\t\t\n\t\tswitch ( event.keyCode ) {\n\n\t\t\tcase 38:\n\t\t\t\t//alert(scope.keys.UP);\n\t\t\t\tscope.pan( 0, scope.keyPanSpeed );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tcase 40:\n\t\t\t\tscope.pan( 0, - scope.keyPanSpeed );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tcase 37:\n\t\t\t\tscope.pan( scope.keyPanSpeed, 0 );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tcase 39:\n\t\t\t\tscope.pan( - scope.keyPanSpeed, 0 );\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction touchstart( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1:\t// one-fingered touch: rotate\n\n\t\t\t\tif ( scope.noRotate === true ) return;\n\n\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\t// two-fingered touch: dolly\n\n\t\t\t\tif ( scope.noZoom === true ) return;\n\n\t\t\t\tstate = STATE.TOUCH_DOLLY;\n\n\t\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\t\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\t\t\t\tdollyStart.set( 0, distance );\n\t\t\t\tbreak;\n\n\t\t\tcase 3: // three-fingered touch: pan\n\n\t\t\t\tif ( scope.noPan === true ) return;\n\n\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tif ( state !== STATE.NONE ) scope.dispatchEvent( startEvent );\n\n\t}\n\n\tfunction touchmove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1: // one-fingered touch: rotate\n\n\t\t\t\tif ( scope.noRotate === true ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_ROTATE ) return;\n\n\t\t\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\n\t\t\t\t// rotating across whole screen goes 360 degrees around\n\t\t\t\tscope.rotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\t\t\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\t\t\tscope.rotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n\t\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tcase 2: // two-fingered touch: dolly\n\n\t\t\t\tif ( scope.noZoom === true ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_DOLLY ) return;\n\n\t\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\t\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\t\tdollyEnd.set( 0, distance );\n\t\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\t\tscope.dollyOut();\n\n\t\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\t\tscope.dollyIn();\n\n\t\t\t\t}\n\n\t\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tcase 3: // three-fingered touch: pan\n\n\t\t\t\tif ( scope.noPan === true ) return;\n\t\t\t\tif ( state !== STATE.TOUCH_PAN ) return;\n\n\t\t\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\tpanDelta.subVectors( panEnd, panStart );\n\n\t\t\t\tscope.pan( panDelta.x, panDelta.y );\n\n\t\t\t\tpanStart.copy( panEnd );\n\n\t\t\t\tscope.update();\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t}\n\n\tfunction touchend( /* event */ ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tscope.dispatchEvent( endEvent );\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tthis.domElement.addEventListener( 'contextmenu', function ( event ) { event.preventDefault(); }, false );\n\tthis.domElement.addEventListener( 'mousedown', onMouseDown, false );\n\tthis.domElement.addEventListener( 'mousewheel', onMouseWheel, false );\n\tthis.domElement.addEventListener( 'DOMMouseScroll', onMouseWheel, false ); // firefox\n\n\tthis.domElement.addEventListener( 'touchstart', touchstart, false );\n\tthis.domElement.addEventListener( 'touchend', touchend, false );\n\tthis.domElement.addEventListener( 'touchmove', touchmove, false );\n\n\twindow.addEventListener( 'keydown', onKeyDown, false );\n\n\t// force an update at start\n\tthis.update();\n\n};\n\nTHREE.OrbitControls.prototype = Object.create( THREE.EventDispatcher.prototype );\nTHREE.OrbitControls.prototype.constructor = THREE.OrbitControls;\nif (THREE.typeface_js && THREE.typeface_js.loadFace) THREE.typeface_js.loadFace({\"glyphs\":{\"ο\":{\"x_min\":0,\"x_max\":712,\"ha\":815,\"o\":\"m 356 -25 q 96 88 192 -25 q 0 368 0 201 q 92 642 0 533 q 356 761 192 761 q 617 644 517 761 q 712 368 712 533 q 619 91 712 201 q 356 -25 520 -25 m 356 85 q 527 175 465 85 q 583 369 583 255 q 528 562 583 484 q 356 651 466 651 q 189 560 250 651 q 135 369 135 481 q 187 177 135 257 q 356 85 250 85 \"},\"S\":{\"x_min\":0,\"x_max\":788,\"ha\":890,\"o\":\"m 788 291 q 662 54 788 144 q 397 -26 550 -26 q 116 68 226 -26 q 0 337 0 168 l 131 337 q 200 152 131 220 q 384 85 269 85 q 557 129 479 85 q 650 270 650 183 q 490 429 650 379 q 194 513 341 470 q 33 739 33 584 q 142 964 33 881 q 388 1041 242 1041 q 644 957 543 1041 q 756 716 756 867 l 625 716 q 561 874 625 816 q 395 933 497 933 q 243 891 309 933 q 164 759 164 841 q 325 609 164 656 q 625 526 475 568 q 788 291 788 454 \"},\"¦\":{\"x_min\":343,\"x_max\":449,\"ha\":792,\"o\":\"m 449 462 l 343 462 l 343 986 l 449 986 l 449 462 m 449 -242 l 343 -242 l 343 280 l 449 280 l 449 -242 \"},\"/\":{\"x_min\":183.25,\"x_max\":608.328125,\"ha\":792,\"o\":\"m 608 1041 l 266 -129 l 183 -129 l 520 1041 l 608 1041 \"},\"Τ\":{\"x_min\":-0.4375,\"x_max\":777.453125,\"ha\":839,\"o\":\"m 777 893 l 458 893 l 458 0 l 319 0 l 319 892 l 0 892 l 0 1013 l 777 1013 l 777 893 \"},\"y\":{\"x_min\":0,\"x_max\":684.78125,\"ha\":771,\"o\":\"m 684 738 l 388 -83 q 311 -216 356 -167 q 173 -279 252 -279 q 97 -266 133 -279 l 97 -149 q 132 -155 109 -151 q 168 -160 155 -160 q 240 -114 213 -160 q 274 -26 248 -98 l 0 738 l 137 737 l 341 139 l 548 737 l 684 738 \"},\"Π\":{\"x_min\":0,\"x_max\":803,\"ha\":917,\"o\":\"m 803 0 l 667 0 l 667 886 l 140 886 l 140 0 l 0 0 l 0 1012 l 803 1012 l 803 0 \"},\"ΐ\":{\"x_min\":-111,\"x_max\":339,\"ha\":361,\"o\":\"m 339 800 l 229 800 l 229 925 l 339 925 l 339 800 m -1 800 l -111 800 l -111 925 l -1 925 l -1 800 m 284 3 q 233 -10 258 -5 q 182 -15 207 -15 q 85 26 119 -15 q 42 200 42 79 l 42 737 l 167 737 l 168 215 q 172 141 168 157 q 226 101 183 101 q 248 103 239 101 q 284 112 257 104 l 284 3 m 302 1040 l 113 819 l 30 819 l 165 1040 l 302 1040 \"},\"g\":{\"x_min\":0,\"x_max\":686,\"ha\":838,\"o\":\"m 686 34 q 586 -213 686 -121 q 331 -306 487 -306 q 131 -252 216 -306 q 31 -84 31 -190 l 155 -84 q 228 -174 166 -138 q 345 -207 284 -207 q 514 -109 454 -207 q 564 89 564 -27 q 461 6 521 36 q 335 -23 401 -23 q 88 100 184 -23 q 0 370 0 215 q 87 634 0 522 q 330 758 183 758 q 457 728 398 758 q 564 644 515 699 l 564 737 l 686 737 l 686 34 m 582 367 q 529 560 582 481 q 358 652 468 652 q 189 561 250 652 q 135 369 135 482 q 189 176 135 255 q 361 85 251 85 q 529 176 468 85 q 582 367 582 255 \"},\"²\":{\"x_min\":0,\"x_max\":442,\"ha\":539,\"o\":\"m 442 383 l 0 383 q 91 566 0 492 q 260 668 176 617 q 354 798 354 727 q 315 875 354 845 q 227 905 277 905 q 136 869 173 905 q 99 761 99 833 l 14 761 q 82 922 14 864 q 232 974 141 974 q 379 926 316 974 q 442 797 442 878 q 351 635 442 704 q 183 539 321 611 q 92 455 92 491 l 442 455 l 442 383 \"},\"–\":{\"x_min\":0,\"x_max\":705.5625,\"ha\":803,\"o\":\"m 705 334 l 0 334 l 0 410 l 705 410 l 705 334 \"},\"Κ\":{\"x_min\":0,\"x_max\":819.5625,\"ha\":893,\"o\":\"m 819 0 l 650 0 l 294 509 l 139 356 l 139 0 l 0 0 l 0 1013 l 139 1013 l 139 526 l 626 1013 l 809 1013 l 395 600 l 819 0 \"},\"ƒ\":{\"x_min\":-46.265625,\"x_max\":392,\"ha\":513,\"o\":\"m 392 651 l 259 651 l 79 -279 l -46 -278 l 134 651 l 14 651 l 14 751 l 135 751 q 151 948 135 900 q 304 1041 185 1041 q 334 1040 319 1041 q 392 1034 348 1039 l 392 922 q 337 931 360 931 q 271 883 287 931 q 260 793 260 853 l 260 751 l 392 751 l 392 651 \"},\"e\":{\"x_min\":0,\"x_max\":714,\"ha\":813,\"o\":\"m 714 326 l 140 326 q 200 157 140 227 q 359 87 260 87 q 488 130 431 87 q 561 245 545 174 l 697 245 q 577 48 670 123 q 358 -26 484 -26 q 97 85 195 -26 q 0 363 0 197 q 94 642 0 529 q 358 765 195 765 q 626 627 529 765 q 714 326 714 503 m 576 429 q 507 583 564 522 q 355 650 445 650 q 206 583 266 650 q 140 429 152 522 l 576 429 \"},\"ό\":{\"x_min\":0,\"x_max\":712,\"ha\":815,\"o\":\"m 356 -25 q 94 91 194 -25 q 0 368 0 202 q 92 642 0 533 q 356 761 192 761 q 617 644 517 761 q 712 368 712 533 q 619 91 712 201 q 356 -25 520 -25 m 356 85 q 527 175 465 85 q 583 369 583 255 q 528 562 583 484 q 356 651 466 651 q 189 560 250 651 q 135 369 135 481 q 187 177 135 257 q 356 85 250 85 m 576 1040 l 387 819 l 303 819 l 438 1040 l 576 1040 \"},\"J\":{\"x_min\":0,\"x_max\":588,\"ha\":699,\"o\":\"m 588 279 q 287 -26 588 -26 q 58 73 126 -26 q 0 327 0 158 l 133 327 q 160 172 133 227 q 288 96 198 96 q 426 171 391 96 q 449 336 449 219 l 449 1013 l 588 1013 l 588 279 \"},\"»\":{\"x_min\":-1,\"x_max\":503,\"ha\":601,\"o\":\"m 503 302 l 280 136 l 281 256 l 429 373 l 281 486 l 280 608 l 503 440 l 503 302 m 221 302 l 0 136 l 0 255 l 145 372 l 0 486 l -1 608 l 221 440 l 221 302 \"},\"©\":{\"x_min\":-3,\"x_max\":1008,\"ha\":1106,\"o\":\"m 502 -7 q 123 151 263 -7 q -3 501 -3 294 q 123 851 -3 706 q 502 1011 263 1011 q 881 851 739 1011 q 1008 501 1008 708 q 883 151 1008 292 q 502 -7 744 -7 m 502 60 q 830 197 709 60 q 940 501 940 322 q 831 805 940 681 q 502 944 709 944 q 174 805 296 944 q 65 501 65 680 q 173 197 65 320 q 502 60 294 60 m 741 394 q 661 246 731 302 q 496 190 591 190 q 294 285 369 190 q 228 497 228 370 q 295 714 228 625 q 499 813 370 813 q 656 762 588 813 q 733 625 724 711 l 634 625 q 589 704 629 673 q 498 735 550 735 q 377 666 421 735 q 334 504 334 597 q 374 340 334 408 q 490 272 415 272 q 589 304 549 272 q 638 394 628 337 l 741 394 \"},\"ώ\":{\"x_min\":0,\"x_max\":922,\"ha\":1030,\"o\":\"m 687 1040 l 498 819 l 415 819 l 549 1040 l 687 1040 m 922 339 q 856 97 922 203 q 650 -26 780 -26 q 538 9 587 -26 q 461 103 489 44 q 387 12 436 46 q 277 -22 339 -22 q 69 97 147 -22 q 0 338 0 202 q 45 551 0 444 q 161 737 84 643 l 302 737 q 175 552 219 647 q 124 336 124 446 q 155 179 124 248 q 275 88 197 88 q 375 163 341 88 q 400 294 400 219 l 400 572 l 524 572 l 524 294 q 561 135 524 192 q 643 88 591 88 q 762 182 719 88 q 797 341 797 257 q 745 555 797 450 q 619 737 705 637 l 760 737 q 874 551 835 640 q 922 339 922 444 \"},\"^\":{\"x_min\":193.0625,\"x_max\":598.609375,\"ha\":792,\"o\":\"m 598 772 l 515 772 l 395 931 l 277 772 l 193 772 l 326 1013 l 462 1013 l 598 772 \"},\"«\":{\"x_min\":0,\"x_max\":507.203125,\"ha\":604,\"o\":\"m 506 136 l 284 302 l 284 440 l 506 608 l 507 485 l 360 371 l 506 255 l 506 136 m 222 136 l 0 302 l 0 440 l 222 608 l 221 486 l 73 373 l 222 256 l 222 136 \"},\"D\":{\"x_min\":0,\"x_max\":828,\"ha\":935,\"o\":\"m 389 1013 q 714 867 593 1013 q 828 521 828 729 q 712 161 828 309 q 382 0 587 0 l 0 0 l 0 1013 l 389 1013 m 376 124 q 607 247 523 124 q 681 510 681 355 q 607 771 681 662 q 376 896 522 896 l 139 896 l 139 124 l 376 124 \"},\"∙\":{\"x_min\":0,\"x_max\":142,\"ha\":239,\"o\":\"m 142 585 l 0 585 l 0 738 l 142 738 l 142 585 \"},\"ÿ\":{\"x_min\":0,\"x_max\":47,\"ha\":125,\"o\":\"m 47 3 q 37 -7 47 -7 q 28 0 30 -7 q 39 -4 32 -4 q 45 3 45 -1 l 37 0 q 28 9 28 0 q 39 19 28 19 l 47 16 l 47 19 l 47 3 m 37 1 q 44 8 44 1 q 37 16 44 16 q 30 8 30 16 q 37 1 30 1 m 26 1 l 23 22 l 14 0 l 3 22 l 3 3 l 0 25 l 13 1 l 22 25 l 26 1 \"},\"w\":{\"x_min\":0,\"x_max\":1009.71875,\"ha\":1100,\"o\":\"m 1009 738 l 783 0 l 658 0 l 501 567 l 345 0 l 222 0 l 0 738 l 130 738 l 284 174 l 432 737 l 576 738 l 721 173 l 881 737 l 1009 738 \"},\"$\":{\"x_min\":0,\"x_max\":700,\"ha\":793,\"o\":\"m 664 717 l 542 717 q 490 825 531 785 q 381 872 450 865 l 381 551 q 620 446 540 522 q 700 241 700 370 q 618 45 700 116 q 381 -25 536 -25 l 381 -152 l 307 -152 l 307 -25 q 81 62 162 -25 q 0 297 0 149 l 124 297 q 169 146 124 204 q 307 81 215 89 l 307 441 q 80 536 148 469 q 13 725 13 603 q 96 910 13 839 q 307 982 180 982 l 307 1077 l 381 1077 l 381 982 q 574 917 494 982 q 664 717 664 845 m 307 565 l 307 872 q 187 831 233 872 q 142 724 142 791 q 180 618 142 656 q 307 565 218 580 m 381 76 q 562 237 562 96 q 517 361 562 313 q 381 423 472 409 l 381 76 \"},\"\\\\\":{\"x_min\":-0.015625,\"x_max\":425.0625,\"ha\":522,\"o\":\"m 425 -129 l 337 -129 l 0 1041 l 83 1041 l 425 -129 \"},\"µ\":{\"x_min\":0,\"x_max\":697.21875,\"ha\":747,\"o\":\"m 697 -4 q 629 -14 658 -14 q 498 97 513 -14 q 422 9 470 41 q 313 -23 374 -23 q 207 4 258 -23 q 119 81 156 32 l 119 -278 l 0 -278 l 0 738 l 124 738 l 124 343 q 165 173 124 246 q 308 83 216 83 q 452 178 402 83 q 493 359 493 255 l 493 738 l 617 738 l 617 214 q 623 136 617 160 q 673 92 637 92 q 697 96 684 92 l 697 -4 \"},\"Ι\":{\"x_min\":42,\"x_max\":181,\"ha\":297,\"o\":\"m 181 0 l 42 0 l 42 1013 l 181 1013 l 181 0 \"},\"Ύ\":{\"x_min\":0,\"x_max\":1144.5,\"ha\":1214,\"o\":\"m 1144 1012 l 807 416 l 807 0 l 667 0 l 667 416 l 325 1012 l 465 1012 l 736 533 l 1004 1012 l 1144 1012 m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 \"},\"’\":{\"x_min\":0,\"x_max\":139,\"ha\":236,\"o\":\"m 139 851 q 102 737 139 784 q 0 669 65 690 l 0 734 q 59 787 42 741 q 72 873 72 821 l 0 873 l 0 1013 l 139 1013 l 139 851 \"},\"Ν\":{\"x_min\":0,\"x_max\":801,\"ha\":915,\"o\":\"m 801 0 l 651 0 l 131 822 l 131 0 l 0 0 l 0 1013 l 151 1013 l 670 191 l 670 1013 l 801 1013 l 801 0 \"},\"-\":{\"x_min\":8.71875,\"x_max\":350.390625,\"ha\":478,\"o\":\"m 350 317 l 8 317 l 8 428 l 350 428 l 350 317 \"},\"Q\":{\"x_min\":0,\"x_max\":968,\"ha\":1072,\"o\":\"m 954 5 l 887 -79 l 744 35 q 622 -11 687 2 q 483 -26 556 -26 q 127 130 262 -26 q 0 504 0 279 q 127 880 0 728 q 484 1041 262 1041 q 841 884 708 1041 q 968 507 968 735 q 933 293 968 398 q 832 104 899 188 l 954 5 m 723 191 q 802 330 777 248 q 828 499 828 412 q 744 790 828 673 q 483 922 650 922 q 228 791 322 922 q 142 505 142 673 q 227 221 142 337 q 487 91 323 91 q 632 123 566 91 l 520 215 l 587 301 l 723 191 \"},\"ς\":{\"x_min\":1,\"x_max\":676.28125,\"ha\":740,\"o\":\"m 676 460 l 551 460 q 498 595 542 546 q 365 651 448 651 q 199 578 263 651 q 136 401 136 505 q 266 178 136 241 q 508 106 387 142 q 640 -50 640 62 q 625 -158 640 -105 q 583 -278 611 -211 l 465 -278 q 498 -182 490 -211 q 515 -80 515 -126 q 381 12 515 -15 q 134 91 197 51 q 1 388 1 179 q 100 651 1 542 q 354 761 199 761 q 587 680 498 761 q 676 460 676 599 \"},\"M\":{\"x_min\":0,\"x_max\":954,\"ha\":1067,\"o\":\"m 954 0 l 819 0 l 819 869 l 537 0 l 405 0 l 128 866 l 128 0 l 0 0 l 0 1013 l 200 1013 l 472 160 l 757 1013 l 954 1013 l 954 0 \"},\"Ψ\":{\"x_min\":0,\"x_max\":1006,\"ha\":1094,\"o\":\"m 1006 678 q 914 319 1006 429 q 571 200 814 200 l 571 0 l 433 0 l 433 200 q 92 319 194 200 q 0 678 0 429 l 0 1013 l 139 1013 l 139 679 q 191 417 139 492 q 433 326 255 326 l 433 1013 l 571 1013 l 571 326 l 580 326 q 813 423 747 326 q 868 679 868 502 l 868 1013 l 1006 1013 l 1006 678 \"},\"C\":{\"x_min\":0,\"x_max\":886,\"ha\":944,\"o\":\"m 886 379 q 760 87 886 201 q 455 -26 634 -26 q 112 136 236 -26 q 0 509 0 283 q 118 882 0 737 q 469 1041 245 1041 q 748 955 630 1041 q 879 708 879 859 l 745 708 q 649 862 724 805 q 473 920 573 920 q 219 791 312 920 q 136 509 136 675 q 217 229 136 344 q 470 99 311 99 q 672 179 591 99 q 753 379 753 259 l 886 379 \"},\"!\":{\"x_min\":0,\"x_max\":138,\"ha\":236,\"o\":\"m 138 684 q 116 409 138 629 q 105 244 105 299 l 33 244 q 16 465 33 313 q 0 684 0 616 l 0 1013 l 138 1013 l 138 684 m 138 0 l 0 0 l 0 151 l 138 151 l 138 0 \"},\"{\":{\"x_min\":0,\"x_max\":480.5625,\"ha\":578,\"o\":\"m 480 -286 q 237 -213 303 -286 q 187 -45 187 -159 q 194 48 187 -15 q 201 141 201 112 q 164 264 201 225 q 0 314 118 314 l 0 417 q 164 471 119 417 q 201 605 201 514 q 199 665 201 644 q 193 772 193 769 q 241 941 193 887 q 480 1015 308 1015 l 480 915 q 336 866 375 915 q 306 742 306 828 q 310 662 306 717 q 314 577 314 606 q 288 452 314 500 q 176 365 256 391 q 289 275 257 337 q 314 143 314 226 q 313 84 314 107 q 310 -11 310 -5 q 339 -131 310 -94 q 480 -182 377 -182 l 480 -286 \"},\"X\":{\"x_min\":-0.015625,\"x_max\":854.15625,\"ha\":940,\"o\":\"m 854 0 l 683 0 l 423 409 l 166 0 l 0 0 l 347 519 l 18 1013 l 186 1013 l 428 637 l 675 1013 l 836 1013 l 504 520 l 854 0 \"},\"#\":{\"x_min\":0,\"x_max\":963.890625,\"ha\":1061,\"o\":\"m 963 690 l 927 590 l 719 590 l 655 410 l 876 410 l 840 310 l 618 310 l 508 -3 l 393 -2 l 506 309 l 329 310 l 215 -2 l 102 -3 l 212 310 l 0 310 l 36 410 l 248 409 l 312 590 l 86 590 l 120 690 l 347 690 l 459 1006 l 573 1006 l 462 690 l 640 690 l 751 1006 l 865 1006 l 754 690 l 963 690 m 606 590 l 425 590 l 362 410 l 543 410 l 606 590 \"},\"ι\":{\"x_min\":42,\"x_max\":284,\"ha\":361,\"o\":\"m 284 3 q 233 -10 258 -5 q 182 -15 207 -15 q 85 26 119 -15 q 42 200 42 79 l 42 738 l 167 738 l 168 215 q 172 141 168 157 q 226 101 183 101 q 248 103 239 101 q 284 112 257 104 l 284 3 \"},\"Ά\":{\"x_min\":0,\"x_max\":906.953125,\"ha\":982,\"o\":\"m 283 1040 l 88 799 l 5 799 l 145 1040 l 283 1040 m 906 0 l 756 0 l 650 303 l 251 303 l 143 0 l 0 0 l 376 1012 l 529 1012 l 906 0 m 609 421 l 452 866 l 293 421 l 609 421 \"},\")\":{\"x_min\":0,\"x_max\":318,\"ha\":415,\"o\":\"m 318 365 q 257 25 318 191 q 87 -290 197 -141 l 0 -290 q 140 21 93 -128 q 193 360 193 189 q 141 704 193 537 q 0 1024 97 850 l 87 1024 q 257 706 197 871 q 318 365 318 542 \"},\"ε\":{\"x_min\":0,\"x_max\":634.71875,\"ha\":714,\"o\":\"m 634 234 q 527 38 634 110 q 300 -25 433 -25 q 98 29 183 -25 q 0 204 0 93 q 37 314 0 265 q 128 390 67 353 q 56 460 82 419 q 26 555 26 505 q 114 712 26 654 q 295 763 191 763 q 499 700 416 763 q 589 515 589 631 l 478 515 q 419 618 464 580 q 307 657 374 657 q 207 630 253 657 q 151 547 151 598 q 238 445 151 469 q 389 434 280 434 l 389 331 l 349 331 q 206 315 255 331 q 125 210 125 287 q 183 107 125 145 q 302 76 233 76 q 436 117 379 76 q 509 234 493 159 l 634 234 \"},\"Δ\":{\"x_min\":0,\"x_max\":952.78125,\"ha\":1028,\"o\":\"m 952 0 l 0 0 l 400 1013 l 551 1013 l 952 0 m 762 124 l 476 867 l 187 124 l 762 124 \"},\"}\":{\"x_min\":0,\"x_max\":481,\"ha\":578,\"o\":\"m 481 314 q 318 262 364 314 q 282 136 282 222 q 284 65 282 97 q 293 -58 293 -48 q 241 -217 293 -166 q 0 -286 174 -286 l 0 -182 q 143 -130 105 -182 q 171 -2 171 -93 q 168 81 171 22 q 165 144 165 140 q 188 275 165 229 q 306 365 220 339 q 191 455 224 391 q 165 588 165 505 q 168 681 165 624 q 171 742 171 737 q 141 865 171 827 q 0 915 102 915 l 0 1015 q 243 942 176 1015 q 293 773 293 888 q 287 675 293 741 q 282 590 282 608 q 318 466 282 505 q 481 417 364 417 l 481 314 \"},\"‰\":{\"x_min\":-3,\"x_max\":1672,\"ha\":1821,\"o\":\"m 846 0 q 664 76 732 0 q 603 244 603 145 q 662 412 603 344 q 846 489 729 489 q 1027 412 959 489 q 1089 244 1089 343 q 1029 76 1089 144 q 846 0 962 0 m 845 103 q 945 143 910 103 q 981 243 981 184 q 947 340 981 301 q 845 385 910 385 q 745 342 782 385 q 709 243 709 300 q 742 147 709 186 q 845 103 781 103 m 888 986 l 284 -25 l 199 -25 l 803 986 l 888 986 m 241 468 q 58 545 126 468 q -3 715 -3 615 q 56 881 -3 813 q 238 958 124 958 q 421 881 353 958 q 483 712 483 813 q 423 544 483 612 q 241 468 356 468 m 241 855 q 137 811 175 855 q 100 710 100 768 q 136 612 100 653 q 240 572 172 572 q 344 614 306 572 q 382 713 382 656 q 347 810 382 771 q 241 855 308 855 m 1428 0 q 1246 76 1314 0 q 1185 244 1185 145 q 1244 412 1185 344 q 1428 489 1311 489 q 1610 412 1542 489 q 1672 244 1672 343 q 1612 76 1672 144 q 1428 0 1545 0 m 1427 103 q 1528 143 1492 103 q 1564 243 1564 184 q 1530 340 1564 301 q 1427 385 1492 385 q 1327 342 1364 385 q 1291 243 1291 300 q 1324 147 1291 186 q 1427 103 1363 103 \"},\"a\":{\"x_min\":0,\"x_max\":698.609375,\"ha\":794,\"o\":\"m 698 0 q 661 -12 679 -7 q 615 -17 643 -17 q 536 12 564 -17 q 500 96 508 41 q 384 6 456 37 q 236 -25 312 -25 q 65 31 130 -25 q 0 194 0 88 q 118 390 0 334 q 328 435 180 420 q 488 483 476 451 q 495 523 495 504 q 442 619 495 584 q 325 654 389 654 q 209 617 257 654 q 152 513 161 580 l 33 513 q 123 705 33 633 q 332 772 207 772 q 528 712 448 772 q 617 531 617 645 l 617 163 q 624 108 617 126 q 664 90 632 90 l 698 94 l 698 0 m 491 262 l 491 372 q 272 329 350 347 q 128 201 128 294 q 166 113 128 144 q 264 83 205 83 q 414 130 346 83 q 491 262 491 183 \"},\"—\":{\"x_min\":0,\"x_max\":941.671875,\"ha\":1039,\"o\":\"m 941 334 l 0 334 l 0 410 l 941 410 l 941 334 \"},\"=\":{\"x_min\":8.71875,\"x_max\":780.953125,\"ha\":792,\"o\":\"m 780 510 l 8 510 l 8 606 l 780 606 l 780 510 m 780 235 l 8 235 l 8 332 l 780 332 l 780 235 \"},\"N\":{\"x_min\":0,\"x_max\":801,\"ha\":914,\"o\":\"m 801 0 l 651 0 l 131 823 l 131 0 l 0 0 l 0 1013 l 151 1013 l 670 193 l 670 1013 l 801 1013 l 801 0 \"},\"ρ\":{\"x_min\":0,\"x_max\":712,\"ha\":797,\"o\":\"m 712 369 q 620 94 712 207 q 362 -26 521 -26 q 230 2 292 -26 q 119 83 167 30 l 119 -278 l 0 -278 l 0 362 q 91 643 0 531 q 355 764 190 764 q 617 647 517 764 q 712 369 712 536 m 583 366 q 530 559 583 480 q 359 651 469 651 q 190 562 252 651 q 135 370 135 483 q 189 176 135 257 q 359 85 250 85 q 528 175 466 85 q 583 366 583 254 \"},\"2\":{\"x_min\":59,\"x_max\":731,\"ha\":792,\"o\":\"m 731 0 l 59 0 q 197 314 59 188 q 457 487 199 315 q 598 691 598 580 q 543 819 598 772 q 411 867 488 867 q 272 811 328 867 q 209 630 209 747 l 81 630 q 182 901 81 805 q 408 986 271 986 q 629 909 536 986 q 731 694 731 826 q 613 449 731 541 q 378 316 495 383 q 201 122 235 234 l 731 122 l 731 0 \"},\"¯\":{\"x_min\":0,\"x_max\":941.671875,\"ha\":938,\"o\":\"m 941 1033 l 0 1033 l 0 1109 l 941 1109 l 941 1033 \"},\"Z\":{\"x_min\":0,\"x_max\":779,\"ha\":849,\"o\":\"m 779 0 l 0 0 l 0 113 l 621 896 l 40 896 l 40 1013 l 779 1013 l 778 887 l 171 124 l 779 124 l 779 0 \"},\"u\":{\"x_min\":0,\"x_max\":617,\"ha\":729,\"o\":\"m 617 0 l 499 0 l 499 110 q 391 10 460 45 q 246 -25 322 -25 q 61 58 127 -25 q 0 258 0 136 l 0 738 l 125 738 l 125 284 q 156 148 125 202 q 273 82 197 82 q 433 165 369 82 q 493 340 493 243 l 493 738 l 617 738 l 617 0 \"},\"k\":{\"x_min\":0,\"x_max\":612.484375,\"ha\":697,\"o\":\"m 612 738 l 338 465 l 608 0 l 469 0 l 251 382 l 121 251 l 121 0 l 0 0 l 0 1013 l 121 1013 l 121 402 l 456 738 l 612 738 \"},\"Η\":{\"x_min\":0,\"x_max\":803,\"ha\":917,\"o\":\"m 803 0 l 667 0 l 667 475 l 140 475 l 140 0 l 0 0 l 0 1013 l 140 1013 l 140 599 l 667 599 l 667 1013 l 803 1013 l 803 0 \"},\"Α\":{\"x_min\":0,\"x_max\":906.953125,\"ha\":985,\"o\":\"m 906 0 l 756 0 l 650 303 l 251 303 l 143 0 l 0 0 l 376 1013 l 529 1013 l 906 0 m 609 421 l 452 866 l 293 421 l 609 421 \"},\"s\":{\"x_min\":0,\"x_max\":604,\"ha\":697,\"o\":\"m 604 217 q 501 36 604 104 q 292 -23 411 -23 q 86 43 166 -23 q 0 238 0 114 l 121 237 q 175 122 121 164 q 300 85 223 85 q 415 112 363 85 q 479 207 479 147 q 361 309 479 276 q 140 372 141 370 q 21 544 21 426 q 111 708 21 647 q 298 761 190 761 q 492 705 413 761 q 583 531 583 643 l 462 531 q 412 625 462 594 q 298 657 363 657 q 199 636 242 657 q 143 558 143 608 q 262 454 143 486 q 484 394 479 397 q 604 217 604 341 \"},\"B\":{\"x_min\":0,\"x_max\":778,\"ha\":876,\"o\":\"m 580 546 q 724 469 670 535 q 778 311 778 403 q 673 83 778 171 q 432 0 575 0 l 0 0 l 0 1013 l 411 1013 q 629 957 541 1013 q 732 768 732 892 q 691 633 732 693 q 580 546 650 572 m 393 899 l 139 899 l 139 588 l 379 588 q 521 624 462 588 q 592 744 592 667 q 531 859 592 819 q 393 899 471 899 m 419 124 q 566 169 504 124 q 635 303 635 219 q 559 436 635 389 q 402 477 494 477 l 139 477 l 139 124 l 419 124 \"},\"…\":{\"x_min\":0,\"x_max\":614,\"ha\":708,\"o\":\"m 142 0 l 0 0 l 0 151 l 142 151 l 142 0 m 378 0 l 236 0 l 236 151 l 378 151 l 378 0 m 614 0 l 472 0 l 472 151 l 614 151 l 614 0 \"},\"?\":{\"x_min\":0,\"x_max\":607,\"ha\":704,\"o\":\"m 607 777 q 543 599 607 674 q 422 474 482 537 q 357 272 357 391 l 236 272 q 297 487 236 395 q 411 619 298 490 q 474 762 474 691 q 422 885 474 838 q 301 933 371 933 q 179 880 228 933 q 124 706 124 819 l 0 706 q 94 963 0 872 q 302 1044 177 1044 q 511 973 423 1044 q 607 777 607 895 m 370 0 l 230 0 l 230 151 l 370 151 l 370 0 \"},\"H\":{\"x_min\":0,\"x_max\":803,\"ha\":915,\"o\":\"m 803 0 l 667 0 l 667 475 l 140 475 l 140 0 l 0 0 l 0 1013 l 140 1013 l 140 599 l 667 599 l 667 1013 l 803 1013 l 803 0 \"},\"ν\":{\"x_min\":0,\"x_max\":675,\"ha\":761,\"o\":\"m 675 738 l 404 0 l 272 0 l 0 738 l 133 738 l 340 147 l 541 738 l 675 738 \"},\"c\":{\"x_min\":1,\"x_max\":701.390625,\"ha\":775,\"o\":\"m 701 264 q 584 53 681 133 q 353 -26 487 -26 q 91 91 188 -26 q 1 370 1 201 q 92 645 1 537 q 353 761 190 761 q 572 688 479 761 q 690 493 666 615 l 556 493 q 487 606 545 562 q 356 650 428 650 q 186 563 246 650 q 134 372 134 487 q 188 179 134 258 q 359 88 250 88 q 492 136 437 88 q 566 264 548 185 l 701 264 \"},\"¶\":{\"x_min\":0,\"x_max\":566.671875,\"ha\":678,\"o\":\"m 21 892 l 52 892 l 98 761 l 145 892 l 176 892 l 178 741 l 157 741 l 157 867 l 108 741 l 88 741 l 40 871 l 40 741 l 21 741 l 21 892 m 308 854 l 308 731 q 252 691 308 691 q 227 691 240 691 q 207 696 213 695 l 207 712 l 253 706 q 288 733 288 706 l 288 763 q 244 741 279 741 q 193 797 193 741 q 261 860 193 860 q 287 860 273 860 q 308 854 302 855 m 288 842 l 263 843 q 213 796 213 843 q 248 756 213 756 q 288 796 288 756 l 288 842 m 566 988 l 502 988 l 502 -1 l 439 -1 l 439 988 l 317 988 l 317 -1 l 252 -1 l 252 602 q 81 653 155 602 q 0 805 0 711 q 101 989 0 918 q 309 1053 194 1053 l 566 1053 l 566 988 \"},\"β\":{\"x_min\":0,\"x_max\":660,\"ha\":745,\"o\":\"m 471 550 q 610 450 561 522 q 660 280 660 378 q 578 64 660 151 q 367 -22 497 -22 q 239 5 299 -22 q 126 82 178 32 l 126 -278 l 0 -278 l 0 593 q 54 903 0 801 q 318 1042 127 1042 q 519 964 436 1042 q 603 771 603 887 q 567 644 603 701 q 471 550 532 586 m 337 79 q 476 138 418 79 q 535 279 535 198 q 427 437 535 386 q 226 477 344 477 l 226 583 q 398 620 329 583 q 486 762 486 668 q 435 884 486 833 q 312 935 384 935 q 169 861 219 935 q 126 698 126 797 l 126 362 q 170 169 126 242 q 337 79 224 79 \"},\"Μ\":{\"x_min\":0,\"x_max\":954,\"ha\":1068,\"o\":\"m 954 0 l 819 0 l 819 868 l 537 0 l 405 0 l 128 865 l 128 0 l 0 0 l 0 1013 l 199 1013 l 472 158 l 758 1013 l 954 1013 l 954 0 \"},\"Ό\":{\"x_min\":0.109375,\"x_max\":1120,\"ha\":1217,\"o\":\"m 1120 505 q 994 132 1120 282 q 642 -29 861 -29 q 290 130 422 -29 q 167 505 167 280 q 294 883 167 730 q 650 1046 430 1046 q 999 882 868 1046 q 1120 505 1120 730 m 977 504 q 896 784 977 669 q 644 915 804 915 q 391 785 484 915 q 307 504 307 669 q 391 224 307 339 q 644 95 486 95 q 894 224 803 95 q 977 504 977 339 m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 \"},\"Ή\":{\"x_min\":0,\"x_max\":1158,\"ha\":1275,\"o\":\"m 1158 0 l 1022 0 l 1022 475 l 496 475 l 496 0 l 356 0 l 356 1012 l 496 1012 l 496 599 l 1022 599 l 1022 1012 l 1158 1012 l 1158 0 m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 \"},\"•\":{\"x_min\":0,\"x_max\":663.890625,\"ha\":775,\"o\":\"m 663 529 q 566 293 663 391 q 331 196 469 196 q 97 294 194 196 q 0 529 0 393 q 96 763 0 665 q 331 861 193 861 q 566 763 469 861 q 663 529 663 665 \"},\"¥\":{\"x_min\":0.1875,\"x_max\":819.546875,\"ha\":886,\"o\":\"m 563 561 l 697 561 l 696 487 l 520 487 l 482 416 l 482 380 l 697 380 l 695 308 l 482 308 l 482 0 l 342 0 l 342 308 l 125 308 l 125 380 l 342 380 l 342 417 l 303 487 l 125 487 l 125 561 l 258 561 l 0 1013 l 140 1013 l 411 533 l 679 1013 l 819 1013 l 563 561 \"},\"(\":{\"x_min\":0,\"x_max\":318.0625,\"ha\":415,\"o\":\"m 318 -290 l 230 -290 q 61 23 122 -142 q 0 365 0 190 q 62 712 0 540 q 230 1024 119 869 l 318 1024 q 175 705 219 853 q 125 360 125 542 q 176 22 125 187 q 318 -290 223 -127 \"},\"U\":{\"x_min\":0,\"x_max\":796,\"ha\":904,\"o\":\"m 796 393 q 681 93 796 212 q 386 -25 566 -25 q 101 95 208 -25 q 0 393 0 211 l 0 1013 l 138 1013 l 138 391 q 204 191 138 270 q 394 107 276 107 q 586 191 512 107 q 656 391 656 270 l 656 1013 l 796 1013 l 796 393 \"},\"γ\":{\"x_min\":0.5,\"x_max\":744.953125,\"ha\":822,\"o\":\"m 744 737 l 463 54 l 463 -278 l 338 -278 l 338 54 l 154 495 q 104 597 124 569 q 13 651 67 651 l 0 651 l 0 751 l 39 753 q 168 711 121 753 q 242 594 207 676 l 403 208 l 617 737 l 744 737 \"},\"α\":{\"x_min\":0,\"x_max\":765.5625,\"ha\":809,\"o\":\"m 765 -4 q 698 -14 726 -14 q 564 97 586 -14 q 466 7 525 40 q 337 -26 407 -26 q 88 98 186 -26 q 0 369 0 212 q 88 637 0 525 q 337 760 184 760 q 465 728 407 760 q 563 637 524 696 l 563 739 l 685 739 l 685 222 q 693 141 685 168 q 748 94 708 94 q 765 96 760 94 l 765 -4 m 584 371 q 531 562 584 485 q 360 653 470 653 q 192 566 254 653 q 135 379 135 489 q 186 181 135 261 q 358 84 247 84 q 528 176 465 84 q 584 371 584 260 \"},\"F\":{\"x_min\":0,\"x_max\":683.328125,\"ha\":717,\"o\":\"m 683 888 l 140 888 l 140 583 l 613 583 l 613 458 l 140 458 l 140 0 l 0 0 l 0 1013 l 683 1013 l 683 888 \"},\"­\":{\"x_min\":0,\"x_max\":705.5625,\"ha\":803,\"o\":\"m 705 334 l 0 334 l 0 410 l 705 410 l 705 334 \"},\":\":{\"x_min\":0,\"x_max\":142,\"ha\":239,\"o\":\"m 142 585 l 0 585 l 0 738 l 142 738 l 142 585 m 142 0 l 0 0 l 0 151 l 142 151 l 142 0 \"},\"Χ\":{\"x_min\":0,\"x_max\":854.171875,\"ha\":935,\"o\":\"m 854 0 l 683 0 l 423 409 l 166 0 l 0 0 l 347 519 l 18 1013 l 186 1013 l 427 637 l 675 1013 l 836 1013 l 504 521 l 854 0 \"},\"*\":{\"x_min\":116,\"x_max\":674,\"ha\":792,\"o\":\"m 674 768 l 475 713 l 610 544 l 517 477 l 394 652 l 272 478 l 178 544 l 314 713 l 116 766 l 153 876 l 341 812 l 342 1013 l 446 1013 l 446 811 l 635 874 l 674 768 \"},\"†\":{\"x_min\":0,\"x_max\":777,\"ha\":835,\"o\":\"m 458 804 l 777 804 l 777 683 l 458 683 l 458 0 l 319 0 l 319 681 l 0 683 l 0 804 l 319 804 l 319 1015 l 458 1013 l 458 804 \"},\"°\":{\"x_min\":0,\"x_max\":347,\"ha\":444,\"o\":\"m 173 802 q 43 856 91 802 q 0 977 0 905 q 45 1101 0 1049 q 173 1153 90 1153 q 303 1098 255 1153 q 347 977 347 1049 q 303 856 347 905 q 173 802 256 802 m 173 884 q 238 910 214 884 q 262 973 262 937 q 239 1038 262 1012 q 173 1064 217 1064 q 108 1037 132 1064 q 85 973 85 1010 q 108 910 85 937 q 173 884 132 884 \"},\"V\":{\"x_min\":0,\"x_max\":862.71875,\"ha\":940,\"o\":\"m 862 1013 l 505 0 l 361 0 l 0 1013 l 143 1013 l 434 165 l 718 1012 l 862 1013 \"},\"Ξ\":{\"x_min\":0,\"x_max\":734.71875,\"ha\":763,\"o\":\"m 723 889 l 9 889 l 9 1013 l 723 1013 l 723 889 m 673 463 l 61 463 l 61 589 l 673 589 l 673 463 m 734 0 l 0 0 l 0 124 l 734 124 l 734 0 \"},\" \":{\"x_min\":0,\"x_max\":0,\"ha\":853},\"Ϋ\":{\"x_min\":0.328125,\"x_max\":819.515625,\"ha\":889,\"o\":\"m 588 1046 l 460 1046 l 460 1189 l 588 1189 l 588 1046 m 360 1046 l 232 1046 l 232 1189 l 360 1189 l 360 1046 m 819 1012 l 482 416 l 482 0 l 342 0 l 342 416 l 0 1012 l 140 1012 l 411 533 l 679 1012 l 819 1012 \"},\"0\":{\"x_min\":73,\"x_max\":715,\"ha\":792,\"o\":\"m 394 -29 q 153 129 242 -29 q 73 479 73 272 q 152 829 73 687 q 394 989 241 989 q 634 829 545 989 q 715 479 715 684 q 635 129 715 270 q 394 -29 546 -29 m 394 89 q 546 211 489 89 q 598 479 598 322 q 548 748 598 640 q 394 871 491 871 q 241 748 298 871 q 190 479 190 637 q 239 211 190 319 q 394 89 296 89 \"},\"”\":{\"x_min\":0,\"x_max\":347,\"ha\":454,\"o\":\"m 139 851 q 102 737 139 784 q 0 669 65 690 l 0 734 q 59 787 42 741 q 72 873 72 821 l 0 873 l 0 1013 l 139 1013 l 139 851 m 347 851 q 310 737 347 784 q 208 669 273 690 l 208 734 q 267 787 250 741 q 280 873 280 821 l 208 873 l 208 1013 l 347 1013 l 347 851 \"},\"@\":{\"x_min\":0,\"x_max\":1260,\"ha\":1357,\"o\":\"m 1098 -45 q 877 -160 1001 -117 q 633 -203 752 -203 q 155 -29 327 -203 q 0 360 0 127 q 176 802 0 616 q 687 1008 372 1008 q 1123 854 969 1008 q 1260 517 1260 718 q 1155 216 1260 341 q 868 82 1044 82 q 772 106 801 82 q 737 202 737 135 q 647 113 700 144 q 527 82 594 82 q 367 147 420 82 q 314 312 314 212 q 401 565 314 452 q 639 690 498 690 q 810 588 760 690 l 849 668 l 938 668 q 877 441 900 532 q 833 226 833 268 q 853 182 833 198 q 902 167 873 167 q 1088 272 1012 167 q 1159 512 1159 372 q 1051 793 1159 681 q 687 925 925 925 q 248 747 415 925 q 97 361 97 586 q 226 26 97 159 q 627 -122 370 -122 q 856 -87 737 -122 q 1061 8 976 -53 l 1098 -45 m 786 488 q 738 580 777 545 q 643 615 700 615 q 483 517 548 615 q 425 322 425 430 q 457 203 425 250 q 552 156 490 156 q 722 273 665 156 q 786 488 738 309 \"},\"Ί\":{\"x_min\":0,\"x_max\":499,\"ha\":613,\"o\":\"m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 m 499 0 l 360 0 l 360 1012 l 499 1012 l 499 0 \"},\"i\":{\"x_min\":14,\"x_max\":136,\"ha\":275,\"o\":\"m 136 873 l 14 873 l 14 1013 l 136 1013 l 136 873 m 136 0 l 14 0 l 14 737 l 136 737 l 136 0 \"},\"Β\":{\"x_min\":0,\"x_max\":778,\"ha\":877,\"o\":\"m 580 545 q 724 468 671 534 q 778 310 778 402 q 673 83 778 170 q 432 0 575 0 l 0 0 l 0 1013 l 411 1013 q 629 957 541 1013 q 732 768 732 891 q 691 632 732 692 q 580 545 650 571 m 393 899 l 139 899 l 139 587 l 379 587 q 521 623 462 587 q 592 744 592 666 q 531 859 592 819 q 393 899 471 899 m 419 124 q 566 169 504 124 q 635 302 635 219 q 559 435 635 388 q 402 476 494 476 l 139 476 l 139 124 l 419 124 \"},\"υ\":{\"x_min\":0,\"x_max\":617,\"ha\":725,\"o\":\"m 617 352 q 540 94 617 199 q 308 -24 455 -24 q 76 94 161 -24 q 0 352 0 199 l 0 739 l 126 739 l 126 355 q 169 185 126 257 q 312 98 220 98 q 451 185 402 98 q 492 355 492 257 l 492 739 l 617 739 l 617 352 \"},\"]\":{\"x_min\":0,\"x_max\":275,\"ha\":372,\"o\":\"m 275 -281 l 0 -281 l 0 -187 l 151 -187 l 151 920 l 0 920 l 0 1013 l 275 1013 l 275 -281 \"},\"m\":{\"x_min\":0,\"x_max\":1019,\"ha\":1128,\"o\":\"m 1019 0 l 897 0 l 897 454 q 860 591 897 536 q 739 660 816 660 q 613 586 659 660 q 573 436 573 522 l 573 0 l 447 0 l 447 455 q 412 591 447 535 q 294 657 372 657 q 165 586 213 657 q 122 437 122 521 l 122 0 l 0 0 l 0 738 l 117 738 l 117 640 q 202 730 150 697 q 316 763 254 763 q 437 730 381 763 q 525 642 494 697 q 621 731 559 700 q 753 763 682 763 q 943 694 867 763 q 1019 512 1019 625 l 1019 0 \"},\"χ\":{\"x_min\":8.328125,\"x_max\":780.5625,\"ha\":815,\"o\":\"m 780 -278 q 715 -294 747 -294 q 616 -257 663 -294 q 548 -175 576 -227 l 379 133 l 143 -277 l 9 -277 l 313 254 l 163 522 q 127 586 131 580 q 36 640 91 640 q 8 637 27 640 l 8 752 l 52 757 q 162 719 113 757 q 236 627 200 690 l 383 372 l 594 737 l 726 737 l 448 250 l 625 -69 q 670 -153 647 -110 q 743 -188 695 -188 q 780 -184 759 -188 l 780 -278 \"},\"8\":{\"x_min\":55,\"x_max\":736,\"ha\":792,\"o\":\"m 571 527 q 694 424 652 491 q 736 280 736 358 q 648 71 736 158 q 395 -26 551 -26 q 142 69 238 -26 q 55 279 55 157 q 96 425 55 359 q 220 527 138 491 q 120 615 153 562 q 88 726 88 668 q 171 904 88 827 q 395 986 261 986 q 618 905 529 986 q 702 727 702 830 q 670 616 702 667 q 571 527 638 565 m 394 565 q 519 610 475 565 q 563 717 563 655 q 521 823 563 781 q 392 872 474 872 q 265 824 312 872 q 224 720 224 783 q 265 613 224 656 q 394 565 312 565 m 395 91 q 545 150 488 91 q 597 280 597 204 q 546 408 597 355 q 395 465 492 465 q 244 408 299 465 q 194 280 194 356 q 244 150 194 203 q 395 91 299 91 \"},\"ί\":{\"x_min\":42,\"x_max\":326.71875,\"ha\":361,\"o\":\"m 284 3 q 233 -10 258 -5 q 182 -15 207 -15 q 85 26 119 -15 q 42 200 42 79 l 42 737 l 167 737 l 168 215 q 172 141 168 157 q 226 101 183 101 q 248 102 239 101 q 284 112 257 104 l 284 3 m 326 1040 l 137 819 l 54 819 l 189 1040 l 326 1040 \"},\"Ζ\":{\"x_min\":0,\"x_max\":779.171875,\"ha\":850,\"o\":\"m 779 0 l 0 0 l 0 113 l 620 896 l 40 896 l 40 1013 l 779 1013 l 779 887 l 170 124 l 779 124 l 779 0 \"},\"R\":{\"x_min\":0,\"x_max\":781.953125,\"ha\":907,\"o\":\"m 781 0 l 623 0 q 587 242 590 52 q 407 433 585 433 l 138 433 l 138 0 l 0 0 l 0 1013 l 396 1013 q 636 946 539 1013 q 749 731 749 868 q 711 597 749 659 q 608 502 674 534 q 718 370 696 474 q 729 207 722 352 q 781 26 736 62 l 781 0 m 373 551 q 533 594 465 551 q 614 731 614 645 q 532 859 614 815 q 373 896 465 896 l 138 896 l 138 551 l 373 551 \"},\"o\":{\"x_min\":0,\"x_max\":713,\"ha\":821,\"o\":\"m 357 -25 q 94 91 194 -25 q 0 368 0 202 q 93 642 0 533 q 357 761 193 761 q 618 644 518 761 q 713 368 713 533 q 619 91 713 201 q 357 -25 521 -25 m 357 85 q 528 175 465 85 q 584 369 584 255 q 529 562 584 484 q 357 651 467 651 q 189 560 250 651 q 135 369 135 481 q 187 177 135 257 q 357 85 250 85 \"},\"5\":{\"x_min\":54.171875,\"x_max\":738,\"ha\":792,\"o\":\"m 738 314 q 626 60 738 153 q 382 -23 526 -23 q 155 47 248 -23 q 54 256 54 125 l 183 256 q 259 132 204 174 q 382 91 314 91 q 533 149 471 91 q 602 314 602 213 q 538 469 602 411 q 386 528 475 528 q 284 506 332 528 q 197 439 237 484 l 81 439 l 159 958 l 684 958 l 684 840 l 254 840 l 214 579 q 306 627 258 612 q 407 643 354 643 q 636 552 540 643 q 738 314 738 457 \"},\"7\":{\"x_min\":58.71875,\"x_max\":730.953125,\"ha\":792,\"o\":\"m 730 839 q 469 448 560 641 q 335 0 378 255 l 192 0 q 328 441 235 252 q 593 830 421 630 l 58 830 l 58 958 l 730 958 l 730 839 \"},\"K\":{\"x_min\":0,\"x_max\":819.46875,\"ha\":906,\"o\":\"m 819 0 l 649 0 l 294 509 l 139 355 l 139 0 l 0 0 l 0 1013 l 139 1013 l 139 526 l 626 1013 l 809 1013 l 395 600 l 819 0 \"},\",\":{\"x_min\":0,\"x_max\":142,\"ha\":239,\"o\":\"m 142 -12 q 105 -132 142 -82 q 0 -205 68 -182 l 0 -138 q 57 -82 40 -124 q 70 0 70 -51 l 0 0 l 0 151 l 142 151 l 142 -12 \"},\"d\":{\"x_min\":0,\"x_max\":683,\"ha\":796,\"o\":\"m 683 0 l 564 0 l 564 93 q 456 6 516 38 q 327 -25 395 -25 q 87 100 181 -25 q 0 365 0 215 q 90 639 0 525 q 343 763 187 763 q 564 647 486 763 l 564 1013 l 683 1013 l 683 0 m 582 373 q 529 562 582 484 q 361 653 468 653 q 190 561 253 653 q 135 365 135 479 q 189 175 135 254 q 358 85 251 85 q 529 178 468 85 q 582 373 582 258 \"},\"¨\":{\"x_min\":-109,\"x_max\":247,\"ha\":232,\"o\":\"m 247 1046 l 119 1046 l 119 1189 l 247 1189 l 247 1046 m 19 1046 l -109 1046 l -109 1189 l 19 1189 l 19 1046 \"},\"E\":{\"x_min\":0,\"x_max\":736.109375,\"ha\":789,\"o\":\"m 736 0 l 0 0 l 0 1013 l 725 1013 l 725 889 l 139 889 l 139 585 l 677 585 l 677 467 l 139 467 l 139 125 l 736 125 l 736 0 \"},\"Y\":{\"x_min\":0,\"x_max\":820,\"ha\":886,\"o\":\"m 820 1013 l 482 416 l 482 0 l 342 0 l 342 416 l 0 1013 l 140 1013 l 411 534 l 679 1012 l 820 1013 \"},\"\\\"\":{\"x_min\":0,\"x_max\":299,\"ha\":396,\"o\":\"m 299 606 l 203 606 l 203 988 l 299 988 l 299 606 m 96 606 l 0 606 l 0 988 l 96 988 l 96 606 \"},\"‹\":{\"x_min\":17.984375,\"x_max\":773.609375,\"ha\":792,\"o\":\"m 773 40 l 18 376 l 17 465 l 773 799 l 773 692 l 159 420 l 773 149 l 773 40 \"},\"„\":{\"x_min\":0,\"x_max\":364,\"ha\":467,\"o\":\"m 141 -12 q 104 -132 141 -82 q 0 -205 67 -182 l 0 -138 q 56 -82 40 -124 q 69 0 69 -51 l 0 0 l 0 151 l 141 151 l 141 -12 m 364 -12 q 327 -132 364 -82 q 222 -205 290 -182 l 222 -138 q 279 -82 262 -124 q 292 0 292 -51 l 222 0 l 222 151 l 364 151 l 364 -12 \"},\"δ\":{\"x_min\":1,\"x_max\":710,\"ha\":810,\"o\":\"m 710 360 q 616 87 710 196 q 356 -28 518 -28 q 99 82 197 -28 q 1 356 1 192 q 100 606 1 509 q 355 703 199 703 q 180 829 288 754 q 70 903 124 866 l 70 1012 l 643 1012 l 643 901 l 258 901 q 462 763 422 794 q 636 592 577 677 q 710 360 710 485 m 584 365 q 552 501 584 447 q 451 602 521 555 q 372 611 411 611 q 197 541 258 611 q 136 355 136 472 q 190 171 136 245 q 358 85 252 85 q 528 173 465 85 q 584 365 584 252 \"},\"έ\":{\"x_min\":0,\"x_max\":634.71875,\"ha\":714,\"o\":\"m 634 234 q 527 38 634 110 q 300 -25 433 -25 q 98 29 183 -25 q 0 204 0 93 q 37 313 0 265 q 128 390 67 352 q 56 459 82 419 q 26 555 26 505 q 114 712 26 654 q 295 763 191 763 q 499 700 416 763 q 589 515 589 631 l 478 515 q 419 618 464 580 q 307 657 374 657 q 207 630 253 657 q 151 547 151 598 q 238 445 151 469 q 389 434 280 434 l 389 331 l 349 331 q 206 315 255 331 q 125 210 125 287 q 183 107 125 145 q 302 76 233 76 q 436 117 379 76 q 509 234 493 159 l 634 234 m 520 1040 l 331 819 l 248 819 l 383 1040 l 520 1040 \"},\"ω\":{\"x_min\":0,\"x_max\":922,\"ha\":1031,\"o\":\"m 922 339 q 856 97 922 203 q 650 -26 780 -26 q 538 9 587 -26 q 461 103 489 44 q 387 12 436 46 q 277 -22 339 -22 q 69 97 147 -22 q 0 339 0 203 q 45 551 0 444 q 161 738 84 643 l 302 738 q 175 553 219 647 q 124 336 124 446 q 155 179 124 249 q 275 88 197 88 q 375 163 341 88 q 400 294 400 219 l 400 572 l 524 572 l 524 294 q 561 135 524 192 q 643 88 591 88 q 762 182 719 88 q 797 342 797 257 q 745 556 797 450 q 619 738 705 638 l 760 738 q 874 551 835 640 q 922 339 922 444 \"},\"´\":{\"x_min\":0,\"x_max\":96,\"ha\":251,\"o\":\"m 96 606 l 0 606 l 0 988 l 96 988 l 96 606 \"},\"±\":{\"x_min\":11,\"x_max\":781,\"ha\":792,\"o\":\"m 781 490 l 446 490 l 446 255 l 349 255 l 349 490 l 11 490 l 11 586 l 349 586 l 349 819 l 446 819 l 446 586 l 781 586 l 781 490 m 781 21 l 11 21 l 11 115 l 781 115 l 781 21 \"},\"|\":{\"x_min\":343,\"x_max\":449,\"ha\":792,\"o\":\"m 449 462 l 343 462 l 343 986 l 449 986 l 449 462 m 449 -242 l 343 -242 l 343 280 l 449 280 l 449 -242 \"},\"ϋ\":{\"x_min\":0,\"x_max\":617,\"ha\":725,\"o\":\"m 482 800 l 372 800 l 372 925 l 482 925 l 482 800 m 239 800 l 129 800 l 129 925 l 239 925 l 239 800 m 617 352 q 540 93 617 199 q 308 -24 455 -24 q 76 93 161 -24 q 0 352 0 199 l 0 738 l 126 738 l 126 354 q 169 185 126 257 q 312 98 220 98 q 451 185 402 98 q 492 354 492 257 l 492 738 l 617 738 l 617 352 \"},\"§\":{\"x_min\":0,\"x_max\":593,\"ha\":690,\"o\":\"m 593 425 q 554 312 593 369 q 467 233 516 254 q 537 83 537 172 q 459 -74 537 -12 q 288 -133 387 -133 q 115 -69 184 -133 q 47 96 47 -6 l 166 96 q 199 7 166 40 q 288 -26 232 -26 q 371 -5 332 -26 q 420 60 420 21 q 311 201 420 139 q 108 309 210 255 q 0 490 0 383 q 33 602 0 551 q 124 687 66 654 q 75 743 93 712 q 58 812 58 773 q 133 984 58 920 q 300 1043 201 1043 q 458 987 394 1043 q 529 814 529 925 l 411 814 q 370 908 404 877 q 289 939 336 939 q 213 911 246 939 q 180 841 180 883 q 286 720 180 779 q 484 612 480 615 q 593 425 593 534 m 467 409 q 355 544 467 473 q 196 630 228 612 q 146 587 162 609 q 124 525 124 558 q 239 387 124 462 q 398 298 369 315 q 448 345 429 316 q 467 409 467 375 \"},\"b\":{\"x_min\":0,\"x_max\":685,\"ha\":783,\"o\":\"m 685 372 q 597 99 685 213 q 347 -25 501 -25 q 219 5 277 -25 q 121 93 161 36 l 121 0 l 0 0 l 0 1013 l 121 1013 l 121 634 q 214 723 157 692 q 341 754 272 754 q 591 637 493 754 q 685 372 685 526 m 554 356 q 499 550 554 470 q 328 644 437 644 q 162 556 223 644 q 108 369 108 478 q 160 176 108 256 q 330 83 221 83 q 498 169 435 83 q 554 356 554 245 \"},\"q\":{\"x_min\":0,\"x_max\":683,\"ha\":876,\"o\":\"m 683 -278 l 564 -278 l 564 97 q 474 8 533 39 q 345 -23 415 -23 q 91 93 188 -23 q 0 364 0 203 q 87 635 0 522 q 337 760 184 760 q 466 727 408 760 q 564 637 523 695 l 564 737 l 683 737 l 683 -278 m 582 375 q 527 564 582 488 q 358 652 466 652 q 190 565 253 652 q 135 377 135 488 q 189 179 135 261 q 361 84 251 84 q 530 179 469 84 q 582 375 582 260 \"},\"Ω\":{\"x_min\":-0.171875,\"x_max\":969.5625,\"ha\":1068,\"o\":\"m 969 0 l 555 0 l 555 123 q 744 308 675 194 q 814 558 814 423 q 726 812 814 709 q 484 922 633 922 q 244 820 334 922 q 154 567 154 719 q 223 316 154 433 q 412 123 292 199 l 412 0 l 0 0 l 0 124 l 217 124 q 68 327 122 210 q 15 572 15 444 q 144 911 15 781 q 484 1041 274 1041 q 822 909 691 1041 q 953 569 953 777 q 899 326 953 443 q 750 124 846 210 l 969 124 l 969 0 \"},\"ύ\":{\"x_min\":0,\"x_max\":617,\"ha\":725,\"o\":\"m 617 352 q 540 93 617 199 q 308 -24 455 -24 q 76 93 161 -24 q 0 352 0 199 l 0 738 l 126 738 l 126 354 q 169 185 126 257 q 312 98 220 98 q 451 185 402 98 q 492 354 492 257 l 492 738 l 617 738 l 617 352 m 535 1040 l 346 819 l 262 819 l 397 1040 l 535 1040 \"},\"z\":{\"x_min\":-0.015625,\"x_max\":613.890625,\"ha\":697,\"o\":\"m 613 0 l 0 0 l 0 100 l 433 630 l 20 630 l 20 738 l 594 738 l 593 636 l 163 110 l 613 110 l 613 0 \"},\"™\":{\"x_min\":0,\"x_max\":894,\"ha\":1000,\"o\":\"m 389 951 l 229 951 l 229 503 l 160 503 l 160 951 l 0 951 l 0 1011 l 389 1011 l 389 951 m 894 503 l 827 503 l 827 939 l 685 503 l 620 503 l 481 937 l 481 503 l 417 503 l 417 1011 l 517 1011 l 653 580 l 796 1010 l 894 1011 l 894 503 \"},\"ή\":{\"x_min\":0.78125,\"x_max\":697,\"ha\":810,\"o\":\"m 697 -278 l 572 -278 l 572 454 q 540 587 572 536 q 425 650 501 650 q 271 579 337 650 q 206 420 206 509 l 206 0 l 81 0 l 81 489 q 73 588 81 562 q 0 644 56 644 l 0 741 q 68 755 38 755 q 158 721 124 755 q 200 630 193 687 q 297 726 234 692 q 434 761 359 761 q 620 692 544 761 q 697 516 697 624 l 697 -278 m 479 1040 l 290 819 l 207 819 l 341 1040 l 479 1040 \"},\"Θ\":{\"x_min\":0,\"x_max\":960,\"ha\":1056,\"o\":\"m 960 507 q 833 129 960 280 q 476 -32 698 -32 q 123 129 255 -32 q 0 507 0 280 q 123 883 0 732 q 476 1045 255 1045 q 832 883 696 1045 q 960 507 960 732 m 817 500 q 733 789 817 669 q 476 924 639 924 q 223 792 317 924 q 142 507 142 675 q 222 222 142 339 q 476 89 315 89 q 730 218 636 89 q 817 500 817 334 m 716 449 l 243 449 l 243 571 l 716 571 l 716 449 \"},\"®\":{\"x_min\":-3,\"x_max\":1008,\"ha\":1106,\"o\":\"m 503 532 q 614 562 566 532 q 672 658 672 598 q 614 747 672 716 q 503 772 569 772 l 338 772 l 338 532 l 503 532 m 502 -7 q 123 151 263 -7 q -3 501 -3 294 q 123 851 -3 706 q 502 1011 263 1011 q 881 851 739 1011 q 1008 501 1008 708 q 883 151 1008 292 q 502 -7 744 -7 m 502 60 q 830 197 709 60 q 940 501 940 322 q 831 805 940 681 q 502 944 709 944 q 174 805 296 944 q 65 501 65 680 q 173 197 65 320 q 502 60 294 60 m 788 146 l 678 146 q 653 316 655 183 q 527 449 652 449 l 338 449 l 338 146 l 241 146 l 241 854 l 518 854 q 688 808 621 854 q 766 658 766 755 q 739 563 766 607 q 668 497 713 519 q 751 331 747 472 q 788 164 756 190 l 788 146 \"},\"~\":{\"x_min\":0,\"x_max\":833,\"ha\":931,\"o\":\"m 833 958 q 778 753 833 831 q 594 665 716 665 q 402 761 502 665 q 240 857 302 857 q 131 795 166 857 q 104 665 104 745 l 0 665 q 54 867 0 789 q 237 958 116 958 q 429 861 331 958 q 594 765 527 765 q 704 827 670 765 q 729 958 729 874 l 833 958 \"},\"Ε\":{\"x_min\":0,\"x_max\":736.21875,\"ha\":778,\"o\":\"m 736 0 l 0 0 l 0 1013 l 725 1013 l 725 889 l 139 889 l 139 585 l 677 585 l 677 467 l 139 467 l 139 125 l 736 125 l 736 0 \"},\"³\":{\"x_min\":0,\"x_max\":450,\"ha\":547,\"o\":\"m 450 552 q 379 413 450 464 q 220 366 313 366 q 69 414 130 366 q 0 567 0 470 l 85 567 q 126 470 85 504 q 225 437 168 437 q 320 467 280 437 q 360 552 360 498 q 318 632 360 608 q 213 657 276 657 q 195 657 203 657 q 176 657 181 657 l 176 722 q 279 733 249 722 q 334 815 334 752 q 300 881 334 856 q 220 907 267 907 q 133 875 169 907 q 97 781 97 844 l 15 781 q 78 926 15 875 q 220 972 135 972 q 364 930 303 972 q 426 817 426 888 q 344 697 426 733 q 421 642 392 681 q 450 552 450 603 \"},\"[\":{\"x_min\":0,\"x_max\":273.609375,\"ha\":371,\"o\":\"m 273 -281 l 0 -281 l 0 1013 l 273 1013 l 273 920 l 124 920 l 124 -187 l 273 -187 l 273 -281 \"},\"L\":{\"x_min\":0,\"x_max\":645.828125,\"ha\":696,\"o\":\"m 645 0 l 0 0 l 0 1013 l 140 1013 l 140 126 l 645 126 l 645 0 \"},\"σ\":{\"x_min\":0,\"x_max\":803.390625,\"ha\":894,\"o\":\"m 803 628 l 633 628 q 713 368 713 512 q 618 93 713 204 q 357 -25 518 -25 q 94 91 194 -25 q 0 368 0 201 q 94 644 0 533 q 356 761 194 761 q 481 750 398 761 q 608 739 564 739 l 803 739 l 803 628 m 360 85 q 529 180 467 85 q 584 374 584 262 q 527 566 584 490 q 352 651 463 651 q 187 559 247 651 q 135 368 135 478 q 189 175 135 254 q 360 85 251 85 \"},\"ζ\":{\"x_min\":0,\"x_max\":573,\"ha\":642,\"o\":\"m 573 -40 q 553 -162 573 -97 q 510 -278 543 -193 l 400 -278 q 441 -187 428 -219 q 462 -90 462 -132 q 378 -14 462 -14 q 108 45 197 -14 q 0 290 0 117 q 108 631 0 462 q 353 901 194 767 l 55 901 l 55 1012 l 561 1012 l 561 924 q 261 669 382 831 q 128 301 128 489 q 243 117 128 149 q 458 98 350 108 q 573 -40 573 80 \"},\"θ\":{\"x_min\":0,\"x_max\":674,\"ha\":778,\"o\":\"m 674 496 q 601 160 674 304 q 336 -26 508 -26 q 73 153 165 -26 q 0 485 0 296 q 72 840 0 683 q 343 1045 166 1045 q 605 844 516 1045 q 674 496 674 692 m 546 579 q 498 798 546 691 q 336 935 437 935 q 178 798 237 935 q 126 579 137 701 l 546 579 m 546 475 l 126 475 q 170 233 126 348 q 338 80 230 80 q 504 233 447 80 q 546 475 546 346 \"},\"Ο\":{\"x_min\":0,\"x_max\":958,\"ha\":1054,\"o\":\"m 485 1042 q 834 883 703 1042 q 958 511 958 735 q 834 136 958 287 q 481 -26 701 -26 q 126 130 261 -26 q 0 504 0 279 q 127 880 0 729 q 485 1042 263 1042 m 480 98 q 731 225 638 98 q 815 504 815 340 q 733 783 815 670 q 480 913 640 913 q 226 785 321 913 q 142 504 142 671 q 226 224 142 339 q 480 98 319 98 \"},\"Γ\":{\"x_min\":0,\"x_max\":705.28125,\"ha\":749,\"o\":\"m 705 886 l 140 886 l 140 0 l 0 0 l 0 1012 l 705 1012 l 705 886 \"},\" \":{\"x_min\":0,\"x_max\":0,\"ha\":375},\"%\":{\"x_min\":-3,\"x_max\":1089,\"ha\":1186,\"o\":\"m 845 0 q 663 76 731 0 q 602 244 602 145 q 661 412 602 344 q 845 489 728 489 q 1027 412 959 489 q 1089 244 1089 343 q 1029 76 1089 144 q 845 0 962 0 m 844 103 q 945 143 909 103 q 981 243 981 184 q 947 340 981 301 q 844 385 909 385 q 744 342 781 385 q 708 243 708 300 q 741 147 708 186 q 844 103 780 103 m 888 986 l 284 -25 l 199 -25 l 803 986 l 888 986 m 241 468 q 58 545 126 468 q -3 715 -3 615 q 56 881 -3 813 q 238 958 124 958 q 421 881 353 958 q 483 712 483 813 q 423 544 483 612 q 241 468 356 468 m 241 855 q 137 811 175 855 q 100 710 100 768 q 136 612 100 653 q 240 572 172 572 q 344 614 306 572 q 382 713 382 656 q 347 810 382 771 q 241 855 308 855 \"},\"P\":{\"x_min\":0,\"x_max\":726,\"ha\":806,\"o\":\"m 424 1013 q 640 931 555 1013 q 726 719 726 850 q 637 506 726 587 q 413 426 548 426 l 140 426 l 140 0 l 0 0 l 0 1013 l 424 1013 m 379 889 l 140 889 l 140 548 l 372 548 q 522 589 459 548 q 593 720 593 637 q 528 845 593 801 q 379 889 463 889 \"},\"Έ\":{\"x_min\":0,\"x_max\":1078.21875,\"ha\":1118,\"o\":\"m 1078 0 l 342 0 l 342 1013 l 1067 1013 l 1067 889 l 481 889 l 481 585 l 1019 585 l 1019 467 l 481 467 l 481 125 l 1078 125 l 1078 0 m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 \"},\"Ώ\":{\"x_min\":0.125,\"x_max\":1136.546875,\"ha\":1235,\"o\":\"m 1136 0 l 722 0 l 722 123 q 911 309 842 194 q 981 558 981 423 q 893 813 981 710 q 651 923 800 923 q 411 821 501 923 q 321 568 321 720 q 390 316 321 433 q 579 123 459 200 l 579 0 l 166 0 l 166 124 l 384 124 q 235 327 289 210 q 182 572 182 444 q 311 912 182 782 q 651 1042 441 1042 q 989 910 858 1042 q 1120 569 1120 778 q 1066 326 1120 443 q 917 124 1013 210 l 1136 124 l 1136 0 m 277 1040 l 83 800 l 0 800 l 140 1041 l 277 1040 \"},\"_\":{\"x_min\":0,\"x_max\":705.5625,\"ha\":803,\"o\":\"m 705 -334 l 0 -334 l 0 -234 l 705 -234 l 705 -334 \"},\"Ϊ\":{\"x_min\":-110,\"x_max\":246,\"ha\":275,\"o\":\"m 246 1046 l 118 1046 l 118 1189 l 246 1189 l 246 1046 m 18 1046 l -110 1046 l -110 1189 l 18 1189 l 18 1046 m 136 0 l 0 0 l 0 1012 l 136 1012 l 136 0 \"},\"+\":{\"x_min\":23,\"x_max\":768,\"ha\":792,\"o\":\"m 768 372 l 444 372 l 444 0 l 347 0 l 347 372 l 23 372 l 23 468 l 347 468 l 347 840 l 444 840 l 444 468 l 768 468 l 768 372 \"},\"½\":{\"x_min\":0,\"x_max\":1050,\"ha\":1149,\"o\":\"m 1050 0 l 625 0 q 712 178 625 108 q 878 277 722 187 q 967 385 967 328 q 932 456 967 429 q 850 484 897 484 q 759 450 798 484 q 721 352 721 416 l 640 352 q 706 502 640 448 q 851 551 766 551 q 987 509 931 551 q 1050 385 1050 462 q 976 251 1050 301 q 829 179 902 215 q 717 68 740 133 l 1050 68 l 1050 0 m 834 985 l 215 -28 l 130 -28 l 750 984 l 834 985 m 224 422 l 142 422 l 142 811 l 0 811 l 0 867 q 104 889 62 867 q 164 973 157 916 l 224 973 l 224 422 \"},\"Ρ\":{\"x_min\":0,\"x_max\":720,\"ha\":783,\"o\":\"m 424 1013 q 637 933 554 1013 q 720 723 720 853 q 633 508 720 591 q 413 426 546 426 l 140 426 l 140 0 l 0 0 l 0 1013 l 424 1013 m 378 889 l 140 889 l 140 548 l 371 548 q 521 589 458 548 q 592 720 592 637 q 527 845 592 801 q 378 889 463 889 \"},\"'\":{\"x_min\":0,\"x_max\":139,\"ha\":236,\"o\":\"m 139 851 q 102 737 139 784 q 0 669 65 690 l 0 734 q 59 787 42 741 q 72 873 72 821 l 0 873 l 0 1013 l 139 1013 l 139 851 \"},\"ª\":{\"x_min\":0,\"x_max\":350,\"ha\":397,\"o\":\"m 350 625 q 307 616 328 616 q 266 631 281 616 q 247 673 251 645 q 190 628 225 644 q 116 613 156 613 q 32 641 64 613 q 0 722 0 669 q 72 826 0 800 q 247 866 159 846 l 247 887 q 220 934 247 916 q 162 953 194 953 q 104 934 129 953 q 76 882 80 915 l 16 882 q 60 976 16 941 q 166 1011 104 1011 q 266 979 224 1011 q 308 891 308 948 l 308 706 q 311 679 308 688 q 331 670 315 670 l 350 672 l 350 625 m 247 757 l 247 811 q 136 790 175 798 q 64 726 64 773 q 83 682 64 697 q 132 667 103 667 q 207 690 174 667 q 247 757 247 718 \"},\"΅\":{\"x_min\":0,\"x_max\":450,\"ha\":553,\"o\":\"m 450 800 l 340 800 l 340 925 l 450 925 l 450 800 m 406 1040 l 212 800 l 129 800 l 269 1040 l 406 1040 m 110 800 l 0 800 l 0 925 l 110 925 l 110 800 \"},\"T\":{\"x_min\":0,\"x_max\":777,\"ha\":835,\"o\":\"m 777 894 l 458 894 l 458 0 l 319 0 l 319 894 l 0 894 l 0 1013 l 777 1013 l 777 894 \"},\"Φ\":{\"x_min\":0,\"x_max\":915,\"ha\":997,\"o\":\"m 527 0 l 389 0 l 389 122 q 110 231 220 122 q 0 509 0 340 q 110 785 0 677 q 389 893 220 893 l 389 1013 l 527 1013 l 527 893 q 804 786 693 893 q 915 509 915 679 q 805 231 915 341 q 527 122 696 122 l 527 0 m 527 226 q 712 310 641 226 q 779 507 779 389 q 712 705 779 627 q 527 787 641 787 l 527 226 m 389 226 l 389 787 q 205 698 275 775 q 136 505 136 620 q 206 308 136 391 q 389 226 276 226 \"},\"⁋\":{\"x_min\":0,\"x_max\":0,\"ha\":694},\"j\":{\"x_min\":-77.78125,\"x_max\":167,\"ha\":349,\"o\":\"m 167 871 l 42 871 l 42 1013 l 167 1013 l 167 871 m 167 -80 q 121 -231 167 -184 q -26 -278 76 -278 l -77 -278 l -77 -164 l -41 -164 q 26 -143 11 -164 q 42 -65 42 -122 l 42 737 l 167 737 l 167 -80 \"},\"Σ\":{\"x_min\":0,\"x_max\":756.953125,\"ha\":819,\"o\":\"m 756 0 l 0 0 l 0 107 l 395 523 l 22 904 l 22 1013 l 745 1013 l 745 889 l 209 889 l 566 523 l 187 125 l 756 125 l 756 0 \"},\"1\":{\"x_min\":215.671875,\"x_max\":574,\"ha\":792,\"o\":\"m 574 0 l 442 0 l 442 697 l 215 697 l 215 796 q 386 833 330 796 q 475 986 447 875 l 574 986 l 574 0 \"},\"›\":{\"x_min\":18.0625,\"x_max\":774,\"ha\":792,\"o\":\"m 774 376 l 18 40 l 18 149 l 631 421 l 18 692 l 18 799 l 774 465 l 774 376 \"},\"<\":{\"x_min\":17.984375,\"x_max\":773.609375,\"ha\":792,\"o\":\"m 773 40 l 18 376 l 17 465 l 773 799 l 773 692 l 159 420 l 773 149 l 773 40 \"},\"£\":{\"x_min\":0,\"x_max\":704.484375,\"ha\":801,\"o\":\"m 704 41 q 623 -10 664 5 q 543 -26 583 -26 q 359 15 501 -26 q 243 36 288 36 q 158 23 197 36 q 73 -21 119 10 l 6 76 q 125 195 90 150 q 175 331 175 262 q 147 443 175 383 l 0 443 l 0 512 l 108 512 q 43 734 43 623 q 120 929 43 854 q 358 1010 204 1010 q 579 936 487 1010 q 678 729 678 857 l 678 684 l 552 684 q 504 838 552 780 q 362 896 457 896 q 216 852 263 896 q 176 747 176 815 q 199 627 176 697 q 248 512 217 574 l 468 512 l 468 443 l 279 443 q 297 356 297 398 q 230 194 297 279 q 153 107 211 170 q 227 133 190 125 q 293 142 264 142 q 410 119 339 142 q 516 96 482 96 q 579 105 550 96 q 648 142 608 115 l 704 41 \"},\"t\":{\"x_min\":0,\"x_max\":367,\"ha\":458,\"o\":\"m 367 0 q 312 -5 339 -2 q 262 -8 284 -8 q 145 28 183 -8 q 108 143 108 64 l 108 638 l 0 638 l 0 738 l 108 738 l 108 944 l 232 944 l 232 738 l 367 738 l 367 638 l 232 638 l 232 185 q 248 121 232 140 q 307 102 264 102 q 345 104 330 102 q 367 107 360 107 l 367 0 \"},\"¬\":{\"x_min\":0,\"x_max\":706,\"ha\":803,\"o\":\"m 706 411 l 706 158 l 630 158 l 630 335 l 0 335 l 0 411 l 706 411 \"},\"λ\":{\"x_min\":0,\"x_max\":750,\"ha\":803,\"o\":\"m 750 -7 q 679 -15 716 -15 q 538 59 591 -15 q 466 214 512 97 l 336 551 l 126 0 l 0 0 l 270 705 q 223 837 247 770 q 116 899 190 899 q 90 898 100 899 l 90 1004 q 152 1011 125 1011 q 298 938 244 1011 q 373 783 326 901 l 605 192 q 649 115 629 136 q 716 95 669 95 l 736 95 q 750 97 745 97 l 750 -7 \"},\"W\":{\"x_min\":0,\"x_max\":1263.890625,\"ha\":1351,\"o\":\"m 1263 1013 l 995 0 l 859 0 l 627 837 l 405 0 l 265 0 l 0 1013 l 136 1013 l 342 202 l 556 1013 l 701 1013 l 921 207 l 1133 1012 l 1263 1013 \"},\">\":{\"x_min\":18.0625,\"x_max\":774,\"ha\":792,\"o\":\"m 774 376 l 18 40 l 18 149 l 631 421 l 18 692 l 18 799 l 774 465 l 774 376 \"},\"v\":{\"x_min\":0,\"x_max\":675.15625,\"ha\":761,\"o\":\"m 675 738 l 404 0 l 272 0 l 0 738 l 133 737 l 340 147 l 541 737 l 675 738 \"},\"τ\":{\"x_min\":0.28125,\"x_max\":644.5,\"ha\":703,\"o\":\"m 644 628 l 382 628 l 382 179 q 388 120 382 137 q 436 91 401 91 q 474 94 447 91 q 504 97 501 97 l 504 0 q 454 -9 482 -5 q 401 -14 426 -14 q 278 67 308 -14 q 260 233 260 118 l 260 628 l 0 628 l 0 739 l 644 739 l 644 628 \"},\"ξ\":{\"x_min\":0,\"x_max\":624.9375,\"ha\":699,\"o\":\"m 624 -37 q 608 -153 624 -96 q 563 -278 593 -211 l 454 -278 q 491 -183 486 -200 q 511 -83 511 -126 q 484 -23 511 -44 q 370 1 452 1 q 323 0 354 1 q 283 -1 293 -1 q 84 76 169 -1 q 0 266 0 154 q 56 431 0 358 q 197 538 108 498 q 94 613 134 562 q 54 730 54 665 q 77 823 54 780 q 143 901 101 867 l 27 901 l 27 1012 l 576 1012 l 576 901 l 380 901 q 244 863 303 901 q 178 745 178 820 q 312 600 178 636 q 532 582 380 582 l 532 479 q 276 455 361 479 q 118 281 118 410 q 165 173 118 217 q 274 120 208 133 q 494 101 384 110 q 624 -37 624 76 \"},\"&\":{\"x_min\":-3,\"x_max\":894.25,\"ha\":992,\"o\":\"m 894 0 l 725 0 l 624 123 q 471 0 553 40 q 306 -41 390 -41 q 168 -7 231 -41 q 62 92 105 26 q 14 187 31 139 q -3 276 -3 235 q 55 433 -3 358 q 248 581 114 508 q 170 689 196 640 q 137 817 137 751 q 214 985 137 922 q 384 1041 284 1041 q 548 988 483 1041 q 622 824 622 928 q 563 666 622 739 q 431 556 516 608 l 621 326 q 649 407 639 361 q 663 493 653 426 l 781 493 q 703 229 781 352 l 894 0 m 504 818 q 468 908 504 877 q 384 940 433 940 q 293 907 331 940 q 255 818 255 875 q 289 714 255 767 q 363 628 313 678 q 477 729 446 682 q 504 818 504 771 m 556 209 l 314 499 q 179 395 223 449 q 135 283 135 341 q 146 222 135 253 q 183 158 158 192 q 333 80 241 80 q 556 209 448 80 \"},\"Λ\":{\"x_min\":0,\"x_max\":862.5,\"ha\":942,\"o\":\"m 862 0 l 719 0 l 426 847 l 143 0 l 0 0 l 356 1013 l 501 1013 l 862 0 \"},\"I\":{\"x_min\":41,\"x_max\":180,\"ha\":293,\"o\":\"m 180 0 l 41 0 l 41 1013 l 180 1013 l 180 0 \"},\"G\":{\"x_min\":0,\"x_max\":921,\"ha\":1011,\"o\":\"m 921 0 l 832 0 l 801 136 q 655 15 741 58 q 470 -28 568 -28 q 126 133 259 -28 q 0 499 0 284 q 125 881 0 731 q 486 1043 259 1043 q 763 957 647 1043 q 905 709 890 864 l 772 709 q 668 866 747 807 q 486 926 589 926 q 228 795 322 926 q 142 507 142 677 q 228 224 142 342 q 483 94 323 94 q 712 195 625 94 q 796 435 796 291 l 477 435 l 477 549 l 921 549 l 921 0 \"},\"ΰ\":{\"x_min\":0,\"x_max\":617,\"ha\":725,\"o\":\"m 524 800 l 414 800 l 414 925 l 524 925 l 524 800 m 183 800 l 73 800 l 73 925 l 183 925 l 183 800 m 617 352 q 540 93 617 199 q 308 -24 455 -24 q 76 93 161 -24 q 0 352 0 199 l 0 738 l 126 738 l 126 354 q 169 185 126 257 q 312 98 220 98 q 451 185 402 98 q 492 354 492 257 l 492 738 l 617 738 l 617 352 m 489 1040 l 300 819 l 216 819 l 351 1040 l 489 1040 \"},\"`\":{\"x_min\":0,\"x_max\":138.890625,\"ha\":236,\"o\":\"m 138 699 l 0 699 l 0 861 q 36 974 0 929 q 138 1041 72 1020 l 138 977 q 82 931 95 969 q 69 839 69 893 l 138 839 l 138 699 \"},\"·\":{\"x_min\":0,\"x_max\":142,\"ha\":239,\"o\":\"m 142 585 l 0 585 l 0 738 l 142 738 l 142 585 \"},\"Υ\":{\"x_min\":0.328125,\"x_max\":819.515625,\"ha\":889,\"o\":\"m 819 1013 l 482 416 l 482 0 l 342 0 l 342 416 l 0 1013 l 140 1013 l 411 533 l 679 1013 l 819 1013 \"},\"r\":{\"x_min\":0,\"x_max\":355.5625,\"ha\":432,\"o\":\"m 355 621 l 343 621 q 179 569 236 621 q 122 411 122 518 l 122 0 l 0 0 l 0 737 l 117 737 l 117 604 q 204 719 146 686 q 355 753 262 753 l 355 621 \"},\"x\":{\"x_min\":0,\"x_max\":675,\"ha\":764,\"o\":\"m 675 0 l 525 0 l 331 286 l 144 0 l 0 0 l 256 379 l 12 738 l 157 737 l 336 473 l 516 738 l 661 738 l 412 380 l 675 0 \"},\"μ\":{\"x_min\":0,\"x_max\":696.609375,\"ha\":747,\"o\":\"m 696 -4 q 628 -14 657 -14 q 498 97 513 -14 q 422 8 470 41 q 313 -24 374 -24 q 207 3 258 -24 q 120 80 157 31 l 120 -278 l 0 -278 l 0 738 l 124 738 l 124 343 q 165 172 124 246 q 308 82 216 82 q 451 177 402 82 q 492 358 492 254 l 492 738 l 616 738 l 616 214 q 623 136 616 160 q 673 92 636 92 q 696 95 684 92 l 696 -4 \"},\"h\":{\"x_min\":0,\"x_max\":615,\"ha\":724,\"o\":\"m 615 472 l 615 0 l 490 0 l 490 454 q 456 590 490 535 q 338 654 416 654 q 186 588 251 654 q 122 436 122 522 l 122 0 l 0 0 l 0 1013 l 122 1013 l 122 633 q 218 727 149 694 q 362 760 287 760 q 552 676 484 760 q 615 472 615 600 \"},\".\":{\"x_min\":0,\"x_max\":142,\"ha\":239,\"o\":\"m 142 0 l 0 0 l 0 151 l 142 151 l 142 0 \"},\"φ\":{\"x_min\":-2,\"x_max\":878,\"ha\":974,\"o\":\"m 496 -279 l 378 -279 l 378 -17 q 101 88 204 -17 q -2 367 -2 194 q 68 626 -2 510 q 283 758 151 758 l 283 646 q 167 537 209 626 q 133 373 133 462 q 192 177 133 254 q 378 93 259 93 l 378 758 q 445 764 426 763 q 476 765 464 765 q 765 659 653 765 q 878 377 878 553 q 771 96 878 209 q 496 -17 665 -17 l 496 -279 m 496 93 l 514 93 q 687 183 623 93 q 746 380 746 265 q 691 569 746 491 q 522 658 629 658 l 496 656 l 496 93 \"},\";\":{\"x_min\":0,\"x_max\":142,\"ha\":239,\"o\":\"m 142 585 l 0 585 l 0 738 l 142 738 l 142 585 m 142 -12 q 105 -132 142 -82 q 0 -206 68 -182 l 0 -138 q 58 -82 43 -123 q 68 0 68 -56 l 0 0 l 0 151 l 142 151 l 142 -12 \"},\"f\":{\"x_min\":0,\"x_max\":378,\"ha\":472,\"o\":\"m 378 638 l 246 638 l 246 0 l 121 0 l 121 638 l 0 638 l 0 738 l 121 738 q 137 935 121 887 q 290 1028 171 1028 q 320 1027 305 1028 q 378 1021 334 1026 l 378 908 q 323 918 346 918 q 257 870 273 918 q 246 780 246 840 l 246 738 l 378 738 l 378 638 \"},\"“\":{\"x_min\":1,\"x_max\":348.21875,\"ha\":454,\"o\":\"m 140 670 l 1 670 l 1 830 q 37 943 1 897 q 140 1011 74 990 l 140 947 q 82 900 97 940 q 68 810 68 861 l 140 810 l 140 670 m 348 670 l 209 670 l 209 830 q 245 943 209 897 q 348 1011 282 990 l 348 947 q 290 900 305 940 q 276 810 276 861 l 348 810 l 348 670 \"},\"A\":{\"x_min\":0.03125,\"x_max\":906.953125,\"ha\":1008,\"o\":\"m 906 0 l 756 0 l 648 303 l 251 303 l 142 0 l 0 0 l 376 1013 l 529 1013 l 906 0 m 610 421 l 452 867 l 293 421 l 610 421 \"},\"6\":{\"x_min\":53,\"x_max\":739,\"ha\":792,\"o\":\"m 739 312 q 633 62 739 162 q 400 -31 534 -31 q 162 78 257 -31 q 53 439 53 206 q 178 859 53 712 q 441 986 284 986 q 643 912 559 986 q 732 713 732 833 l 601 713 q 544 830 594 786 q 426 875 494 875 q 268 793 331 875 q 193 517 193 697 q 301 597 240 570 q 427 624 362 624 q 643 540 552 624 q 739 312 739 451 m 603 298 q 540 461 603 400 q 404 516 484 516 q 268 461 323 516 q 207 300 207 401 q 269 137 207 198 q 405 83 325 83 q 541 137 486 83 q 603 298 603 197 \"},\"‘\":{\"x_min\":1,\"x_max\":139.890625,\"ha\":236,\"o\":\"m 139 670 l 1 670 l 1 830 q 37 943 1 897 q 139 1011 74 990 l 139 947 q 82 900 97 940 q 68 810 68 861 l 139 810 l 139 670 \"},\"ϊ\":{\"x_min\":-70,\"x_max\":283,\"ha\":361,\"o\":\"m 283 800 l 173 800 l 173 925 l 283 925 l 283 800 m 40 800 l -70 800 l -70 925 l 40 925 l 40 800 m 283 3 q 232 -10 257 -5 q 181 -15 206 -15 q 84 26 118 -15 q 41 200 41 79 l 41 737 l 166 737 l 167 215 q 171 141 167 157 q 225 101 182 101 q 247 103 238 101 q 283 112 256 104 l 283 3 \"},\"π\":{\"x_min\":-0.21875,\"x_max\":773.21875,\"ha\":857,\"o\":\"m 773 -7 l 707 -11 q 575 40 607 -11 q 552 174 552 77 l 552 226 l 552 626 l 222 626 l 222 0 l 97 0 l 97 626 l 0 626 l 0 737 l 773 737 l 773 626 l 676 626 l 676 171 q 695 103 676 117 q 773 90 714 90 l 773 -7 \"},\"ά\":{\"x_min\":0,\"x_max\":765.5625,\"ha\":809,\"o\":\"m 765 -4 q 698 -14 726 -14 q 564 97 586 -14 q 466 7 525 40 q 337 -26 407 -26 q 88 98 186 -26 q 0 369 0 212 q 88 637 0 525 q 337 760 184 760 q 465 727 407 760 q 563 637 524 695 l 563 738 l 685 738 l 685 222 q 693 141 685 168 q 748 94 708 94 q 765 95 760 94 l 765 -4 m 584 371 q 531 562 584 485 q 360 653 470 653 q 192 566 254 653 q 135 379 135 489 q 186 181 135 261 q 358 84 247 84 q 528 176 465 84 q 584 371 584 260 m 604 1040 l 415 819 l 332 819 l 466 1040 l 604 1040 \"},\"O\":{\"x_min\":0,\"x_max\":958,\"ha\":1057,\"o\":\"m 485 1041 q 834 882 702 1041 q 958 512 958 734 q 834 136 958 287 q 481 -26 702 -26 q 126 130 261 -26 q 0 504 0 279 q 127 880 0 728 q 485 1041 263 1041 m 480 98 q 731 225 638 98 q 815 504 815 340 q 733 783 815 669 q 480 912 640 912 q 226 784 321 912 q 142 504 142 670 q 226 224 142 339 q 480 98 319 98 \"},\"n\":{\"x_min\":0,\"x_max\":615,\"ha\":724,\"o\":\"m 615 463 l 615 0 l 490 0 l 490 454 q 453 592 490 537 q 331 656 410 656 q 178 585 240 656 q 117 421 117 514 l 117 0 l 0 0 l 0 738 l 117 738 l 117 630 q 218 728 150 693 q 359 764 286 764 q 552 675 484 764 q 615 463 615 593 \"},\"3\":{\"x_min\":54,\"x_max\":737,\"ha\":792,\"o\":\"m 737 284 q 635 55 737 141 q 399 -25 541 -25 q 156 52 248 -25 q 54 308 54 140 l 185 308 q 245 147 185 202 q 395 96 302 96 q 539 140 484 96 q 602 280 602 190 q 510 429 602 390 q 324 454 451 454 l 324 565 q 487 584 441 565 q 565 719 565 617 q 515 835 565 791 q 395 879 466 879 q 255 824 307 879 q 203 661 203 769 l 78 661 q 166 909 78 822 q 387 992 250 992 q 603 921 513 992 q 701 723 701 844 q 669 607 701 656 q 578 524 637 558 q 696 434 655 499 q 737 284 737 369 \"},\"9\":{\"x_min\":53,\"x_max\":739,\"ha\":792,\"o\":\"m 739 524 q 619 94 739 241 q 362 -32 516 -32 q 150 47 242 -32 q 59 244 59 126 l 191 244 q 246 129 191 176 q 373 82 301 82 q 526 161 466 82 q 597 440 597 255 q 363 334 501 334 q 130 432 216 334 q 53 650 53 521 q 134 880 53 786 q 383 986 226 986 q 659 841 566 986 q 739 524 739 719 m 388 449 q 535 514 480 449 q 585 658 585 573 q 535 805 585 744 q 388 873 480 873 q 242 809 294 873 q 191 658 191 745 q 239 514 191 572 q 388 449 292 449 \"},\"l\":{\"x_min\":41,\"x_max\":166,\"ha\":279,\"o\":\"m 166 0 l 41 0 l 41 1013 l 166 1013 l 166 0 \"},\"¤\":{\"x_min\":40.09375,\"x_max\":728.796875,\"ha\":825,\"o\":\"m 728 304 l 649 224 l 512 363 q 383 331 458 331 q 256 363 310 331 l 119 224 l 40 304 l 177 441 q 150 553 150 493 q 184 673 150 621 l 40 818 l 119 898 l 267 749 q 321 766 291 759 q 384 773 351 773 q 447 766 417 773 q 501 749 477 759 l 649 898 l 728 818 l 585 675 q 612 618 604 648 q 621 553 621 587 q 591 441 621 491 l 728 304 m 384 682 q 280 643 318 682 q 243 551 243 604 q 279 461 243 499 q 383 423 316 423 q 487 461 449 423 q 525 553 525 500 q 490 641 525 605 q 384 682 451 682 \"},\"κ\":{\"x_min\":0,\"x_max\":632.328125,\"ha\":679,\"o\":\"m 632 0 l 482 0 l 225 384 l 124 288 l 124 0 l 0 0 l 0 738 l 124 738 l 124 446 l 433 738 l 596 738 l 312 466 l 632 0 \"},\"4\":{\"x_min\":48,\"x_max\":742.453125,\"ha\":792,\"o\":\"m 742 243 l 602 243 l 602 0 l 476 0 l 476 243 l 48 243 l 48 368 l 476 958 l 602 958 l 602 354 l 742 354 l 742 243 m 476 354 l 476 792 l 162 354 l 476 354 \"},\"p\":{\"x_min\":0,\"x_max\":685,\"ha\":786,\"o\":\"m 685 364 q 598 96 685 205 q 350 -23 504 -23 q 121 89 205 -23 l 121 -278 l 0 -278 l 0 738 l 121 738 l 121 633 q 220 726 159 691 q 351 761 280 761 q 598 636 504 761 q 685 364 685 522 m 557 371 q 501 560 557 481 q 330 651 437 651 q 162 559 223 651 q 108 366 108 479 q 162 177 108 254 q 333 87 224 87 q 502 178 441 87 q 557 371 557 258 \"},\"‡\":{\"x_min\":0,\"x_max\":777,\"ha\":835,\"o\":\"m 458 238 l 458 0 l 319 0 l 319 238 l 0 238 l 0 360 l 319 360 l 319 681 l 0 683 l 0 804 l 319 804 l 319 1015 l 458 1013 l 458 804 l 777 804 l 777 683 l 458 683 l 458 360 l 777 360 l 777 238 l 458 238 \"},\"ψ\":{\"x_min\":0,\"x_max\":808,\"ha\":907,\"o\":\"m 465 -278 l 341 -278 l 341 -15 q 87 102 180 -15 q 0 378 0 210 l 0 739 l 133 739 l 133 379 q 182 195 133 275 q 341 98 242 98 l 341 922 l 465 922 l 465 98 q 623 195 563 98 q 675 382 675 278 l 675 742 l 808 742 l 808 381 q 720 104 808 213 q 466 -13 627 -13 l 465 -278 \"},\"η\":{\"x_min\":0.78125,\"x_max\":697,\"ha\":810,\"o\":\"m 697 -278 l 572 -278 l 572 454 q 540 587 572 536 q 425 650 501 650 q 271 579 337 650 q 206 420 206 509 l 206 0 l 81 0 l 81 489 q 73 588 81 562 q 0 644 56 644 l 0 741 q 68 755 38 755 q 158 720 124 755 q 200 630 193 686 q 297 726 234 692 q 434 761 359 761 q 620 692 544 761 q 697 516 697 624 l 697 -278 \"}},\"cssFontWeight\":\"normal\",\"ascender\":1189,\"underlinePosition\":-100,\"cssFontStyle\":\"normal\",\"boundingBox\":{\"yMin\":-334,\"xMin\":-111,\"yMax\":1189,\"xMax\":1672},\"resolution\":1000,\"original_font_information\":{\"postscript_name\":\"Helvetiker-Regular\",\"version_string\":\"Version 1.00 2004 initial release\",\"vendor_url\":\"http://www.magenta.gr/\",\"full_font_name\":\"Helvetiker\",\"font_family_name\":\"Helvetiker\",\"copyright\":\"Copyright (c) Μagenta ltd, 2004\",\"description\":\"\",\"trademark\":\"\",\"designer\":\"\",\"designer_url\":\"\",\"unique_font_identifier\":\"Μagenta ltd:Helvetiker:22-10-104\",\"license_url\":\"http://www.ellak.gr/fonts/MgOpen/license.html\",\"license_description\":\"Copyright (c) 2004 by MAGENTA Ltd. All Rights Reserved.\\r\\n\\r\\nPermission is hereby granted, free of charge, to any person obtaining a copy of the fonts accompanying this license (\\\"Fonts\\\") and associated documentation files (the \\\"Font Software\\\"), to reproduce and distribute the Font Software, including without limitation the rights to use, copy, merge, publish, distribute, and/or sell copies of the Font Software, and to permit persons to whom the Font Software is furnished to do so, subject to the following conditions: \\r\\n\\r\\nThe above copyright and this permission notice shall be included in all copies of one or more of the Font Software typefaces.\\r\\n\\r\\nThe Font Software may be modified, altered, or added to, and in particular the designs of glyphs or characters in the Fonts may be modified and additional glyphs or characters may be added to the Fonts, only if the fonts are renamed to names not containing the word \\\"MgOpen\\\", or if the modifications are accepted for inclusion in the Font Software itself by the each appointed Administrator.\\r\\n\\r\\nThis License becomes null and void to the extent applicable to Fonts or Font Software that has been modified and is distributed under the \\\"MgOpen\\\" name.\\r\\n\\r\\nThe Font Software may be sold as part of a larger software package but no copy of one or more of the Font Software typefaces may be sold by itself. \\r\\n\\r\\nTHE FONT SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT OF COPYRIGHT, PATENT, TRADEMARK, OR OTHER RIGHT. IN NO EVENT SHALL MAGENTA OR PERSONS OR BODIES IN CHARGE OF ADMINISTRATION AND MAINTENANCE OF THE FONT SOFTWARE BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, INCLUDING ANY GENERAL, SPECIAL, INDIRECT, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF THE USE OR INABILITY TO USE THE FONT SOFTWARE OR FROM OTHER DEALINGS IN THE FONT SOFTWARE.\",\"manufacturer_name\":\"Μagenta ltd\",\"font_sub_family_name\":\"Regular\"},\"descender\":-334,\"familyName\":\"Helvetiker\",\"lineHeight\":1522,\"underlineThickness\":50});\n\n\nif ( ! Detector.webgl ) Detector.addGetWebGLMessage();\n\t\t\t//var blocked = [0,0];\n\t\t\tvar SCREEN_WIDTH = window.innerWidth;\n\t\t\tvar SCREEN_HEIGHT = window.innerHeight;\n\n\t\t\tvar xOffset = -1000;\n\t\t\tvar yOffset = 136;\n\t\t\tvar zOffset = -600;\n\n\t\t\tvar renderer, container, stats;\n\n\t\t\tvar camera, scene;\n\t\t\tvar cameraOrtho, sceneRenderTarget;\n\n\t\t\tvar uniformsNoise, uniformsNormal,\n\t\t\t\theightMap, normalMap,\n\t\t\t\tquadTarget;\n\n\t\t\tvar directionalLight, pointLight;\n\n\t\t\tvar terrain;\n\n\t\t\tvar textureCounter = 0;\n\n\t\t\tvar animDelta = 0, animDeltaDir = -1;\n\t\t\tvar lightVal = 0, lightDir = 1;\n\n\t\t\tvar clock = new THREE.Clock();\n\n\t\t\tvar morph, morphs = [];\n\n\t\t\tvar updateNoise = true;\n\n\t\t\tvar animateTerrain = false;\n\n\t\t\tvar textMesh1;\n\n\t\t\tvar mlib = {};\n\t\t\tvar camera, controls, pointLight;\n\t\t\tvar uniformsTerrain;\n\t\t\tvar composer;\n\n\t\t\tinit();\n\t\t\tanimate();\n\n\t\t\tfunction init() {\n\n\t\t\t\tcontainer = document.getElementById( 'container' );\n\n\t\t\t\t// SCENE (RENDER TARGET)\n\n\t\t\t\tsceneRenderTarget = new THREE.Scene();\n\n\t\t\t\tcameraOrtho = new THREE.OrthographicCamera( SCREEN_WIDTH / - 2, SCREEN_WIDTH / 2, SCREEN_HEIGHT / 2, SCREEN_HEIGHT / - 2, -10000, 10000 );\n\t\t\t\tcameraOrtho.position.z = 100;\n\n\t\t\t\tsceneRenderTarget.add( cameraOrtho );\n\n\t\t\t\t// CAMERA\n\n\t\t\t\tcamera = new THREE.PerspectiveCamera( 40, SCREEN_WIDTH / SCREEN_HEIGHT, 2, 4000 );\n\t\t\t\tcamera.position.set( -1000 + xOffset, 800 + yOffset, -400 + zOffset);\n\n\t\t\t\tcontrols = new THREE.OrbitControls( camera );\n\t\t\t\tcontrols.target.set( 0, 0, 0 );\n\n\t\t\t\tcontrols.rotateSpeed = 1.0;\n\t\t\t\tcontrols.zoomSpeed = 1.2;\n\t\t\t\tcontrols.panSpeed = 0.8;\n\n\t\t\t\tcontrols.noZoom = false;\n\t\t\t\tcontrols.noPan = false;\n\n\t\t\t\tcontrols.keys = [ 65, 83, 68 ];\n\n\t\t\t\t// SCENE (FINAL)\n\n\t\t\t\tvar scene = new THREE.Scene();\n\n\t\t\t\t//scene.fog = new THREE.Fog( 0x050505, 2000, 4000 );\n\n\t\t\t\t// LIGHTS\n\n\t\t\t\tscene.add( new THREE.AmbientLight( 0x111111 ) );\n\n\t\t\t\tdirectionalLight = new THREE.DirectionalLight( 0xffffff, 1.15 );\n\t\t\t\tdirectionalLight.position.set( 500, 2000, 0 );\n\t\t\t\tscene.add( directionalLight );\n\n\t\t\t\tpointLight = new THREE.PointLight( 0xff4400, 1.5 );\n\t\t\t\tpointLight.position.set( 0, 0, 0 );\n\t\t\t\tscene.add( pointLight );\n\n\t\t\t\t\n\t\t\t\t// Draw drills\n\t\t\t\t$.getJSON( \"holes.json\", function( data ) {\n\t\t\t\t\tdata = data[\"holes\"];\n\n\t\t\t\t\tconsole.log(data.length);\n\t\t\t\t\tvar segments = 0;\n\n\t\t\t\t\t/*var geometry = new THREE.BufferGeometry();\n\t\t\t\t\tvar material = new THREE.LineBasicMaterial({ vertexColors: THREE.VertexColors});\n\t\t\t\t\tmaterial.linewidth = 15;*/\n\n\t\t\t\t\tvar positions = [];// new Float32Array( segments * 3 );\n\t\t\t\t\tvar colors = [];\n\n\t\t\t\t\tvar startX = 0;\n\t\t\t\t\tvar startY = 0;\n\t\t\t\t\tvar compound = 0;\n\n\t\t\t\t\t$.each(data, function(index, element) {\n\t\t\t\t\t\t//if (index == 0){\n\t\t\t\t\t\t//if (blocked[index] == 0){\n\t\t\t\t\t\t    //console.log(element);\n\t\t\t\t\t\t    var name = element[\"name\"];\n\n\t\t\t\t\t\t    var textGeometry = new THREE.TextGeometry(name, {height: 12, size: 12});\n\t\t\t\t\t\t    textGeometry.computeBoundingBox();\n\n\t\t\t\t\t\t    var x = element[\"x\"];\n\t\t\t\t\t\t    var y = element[\"y\"];\n\t\t\t\t\t\t    var z = element[\"z\"];\n\n\t\t\t\t\t\t    textGeometry.applyMatrix(\n\t\t\t\t\t\t    \tnew THREE.Matrix4().makeTranslation(x + -30 + xOffset, y + 175 + yOffset, z + -10 + zOffset) );\n\t\t\t\t\t\t    var textMaterial = new THREE.MeshBasicMaterial({ color: 0xb0bca7, overdraw: true });\n\t\t\t\t\t\t    scene.add(new THREE.Mesh( textGeometry, textMaterial ));\n\n\t\t\t\t\t\t    \n\t\t\t\t\t\t    var points = element[\"points\"];\n\t\t\t\t\t\t    //console.log(\"Size: \" + points.length);\n\t\t\t\t\t\t    segments = points.length;\n\t\t\t\t\t\t    var accum = 0;\n\t\t\t\t\t\t    var compound = 0;\n\t\t\t\t\t\t    var start = 0;\n\t\t\t\t\t\t    var last = 0;\n\t\t\t\t\t\t    $.each(points, function(index, element){\n\t\t\t\t\t\t    \tvar len = element[\"length\"] *2;\n\n\n\t\t\t\t\t\t    \tif (index > 0){\n\t\t\t\t\t\t\t\t\tif ((points[index][\"coal\"] != points[index - 1][\"coal\"]) || ((points.length - 1) == index)){\n\t\t\t\t\t\t\t\t\t\tconsole.log(\"last: \" + last);\n\t\t\t\t\t\t\t\t\t\tconsole.log(\"compound: \" + compound);\n\t\t\t\t\t\t\t\t\t\tconsole.log(\"coal: \" + points[index - 1][\"coal\"]);\n\n\n\t\t\t\t\t\t\t\t\t\tvar geometry = new THREE.CylinderGeometry( 20, 20, compound);\n\t\t\t\t\t\t\t\t    \tvar material;\n\t\t\t\t\t\t\t\t    \t/*if (start == 0){\n\t\t\t\t\t\t\t\t    \t\tgeometry.applyMatrix( new THREE.Matrix4().makeTranslation( x + 0 + xOffset, y +  yOffset, z + 0 + zOffset) );\n\t\t\t\t\t\t\t\t\t    } else {*/\n\t\t\t\t\t\t\t\t\t    \tgeometry.applyMatrix( new THREE.Matrix4().makeTranslation( x + 0 + xOffset, y + -((accum) - (compound/2)) + 115 + yOffset, z + 0 + zOffset) );\n\t\t\t\t\t\t\t\t\t    //}\n\t\t\t\t\t\t\t\t    \t//accum += len;\n\t\t\t\t\t\t\t\t    \t\n\t\t\t\t\t\t\t\t    \t//console.log(\"C: \" + accum);\n\n\t\t\t\t\t\t\t\t    \tvar coal = points[index - 1][\"coal\"];\n\n\t\t\t\t\t\t\t\t    \tif (coal == true){\n\t\t\t\t\t\t\t\t    \t\tmaterial = new THREE.MeshBasicMaterial( {color: 0xff0000} );\n\t\t\t\t\t\t\t\t    \t} else {\n\t\t\t\t\t\t\t\t    \t\tmaterial = new THREE.MeshBasicMaterial( {color: 0x0000ff} );\n\t\t\t\t\t\t\t\t    \t}\n\t\t\t\t\t\t\t\t    \t\n\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tvar cylinder = new THREE.Mesh( geometry, material );\n\t\t\t\t\t\t\t\t\t\tscene.add( cylinder );\n\n\t\t\t\t\t\t\t\t\t\tcompound = len;\n\t\t\t\t\t\t\t\t\t\tstart = accum;\n\t\t\t\t\t\t\t\t\t\tlast = accum;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tcompound += len;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcompound += len;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\taccum += len;\n\t\t\t\t\t\t\t\t//accum += len;\n\n\t\t\t\t\t\t    });\n\t\t\t\t\t\t//}\n\t\t\t\t\t\t//}\n\t\t\t\t\t});\n\t\t\t\t});\n\n\n\t\t\t\t// HEIGHT + NORMAL MAPS\n\n\t\t\t\tvar normalShader = THREE.NormalMapShader;\n\n\t\t\t\tvar rx = 256, ry = 256;\n\t\t\t\tvar pars = { minFilter: THREE.LinearMipmapLinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBFormat };\n\n\t\t\t\theightMap  = new THREE.WebGLRenderTarget( rx, ry, pars );\n\t\t\t\theightMap.generateMipmaps = false;\n\n\t\t\t\tnormalMap = new THREE.WebGLRenderTarget( rx, ry, pars );\n\t\t\t\tnormalMap.generateMipmaps = false;\n\n\t\t\t\tuniformsNoise = {\n\n\t\t\t\t\ttime:   { type: \"f\", value: 1.0 },\n\t\t\t\t\tscale:  { type: \"v2\", value: new THREE.Vector2( 1.5, 1.5 ) },\n\t\t\t\t\toffset: { type: \"v2\", value: new THREE.Vector2( 0, 0 ) }\n\n\t\t\t\t};\n\n\t\t\t\tuniformsNormal = THREE.UniformsUtils.clone( normalShader.uniforms );\n\n\t\t\t\tuniformsNormal.height.value = 0.05;\n\t\t\t\tuniformsNormal.resolution.value.set( rx, ry );\n\t\t\t\tuniformsNormal.heightMap.value = heightMap;\n\n\t\t\t\tvar vertexShader = document.getElementById( 'vertexShader' ).textContent;\n\n\t\t\t\t// TEXTURES\n\n\t\t\t\tvar specularMap = new THREE.WebGLRenderTarget( 2048, 2048, pars );\n\t\t\t\tspecularMap.generateMipmaps = false;\n\n\t\t\t\tvar diffuseTexture1 = THREE.ImageUtils.loadTexture('images/grasslight-big.jpg', null, function () {\n\n\t\t\t\t\tloadTextures();\n\t\t\t\t\tapplyShader( THREE.LuminosityShader, diffuseTexture1, specularMap );\n\n\t\t\t\t} );\n\n\t\t\t\tvar diffuseTexture2 = THREE.ImageUtils.loadTexture('images/backgrounddetailed6.jpg', null, loadTextures );\n\t\t\t\tvar detailTexture = THREE.ImageUtils.loadTexture('images/grasslight-big-nm.jpg', null, loadTextures );\n\n\t\t\t\tdiffuseTexture1.wrapS = diffuseTexture1.wrapT = THREE.RepeatWrapping;\n\t\t\t\tdiffuseTexture2.wrapS = diffuseTexture2.wrapT = THREE.RepeatWrapping;\n\t\t\t\tdetailTexture.wrapS = detailTexture.wrapT = THREE.RepeatWrapping;\n\t\t\t\tspecularMap.wrapS = specularMap.wrapT = THREE.RepeatWrapping;\n\n\t\t\t\t// TERRAIN SHADER\n\n\t\t\t\tvar terrainShader = THREE.ShaderTerrain[ \"terrain\" ];\n\n\t\t\t\tuniformsTerrain = THREE.UniformsUtils.clone( terrainShader.uniforms );\n\n\t\t\t\tuniformsTerrain[ \"tNormal\" ].value = normalMap;\n\t\t\t\tuniformsTerrain[ \"uNormalScale\" ].value = 3.5;\n\n\t\t\t\tuniformsTerrain[ \"tDisplacement\" ].value = heightMap;\n\n\t\t\t\tuniformsTerrain[ \"tDiffuse1\" ].value = diffuseTexture1;\n\t\t\t\tuniformsTerrain[ \"tDiffuse2\" ].value = diffuseTexture2;\n\t\t\t\tuniformsTerrain[ \"tSpecular\" ].value = specularMap;\n\t\t\t\tuniformsTerrain[ \"tDetail\" ].value = detailTexture;\n\n\t\t\t\tuniformsTerrain[ \"enableDiffuse1\" ].value = true;\n\t\t\t\tuniformsTerrain[ \"enableDiffuse2\" ].value = true;\n\t\t\t\tuniformsTerrain[ \"enableSpecular\" ].value = true;\n\n\t\t\t\tuniformsTerrain[ \"diffuse\" ].value.setHex( 0xffffff );\n\t\t\t\tuniformsTerrain[ \"specular\" ].value.setHex( 0xffffff );\n\n\t\t\t\tuniformsTerrain[ \"shininess\" ].value = 30;\n\n\t\t\t\tuniformsTerrain[ \"uDisplacementScale\" ].value = 375;\n\n\t\t\t\tuniformsTerrain[ \"uRepeatOverlay\" ].value.set( 6, 6 );\n\n\t\t\t\tvar params = [\n\t\t\t\t\t[ 'heightmap', \tdocument.getElementById( 'fragmentShaderNoise' ).textContent, \tvertexShader, uniformsNoise, false ],\n\t\t\t\t\t[ 'normal', \tnormalShader.fragmentShader,  normalShader.vertexShader, uniformsNormal, false ],\n\t\t\t\t\t[ 'terrain', \tterrainShader.fragmentShader, terrainShader.vertexShader, uniformsTerrain, true ]\n\t\t\t\t ];\n\n\t\t\t\tfor( var i = 0; i < params.length; i ++ ) {\n\n\t\t\t\t\tvar material = new THREE.ShaderMaterial( {\n\n\t\t\t\t\t\tuniforms: \t\tparams[ i ][ 3 ],\n\t\t\t\t\t\tvertexShader: \tparams[ i ][ 2 ],\n\t\t\t\t\t\tfragmentShader: params[ i ][ 1 ],\n\t\t\t\t\t\tlights: \t\tparams[ i ][ 4 ],\n\t\t\t\t\t\tfog: \t\t\ttrue\n\t\t\t\t\t\t} );\n\n\t\t\t\t\tmlib[ params[ i ][ 0 ] ] = material;\n\n\t\t\t\t}\n\n\n\t\t\t\tvar plane = new THREE.PlaneBufferGeometry( SCREEN_WIDTH, SCREEN_HEIGHT );\n\n\t\t\t\tquadTarget = new THREE.Mesh( plane, new THREE.MeshBasicMaterial( { color: 0x222222 } ) );\n\t\t\t\tquadTarget.position.z = -500;\n\t\t\t\tsceneRenderTarget.add( quadTarget );\n\n\t\t\t\t// TERRAIN MESH\n\n\t\t\t\tvar geometryTerrain = new THREE.PlaneBufferGeometry( 6000, 6000, 256, 256 );\n\t\t\t\tgeometryTerrain.computeTangents();\n\n\t\t\t\tterrain = new THREE.Mesh( geometryTerrain, mlib[ \"terrain\" ] );\n\t\t\t\tterrain.position.set( 0, -125, 0 );\n\t\t\t\tterrain.rotation.x = -Math.PI / 2;\n\t\t\t\tterrain.visible = false;\n\t\t\t\tscene.add( terrain );\n\n\t\t\t\t// RENDERER\n\n\t\t\t\trenderer = new THREE.WebGLRenderer();\n\n\t\t\t\trenderer.setClearColor(0x222222, 1 );\n\t\t\t\trenderer.setPixelRatio( window.devicePixelRatio );\n\t\t\t\trenderer.setSize( SCREEN_WIDTH, SCREEN_HEIGHT );\n\t\t\t\tcontainer.appendChild( renderer.domElement );\n\n\t\t\t\t//\n\n\t\t\t\trenderer.gammaInput = true;\n\t\t\t\trenderer.gammaOutput = true;\n\n\n\t\t\t\t// STATS\n\n\t\t\t\tstats = new Stats();\n\t\t\t\tcontainer.appendChild( stats.domElement );\n\n\t\t\t\t// EVENTS\n\n\t\t\t\tonWindowResize();\n\n\t\t\t\twindow.addEventListener( 'resize', onWindowResize, false );\n\n\t\t\t\tdocument.addEventListener( 'keydown', onKeyDown, false );\n\n\t\t\t\t// COMPOSER\n\n\t\t\t\trenderer.autoClear = false;\n\n\t\t\t\tvar renderTargetParameters = { minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBFormat, stencilBuffer: false };\n\n\t\t\t\tvar renderTarget = new THREE.WebGLRenderTarget( SCREEN_WIDTH, SCREEN_HEIGHT, renderTargetParameters );\n\t\t\t\trenderTarget.generateMipmaps = false;\n\n\t\t\t\tvar effectBloom = new THREE.BloomPass( 0.6 );\n\t\t\t\tvar effectBleach = new THREE.ShaderPass( THREE.BleachBypassShader );\n\n\t\t\t\tvar hblur = new THREE.ShaderPass( THREE.HorizontalTiltShiftShader );\n\t\t\t\tvar vblur = new THREE.ShaderPass( THREE.VerticalTiltShiftShader );\n\n\t\t\t\tvar bluriness = 0;\n\n\t\t\t\thblur.uniforms[ 'h' ].value = bluriness / SCREEN_WIDTH;\n\t\t\t\tvblur.uniforms[ 'v' ].value = bluriness / SCREEN_HEIGHT;\n\n\t\t\t\thblur.uniforms[ 'r' ].value = vblur.uniforms[ 'r' ].value = 1.0;\n\n\t\t\t\teffectBleach.uniforms[ 'opacity' ].value = 1.0;\n\n\t\t\t\tcomposer = new THREE.EffectComposer( renderer, renderTarget );\n\n\t\t\t\tvar renderModel = new THREE.RenderPass( scene, camera );\n\n\t\t\t\tvblur.renderToScreen = true;\n\n\t\t\t\tcomposer = new THREE.EffectComposer( renderer, renderTarget );\n\n\t\t\t\tcomposer.addPass( renderModel );\n\n\t\t\t\t//composer.addPass( effectBloom );\n\t\t\t\t//composer.addPass( effectBleach );\n\n\t\t\t\tcomposer.addPass( hblur );\n\t\t\t\tcomposer.addPass( vblur );\n\n\t\t\t\t// MORPHS\n\n\t\t\t\tfunction addMorph( geometry, speed, duration, x, y, z ) {\n\n\t\t\t\t\tvar material = new THREE.MeshLambertMaterial( { color: 0xffaa55, morphTargets: true, vertexColors: THREE.FaceColors } );\n\n\t\t\t\t\tvar meshAnim = new THREE.MorphAnimMesh( geometry, material );\n\n\t\t\t\t\tmeshAnim.speed = speed;\n\t\t\t\t\tmeshAnim.duration = duration;\n\t\t\t\t\tmeshAnim.time = 600 * Math.random();\n\n\t\t\t\t\tmeshAnim.position.set( x, y, z );\n\t\t\t\t\tmeshAnim.rotation.y = Math.PI/2;\n\n\t\t\t\t\t//meshAnim.castShadow = true;\n\t\t\t\t\t//meshAnim.receiveShadow = false;\n\n\t\t\t\t\tscene.add( meshAnim );\n\n\t\t\t\t\tmorphs.push( meshAnim );\n\n\t\t\t\t}\n\n\t\t\t\tfunction morphColorsToFaceColors( geometry ) {\n\n\t\t\t\t\tif ( geometry.morphColors && geometry.morphColors.length ) {\n\n\t\t\t\t\t\tvar colorMap = geometry.morphColors[ 0 ];\n\n\t\t\t\t\t\tfor ( var i = 0; i < colorMap.colors.length; i ++ ) {\n\n\t\t\t\t\t\t\tgeometry.faces[ i ].color = colorMap.colors[ i ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar loader = new THREE.JSONLoader();\n\n\t\t\t\tvar startX = -3000;\n\n\t\t\t\t\n\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfunction onWindowResize( event ) {\n\n\t\t\t\tSCREEN_WIDTH = window.innerWidth;\n\t\t\t\tSCREEN_HEIGHT = window.innerHeight;\n\n\t\t\t\trenderer.setSize( SCREEN_WIDTH, SCREEN_HEIGHT );\n\n\t\t\t\tcamera.aspect = SCREEN_WIDTH / SCREEN_HEIGHT;\n\t\t\t\tcamera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfunction onKeyDown ( event ) {\n\n\t\t\t\tswitch( event.keyCode ) {\n\n\t\t\t\t\tcase 78: /*N*/\n\n\t\t\t\t\t\t//blocked[0] = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase 77: /*M*/  animDeltaDir *= -1; break;\n\t\t\t\t\tcase 38: /*Up*/ ; break;\n\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\t//\n\n\t\t\tfunction applyShader( shader, texture, target ) {\n\n\t\t\t\tvar shaderMaterial = new THREE.ShaderMaterial( {\n\n\t\t\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\t\tuniforms: THREE.UniformsUtils.clone( shader.uniforms )\n\n\t\t\t\t} );\n\n\t\t\t\tshaderMaterial.uniforms[ \"tDiffuse\" ].value = texture;\n\n\t\t\t\tvar sceneTmp = new THREE.Scene();\n\n\t\t\t\tvar meshTmp = new THREE.Mesh( new THREE.PlaneBufferGeometry( SCREEN_WIDTH, SCREEN_HEIGHT ), shaderMaterial );\n\t\t\t\tmeshTmp.position.z = -500;\n\n\t\t\t\tsceneTmp.add( meshTmp );\n\n\t\t\t\trenderer.render( sceneTmp, cameraOrtho, target, true );\n\n\t\t\t};\n\n\t\t\t//\n\n\t\t\tfunction loadTextures() {\n\n\t\t\t\ttextureCounter += 1;\n\n\t\t\t\tif ( textureCounter == 3 )\t{\n\n\t\t\t\t\tterrain.visible = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfunction animate() {\n\n\t\t\t\trequestAnimationFrame( animate );\n\n\t\t\t\trender();\n\t\t\t\tstats.update();\n\n\t\t\t}\n\n\t\t\tfunction render() {\n\n\t\t\t\tvar delta = clock.getDelta();\n\n\t\t\t\tif ( terrain.visible ) {\n\n\t\t\t\t\tcontrols.update();\n\n\t\t\t\t\tvar time = Date.now() * 0.001;\n\n\t\t\t\t\tvar fLow = 0.1, fHigh = 0.8;\n\n\t\t\t\t\tlightVal = THREE.Math.clamp( lightVal + 0.5 * delta * lightDir, fLow, fHigh );\n\n\t\t\t\t\tvar valNorm = ( lightVal - fLow ) / ( fHigh - fLow );\n\n\t\t\t\t\t//scene.fog.color.setHSL( 0.1, 0.5, lightVal );\n\n\t\t\t\t\t//renderer.setClearColor( scene.fog.color );\n\n\t\t\t\t\tdirectionalLight.intensity = THREE.Math.mapLinear( valNorm, 0, 1, 0.1, 1.15 );\n\t\t\t\t\tpointLight.intensity = THREE.Math.mapLinear( valNorm, 0, 1, 0.9, 1.5 );\n\n\t\t\t\t\tuniformsTerrain[ \"uNormalScale\" ].value = THREE.Math.mapLinear( valNorm, 0, 1, 0.6, 3.5 );\n\n\t\t\t\t\tif ( updateNoise ) {\n\n\t\t\t\t\t\tanimDelta = THREE.Math.clamp( animDelta + 0.00075 * animDeltaDir, 0, 0.05 );\n\t\t\t\t\t\t//uniformsNoise[ \"time\" ].value += delta * animDelta;\n\n\t\t\t\t\t\t//uniformsNoise[ \"offset\" ].value.x += delta * 0.05;\n\n\t\t\t\t\t\t//uniformsTerrain[ \"uOffset\" ].value.x = 4 * uniformsNoise[ \"offset\" ].value.x;\n\n\t\t\t\t\t\tquadTarget.material = mlib[ \"heightmap\" ];\n\t\t\t\t\t\trenderer.render( sceneRenderTarget, cameraOrtho, heightMap, true );\n\n\t\t\t\t\t\tquadTarget.material = mlib[ \"normal\" ];\n\t\t\t\t\t\trenderer.render( sceneRenderTarget, cameraOrtho, normalMap, true );\n\n\t\t\t\t\t\t//updateNoise = false;\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\t/*for ( var i = 0; i < morphs.length; i ++ ) {\n\n\t\t\t\t\t\tmorph = morphs[ i ];\n\n\t\t\t\t\t\tmorph.updateAnimation( 1000 * delta );\n\n\t\t\t\t\t\tmorph.position.x += morph.speed * delta;\n\n\t\t\t\t\t\tif ( morph.position.x  > 2000 )  {\n\n\t\t\t\t\t\t\tmorph.position.x = -1500 - Math.random() * 500;\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t}*/\n\n\t\t\t\t\t//renderer.render( scene, camera );\n\t\t\t\t\tcomposer.render( 0.1 );\n\n\t\t\t\t}\n\n\t\t\t}\n"]}